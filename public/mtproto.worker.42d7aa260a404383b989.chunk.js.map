{"version":3,"file":"mtproto.worker.42d7aa260a404383b989.chunk.js","mappings":"uBAAIA,ECEIC,EACAC,EACAC,EACAC,ECLJC,E,mCCQG,MAAMC,EAAyE,CAAC,GAAK,CAAC,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,IAAI,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,GAAG,GAAG,CAAC,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,KAAK,KAAO,KAAK,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,KAAK,KAAO,KAAK,KAAO,KAAK,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,IAAI,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,KAAK,KAAO,MAAM,KAAO,KAAK,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,KAAK,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,KAAK,KAAO,KAAK,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,KAAO,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM,OAAO,MAAM,OAAO,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAc,MAAM,cAAckBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,mBAAmB,MAAM,kBAAkB,MAAM,QAAQ,MAAM,kBAAkB,MAAM,4CAA4C,MAAM,4CAA4C,MAAM,4CAA4C,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,mBAAmB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,mBAAmB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,8BAA8B,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,yCAAyC,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,yCAAyC,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,6BAA6B,KAAK,wCAAwC,KAAK,QAAQ,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,8BAA8B,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,8BAA8B,KAAK,yCAAyC,KAAK,yCAAyC,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,6BAA6B,KAAK,6BAA6B,KAAK,wCAAwC,KAAK,wCAAwC,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkkBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,IAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,mBAAmB,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,mBAAmB,IAAI,QAAQ,IAAI,mBAAmB,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,IAAI,QAAQ,GAAG,QAAQ,IAAI,QAAQ,IAAI,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,IAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,GAAG,QAAQ,IAAI,QAAQ,IAAI,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkkBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,IAAI,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,8BAA8B,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,mBAAmB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkB,KAAK,QAAQ,KAAK,kBAAkB,KAAK,kBAAkiBAAiB,KAAK,iBAAiB,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,kBAAkB,KAAK,kBAAkB,KAAK,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,KAAK,OAAO,MAAM,OAAO,MAAM,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,oDAAoD,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,yCAAyC,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,0CAA0C,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,IAE30yEC,EAAmCD,EAAc,IACvD,IAAI,MAAME,KAAWF,EAChBE,GACDC,OAAOC,OAAOH,EAAOD,EAAcE,IAIvC,W,uECTO,MAAMG,EAAaC,UAAYA,UAAUC,UAAY,KAU/CC,GATWF,UAAUC,UAAUE,OAAO,yBACzBH,UAAUC,UAAUG,cAAcC,QAAQ,WACzC,SAASC,KAAKN,UAAUC,YAAc,aAAaK,KAAKN,UAAUO,SAG7D,mBAAmBD,KAAKN,UAAUQ,WACxC,aAAvBR,UAAUQ,UAA2BR,UAAUS,eAAiB,IAC/D,gBAEwB,oBAAuBV,KAAe,yBAAyBO,KAAKP,IAAkBA,EAAWW,MAAM,YAAcX,EAAWW,MAAM,aACrJC,EAAaX,UAAUC,UAAUG,cAAcC,QAAQ,YAAc,EAIbL,UAAUS,eAAiB,GAAKT,UAAUC,UAAUE,OAAO,mH,uDCVzH,MAAMS,EAAa,4CACpBC,EAAS,YAETC,EAA6B,CACjC,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,IAAK,KAqBQ,SAASC,EAAgBC,EAAcC,GAAW,GAC/D,OAAOC,EAAkBF,EAAM,CAC7BG,eAAe,EACfF,SAAAA,EACAG,YAAY,IAWT,SAASF,EAAkBF,EAAcK,EAAoC,IAClF,MAAMC,EAASD,EAAQE,YAAiC,MAAnBP,EAAKQ,OAAO,GAC3CC,EAAeT,EAMrB,OALGK,EAAQF,gBAAeH,EApCrB,SAA8BA,GACnC,OAAOA,EAAKU,QAAQd,EAAY,IAAIc,QAAQb,EAAQ,IAmCnBc,CAAqBX,IACnDK,EAAQJ,WAAUD,EA1BhB,SAAwBA,GAC7B,OAAOA,EAAKU,QAAQ,iBAAkBE,IACpC,MAAMC,EAAa,IAAYD,GAC/B,OAAOC,MAAAA,EAAAA,EAAcD,KAuBKE,CAAed,IACxCK,EAAQD,aAAYJ,EAAOA,EAAKZ,eAChCkB,IAAQN,EAAO,IAAMA,GACrBK,EAAQJ,WAAUD,GAAQ,IApCxB,SAAqBA,GAC1B,OAAOA,EAAKZ,cAAcsB,QAAQ,YAAaE,IAC7C,MAAMC,EAAaf,EAAIc,GACvB,OAAOC,MAAAA,EAAAA,EAAcD,KAiCeG,CAAYN,IAC3CT,I,wCCpFT,MAAMgB,EAAkB,IAEjB,SAASC,EAAsBC,EAAoDb,GAGxF,MACMc,EADW,MACaC,OAAS,IAAM,GAE7C,IAAIC,EACJ,OAAOH,EAASI,GACd,IAAK,yBACHD,EAAM,CAAC,QANM,GAMY,GAAIH,EAASK,GAAIL,EAASM,YAAYC,OAAOC,SAASC,KAAKX,GACpF,MAGF,IAAK,4BACHK,EAAM,CAAC,WAXM,GAWe,GAAIH,EAASK,GAAIL,EAASM,YAAYC,OAAOC,SAASC,KAAKX,GACvF,MAGF,IAAK,6BACHK,EAAM,CAAC,YAAaH,EAASU,SAAUV,EAASW,OAAOC,IAAM,MAAQ,SAASH,KAAKX,GACnF,MAEF,IAAK,uBAKHK,EAAM,CAAC,kBAJKH,EAASa,WAAiDR,IACnEL,EAASa,WAAwDC,YACjEd,EAASa,WAAmDE,UAC7Df,EAASa,WAAWT,EACQJ,EAASgB,eAAeP,KAAKX,GAC3D,MAGF,IAAK,oBACHK,EAAMH,EAASiB,UAAY,IAAMjB,EAASkB,SAC1C,MAGF,IAAK,uBACHf,EAAM,CAAC,UAAWH,EAASmB,KAAKV,KAAKX,GACrC,MAGF,QACEsB,QAAQC,MAAM,yBAA0BrB,GACxCG,EAAM,GAKV,OAAOA,GAAOF,EAAM,IAAMA,EAAMA,GAI3B,SAASqB,EAAWC,EAAmBpC,GAM5C,MAAO,IAAMoC,EAAO,IAHJC,mBAAmBC,KAAKC,UAAUvC,M,0EC3B7C,MAAMwC,EAUXC,YAAYC,IACV,OAAWC,KAAMD,GAEd,WACDC,KAAKC,MAAQ,SAGfD,KAAKE,oBAAqB,EAC1BF,KAAKG,KAAM,QAAO,CAAC,MAAOJ,EAAGE,MAAMtB,KAAK,MACxCqB,KAAKG,IAAI,eAETH,KAAKI,cAAa,GAElBP,EAAIQ,UAAUC,KAAKN,MAGdO,cACL,OAAOP,KAAKE,mBAGPE,aAAaI,GAAY,GAC9B,GAAGR,KAAKS,gBAAkBD,EACxB,OAAOR,KAAKS,cAGd,MAAMC,EAAgB,CAACC,EAAoBC,K,MACzC,MAAMC,EAAaC,MAAMC,KAAKJ,EAAGE,YACjC,IAAI,MAAMG,KAAaH,EACrBF,EAAGM,YAAYD,GAGjB,GAAiB,QAAb,EAAAJ,EAAMM,eAAO,eAAE9C,OAInB,IAAI,MAAM+C,KAASP,EAAMM,QACpBP,EAAGE,WAAWO,SAASD,EAAMH,YAIhCL,EAAGU,YAAYF,EAAMH,UAAWG,EAAMG,QAASH,EAAMI,mBASzD,IACE,IAAIC,EAAUC,UAAUC,KAAK1B,KAAKC,KAAMD,KAAKpE,SAE7C,IAAI4F,EACF,OAAOG,QAAQC,SAEjB,MAAMrC,GAGN,OAFAS,KAAKG,IAAIZ,MAAM,mBAAqBA,EAAgBsC,SACpD7B,KAAKE,oBAAqB,EACnByB,QAAQC,OAAOrC,GAGxB,IAAIuC,GAAW,EAOf,OANAC,YAAW,KACLD,GACFN,EAAQQ,QAAQ,CAACvC,KAAM,yBAExB,KAEIO,KAAKS,cAAgB,IAAIkB,SAAqB,CAACM,EAASL,KAC7DJ,EAAQU,UAAaC,IACnBL,GAAW,EACX,MAAM/B,EAAKyB,EAAQY,OACnB,IAAIC,GAAY,EAEhBrC,KAAKG,IAAI,UAETJ,EAAGiC,QAAWzC,IACZS,KAAKE,oBAAqB,EAC1BF,KAAKG,IAAIZ,MAAM,8CAA+CA,GAC9DqC,EAAOrC,IAGTQ,EAAGuC,QAAWC,IACZvC,KAAKG,IAAIZ,MAAM,UAAWgD,IACzBF,GAAarC,KAAKI,gBAGrBL,EAAGyC,QAAWD,IACZvC,KAAKG,IAAIZ,MAAM,SAAUgD,GACzB,MAAME,EAAcF,EAAEG,OAEtB1C,KAAKI,aAAaiC,GAAY,GAE3BI,EAAYT,SACbS,EAAYT,QAAQO,GAGtBxC,EAAG4C,SAGL5C,EAAG6C,gBAAmBL,IACpBvC,KAAKG,IAAIZ,MAAM,0BAGjB0C,EAAQjC,KAAKD,GAAKA,IAGpByB,EAAQQ,QAAWG,IACjBL,GAAW,EACX9B,KAAKE,oBAAqB,EAC1BF,KAAKG,IAAIZ,MAAM,8CAA+C4C,GAC9DP,EAAOO,IAGTX,EAAQqB,gBAAmBV,IACzBL,GAAW,EACX9B,KAAKG,IAAI2C,KAAK,8BAA+BX,EAAMY,WAAY,KAAMZ,EAAMa,YAE3E,MAAMN,EAASP,EAAMO,OACf3C,EAAK2C,EAAON,OAClBpC,KAAKiD,OAAOC,SAAStC,IAOnB,GAAIb,EAAGoD,iBAAiB/B,SAASR,EAAMX,MAEhC,CACL,MACMU,EADM+B,EAAOD,YACJW,YAAYxC,EAAMX,MACjCS,EAAcC,EAAIC,OAxFA,EAACb,EAAiBa,KAC1C,MAAMD,EAAKZ,EAAGsD,kBAAkBzC,EAAMX,MACtCS,EAAcC,EAAIC,IAkFZyC,CAAkBtD,EAAIa,UAWzB0C,cAAuCvD,G,MAC5C,OAAmE,QAA5D,EAAAC,KAAKK,UAAUkD,MAAMC,GAAaA,EAASvD,OAASF,EAAGE,cAAK,QAAI,IAAIJ,EAAIE,GAG1EuD,sBAAsBG,GAC3BzD,KAAKK,UAAU6C,SAASQ,IACtB,GAAGD,GAAYA,IAAaC,EAC1B,OAGF,MAAM3D,EAAK2D,EAAQ3D,GAChBA,IACDA,EAAGuC,QAAU,OACbvC,EAAG4C,aAjKM,EAAAtC,UAAmB,GAuKrB,MAAMsD,EAKnB7D,YAAYC,EAAO6D,GACjB5D,KAAK4D,UAAYA,EACjB5D,KAAKG,KAAM,QAAO,CAAC,MAAOJ,EAAGE,KAAM2D,GAAWjF,KAAK,MACnDqB,KAAK6D,IAAMhE,EAAIiE,OAAO/D,GAqCjBgE,OAAOC,EAA8BJ,GAM1C,OAJI9C,MAAMmD,QAAQD,KAChBA,EAAY,GAAGE,OAAOF,IAGjBhE,KAAKmE,eAAe,aAAcf,GAC/BY,EAAuBI,KAAKJ,GAAcZ,EAAYW,OAAOC,MACxB,GAAIJ,GAG9CS,MAAMT,GACX,OAAO5D,KAAKmE,eAAe,aAAcf,GAAgBA,EAAYiB,SAA2B,GAAIT,GAG/FU,KAAKN,EAA8BO,EAAoBX,GAiB5D,OALI9C,MAAMmD,QAAQD,KAChBA,EAAY,GAAGE,OAAOF,GACtBO,EAAQ,GAAGL,OAAOK,IAGbvE,KAAKmE,eAAe,aAAcf,GAC/BY,EAAuBI,KAAI,CAACJ,EAAWQ,IAAQpB,EAAYqB,IAAIF,EAAMC,GAAMR,MACxC,GAAIJ,GA8E5Cc,IAAOV,EAA8BJ,GAO1C,OAJI9C,MAAMmD,QAAQD,KAChBA,EAAY,GAAGE,OAAOF,IAGpBA,EAAU5F,OAIP4B,KAAKmE,eAAkB,YAAaf,GACjCY,EAAuBI,KAAKJ,GAAcZ,EAAYsB,IAAIV,MACxB,GAAIJ,GALvCjC,QAAQM,QAAQ,IAQnBkC,eACNQ,EACAC,EACAzE,EACAyD,EAAY5D,KAAK4D,WAEjB,IAAIiB,EAOJ,OALG1E,IACD0E,EAAOC,YAAYC,MACnB/E,KAAKG,IAAIA,EAAM,YAGVH,KAAK6D,IAAIzD,eAAe4E,MAAMjF,GAC5B,IAAI4B,SAAW,CAACM,EAASL,KAK9B,MAAMa,EAAc1C,EAAG0C,YAAY,CAACmB,GAAYe,GAE1CM,EAAU,KACdC,aAAaC,GACbvD,EAAOa,EAAYlD,QAIf6F,EAAa,KACjBF,aAAaC,GAEVhF,GACDH,KAAKG,IAAIA,EAAM,QAAS2E,YAAYC,MAAQF,GAQ9C,MAAMQ,EAAUC,EAASlB,KAAKmB,GAAMA,EAAEnD,SACtCH,EAAQgC,EAAUoB,EAAUA,EAAQ,KAGtC5C,EAAYT,QAAUiD,EAGtB,MAAMO,EAAsC,cAATb,EAChCa,IACD/C,EAAYgD,WAAa,IAAML,KAGjC,MAAMD,EAAUpD,YAAW,KACzB/B,KAAKG,IAAIZ,MAAM,2BAA4BkD,EAAatC,KACvD,KAOGuF,EAAiBd,EAASnC,EAAYW,YAAYQ,IAElDK,EAAUnD,MAAMmD,QAAQyB,GACxBJ,EAAyBrB,EAAUyB,EAAiB,GAAGxB,OAAOwB,GAEpE,GAAGF,EACD,OAGF,MAAMpH,EAASkH,EAASlH,OACxB,IAAIuH,EAAOvH,EAEX,MAAMwH,EAAoB,KACrBnD,EAAYlD,SAIToG,GACJP,KAIJ,IAAI,IAAIS,EAAI,EAAGA,EAAIzH,IAAUyH,EAAG,CAC9B,MAAMrE,EAAU8D,EAASO,GACzBrE,EAAQQ,QAAUiD,EAClBzD,EAAQU,UAAY0D,QAMrBE,OAAUlC,GACf,OAAO5D,KAAKmE,eAAoB,YAAaf,GAAgBA,EAAY0C,UAA6B,GAAIlC,M,8DCtd9G,IAAImC,EACG,SAASC,IACd,OAAOD,EAGF,SAASE,EAAeC,GAC7B,OAAOH,EAAcG,E,qDCyIhB,MAAMC,UAAkB,IAO7BrG,cACEsG,QAPK,KAAAC,KAAe,KACd,KAAAC,iBAA6D,GAQnEtG,KAAKuG,SAAU,EAEfvG,KAAKwG,iBAAiB,aAAa,EAAEjI,GAAAA,MACnCyB,KAAKqG,KAAO9H,EAAGkI,cAGjBzG,KAAKwG,iBAAiB,4BAA6BE,IACjD1G,KAAKsG,iBAAiBI,EAAOzG,MAAQyG,KAGvC1G,KAAK2G,cAAgB,CAACpE,KAAMqE,KAC1BR,MAAMO,cAAcpE,KAAMqE,GAC1B,kBAAiCC,WAAW,QAAS,CAAC5G,KAAMsC,EAAaqE,KAAAA,KAGvE,MACF5G,KAAKwG,iBAAiB,oBAAoB,EAAEM,SAAAA,MAC1C9G,KAAK8G,SAAWA,KAKfC,sBACL,OAAO/G,KAAKsG,iBAGPU,uBAAuBJ,GAE5BR,MAAMO,iBAAiBC,IAI3B,MAAM,EAAY,IAAIT,EACtB,eAA2B,EAC3B,U,cC9HA,MACA,EADwB,IAnDjB,MAAP,cACU,KAAAc,MAAe,GACf,KAAAvD,QAAUwD,EAAA,EAOXC,WACL,OAAOxF,QAAQM,QAAQjC,KAAKiH,OAGvBG,SAASC,EAAa9C,ICvBhB,SAAyB+C,EAAaD,EAAa9C,GAChE,MAAMgD,EAAWF,EAAIG,MAAM,MCHd,SAAyBF,EAAaD,GACnD,MAAME,EAAWF,EAAIG,MAAM,KAC3B,IAAIC,EAASH,EAUb,OATAC,EAASrE,SAASmE,IACZA,IAKJI,EAAIA,EAAEJ,OAGDI,EDRPC,CAAgBJ,EAAQC,EAASI,MAAM,GAAI,GAAGhJ,KAAK,OAAM4I,EAASK,OAASrD,EDsBzEsD,CAAgB7H,KAAKiH,MAAOI,EAAK9C,GAEjC,MAAMuD,EAAQT,EAAIG,MAAM,KAAK,GAChB,aAAVM,GACD,gBAAwB,mBAAoB,CAACT,IAAAA,EAAK9C,MAAAA,EAAOuC,SAAU9G,KAAKiH,MAAMH,WAGhF9G,KAAK+H,YAAYD,EAAO9H,KAAKiH,MAAMa,IAG9BC,YAAmCV,EAAQ9C,EAAiByD,GAAS,EAAMC,GAC7ED,IACDhI,KAAKiH,MAAMI,GAAO9C,GAGpBvE,KAAKkI,qBAAqBb,EAAK9C,EAAO0D,GAGjCC,qBAA4Cb,EAAQ9C,EAAkBvE,KAAKiH,MAAMI,GAAMY,GAC5F,kBAAwCpB,WAAW,SAAU,CAAC5G,KAAM,QAASoH,IAAAA,EAAK9C,MAAAA,IAElFvE,KAAK0D,QAAQyE,IAAI,CACf,CAACd,GAAM9C,GACN0D,K,yEGUP,MAAMG,EAAe,IA/Cd,MAKLtI,cACEE,KAAKqI,KAAOrI,KAAKsI,SAAW,EAC5BtI,KAAKuI,eAAiB,IAAIC,IAGrBC,QAAQC,EAAYtK,GACzB4B,KAAKqI,MAAQjK,EAGRuK,YAAYD,EAAYtK,GAC7B4B,KAAKsI,UAAYlK,EAEjB,MAAMmK,EAAiBvI,KAAKuI,eAAe7D,IAAIgE,GACzCE,EAAiBL,MAAAA,OAAc,EAAdA,EAAgBnK,OACvC,GAAGwK,EACD,IAAI,IAAI/C,EAAI,EAAGA,EAAI+C,IAAkB/C,EAAG,CACtC,MAAMgD,EAAWN,EAAe1C,GAChC,GAAGzH,GAAUyK,EAASzK,OAAQ,CAC5ByK,EAASzN,SAAS6G,UAClB,QAMD6G,aAAaJ,EAAYtK,GAC9B,MAAMhD,GAAW,SACjB,IAAImN,EAAiBvI,KAAKuI,eAAe7D,IAAIgE,GACzCH,GACFvI,KAAKuI,eAAeJ,IAAIO,EAAMH,EAAiB,IAGjD,MAAMM,EAAW,CAACzK,OAAAA,EAAQhD,SAAAA,GAM1B,OALAA,EAAS2N,MAAMC,EAAA,GAAMC,SAAQ,MAC3B,EAAAC,EAAA,GAAiBX,EAAgBM,MAGnCN,EAAejI,KAAKuI,GACbzN,IAKX,OAAmB,kBAA8BgN,GACjD,UC3Ce,MAAMe,EAenBrJ,YAAsB4I,EAAsBrJ,EAAa+J,GAAnC,KAAAV,KAAAA,EAAsB,KAAArJ,IAAAA,EAXpC,KAAAgK,QAIH,GAQHrJ,KAAKsJ,MAAQ,YAAe,EAE5B,IAAIC,EAAW,WAAiB,KAAAC,IAC7BxJ,KAAKsJ,QAAOC,GAAY,YAE3BvJ,KAAKG,KAAM,EAAAsJ,EAAA,IAAO,QAAQf,IAASU,EAAWG,GAC9CvJ,KAAKG,IAAI,eAETH,KAAK0J,WAAY,EAGZC,MAAMC,EAAkBjF,GAC7B,MAAMvG,EAASwL,EAAKxL,OAIpB,OAHA4B,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,0BAA2BlL,GAExD,UAAqB4B,KAAK0I,KAAMtK,GACzByL,MAAM7J,KAAKX,IAAK,CAACyK,OAAQ,OAAQF,KAAAA,EAAMjF,KAAAA,IAAOK,MAAM+E,IACzD,GAAuB,MAApBA,EAASrD,SAAmB/B,EAM7B,MALAoF,EAASC,cAAchF,MAAMiF,IAC3BjK,KAAKG,IAAIZ,MAAM,UACb,IAAI2K,YAAY,SAASC,OAAO,IAAIC,WAAWH,QAG7CF,EAUR,OAPA/J,KAAKqK,cAAa,GAOXN,EAASC,cAAchF,MAAMiF,IAClC,cAAyBjK,KAAK0I,KAAMuB,EAAOK,YACpC,IAAIF,WAAWH,SAEtBM,IAEF,MADAvK,KAAKqK,cAAa,GACZE,KAIFF,aAAaX,GAChB1J,KAAK0J,YAAcA,GAAa1J,KAAKwK,YAIxCxK,KAAK0J,UAAYA,EAGjB,oBAAsC,QAASA,IAI1Ce,UACLzK,KAAKqK,cAAa,GAClBrK,KAAKwK,WAAY,EACjBxK,KAAKqJ,QAAQnG,SAASmG,GAAYA,EAAQzH,WAC1C5B,KAAKqJ,QAAQjL,OAAS,EAGjBsM,KAAKd,GACV,GAAG5J,KAAK2K,UACN,OAAO3K,KAAK2J,MAAMC,GACb,CACL,MAAMgB,EAAU,IAAIjJ,SAAqB,CAACM,EAASL,KACjD5B,KAAKqJ,QAAQ/I,KAAK,CAAC2B,QAAAA,EAASL,OAAAA,EAAQgI,KAAAA,OAKtC,OAFA5J,KAAK6K,iBAEED,GAIGC,iB,qCACZ,IAAG7K,KAAK8K,UAAR,CAEA9K,KAAK8K,WAAY,EAEjB,IAAI,IAAIjF,EAAI,EAAGA,EAAI7F,KAAKqJ,QAAQjL,SAAUyH,EAAG,CAC3C,MAAMwD,EAAUrJ,KAAKqJ,QAAQxD,IACvB,KAAC+D,EAAI,QAAE3H,GAAWoH,EAExB,IAEEpH,QADqBjC,KAAK2J,MAAMC,IAEhC5J,KAAKqJ,QAAQ0B,OAAOlF,EAAG,GACvB,MAAM0E,GACNvK,KAAKG,IAAIZ,MAAM,4BAA6BgL,SACtC,EAAAS,EAAA,GAAM,OAGZnF,EAGJ7F,KAAK8K,WAAY,I,gSCrHN,MAAMG,UAAe,IASlCnL,YAAsB4I,EAAwBrJ,EAAa+J,GACzDhD,QADoB,KAAAsC,KAAAA,EAAwB,KAAArJ,IAAAA,EAFtC,KAAAiK,MAAQ,YAAe,EAuDvB,KAAA4B,WAAa,KACnBlL,KAAKG,IAAI,UAETH,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,uBAC7BtJ,KAAK2G,cAAc,SAGb,KAAAwE,YAAe5I,IACrBvC,KAAKG,IAAIZ,MAAM,cAAegD,GAC9BvC,KAAK2C,SAGC,KAAAyI,YAAc,KACpBpL,KAAKG,IAAI,UAETH,KAAKqL,kBACLrL,KAAK2G,cAAc,UAGb,KAAA2E,cAAiBnJ,IACvBnC,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,KAAM,gBAA8BnH,EAAMoJ,KAAKjB,YAE5EtK,KAAK2G,cAAc,UAAWxE,EAAMoJ,OAG/B,KAAAb,KAAQd,IACb5J,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,0BAA2BM,EAAKxL,QAE7D4B,KAAKwL,GAAGd,KAAKd,IA9Eb,IAAIL,EAAW,WAAiB,KAAAC,IAMhC,OALGxJ,KAAKsJ,QAAOC,GAAY,YAC3BvJ,KAAKG,KAAM,EAAAsJ,EAAA,IAAO,MAAMf,IAASU,EAAWG,GAC5CvJ,KAAKG,IAAI,eACTH,KAAKyL,UAEEzL,KAGDqL,kBACFrL,KAAKwL,KAITxL,KAAKwL,GAAGE,oBAAoB,OAAQ1L,KAAKkL,YACzClL,KAAKwL,GAAGE,oBAAoB,QAAS1L,KAAKoL,aAC1CpL,KAAKwL,GAAGE,oBAAoB,QAAS1L,KAAKmL,aAC1CnL,KAAKwL,GAAGE,oBAAoB,UAAW1L,KAAKsL,eAC5CtL,KAAKwL,QAAKG,GAGJF,UACNzL,KAAKwL,GAAK,IAAII,UAAU5L,KAAKX,IAAK,UAClCW,KAAKwL,GAAGK,WAAa,cACrB7L,KAAKwL,GAAGhF,iBAAiB,OAAQxG,KAAKkL,YACtClL,KAAKwL,GAAGhF,iBAAiB,QAASxG,KAAKoL,aACvCpL,KAAKwL,GAAGhF,iBAAiB,QAASxG,KAAKmL,aACvCnL,KAAKwL,GAAGhF,iBAAiB,UAAWxG,KAAKsL,eAQpC3I,QACL,GAAI3C,KAAKwL,GAAT,CAIAxL,KAAKG,IAAI,mBAET,IACEH,KAAKwL,GAAG7I,QACR,MAAM4H,IAGRvK,KAAKoL,gBCzEM,SAASU,EAAqCC,GAC3D,IAAGC,UAAU,oBAAqBA,QAGhC,MAAM,IAAIC,MAAM,oBAGlB,OALED,OAAOE,gBAAgBH,GAKlBA,E,0SCOM,MAAMI,EAArB,cAgJU,KAAAC,SAAW,CAACb,EAAkBc,IAC7BC,EAAA,SAAyB,SAAU,CACxCxC,OAAQ,kBACRlD,KAAM,CAAC,CAACrI,GAAIyB,KAAKzB,GAAIgN,KAAAA,EAAMc,UAAAA,UAC1BV,OAAWA,EAAW,CAACJ,EAAKtB,SAnIpBsC,KAAKC,G,8CACMb,IAAnB3L,KAAKyM,WACNzM,KAAK0M,UAGP,MAAMC,EAAc,IAAIvC,WAAW,IAGnC,IAFA0B,EAAUa,KAEE,CACV,MAAMC,EAAOD,EAAY,IAAM,GAAOA,EAAY,IAAM,GAAOA,EAAY,IAAM,EAAKA,EAAY,GAC5FE,EAAQF,EAAY,IAAM,GAAOA,EAAY,IAAM,GAAOA,EAAY,IAAM,EAAKA,EAAY,GACnG,GAAsB,MAAnBA,EAAY,IACH,aAARC,GACQ,aAARA,GACQ,YAARA,GACQ,aAARA,GACQ,aAARA,GACQ,aAARA,GACS,IAATC,EAEA,MAEJf,EAAUa,GAOZ,MAAMG,EAAkBH,EAAYhF,QAAQoF,UAEtCC,EAASL,EAAYhF,MAAM,EAAG,IAC9BsF,EAA2BN,EAAYhF,MAAM,GAAI,IACjDuF,EAASJ,EAAgBnF,MAAM,EAAG,IAClCwF,EAA2BL,EAAgBnF,MAAM,GAAI,IAQrD8E,EAAYzM,KAAKyM,UAAYH,EAAA,eAA+B,kBAAmB,CACnFU,OAAAA,EACAC,MAAAA,EACAC,OAAAA,EACAC,MAAAA,IAGFnN,KAAKoN,QAAU,CAAM7B,EAAMc,IAAc,kCAEvC,aADMI,EACCzM,KAAKoM,SAASb,EAAMc,MAG7BrM,KAAKzB,SAAWkO,EAEhBzM,KAAKoN,QAAUpN,KAAKoM,SA2BpBO,EAAYxE,IAAIqE,EAAMa,aAAc,IACpC,MAAMC,QAAkBtN,KAAKuN,OAAOZ,EAAYhF,SAMhD,OAFAgF,EAAYxE,IAAImF,EAAU3F,MAAM,GAAI,IAAK,IAElCgF,KA4CFY,OAAOC,GASZ,OAAOxN,KAAKoN,QAAQI,EAAS,WAGxBrD,OAAOqD,GACZ,OAAOxN,KAAKoN,QAAQI,EAAS,WAGlBd,U,yCACX,MAAMD,EAAYzM,KAAKyM,UACvB,QAAiBd,IAAdc,EACD,OAGFzM,KAAKzB,QAAKoN,EACV3L,KAAKyM,eAAYd,EAEjB,MAAMpN,QAAWkO,EACjBH,EAAA,eAA+B,kBAAmB/N,MAG7CkM,UACLzK,KAAK0M,WC3JT,YA/BA,oBACS,KAAAe,IAAM,IACN,KAAAJ,aAAe,IAAIjD,WAAW,CAACpK,KAAKyN,IAAKzN,KAAKyN,IAAKzN,KAAKyN,IAAKzN,KAAKyN,MAElEC,aAAanC,GAClB,MAAMoC,EAAMpC,EAAKjB,YAAc,EAC/B,IAAIsD,EASJ,OAPEA,EADCD,EAAM,IACE,IAAIvD,WAAW,CAACuD,IAGhB,IAAIvD,WAAW,CAAC,IAAY,IAANuD,EAAaA,GAAO,EAAK,IAAOA,GAAO,GAAM,MAIvEC,EAAO1J,OAAOqH,GAIhBsC,WAAWtC,GAChB,IAAInN,EAASmN,EAAK,GAClB,OAAGnN,GAAU,KACXA,EAASmN,EAAK,GAAMA,EAAK,IAAM,EAAMA,EAAK,IAAM,GAEzCA,EAAK5D,MAAM,EAAGvJ,GAAU,IAG1BmN,EAAK5D,MAAM,EAAGvJ,GAAU,K,cCpCpB,SAAS0P,EAAWC,GACjC,MAAM3P,EAAS2P,EAAM3P,OACf2N,EAAgB,IAAIjL,MAAM1C,GAChC,IAAI,IAAIyH,EAAI,EAAGA,EAAIzH,IAAUyH,EAC3BkG,EAAIlG,IAAMkI,EAAMlI,GAAK,GAAK,IAAM,KAAOkI,EAAMlI,IAAM,GAAGmI,SAAS,IAEjE,OAAOjC,EAAIpN,KAAK,I,oTCiBH,MAAMsP,EAyBnBnO,YACUoO,EACAxF,EACArJ,EACA+J,EACA+E,GAJA,KAAAD,WAAAA,EACA,KAAAxF,KAAAA,EACA,KAAArJ,IAAAA,EACA,KAAA+J,UAAAA,EACA,KAAA+E,aAAAA,EA7BF,KAAA3B,MAAQ4B,EACR,KAAAC,YAAc,IAAIlC,EAGlB,KAAA9C,QAMF,GAEE,KAAAC,MAAQ,YAAe,EAExB,KAAAI,WAAY,EAIX,KAAA4E,eAAgB,EAqBhB,KAAAC,OAAS,IAAW,kCAC1BvO,KAAK0J,WAAY,EAGjB,qBAAuC,aAGvC,MAAMiD,QAAoB3M,KAAKqO,YAAY9B,KAAKvM,KAAKwM,OACjDxM,KAAK0J,YAIT1J,KAAKwO,WAAW9D,KAAKiC,GAElB3M,KAAK2K,YACN3K,KAAKqJ,QAAQjL,OAAS,EACtB4B,KAAK2K,UAAU8D,oBAAoB,eACnCzO,KAAK2K,UAAU+D,cACf1O,KAAK2K,UAAUgE,UASjB5M,YAAW,KACT/B,KAAK6K,mBACJ,OAGG,KAAA+D,UAAkB3E,GAAwB,kCAChD,cAAyBjK,KAAK0I,KAAMuB,EAAOK,YAE3C,IAAIiB,QAAavL,KAAKqO,YAAYlE,OAAO,IAAIC,WAAWH,IAGxD,GAFAsB,EAAOvL,KAAKwM,MAAMqB,WAAWtC,GAE1BvL,KAAK2K,UAmBN,OAhBA3K,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,2BAA4BiC,EAAKnN,aAC9D4B,KAAK2K,UAAUkE,cAActD,GAAMvG,MAAM+E,IACvC/J,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,qCAAsCS,GAEnE,IACE/J,KAAK2K,UAAUmE,eAAe/E,EAASA,SAAUA,EAASgF,UAAWhF,EAASiF,WAC9E,MAAMzE,GACNvK,KAAKG,IAAIZ,MAAM,+CAAgDgL,OAIhExB,OAAOwB,IACRvK,KAAKG,IAAIZ,MAAM,8CAA+CgL,MAQlE,MAAMlB,EAAUrJ,KAAKqJ,QAAQ4F,QACzB5F,EAKJA,EAAQpH,QAAQsJ,GAJdvL,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,sBAAuBwE,EAAWvC,OAO3D,KAAA2D,QAAU,KAGhB,IAAIC,EAAqBC,EACzB,GAHApP,KAAKqE,QAGFrE,KAAKsO,cAAe,CACrB,MAAMe,EAAOC,KAAKvK,MACZwK,EAAOF,EAAOrP,KAAKwP,cACzBL,GAAeM,MAAMF,IAASA,EAAOvP,KAAKmO,aAAenO,KAAKmO,aAAeoB,EAAO,EACpFH,EAAUC,EAAOF,EAGhBnP,KAAK2K,YACN3K,KAAK2K,UAAU8D,oBAAoB,WAAyBW,GAC5DpP,KAAKqJ,QAAQjL,OAAS,GAGrB4B,KAAKsO,eACNtO,KAAKG,IAAI,uCAAwCgP,EAAc,KAC/DnP,KAAK0P,iBAAmBC,EAAA,aAAe3P,KAAK4P,UAAWT,IAEvDnP,KAAKG,IAAI,2BAwBN,KAAAyP,UAAY,KAMjB,QAL6BjE,IAA1B3L,KAAK0P,mBACNxK,aAAalF,KAAK0P,kBAClB1P,KAAK0P,sBAAmB/D,IAGvB3L,KAAKwO,WAAR,CAOA,GAHAxO,KAAKG,IAAI,0BACTH,KAAKwP,cAAgBF,KAAKvK,MAEtB/E,KAAK2K,UAOP3K,KAAK2K,UAAU8D,oBAAoB,qBANnC,IAAI,MAAMpF,KAAWrJ,KAAKqJ,QACrBA,EAAQwG,WACTxG,EAAQwG,UAAW,GAOzB7P,KAAKyL,YAjJL,IAAIlC,EAAW,WAAiB,KAAAC,IAC7BxJ,KAAKsJ,QAAOC,GAAY,YAC3BvJ,KAAKG,KAAM,EAAAsJ,EAAA,IAAO,OAAOf,IAASU,EAAWG,GAC7CvJ,KAAKG,IAAI,eAETH,KAAKyL,UAiGApH,QAEFrE,KAAK0J,WACN,qBAAuC,aAIzC1J,KAAK0J,WAAY,EAEd1J,KAAKwO,aACNxO,KAAKwO,WAAW9C,oBAAoB,OAAQ1L,KAAKuO,QACjDvO,KAAKwO,WAAW9C,oBAAoB,QAAS1L,KAAKkP,SAClDlP,KAAKwO,WAAW9C,oBAAoB,UAAW1L,KAAK4O,WACpD5O,KAAKwO,gBAAa7C,GAiCfmE,iBACL9P,KAAK2C,QACL3C,KAAK4P,YAGAnF,UACLzK,KAAK+P,kBAAiB,GACtB/P,KAAK2C,QAEF3C,KAAKqO,aACNrO,KAAKqO,YAAY5D,UAGnBzK,KAAKqJ,QAAQnG,SAASmG,IACjBA,EAAQzH,QACTyH,EAAQzH,YAGZ5B,KAAKqJ,QAAQjL,OAAS,EAGjBuE,QACL,MAAM6L,EAAaxO,KAAKwO,WACxB,GAAGA,EAAY,CACb,MAAM9E,EAAY1J,KAAK0J,UACvB1J,KAAKqE,QACFqF,IACD8E,EAAWhI,iBAAiB,UAAWxG,KAAK4O,WAC5CJ,EAAWhI,iBAAiB,SAAS,KACnCgI,EAAW9C,oBAAoB,UAAW1L,KAAK4O,aAC9C,CAACoB,MAAM,IACVxB,EAAW7L,UASVoN,iBAAiBE,GACtBjQ,KAAKsO,cAAgB2B,EAEjBA,EAKOjQ,KAAKwO,iBAAwC7C,IAA1B3L,KAAK0P,kBACjC1P,KAAK4P,iBALwBjE,IAA1B3L,KAAK0P,mBACNxK,aAAalF,KAAK0P,kBAClB1P,KAAK0P,sBAAmB/D,GAOtBF,UACHzL,KAAKwO,YACNxO,KAAK2C,QAGP3C,KAAKwO,WAAa,IAAIxO,KAAKkO,WAAWlO,KAAK0I,KAAM1I,KAAKX,IAAKW,KAAKoJ,WAChEpJ,KAAKwO,WAAWhI,iBAAiB,OAAQxG,KAAKuO,QAC9CvO,KAAKwO,WAAWhI,iBAAiB,QAASxG,KAAKkP,SAC/ClP,KAAKwO,WAAWhI,iBAAiB,UAAWxG,KAAK4O,WAG3CsB,WAAWtG,GACjB,MAAMuG,EAAWnQ,KAAKwM,MAAMkB,aAAa9D,GAMzC,OAHgB5J,KAAKqO,YAAYd,OAAO4C,GAMnCzF,KAAKd,GACV5J,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,6BAA8BM,EAAKxL,QAEhE,MAAMgS,OAAsEzE,EAI5E,IAAG3L,KAAK2K,UAGD,CACL,MAAMC,EAAU,IAAIjJ,SAAqB,CAACM,EAASL,KACjD5B,KAAKqJ,QAAQ/I,KAAK,CAAC2B,QAAAA,EAASL,OAAAA,EAAQgI,KAAAA,EAAMwG,QAAAA,OAK5C,OAFApQ,KAAK6K,iBAEED,EATP5K,KAAKqJ,QAAQ/I,KAAK,CAACsJ,KAAAA,EAAMwG,QAAAA,IACzBpQ,KAAK6K,iBAYKA,iB,+CACZ,IAAI7K,KAAK0J,WAAa1J,KAAKqQ,iBAEzB,OAGFrQ,KAAKqQ,kBAAmB,EAQxB,IAAIjS,EAAS4B,KAAKqJ,QAAQjL,OACtBiK,GAAO,EAEX,IAAI,IAAIxC,EAAI,EAAGA,EAAIzH,IAAUyH,EAAG,CAC9B,MAAMwD,EAAUrJ,KAAKqJ,QAAQxD,GAC7B,IAAIwD,EACF,MAGF,MAAM,KAACO,EAAI,SAAEiG,GAAYxG,EACzB,GAAGO,IAASiG,EAAU,CAIpB7P,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,0BAA2BM,EAAKxL,QAM7D,MAAMgS,EAAyB,QAAlB,EAAG/G,EAAQ+G,eAAO,QAAf/G,EAAQ+G,cAAkBpQ,KAAKkQ,WAAWtG,GAC1D,IAAI5J,KAAK0J,UACP,MAGF,UAAqB1J,KAAK0I,KAAM0H,EAAQ9F,YACxCtK,KAAKwO,WAAW9D,KAAK0F,GAEjB/G,EAAQpH,QAIVoH,EAAQwG,UAAW,GAHnB7P,KAAKqJ,QAAQ0B,OAAOlF,IAAK,GACzBzH,KAKFiK,GAAO,GAKXrI,KAAKqQ,sBAAmB1E,EAErB3L,KAAKqJ,QAAQjL,QAAUiK,GACxBrI,KAAK6K,qBCxTX,MAAMyF,EAAc,SAAa,QAAU,GAGpC,MAAMC,EAAb,cACU,KAAAC,cAAgB,CAAC,QAAS,QAAS,SAAU,QAAS,SAEtD,KAAAC,UAAY,SAChB,CACA,CAAClS,GAAI,EAAGmS,KAAM,iBAAmBC,KAAM,IACvC,CAACpS,GAAI,EAAGmS,KAAM,iBAAmBC,KAAM,IACvC,CAACpS,GAAI,EAAGmS,KAAM,kBAAmBC,KAAM,KAEvC,CACA,CAACpS,GAAI,EAAGmS,KAAM,iBAAmBC,KAAM,IACvC,CAACpS,GAAI,EAAGmS,KAAM,iBAAmBC,KAAM,IACvC,CAACpS,GAAI,EAAGmS,KAAM,kBAAmBC,KAAM,IACvC,CAACpS,GAAI,EAAGmS,KAAM,iBAAmBC,KAAM,IACvC,CAACpS,GAAI,EAAGmS,KAAM,gBAAmBC,KAAM,KAGpC,KAAAC,cAAyB,GAGxB,KAAAC,gBAAkB,CAACnI,EAAYoI,EAAgCC,EAAgBxK,KACrF,MAAMyK,EAA0B,WAAnBF,EAA8B,SAAWvK,EAvBnC,WAuB8D,IAAO,QAAU+J,EAC5FW,EAAe,SAAS,6BAA6BvI,IAAOqI,sBAA2BC,IAK7F,IAAIE,EAOJ,OALAA,EAAiBjG,EAKV,IAAIgD,EAAciD,EAAgBxI,EAAMuI,EAXV,WAAnBH,EAA8B,KAA0B,aAAnBA,EAAgC,KAAO,GAE3C,MAc7C,KAAAK,cAAgB,CAACzI,EAAYoI,EAAgCC,EAAgBxK,KACnF,IAAI0K,EACJ,GAAG,UAAc,SAGfA,EAAe,WAFGjR,KAAKwQ,cAAc9H,EAAO,IAAyB,WAAnBoI,EAA8B,KAAO,IAE/C,sBAD3B,SAAa,aAAe,cAGzC,IAAI,IAAIM,KAAYpR,KAAKyQ,UACvB,GAAGW,EAAS7S,KAAOmK,EAAM,CACvBuI,EAAe,UAAYG,EAASV,MAA0B,KAAlBU,EAAST,KAAc,IAAMS,EAAST,KAAO,IAAM,SAC/F,MAMN,OAAO,IAAIxH,EAAKT,EAAMuI,EADe,WAAnBH,EAA8B,KAA0B,aAAnBA,EAAgC,KAAO,KAKzFO,aACL3I,EACAoI,EAAiC,SACjCQ,EAA+B,cAC/BC,GAAQ,EACRhL,GAMIvG,KAAK4Q,cAAcY,eAAeF,KACpCtR,KAAK4Q,cAAcU,GAAiB,CAClCG,OAAQ,GACRC,SAAU,GACVC,OAAQ,KAIZ,MAAMC,EAAU5R,KAAK4Q,cAAcU,GAAeR,GAE7CpI,KAAQkJ,IACXA,EAAQlJ,GAAQ,IAGlB,MAAMmJ,EAAaD,EAAQlJ,GAE3B,IAAImJ,EAAWzT,SAAWmT,EAAkD,CAC1E,IAAIO,EAEJ,MAAMf,EAA4B,WAAnBD,EAA8B,GAAK,KAUlD,OAPAgB,GAA+B,cAAlBR,EAAgCtR,KAAK6Q,gBAAkB7Q,KAAKmR,eAAezI,EAAMoI,EAAgBC,EAAQxK,GAOlHuL,GAKDP,GACDM,EAAWvR,KAAKwR,GAGXA,IARLxS,QAAQC,MAAM,mBAAoBmJ,GAC3B,MAUX,OAAOmJ,EAAW,GAGbvO,uBAA0ByO,EAAUD,GACzC,IAAI,MAAMR,KAAiBS,EAEzB,IAAI,MAAMjB,KAAkBiB,EAAIT,GAE9B,IAAI,MAAM5I,KAAQqJ,EAAIT,GAAeR,GAAiB,CAEpD,MAAMe,EAAkBE,EAAIT,GAAeR,GAAgBpI,IAC3D,EAAAQ,EAAA,GAAiB2I,EAAYC,K,0SCzJhC,MAAME,UAA8B,IASzClS,cACEsG,OAAM,GAENpG,KAAKiS,OAAS,IAAIzJ,IAKlBxI,KAAKwG,iBAAiB,UAAWyL,IAC3BA,EAAOvN,IAAI,cACb1E,KAAKkS,sBASEC,iB,+CACX,MAAMC,EAAoC,QAAtB,EAAGpS,KAAKoS,sBAAc,QAAnBpS,KAAKoS,eAAmB,IAAI7B,EAE7CsB,EAAmD7R,KAAK6R,WAAa,CACzEQ,MAAOD,EAAef,aAAa,aAAc,SAAU,SAAS,GACpEiB,UAAWF,EAAef,aAAa,aAAc,SAAU,aAAa,IAGxEkB,GAAc,SAClBvS,KAAK6R,WAAWQ,MAAe1I,MAAM,IAAIS,WAAc,WACxDpF,MAAK,IAAMuN,EAAYtQ,SAAQ,KAAO,IAAMsQ,EAAYtQ,SAAQ,KACjEF,YAAW,IAAMwQ,EAAYtQ,SAAQ,IATrB,KAWhB,MAAMuQ,GAAmB,SACnBC,EAASZ,EAAWS,UAC1BG,EAAO1C,kBAAiB,GACxB0C,EAAOjE,WAAWhI,iBAAiB,SAAS,IAAMgM,EAAiBvQ,SAAQ,IAAQ,CAAC+N,MAAM,IAC1FyC,EAAOjE,WAAWhI,iBAAiB,QAAQ,IAAMgM,EAAiBvQ,SAAQ,IAAO,CAAC+N,MAAM,IACxFjO,YAAW,KACNyQ,EAAiBE,aAAeF,EAAiBG,aAIjDF,EAAOjE,YACRiE,EAAOjE,WAAW7L,QAGpB6P,EAAiBvQ,SAAQ,MAzBX,KA4BhB,MAAO2Q,EAAiBC,SAA8BlR,QAAQmR,IAAI,CAACP,EAAaC,IAEhF,IAAI,MAAMlB,KAAiBO,EACPA,EAAWP,GACnB7G,UASZ,MANe,CACb4H,MAAOO,GAAmB5S,KAAKiS,OAAOvN,IAAI,SAAW,EACrD4N,UAAWO,GAAwB7S,KAAKiS,OAAOvN,IAAI,aAAe,MAOzDwN,mB,yCACX,IAAGlS,KAAK+S,QAAR,CAGA,IAFA/S,KAAK+S,SAAU,IAEH,CACV,MAAM,MAACV,EAAK,UAAEC,SAAmBtS,KAAKmS,iBAKtC,IAJGE,GAASC,IACVtS,KAAK2G,cAAc,YAAa2L,IAAcD,EAAQ,YAAc,SAGnEC,EACD,YAGI,EAAAtH,EAAA,GAAM,KAGdhL,KAAK+S,SAAU,MAGVC,kBAAkBvT,EAAqB8E,GAC5C,IAAInG,EAAS4B,KAAKiS,OAAOvN,IAAIjF,IAAS,EACtCrB,GAAUmG,EAAQ,GAAK,EAEvBvE,KAAKiS,OAAO9J,IAAI1I,EAAMrB,GACtB4B,KAAK2G,cAAc,SAAU3G,KAAKiS,QAG7BgB,mBAAmBxT,GACxB,OAAOO,KAAKgT,kBAAkBvT,GAAM,GAG/ByT,mBAAmBzT,GACxB,OAAOO,KAAKgT,kBAAkBvT,GAAM,IAIxC,MACA,EAD4B,IAAIuS,ECpHhC,GAD+E,S,cCoCxE,MAAMmB,EA0CJC,YAAYC,GACjBxX,OAAOC,OAAOkE,KAAMqT,I,kCCvCxB,IAAIzI,EACW,SAAS0I,EAAaC,GACnC,OAAO3I,MAAAA,EAAAA,EAAAA,EAlCT,SAAiC2I,G,qCAC/B,MAAMC,GAAgB,QAAmB,EAAA/J,EAAA,IAAO,oBAC1CgK,EAAe5X,OAAO6X,KAAKH,GAC3BI,EAAmCF,EAAarP,KAAKiD,IACzD,MAAMuD,EAAU2I,EAASlM,GAAKvB,SAC9B,OAAO0N,EAAc5I,EAAS,WAAcvD,MAGxCuM,EAIF,GACE7H,QAAYpK,QAAQmR,IAAIa,GAC9B,IAAI,IAAI9N,EAAI,EAAGzH,EAASqV,EAAarV,OAAQyH,EAAIzH,IAAUyH,EACzD+N,EAAgBH,EAAa5N,IAAMkG,EAAIlG,GAGzCkG,EAAIhB,OAAO,EAAG0I,EAAarV,QAE3B,MAAMyV,QAAsB,EAC5B,GAAGA,EAAcC,KAAM,CACrB,IAAI,MAAMzM,KAAOwM,EACfD,EAAgBvM,GAAKjJ,OAAS,EAGhCyV,EAAcxP,QAGhB,OAAOuP,G,+RAKYG,CAAkBR,GCxChC,MAAMS,UAA2Bb,EAOtCrT,cACEsG,QAEApG,KAAKG,KAAM,EAAAsJ,EAAA,IAAO,YAClBzJ,KAAKuT,SCJM,WACb,MAAMU,EAAoC,CAAC,QAAS,QAAS,WACvDV,EAA6B,GACnC,IAAI,MAAMtT,KAAQgU,EAEhBV,EAAStT,GAAQ,IAAI,IAAW,IAAgBA,GAGlD,OAAOsT,EDJWW,GAIXZ,eACL,OAAOA,EAAatT,KAAKuT,UAYdY,YAA4DlU,G,qCACvE,OAAOD,KAAKsT,eAAetO,MAAM4O,IACxB,CACLlQ,QAAS1D,KAAKuT,SAAStT,GACvBoF,QAASuO,EAAgB3T,Q,gSE5B1B,MAAMmU,UAAwBjB,EAC5BhM,WACL,OAAOnH,KAAKqU,WAAWC,UAAU,uBAAuBtP,MAAM5C,GACrDA,IAIJmS,eAAezN,EAKlB,IAIF,OAAO9G,KAAKmH,WAAWnC,MAAMiC,IAC3B,IAAIuN,EACAC,EACJ,MAAMC,EAAwC,CAC5CC,SAAU,KACVC,aAAc,CACZtW,EAAG,gCACHuW,KAAM/N,EAAS+N,KACfC,MAAOhO,EAASgO,QAKlBN,EADC1N,EAASiO,gBACW/U,KAAKgV,aAAaC,aAAa,aAAcnO,EAASiO,gBAAiB9N,GAAO,GAE9EtF,QAAQM,QAAQ,CACnC3D,EAAG,4BAKP,MAAM4W,EAAUjO,EAAMkO,SAChBC,EAAQ,IAAIhL,WAAW8K,EAAQE,MAAMhX,OAAS,IAWpD,OAVA0N,EAAUsJ,GACVA,EAAMjN,IAAI+M,EAAQE,MAAO,GACzBF,EAAQE,MAAQA,EAGdX,EADC3N,EAASuO,YACOrV,KAAKgV,aAAaC,aAAa,aAAcnO,EAASuO,YAAapO,GAAO,GAE1EtF,QAAQM,QAAQ,IAAImI,YAGhCzI,QAAQmR,IAAI,CAAC0B,EAAoBC,IAAiBzP,MAAMsQ,IAC7DZ,EAAOC,SAAWW,EAAO,GACzBZ,EAAOE,aAAaO,SAAWD,EAC/BR,EAAOE,aAAaW,kBAAoBD,EAAO,GAExCtV,KAAKqU,WAAWC,UAAU,iCAAkCI,SAKlEc,MAAMb,EAAkB1N,EAAwB5J,EAAe,IACpE,OAAO2C,KAAKgV,aAAaC,aAAa,aAAcN,EAAU1N,GAAO,GAAOjC,MAAMyQ,GAEzEzV,KAAKqU,WAAWC,UAAU,qBAAsB,CACrDK,SAAUc,GACTpY,GAAS2H,MAAM0Q,IACF,uBAAXA,EAAKpX,GACN0B,KAAKqU,WAAWsB,QAAQD,EAAKE,MAGxBF,OAKNG,qBAAqBC,GAC1B,OAAO9V,KAAKqU,WAAWC,UAAU,+BAAgC,CAACwB,KAAAA,IAG7DC,sBACL,OAAO/V,KAAKqU,WAAWC,UAAU,+BAG5B0B,sBACL,OAAOhW,KAAKqU,WAAWC,UAAU,gC,cC3D9B,MAAM2B,UAA0B9C,EAAvC,c,oBACU,KAAA+C,SAAmD,IAAI1N,IAEvD,KAAA2N,MAAyC,GACzC,KAAAhW,KAAM,EAAAsJ,EAAA,IAAO,UAAMkC,GAAW,GAoB/ByK,YAAYC,EAA2BC,EAA2BJ,IACtEA,EAAUG,GAAarW,KAAKuW,YAAYF,GACrCH,IACFA,EAAW,IAAIM,IACfxW,KAAKkW,SAAS/N,IAAIkO,EAAWH,IAG/BlW,KAAKmW,MAAMrI,EAAWuI,IAAcA,EACpC,IAAI,MAAMI,KAAYP,EACpB,IAAG,EAAAQ,EAAA,GAAUD,EAAUH,GACrB,OAIJJ,EAASS,IAAIL,GAGRM,mBAAmBP,GACxB,OAAOrW,KAAKmW,MAAMrI,EAAWuI,IAGxBE,YAAYF,GAEjB,MAAO,CADUrW,KAAKkW,SAASxR,IAAI2R,KAAeA,EAAYrW,KAAK4W,mBAAmBP,IAAcA,EAAWrW,KAAKkW,SAASxR,IAAI2R,IAC/GA,GAGbQ,WAAWR,GAChB,MAAMH,EAAWlW,KAAKuW,YAAYF,GAClC,OAAOH,EAAS,GAAK,CAACA,EAAS,GAAGY,SAASrb,OAAO8I,MAAO2R,EAAS,SAAMvK,EAGnEoL,cAAcV,EAA2BC,EAA2BJ,GAEzE,IADCA,EAAUG,GAAarW,KAAKuW,YAAYF,GACtCH,EACD,IAAI,MAAMO,KAAYP,EACpB,IAAG,EAAAQ,EAAA,GAAUD,EAAUH,GAMrB,OALAJ,EAASnS,OAAO0S,GACZP,EAASpC,OACX9T,KAAKkW,SAASnS,OAAOsS,UACdrW,KAAKmW,MAAMrI,EAAWuI,MAExB,EAKb,OAAO,EAGFW,iBAAiBX,EAA2BC,GAEjD,GADAtW,KAAKG,IAAI,0BAA2BkW,EAAU1O,QAAS2O,IACnDA,EAAS,CACX,MAAMW,EAAIjX,KAAK6W,WAAWR,GAC1B,IAAIY,EAEF,OADAjX,KAAKG,IAAI,kDAAmDkW,EAAU1O,SAC/DhG,QAAQC,OAAO,eAGvB0U,EAASD,GAAaY,EAGzB,IAAIrM,EACJ,OAAO0L,MAAAA,OAAO,EAAPA,EAAS7W,MACd,IAAK,UACHmL,EAAU5K,KAAKkX,mBAAmBC,kBAAkBb,EAAQc,OAAQd,EAAQvH,WAAW,GACvF,MAMF,IAAK,gBACHnE,EAAU5K,KAAKqX,6BAA+BrX,KAAKsX,mBAAmBC,wBAAuB,GAAMvS,MAAK,KACtGhF,KAAKqX,iCAA8B1L,KAErC,MAGF,QAEE,OADA3L,KAAKG,IAAI2C,KAAK,4CAA6CwT,GACpD3U,QAAQC,SAInB,MAAM4V,EAAM1J,EAAWuI,GAEvB,OADArW,KAAKG,IAAI,0CAA2CqX,GAC7C5M,EAAQ5F,MAAK,KAClB,MAAMyS,EAAS3J,EAAWuI,GAE1B,GADArW,KAAKG,IAAI,iDAAkDqX,EAAK,SAAUC,GACvED,IAAQC,EACT,OAAOpB,EAGTrW,KAAK+W,cAAcV,EAAWC,GAE9B,MAAMoB,EAAa1X,KAAK6W,WAAWR,GACnC,GAAGqB,EACD,OAAO1X,KAAKgX,iBAAiBX,EAAWqB,EAAW,IAKrD,MAFA1X,KAAKG,IAAIZ,MAAM,sDAAuDiY,EAAK,SAAUC,EAAQnB,GAEvF,qB,0DCrKG,SAASqB,GAAkBC,EAAgBC,GACxD,IAAID,EACF,OAAOC,EAGT,IAAI,IAAIxQ,KAAOuQ,EACTC,EAAUrG,eAAenK,WACpBuQ,EAAUvQ,GAIrB,IAAI,IAAIA,KAAOwQ,EAEXD,EAAUvQ,GAAOwQ,EAAUxQ,GAI/B,OAAOuQ,E,sECRM,SAASE,GAAsBjW,G,QAC5C,MAAMkW,EAAoB,CACxBlW,EAAQmW,OACRnW,EAAQoW,SACPpW,EAA4BqW,WAGzBC,EAAStW,EAA4BsW,MAC3C,GAAGA,EAAO,CACR,MAAMC,EAAiBD,EAA2CE,aAC7C1M,IAAlByM,GACDL,EAAQzX,KAAK8X,EAAc3R,YAG7B,MAAMpB,EAAW8S,EAAwC9S,QACnDiT,EAAejT,MAAAA,OAAO,EAAPA,EAASkT,eAC3BD,MAAAA,OAAY,EAAZA,EAAcla,SACf2Z,EAAQzX,QAAQgY,EAAalU,KAAKoU,GAAWA,EAAO/R,cAIxD,MAAMgS,EAA0D,QAAvC,EAAC5W,EAAqC,iBAAC,eAAE6W,kBAC/DD,MAAAA,OAAe,EAAfA,EAAiBra,SAClB2Z,EAAQzX,QAAQmY,EAAgBrU,KAAKuU,IAAa,EAAAC,GAAA,GAAUD,EAASE,YAGvE,MAAMC,EAAUjX,EAAmCiX,OACnD,GAAGA,EAAQ,CACT,MAAMC,EAAoB,IACnBD,EAAkDE,OAAS,GAC/DF,EAAqDT,QACrDS,EAAuDG,YAE1DlB,EAAQzX,QAAQyY,EAAQta,OAAOC,SAAS0F,KAAKoU,GAAWA,EAAO/R,cAE/D,MAAMyS,EAAoB,CACvBJ,EAAoDK,WACpDL,EAAyDM,SAE5DrB,EAAQzX,QAAQ4Y,EAAQza,OAAOC,SAAS0F,KAAKiV,GAAWA,EAAO5S,UAAS,MAG1E,MAAM6S,EAAuD,QAArC,EAACzX,EAAmC,eAAC,eAAE0X,gBAK/D,OAJGD,MAAAA,OAAc,EAAdA,EAAgBlb,SACjB2Z,EAAQzX,QAAQgZ,EAAelV,KAAKoV,IAAU,EAAAZ,GAAA,GAAUY,MAGnD,IAAIhD,IAAIuB,EAAQtZ,OAAOC,UCxDjB,SAAS+a,GAA4C1H,EAAQkC,GAE1E,MAAMyF,EAAQ,CAACC,UAAU,EAAMC,cAAc,GACvCC,EAA0C,GAChD5F,EAAM/Q,SAASjD,IACT8R,EAAIP,eAAevR,KACrB4Z,EAAI5Z,GAAQyZ,MAGhB7d,OAAOie,iBAAiB/H,EAAK8H,GCAhB,SAASE,GACtBC,EACAC,EACA9Y,GAEA,OAAO6Y,EAAOC,GAAY9Y,ECsCrB,MAAM+Y,QAAoCvO,EAIlC,MAAMwO,WAAuBhH,EAA5C,c,oBAKU,KAAAiH,QAAwC,GAsKzC,KAAA/V,MAAQ,CAACkI,GAAO,KACrBvM,KAAKqa,aAAe,CAClB,EAAG,GACH,EAAG,IAGD9N,EAQFvM,KAAKsa,iBAAmB,IAPxBta,KAAK0D,QAAQW,QAEbrE,KAAKua,iBAAiB,GAAG,GACzBva,KAAKua,iBAAiB,GAAG,GACzBva,KAAKua,iBAAiBL,IAAkB,GACxCla,KAAKwa,oBAKPxa,KAAKoa,QAAU,GACfpa,KAAKya,kBAAoB,GACzBza,KAAK0a,WAAa,EAClB1a,KAAK2a,aAAe,IAAI,KAAY,CAClCxd,eAAe,EACfC,YAAY,EACZH,UAAU,EACVM,YAAY,IAEdyC,KAAK4a,cAAgB,CACnBC,MAAO,GACPC,MAAO,EACPC,QAAS,GACTC,SAAU,IA6zBN,KAAAC,oBAAuBC,IAEfA,EAAOC,aAEfjY,SAASkY,I,MACb,MAAM,UAACC,EAAS,KAAEC,GAAQF,EAEpBhE,GAAS,EAAAwB,GAAA,GAAU0C,GACnBtB,EAASha,KAAKub,WAAWnE,GAAQ,GACpC4C,KACe,QAAb,EAAAA,EAAOnb,cAAM,eAAE2c,SAChBxb,KAAKyb,sBAAsBzB,EAAQqB,GAGrCrB,EAAOqB,UAAYA,EACnBrb,KAAK0b,uBAAuB1B,GAC5Bha,KAAK2b,WAAW3B,IAGlBha,KAAKkX,mBAAmB0E,yBAAyBxE,EAAQ4C,OAIrD,KAAA6B,qBAAwBX,I,MAC9B,MAAMF,EAA2B,QAAhB,EAAAE,EAAOG,iBAAS,QAAI,EAE/BjE,GAAS,EAAAwB,GAAA,GAAWsC,EAAOI,KAA+BA,MAC1DtB,EAASha,KAAK8b,cAAc1E,GAY/B4C,IACGkB,EAAOrc,OAAO2c,OAGhBxB,EAAOnb,OAAO2c,QAAS,EAFvBxb,KAAKyb,sBAAsBzB,EAAQgB,GAKrChb,KAAK0b,uBAAuB1B,IAG9Bha,KAAKkX,mBAAmB0E,yBAAyBxE,EAAQ4C,IAGnD,KAAA+B,sBAAyBb,I,MAC/B,MAAMF,EAA2B,QAAhB,EAAAE,EAAOG,iBAAS,QAAI,EAE/BW,EAAeC,IACnBjc,KAAKqa,aAAaW,GAAU5c,OAAS,EACrC6d,EAAMlP,UACNkP,EAAM/Y,SAASkU,IACb8E,EAAU9E,IAAU,EAEpB,MAAM4C,EAASha,KAAK8b,cAAc1E,GAClCpX,KAAKkX,mBAAmB0E,yBAAyBxE,EAAQ4C,GACrDA,IAIJA,EAAOnb,OAAO2c,QAAS,EACvBxb,KAAK0b,uBAAuB1B,OAG9B,MAAMe,EAAU/a,KAAKmc,iBAAiBnB,GAAU,GAChD,IAAI,MAAMhB,KAAUe,EAAS,CAC3B,IAAIf,EAAOnb,OAAO2c,OAChB,MAGF,MAAMpE,EAAS4C,EAAO5C,OAClB8E,EAAU9E,IACZpX,KAAKkX,mBAAmB0E,yBAAyBxE,KAMjD8E,EAAsC,GACxChB,EAAOe,MA6BXD,EAAYd,EAAOe,MAAM7X,KAAKkX,IAAS,EAAA1C,GAAA,GAAW0C,EAA+BA,SA5B/Etb,KAAKqU,WAAWC,UAAU,4BAA6B,CACrD+G,UAAWL,IACVhW,MAAMoX,IAIPpc,KAAKqc,aAAaD,GAElBJ,EAAYI,EAAcrB,QAAQ3W,KAAKkY,GAAMA,EAAElF,cAhlC3CmF,QACRvc,KAAKqE,OAAM,GAEXrE,KAAKwc,UAAUhW,iBAAiB,mBAAmB,KACjD,MAAM4Q,EAASpX,KAAKyc,gBAAgBC,UAAUne,GAAGkI,UAAS,GAE1D,GADezG,KAAK8b,cAAc1E,GACvB,CACT,MAAMuF,EAAW3c,KAAK4c,gBAAgBC,kBAAkBzF,GACxDpX,KAAK2a,aAAamC,YAAY1F,EAAQuF,OAI1C,MAAMI,EAAkBte,IACtB,MAAMsc,EAAU/a,KAAKgd,kBAAiB,GACtC,IAAI,IAAInX,EAAI,EAAGA,EAAIkV,EAAQ3c,SAAUyH,EACnC7F,KAAKid,uBAAuBlC,EAAQlV,GAAIpH,IA8D5C,OA1DAuB,KAAKwc,UAAUhW,iBAAiB,gBAAgB,KAC9C,MAAMuU,EAAU/a,KAAKgd,kBAAiB,GAEtC,IAAI,MAAME,KAAYld,KAAKoa,SACrB8C,EAAW,UACNld,KAAKoa,QAAQ8C,GAMxB,IAAI,IAAIrX,EAAI,EAAGA,EAAIkV,EAAQ3c,SAAUyH,EAAG,CACtC,MAAMmU,EAASe,EAAQlV,GAKvB7F,KAAKmd,wBAAwBnD,OAIjCha,KAAKwc,UAAUhW,iBAAiB,gBAAiBuW,GACjD/c,KAAKwc,UAAUhW,iBAAiB,aAAcuW,GAE9C/c,KAAKwc,UAAUhW,iBAAiB,iBAAkB/H,IAChD,MAAMsc,EAAU/a,KAAKgd,kBAAiB,GAEhC/C,EAAWja,KAAKod,4BAA4B3e,EAAOF,IACzD,IAAI,IAAIsH,EAAI,EAAGA,EAAIkV,EAAQ3c,SAAUyH,SACpBkV,EAAQlV,GACToU,UAGTja,KAAKoa,QAAQ3b,EAAOF,OAG7ByB,KAAKwc,UAAUhW,iBAAiB,0BAA2BwT,IACzDha,KAAKmd,wBAAwBnD,GAC7Bha,KAAKqd,kCAAkCrD,EAAvCha,MAGFA,KAAKwc,UAAUhW,iBAAiB,eAAgB6S,IAC9C,MAAMiE,EAAkBtd,KAAKud,gBAAgBC,QAAQnE,GAE/CjC,EAASiC,EAAO5S,UAAS,GAC5B6W,EAAKze,OAAO8G,MAAQ3F,KAAK8b,cAAc1E,IACxCpX,KAAKyd,qBAAqBrG,MAI9BpX,KAAK0d,kBAAkBC,2BAA2B,CAChDC,kBAAmB5d,KAAKib,oBAExB4C,mBAAoB7d,KAAK6b,qBAEzBiC,oBAAqB9d,KAAK+b,wBAGrBpa,QAAQmR,IAAI,CACjB9S,KAAK+d,gBAAgB5W,WACrBnH,KAAKge,mBAAmB7J,YAAY,aACnCnP,MAAK,EAAEiC,GAAQ5B,QAAS0V,EAASrX,QAAAA,OAClC1D,KAAK0D,QAAUA,EACf1D,KAAK+a,QAAU/a,KAAK0D,QAAQua,WAE5Bje,KAAKqa,aAAepT,EAAMoT,cAAgB,GACtCra,KAAKqa,aAAa,KAAIra,KAAKqa,aAAa,GAAK,IAC7Cra,KAAKqa,aAAa,KAAIra,KAAKqa,aAAa,GAAK,IAE9CU,EAAQ3c,QACT,iBAA+C4B,KAAKke,oBAAoBC,KAAKne,KAAM+a,GAAU,CAAC,QAAS,UAAW,WAAY,UAGhI/a,KAAKsa,iBAAmBrT,EAAMqT,kBAAoB,GAE/CS,EAAQ3c,QACT4B,KAAKoe,iBAAiBC,sBAKpBH,oBAAoBnD,GAC1B,IAAI,IAAIlV,EAAI,EAAGzH,EAAS2c,EAAQ3c,OAAQyH,EAAIzH,IAAUyH,EAAG,CACvD,MAAMmU,EAASe,EAAQlV,GACvB,GAAImU,EAAJ,CAKEA,EAAOsE,aAAc,EAAAC,GAAA,GAAmBvE,EAAOsE,aAG9CtE,EAAOwE,YACRxe,KAAKkX,mBAAmBuH,aAAa,CAACzE,EAAOwE,aAG/C,IAAI,IAAI3Y,EAAI,EAAGA,GAAK,KAAMA,SAEjBmU,EADgD,SAASnU,KAKlE7F,KAAK0e,WAAW1E,OAAQrO,GAAW,GAGnB3L,KAAKkX,mBAAmByH,iBAAiB3E,EAAO5C,OAAQ4C,EAAOsE,cAE7Ete,KAAKkX,mBAAmB0H,mBAAmB5E,EAAO5C,UAKjDyH,gBAAgB7D,GACrB,QAAShb,KAAKsa,iBAAiBU,GAG1BT,iBAAiBS,EAAkB8D,GACrC9D,IAAad,IAAoB4E,GAClC9e,KAAKsa,iBAAiB,GAAKwE,EAC3B9e,KAAKsa,iBAAiB,GAAKwE,GAE3B9e,KAAKsa,iBAAiBU,GAAY8D,EAGjC9e,KAAKsa,iBAAiB,IAAMta,KAAKsa,iBAAiB,KACnDta,KAAKsa,sBAAiBJ,IAAoB,GAG5Cla,KAAK+d,gBAAgBhW,YAAY,mBAAoB/H,KAAKsa,kBAqCrDmB,sBAAsBzB,EAAgBgB,UACpChB,EAAOnb,OAAO2c,QACrB,EAAAtS,EAAA,GAAiBlJ,KAAKqa,aAAaW,GAAWhB,EAAO5C,QACrDpX,KAAKwa,mBAGAA,mBACLxa,KAAK+d,gBAAgBhW,YAAY,eAAgB/H,KAAKqa,cAGjD0E,iBAAiB/D,GACtBhb,KAAKqa,aAAaW,GAAY,GAGzBgE,gBAAgBhE,GACrB,OAAOhb,KAAKqa,aAAaW,GAGpBiE,cAAcjE,GACnB,MAAMkE,EAAalf,KAAKya,kBAAkBO,IAAa,EACvD,OAAGA,IAAad,IAAqBgF,EAI9BA,EAHEC,KAAKC,IAAIpf,KAAKif,cAAc,GAAIjf,KAAKif,cAAc,IAMvDI,UAAU9gB,GACf,IAAI+gB,EAAStf,KAAKoa,QAAQ7b,GAa1B,OAZI+gB,IACFA,EAAStf,KAAKoa,QAAQ7b,GAAM,CAC1Bwc,QAAS,GACTxc,GAAAA,EACAghB,oBAAqB,EACrBC,cAAe,IAAIhJ,IACnBiJ,qBAAsB,IAAIjJ,KAG5BiD,GAA6B6F,EAAQ,CAAC,2BAGjCA,EAGFnD,iBAAiB5d,EAAYmhB,GAAe,GACjD,GAAGnhB,IAAO2b,GACR,OAAOla,KAAKgd,iBAAiB0C,GAG/B,MAAMJ,EAAStf,KAAKqf,UAAU9gB,GAC9B,OAAOmhB,EAAeJ,EAAOvE,QAAQtc,QAAQub,QAAiCrO,IAAtBqO,EAAO2F,aAA4BL,EAAOvE,QAG7F6E,cAAcC,EAAuBpkB,EAAeyhB,GACzD,MAAMoC,EAAStf,KAAKmc,iBAAiBe,GAAU,GAC/C,IAAIlD,EACJ,GAAI6F,EAIG,CACL,MAAMrb,EAAM8a,EAAOQ,WAAW9F,GAAWA,EAAO5C,SAAWyI,KAC/C,IAATrb,IAEDwV,EAASsF,EADS7jB,EAAO+I,EAAM,EAAIA,EAAM,SANxC/I,IACDue,EAASsF,EAAO,IAUpB,OAAOtF,EAGFoD,4BAA4BF,GACjC,GAAGA,GAAY,EAAG,OAAO,EAAA6C,GAAA,GAAkB7C,GAC3C,MAAMze,EAASuB,KAAKggB,eAAeC,UAAU/C,GAC7C,OAAO,EAAA6C,GAAA,GAAkBthB,EAAOyhB,YAG3BC,cAAc/I,GACnB,OAAQpX,KAAKogB,wBAAwBC,iBAAiBjJ,GAAQ,GAGzDkJ,qBAAqBpD,GAC1B,MAAMoC,EAAStf,KAAKqf,UAAUnC,GAC9B,MAAO,CAACqD,mBAAoBjB,EAAOG,qBAAqB3L,KAAM0M,YAAalB,EAAOE,cAAc1L,MAG3FkJ,iBAAiB0C,GACtB,OAAO1f,KAAKmc,iBAAiB,EAAGuD,GAAcxb,OAAOlE,KAAKmc,iBAAiB,EAAGuD,IAGxEe,uBAAuBzG,EAAgBC,EAAgDxb,G,MAC7F,IAAI0C,EAIM,GAAGnB,KAAKggB,eAAeU,oBAAoB1G,EAAQvb,GAAS,CACpE,MAAMkiB,EAAcliB,EAAOmiB,cAAcvkB,QAAQ2d,EAAO5C,QAEtDjW,GADkB,IAAjBwf,EACO3gB,KAAK6gB,oBAAoB7gB,KAAK8gB,gCAAgCriB,EAAOsiB,aAAa3iB,OAAS,EAAIuiB,IAAc,IAChG,QAAb,EAAA3G,EAAOnb,cAAM,eAAE2c,QACfxb,KAAK0b,uBAAuB1B,GAAQ,IAEpC,EAAAgH,GAAA,GAAehH,GAQ3B,OAAOD,GAAeC,EAAQC,EAAU9Y,GAGnC8f,UAAU7J,EAAgB4D,EAAmB0E,GAAe,GACjE,MAAMtF,EAAsB,QAEZzO,IAAbqP,EACDZ,EAAQ9Z,KAAKN,KAAKqf,UAAU,GAAGtE,QAAS/a,KAAKqf,UAAU,GAAGtE,SAE1DX,EAAQ9Z,KAAKN,KAAKmc,iBAAiBnB,GAAU,IAG/C,IAAI,IAAIsE,KAAUlF,EAAS,CACzB,IAAIvU,EAAI,EAAGqb,EAAU,EACrB,IAAI,IAAI9iB,EAASkhB,EAAOlhB,OAAQyH,EAAIzH,IAAUyH,EAAG,CAC/C,MAAMmU,EAASsF,EAAOzZ,GACtB,GAAGmU,EAAO5C,SAAWA,EACnB,MAAO,CAAC4C,EAAQnU,EAAIqb,GACZxB,QAAsC/T,IAAtBqO,EAAO2F,cAC7BuB,GAKR,MAAO,GAGFpF,cAAc1E,GACnB,OAAOpX,KAAK+a,QAAQ3D,GAGf4J,eAAe5J,EAAyB6C,GAC7C,MAAMD,GAAS,EAAAmH,GAAA,GAAS/J,GAAUA,EAASpX,KAAK8b,cAAc1E,GAC9D,OAAO,EAAA4J,GAAA,GAAehH,EAAQC,GAWzB4G,oBAAoBO,EAAeC,GAKxC,YAJY1V,IAATyV,IACDA,GAAO,EAAAE,GAAA,IAAM,GAAQthB,KAAKuhB,YAAYC,uBAGzB,MAAPJ,GAAmBC,EAAW,EAA2B,QAAnBrhB,KAAK0a,YAG9CyC,wBAAwBnD,GAE7B,MAAMyH,EAAUzhB,KAAKggB,eAAe0B,aACpC,IAAI,MAAMnjB,KAAMkjB,EAAS,CACvB,MAAMhjB,EAASgjB,EAAQljB,GACvByB,KAAKid,uBAAuBjD,EAAQvb,IAMjCwe,uBAAuBjD,EAAgBvb,GAC5C,MAAMwb,EAAWja,KAAKod,4BAA4B3e,EAAOF,IAEnDwc,EADS/a,KAAKqf,UAAU5gB,EAAOF,IACdwc,QAEjB4G,EAAW5G,EAAQ+E,WAAWxD,GAAMA,EAAElF,SAAW4C,EAAO5C,SACxDwK,EAAY7G,EAAQ4G,GACpBE,EAAiB7hB,KAAKghB,eAAeY,EAAW3H,GAEhD6H,EAAiB9hB,KAAKygB,uBAAuBzG,EAAQC,EAAUxb,GAErE,OAAGojB,IAAmBC,MAIjBD,GAAkBC,GAAoBH,IAAaG,IACtD9hB,KAAK+hB,0CAA0CtjB,EAAOF,GAAIyb,IAAU8H,IAGrD,IAAdH,GACD5G,EAAQhQ,OAAO4W,EAAU,GAGxBG,IACD,EAAAE,GAAA,GAA2BjH,EAASf,GAASA,GAAWha,KAAKghB,eAAehH,EAAQC,KAAY,IAG3F,GAGFoD,kCAAkCrD,GACvC,MAAMiI,EAAkC,CACtCjiB,KAAK+hB,0CAA0C/H,EAAOqB,UAAWrB,IAG7DyH,EAAUzhB,KAAKggB,eAAe0B,aACpC,IAAI,MAAMnjB,KAAMkjB,EAAS,CACvB,MAAMhjB,EAASgjB,EAAQljB,GACpByB,KAAKggB,eAAeU,oBAAoB1G,EAAQvb,IACjDwjB,EAAU3hB,KAAKN,KAAK+hB,0CAA0CtjB,EAAOF,GAAIyb,IAI7E,MAAO,IAAMiI,EAAU/e,SAAS0B,GAAaA,MAGxCmd,0CAA0C/G,EAAkBhB,EAAgBkI,GACjF,MAAMC,EAAiBniB,KAAKkX,mBAAmBkL,qBAAqBpI,GAC9DqI,EAAariB,KAAKmgB,cAAcnG,EAAO5C,QAE7C,QAAczL,IAAXuW,EAMH,MAAO,KACL,MAAMI,EAAiBtiB,KAAKkX,mBAAmBkL,qBAAqBpI,GAC9DuI,EAAaviB,KAAKmgB,cAAcnG,EAAO5C,QAEvCoL,EAAmBF,EAAiBH,EAC1CniB,KAAKyiB,wBAAwBzH,EAAUwH,IAAoBF,EAAgBA,GAAkBC,EAAYvI,IAX3G,CACE,MAAMwI,EAAmBN,EAASC,GAAkBA,EACpDniB,KAAKyiB,wBAAwBzH,EAAUwH,IAAoBL,EAAgBA,GAAkBE,EAAYrI,IAatGyI,wBACLzH,EACAwH,EACAE,EACAC,EACA3I,GAEA,MAAMsF,EAAStf,KAAKqf,UAAUrE,GAC3BwH,IACDlD,EAAOC,oBAAsBJ,KAAKyD,IAAI,EAAGtD,EAAOC,oBAAsBiD,IAGxE,MAAM,OAACpL,GAAU4C,EACd0I,EACDpD,EAAOE,cAAc7I,IAAIS,GAEzBkI,EAAOE,cAAczb,OAAOqT,GAG3BuL,EACDrD,EAAOG,qBAAqB9I,IAAIS,GAEhCkI,EAAOG,qBAAqB1b,OAAOqT,QAGDzL,IAAjC2T,EAAOuD,wBACRvD,EAAOuD,sBAAwBlT,EAAA,cAAe,KAC5C2P,EAAOuD,2BAAwBlX,EAC/B,MAAMmX,EAAU,OAAH,UAAOxD,UACbwD,EAAQ/H,QACf/a,KAAKwc,UAAU7V,cAAc,gBAAiBmc,KAC7C,IAIApH,uBAAuB1B,EAAgB+I,GAAa,EAAOlhB,G,MAChE,IAAiBwf,EAAb2B,EAAU,EACd,GAAGhJ,EAAOnb,OAAO2c,SAAWuH,EAC1BC,EAAUhjB,KAAKijB,yBAAyBjJ,GACxCqH,GAAW,MACN,CACDxf,IACFA,EAAU7B,KAAKkX,mBAAmByH,iBAAiB3E,EAAO5C,OAAQ4C,EAAOsE,cAG3E0E,GAAWnhB,MAAAA,OAAO,EAAPA,EAA6Buf,OAAQ4B,EAEhD,MAAME,EAAYljB,KAAK4c,gBAAgBuG,UAAUnJ,EAAO5C,SAAW4C,EAAO5C,OAAOgM,WACjF,GAAGF,EAAW,CACZ,MAAMG,EAAwBrjB,KAAKud,gBAAgBC,QAAQ0F,KACvDF,GAAYK,EAAQjC,MAAQiC,EAAQjC,KAAO4B,KAC7CA,EAAUK,EAAQjC,MAIC,kBAAR,QAAZ,EAAApH,EAAOsJ,aAAK,eAAEhlB,IAAwB0b,EAAOsJ,MAAMlC,KAAO4B,IAC3DA,EAAUhJ,EAAOsJ,MAAMlC,MAIvB4B,IACFA,GAAU,EAAA1B,GAAA,IAAM,IAGlB,MAAMngB,EAAQnB,KAAK6gB,oBAAoBmC,EAAS3B,GAChD,GAAG0B,EACD,OAAO5hB,EAIT4Y,GAAeC,GADE,EAAA+F,GAAA,GAAkB/F,EAAOqB,WACTla,GAG5B2f,gCAAgCH,GACrC,OAAO,YAA4B,MAAdA,GAGhBsC,yBAAyBjJ,GAC9B,MAAMiC,EAAQjc,KAAKqa,aAAaL,EAAOqB,WAEjCkI,EAAatH,EAAM5f,QAAQ2d,EAAO5C,QACxC,IAAIuJ,EAAc4C,EAMlB,OALmB,IAAhBA,IACD5C,EAAc1E,EAAM3b,KAAK0Z,EAAO5C,QAAU,EAC1CpX,KAAKwa,oBAGAxa,KAAK8gB,gCAAgCH,GAqBvC6C,iBAAiBxJ,GACtB,MAAM,OAAC5C,EAAM,IAAEqM,GAAOzJ,EAChB0J,EAAiB1jB,KAAKkX,mBAAmByM,kBAAkBvM,GAC3DwM,EAAkB5jB,KAAKkX,mBAAmB2M,0BAA0BzM,GACpE0M,EAAUJ,EAAeI,QAAQnc,MACvC,IAAIoc,EACJ,IAAI,IAAIle,EAAI,EAAGzH,EAAS0lB,EAAQ1lB,OAAQyH,EAAIzH,IAAUyH,EAAG,CACvD,MAAMme,EAAMF,EAAQje,GACdhE,EAAqB7B,KAAKkX,mBAAmB+M,sBAAsBL,EAAiBI,GAC1F,GAAGniB,IAAYA,EAAQhD,OAAOqlB,YAAiD,CAC7EH,EAAkBliB,EAElB,MAAMkW,EAAUD,GAAsBjW,GACtC7B,KAAKmkB,aAAaC,mBAAmBrM,EAAS,cAAcX,KAE5D,OAgBJ,GAZA4C,EAAOwE,WAAauF,EAYjB3M,EAAOiN,aAAeZ,EAAK,CAC5B,MAAMa,EAAStkB,KAAK0d,kBAAkB6G,gBAAgBnN,EAAOgM,WAAYK,GAAKA,IAC9EzJ,EAAOyJ,IAAMa,EAGftkB,KAAK0D,QAAQyE,IAAI,CACf,CAACiP,GAAS4C,IAGZha,KAAKmkB,aAAaK,YAAYpN,EAAQ,UAWjCuE,WAAW3B,EAAgBkF,EAAqBuF,EAA4BC,GACjF,MAAM,UAACrJ,EAAS,OAAEjE,GAAU4C,EACtBe,EAAU/a,KAAKmc,iBAAiBd,GAAW,GAC3CsJ,EAAM5J,EAAQ+E,WAAWxD,GAAMA,EAAElF,SAAWA,IAiBlD,IAhBY,IAATuN,GACD5J,EAAQhQ,OAAO4Z,EAAK,GAIpB3kB,KAAK+a,QAAQ3D,GAAU4C,EAEvBha,KAAKwjB,iBAAiBxJ,QAGNrO,IAAfuT,IACDA,EAAalf,KAAK4kB,oBAAoB5K,IAGxCha,KAAKmd,wBAAwBnD,GAE1BkF,IAAelF,EAAOnb,OAAO2c,OAAQ,CACtC,GAAGkJ,EAAkB,CACnB,MAAMG,EAAwB7kB,KAAKya,uBAAkBP,KACjD2K,GAAyB3F,EAAa2F,KACxC7kB,KAAKya,uBAAkBP,GAAoBgF,GAI/C,MAAM4F,EAAkB9kB,KAAKya,kBAAkBY,GAC/C,IAAIyJ,GAAmB5F,EAAa4F,EAAiB,CAEnD,IAAIL,IAAqBzkB,KAAK6e,gBAAgBxD,GAE5C,YADArb,KAAK+kB,qBAAqB/K,GAAQ,GAIpCha,KAAKya,kBAAkBY,GAAa6D,IAI5B,IAATyF,GACD3kB,KAAK+hB,0CAA0C1G,EAAWrB,GAAQ,GAGpE,MAAMC,GAAW,EAAA8F,GAAA,GAAkB1E,IACd,EAAA2G,GAAA,GAA2BjH,EAASf,GAASA,IAAW,EAAAgH,GAAA,GAAehH,EAAQC,KAAY,GAM3GsB,WAAWnE,GAChB,MAAM4N,EAAchlB,KAAKihB,UAAU7J,OAAQzL,GAAW,IAC/CqO,EAAQ7Y,GAAS6jB,EACxB,GAAGhL,EAAQ,QACFha,KAAK+a,QAAQ3D,GAELpX,KAAKqf,UAAUrF,EAAOqB,WAC9BN,QAAQhQ,OAAO5J,EAAO,GAC7B,MAAM8jB,OAA8EtZ,KAAlE,EAAAzC,EAAA,GAAiBlJ,KAAKqa,aAAaL,EAAOqB,WAAYjE,GAExEpX,KAAKmd,wBAAwBnD,GAE7Bha,KAAK2a,aAAamC,YAAY1F,EAAQ,IAEnC6N,GACDjlB,KAAKwa,mBAGPxa,KAAK+kB,qBAAqB/K,GAAQ,GAGpC,OAAOgL,EAGFD,qBAAqB/K,EAAgBkL,GAC1C,MAAM9N,EAAS4C,EAAO5C,OACtBpX,KAAKmkB,aAAaC,mBAAmB,GAAI,cAAchN,KACvDpX,KAAKmkB,aAAagB,YAAY/N,EAAQ,UACtCpX,KAAK0D,QAAQK,OAAOqT,EAAQ8N,GAGvBE,oBAAoBhO,GACzB,MAAMiO,EAAUrlB,KAAKub,WAAWnE,GAKhC,OAJGiO,EAAQjnB,QACT4B,KAAKwc,UAAU7V,cAAc,cAAe,CAACyQ,OAAAA,EAAQ4C,OAAQqL,EAAQ,KAGhEA,EAMF5H,qBAAqBrG,GAC1BpX,KAAKolB,oBAAoBhO,GACzBpX,KAAKwc,UAAU7V,cAAc,eAAgByQ,GAGxCiF,aAAaD,IAIlB,EAAAkJ,GAAA,GAAelJ,EAAcrB,SAAS,CAACf,EAAQxV,KAC7B,iBAAbwV,EAAO1b,GACR8d,EAAcrB,QAAQhQ,OAAOvG,EAAK,MAItCxE,KAAKyc,gBAAgB8I,aAAanJ,EAAcpD,OAChDhZ,KAAKud,gBAAgBiI,aAAapJ,EAAcqJ,OAChDzlB,KAAKkX,mBAAmBuH,aAAarC,EAAcsJ,UAInD,MAAMC,EAA6C,GAClDvJ,EAAcrB,QAAqB7X,SAAS8W,I,UAC3C,MAAM5C,GAAS,EAAAwB,GAAA,GAAUoB,EAAOsB,MAChC,IAAIkD,EAAaxE,EAAOsE,YAExB,MAAMsH,EAAoB5lB,KAAKkX,mBAAmB2O,eAAezO,GAC9DwO,KACGpH,IACmF,QAAlF,EAACxe,KAAKkX,mBAAmByH,iBAAiBvH,EAAQwO,UAAgC,eAAExE,OAAkF,QAA1E,EAAAphB,KAAKkX,mBAAmByH,iBAAiBvH,EAAQoH,UAAyB,eAAE4C,SAC3KpH,EAAOsE,YAAcE,EAAaoH,EAClC5lB,KAAKkX,mBAAmByM,kBAAkBvM,GAAQ0O,MAAQF,GAS3DpH,GAAkC,kBAAR,QAAZ,EAAAxE,EAAOsJ,aAAK,eAAEhlB,IAC7B0B,KAAK0e,WAAW1E,GAChB2L,EAAevO,GAAU4C,GAEzBha,KAAKolB,oBAAoBhO,GAG3B,MAAM2O,EAAU/lB,KAAKkX,mBAAmB8O,8BAA8B5O,GACtE,QAAezL,IAAZoa,EAAuB,CACxB,IAAI,MAAM7K,KAAU6K,EAClBA,EAAQhiB,OAAOmX,GACflb,KAAK0d,kBAAkBuI,WAAW/K,GAGhC6K,EAAQjS,aACH9T,KAAKkX,mBAAmB8O,8BAA8B5O,OAKhEvb,OAAO6X,KAAKiS,GAAgBvnB,QAC7B4B,KAAKwc,UAAU7V,cAAc,sBAAuBgf,GAIhDf,oBAAoB5K,GAC1B,MAAMnY,EAAU7B,KAAKkX,mBAAmByH,iBAAiB3E,EAAO5C,OAAQ4C,EAAOsE,aAC/E,OAAOzc,MAAAA,OAAO,EAAPA,EAASuf,OAAQ,EAMnB1C,WAAW1E,EAAgBgB,EAAkCyJ,EAA4BC,G,qBAA9D1J,EAA2B,QAA3B,EAAWhB,EAAOqB,iBAAS,QAAI,GAC/D,MAAMjE,GAAS,EAAAwB,GAAA,GAAUoB,EAAOsB,MAChC,IAAIlE,EAEF,YADA9X,QAAQC,MAAM,gCAAiCya,EAAQgB,GAIzC,WAAbhB,EAAO1b,GACRgB,QAAQC,MAAM,sCAAuCya,EAAQne,OAAOC,OAAO,GAAIke,IAGjF,MAAMkJ,EAAYljB,KAAK4c,gBAAgBuG,UAAU/L,GAAUA,EAAOgM,WAAa,KAE/E,GAAGhM,EAAOiN,YAAa,CACrB,MAAM/G,EAAatd,KAAKud,gBAAgBC,QAAQpG,EAAOgM,YAEvD,GACa,qBAAX9F,EAAKhf,GAEDgf,EAAmBze,OAAO8G,KAG9B,OAIJ,MAAMgX,EAAW3c,KAAK4c,gBAAgBC,kBAAkBzF,GACxDpX,KAAK2a,aAAamC,YAAY1F,EAAQuF,GAEtC,MAAMuJ,EAAkBlmB,KAAK8b,cAAc1E,GAE3C,IAAI4M,EAAaniB,EACjB,GAAGmY,EAAOsE,YAAa,CACrB0F,GAAM,EAAAmC,GAAA,GAAkBnM,EAAOsE,aAG/B,MAAM8H,GAAgBF,MAAAA,OAAe,EAAfA,EAAiB5H,cAAete,KAAKkX,mBAAmByH,iBAAiBvH,EAAQ8O,EAAgB5H,cAC/F,QAArB,EAAA8H,MAAAA,OAAa,EAAbA,EAAevnB,cAAM,eAAEqlB,cAAegC,EAAgB5H,aAAe0F,IACtEA,EAAMkC,EAAgB5H,aAGxBzc,EAAU7B,KAAKkX,mBAAmByH,iBAAiBvH,EAAQ4M,QAE3DA,EAAMhkB,KAAKkX,mBAAmBmP,sBAAsBjP,GACpDvV,EAAU,CACRvD,EAAG,UACHC,GAAIylB,EACJA,IAAAA,EACAsC,QAAStmB,KAAK4c,gBAAgB2J,cAAcvmB,KAAKyc,gBAAgBC,UAAUne,GAAGkI,UAAS,IACvFoS,QAAS7Y,KAAK4c,gBAAgB2J,cAAcnP,GAC5CoP,SAAS,EACT3nB,OAAQ,CAACgb,KAAK,GACduH,KAAM,EACNvf,QAAS,IAEX7B,KAAKkX,mBAAmBuH,aAAa,CAAC5c,GAAU,CAAC4kB,YAAY,IAO/D,IAJI5kB,MAAAA,OAAO,EAAPA,EAAShD,SACXmB,KAAKkX,mBAAmB/W,IAAIZ,MAAM,+BAAgCya,EAAQnY,IAGxEqhB,GAAa9L,EAAOiN,YAAa,CACnC,MAAM/G,EAAOtd,KAAKud,gBAAgBC,QAAQpG,EAAOgM,YACjD,GAAG9F,GAAQA,EAAKoJ,aAAepJ,EAAKze,OAAO8nB,YAAa,CACtD,MAAMC,GAAiB,EAAAhO,GAAA,GAAU0E,EAAKoJ,aACtC1mB,KAAKkX,mBAAmB2P,eAAezP,GAAUwP,EACjD5mB,KAAKkX,mBAAmB4P,eAAeF,GAAkBxP,EACzD4C,EAAO2F,WAAaiH,GAwBxB,GAnBA5M,EAAOsE,YAAc0F,EAErBhK,EAAO+M,mBAAoB,EAAAZ,GAAA,GAAkBD,IAAoBlM,EAAO+M,kBAAoBb,EAAgBa,kBAAoB/M,EAAO+M,mBACvI/M,EAAOgN,oBAAqB,EAAAb,GAAA,GAAkBD,IAAoBlM,EAAOgN,mBAAqBd,EAAgBc,mBAAqBhN,EAAOgN,yBAElHrb,IAArBqO,EAAOqB,WACQ,WAAbrB,EAAO1b,IAER0b,EAAOqB,UAAY6K,EAAkBA,EAAgB7K,UAAYL,GAMrEhB,EAAOsJ,MAAQtjB,KAAKoe,iBAAiB6I,UAAU7P,EAAQ,EAAG4C,EAAOsJ,OACjEtJ,EAAO5C,OAASA,EAIbvV,GAAWA,EAAQhD,OAAOqlB,YAAa,CACxC,MAAMgD,EAAQrlB,EAAQhD,OAAOgb,IAC1BmK,EAAMhK,EAAOkN,EAAQ,qBAAuB,sBAC7CrlB,EAAQhD,OAAOsoB,QAAS,EAEpBnN,EAAOoN,cAAiBF,KACxBlN,EAAOoN,qBAGJvlB,EAAQhD,OAAOsoB,OAI1B,MAAMzD,EAAiB1jB,KAAKkX,mBAAmByM,kBAAkBvM,GAC3DzP,EAAQ+b,EAAeI,QAAQnc,MAiCrC,GA9BcA,EAAMvJ,OAMTuJ,EAAM0f,MAAM,eACP3D,EAAeI,QAAQwD,YAAY,CAACtD,IAC5CuD,OAAO,aACb7D,EAAe5I,QAAf4I,EAAe5I,MAAU,GACtB9a,KAAKkX,mBAAmBsQ,mBAAmB9D,EAAgB7hB,IAC5D7B,KAAKwc,UAAU7V,cAAc,uBAAwB,CAACyQ,OAAAA,MAVxDsM,EAAeI,QAAQ2D,QAAQzD,GAC/BN,EAAe5I,QAAf4I,EAAe5I,MAAU,GACtB9a,KAAKkX,mBAAmBsQ,mBAAmB9D,EAAgB7hB,IAC5D7B,KAAKwc,UAAU7V,cAAc,uBAAwB,CAACyQ,OAAAA,KAW1DsM,EAAeoC,MAAQ9B,EACvBN,EAAegE,UAAY1N,EAAO+M,kBAClCrD,EAAeiE,gBAAkB3N,EAAOgN,mBAExChnB,KAAKogB,wBAAwBwH,iBAAiB,CAC5CxQ,OAAAA,EACAtQ,SAAUkT,EAAO6N,kBAGhB3E,GAAalJ,EAAOyJ,KACrBzjB,KAAK0d,kBAAkBoK,gBAAgB5E,EAAWlJ,EAAOyJ,KAG3DzjB,KAAK0b,uBAAuB1B,GAEzBkM,EAAiB,CAElB,MAAM6B,EAAqB/nB,KAAKgoB,eAAe3K,kCAAkC6I,GACjFvO,GAAkBuO,EAAiBlM,GACnC+N,IAGF/nB,KAAK2b,WAAW3B,EAAQnY,MAAAA,OAAO,EAAPA,EAASuf,KAAMqD,EAAkBC,GAGpDuD,WAAWpN,EAAQ,GAAIqN,EAAsBC,EAAQ,GAAInN,EAAmB,EAAG0E,GAAe,GAWnG,GAAG1E,EAAW,EAAG,CACf,MAAMoN,EAA2B,GAE3BC,EAAqBroB,KAAKyc,gBAAgB6L,eAC5CD,EAAmBE,QACrBH,EAAS9nB,KAAK+nB,EAAmBzd,SAGnC,MAAM4d,EAA8BxoB,KAAKggB,eAAeyI,qBAAqBzN,GAK7E,GAJGwN,GACDJ,EAAS9nB,KAAKkoB,GAGbJ,EAAShqB,OACV,OAAOuD,QAAQmR,IAAIsV,GAAUpjB,MAAK,IACzBhF,KAAKioB,WAAWpN,EAAOqN,EAAaC,EAAOnN,EAAU0E,KAMlE,MAAMgJ,EAAgC1N,EAAW,GAAKhb,KAAKif,cAAcjE,GAAYd,GAAmBc,EACxG,IAAI2N,EAAmB3oB,KAAKmc,iBAAiBnB,EAAU0E,GAEvD,MAAMzF,EAAWja,KAAKod,4BAA4BpC,GAElD,GAAGH,EAAO,CACR,IAAIsN,GAASnoB,KAAK4a,cAAcC,QAAUA,GAAS7a,KAAK4a,cAAcI,WAAaA,EAAU,CAC3Fhb,KAAK4a,cAAcC,MAAQA,EAC3B7a,KAAK4a,cAAcI,SAAWA,EAE9B,MAAM3V,EAAUrF,KAAK2a,aAAaxe,OAAO0e,GAEnCE,EAAoB,GAC1B,IAAI,MAAM3D,KAAUpX,KAAK+a,QAAS,CAChC,MAAMf,EAASha,KAAK+a,QAAQ3D,GACzB/R,EAAQujB,IAAI5O,EAAO5C,SAAW4C,EAAOqB,YAAcL,GACpDD,EAAQza,KAAK0Z,GAIjBe,EAAQ8N,MAAK,CAACC,EAAIC,IAAO/oB,KAAKghB,eAAe+H,EAAI9O,GAAYja,KAAKghB,eAAe8H,EAAI7O,KACrFja,KAAK4a,cAAcG,QAAUA,EAC7B/a,KAAK4a,cAAcE,MAAQC,EAAQ3c,OAGrCuqB,EAAmB3oB,KAAK4a,cAAcG,aAEtC/a,KAAK4a,cAAcC,MAAQ,GAG7B,IAAImO,EAAS,EACb,GAAGd,EAAc,EACf,IAAI,IAAI9pB,EAASuqB,EAAiBvqB,OAAQ4qB,EAAS5qB,KAC9C8pB,EAAcloB,KAAKghB,eAAe2H,EAAiBK,GAAS/O,MADJ+O,GAO/D,MAAMC,EAAYjpB,KAAK6e,gBAAgB6J,GACjCQ,EAAkBP,EAAiBvqB,QAAW4qB,EAASb,EAC7D,GAAGtN,GAASoO,GAAaC,EAAiB,CACxC,MAAMnO,EAAU4N,EAAiBhhB,MAAMqhB,EAAQA,EAASb,GACxD,MAAO,CACLpN,QAAAA,EACAD,MAAOmO,EAAYN,EAAiBvqB,OAAS,KAC7C+qB,SAAUR,EAAiBvqB,SAAY2c,EAAQ,IAAMA,EAAQ,KAAO4N,EAAiB,IAAO3oB,KAAKghB,eAAe2H,EAAiB,GAAI1O,GAAYiO,GACjJb,OAAQxM,GAASoO,IAAeD,EAASb,GAAUQ,EAAiBvqB,QAIxE,OAAO4B,KAAKkX,mBAAmBkS,eAAejB,EAAOO,GAAc1jB,MAAM5C,IAOvE,GALGsd,IACDiJ,EAAmB3oB,KAAKmc,iBAAiBnB,EAAU0E,IAGrDsJ,EAAS,EACNd,EAAc,EACf,IAAI,IAAI9pB,EAASuqB,EAAiBvqB,OAAQ4qB,EAAS5qB,KAC9C8pB,EAAcloB,KAAKghB,eAAe2H,EAAiBK,GAAS/O,MADJ+O,GAS/D,MAAMjO,EAAU4N,EAAiBhhB,MAAMqhB,EAAQA,EAASb,GACxD,MAAO,CACLpN,QAAAA,EACAD,WAAwBnP,IAAjBvJ,EAAO0Y,MAAsB6N,EAAiBvqB,OAASgE,EAAO0Y,MACrEqO,SAAUR,EAAiBvqB,SAAY2c,EAAQ,IAAMA,EAAQ,KAAO4N,EAAiB,IAAO3oB,KAAKghB,eAAe2H,EAAiB,GAAI1O,GAAYiO,GAEjJb,MAAOjlB,EAAOilB,W,iUC/hCtB,MAAMgC,GAAc,CAClB,CAAC,eAAgB,iBACjB,CAAC,gBAAiB,kBAClB,CAAC,gBAAiB,mBAkBL,MAAMC,WAAuBnW,EAA5C,c,oBA6ES,KAAA9O,MAASkI,IACVA,GAKFvM,KAAKyhB,QAAU,GACfzhB,KAAKupB,gBAAkB,IAAI/S,MAJ3BxW,KAAKupB,gBAAgBllB,QACrBrE,KAAKwpB,gBAMPxpB,KAAKkgB,WAtGiB,GAyGhB,KAAAuJ,qBAAwBvO,IAC3BA,EAAOzc,OACRuB,KAAK0pB,iBAAiBxO,EAAOzc,QACrBuB,KAAKyhB,QAAQvG,EAAO3c,MAE5ByB,KAAKwc,UAAU7V,cAAc,gBAAiB3G,KAAKyhB,QAAQvG,EAAO3c,YAC3DyB,KAAKyhB,QAAQvG,EAAO3c,KAG7ByB,KAAK+d,gBAAgBhW,YAAY,UAAW/H,KAAKyhB,UAG3C,KAAAkI,0BAA6BzO,IAGnClb,KAAKkgB,WAxHiB,EAyHtBhF,EAAOe,MAAM/Y,SAAQ,CAACga,EAAU1Y,KAC9B,MAAM/F,EAASuB,KAAKyhB,QAAQvE,UACrBze,EAAOyhB,WACdlgB,KAAK4pB,cAAcnrB,MAGrBuB,KAAKwc,UAAU7V,cAAc,eAAgBuU,EAAOe,OAEpDjc,KAAK+d,gBAAgBhW,YAAY,UAAW/H,KAAKyhB,UA7GzClF,QA+CR,OA9CAvc,KAAKqE,OAAM,GACXrE,KAAKyhB,QAAU,GAEfzhB,KAAK0d,kBAAkBC,2BAA2B,CAChDkM,mBAAoB7pB,KAAKypB,qBAEzBK,oBAAsB5O,IAGpB,MAAM6O,GAAa,EAAAC,GAAA,GAAKhqB,KAAKyhB,SAE7BzhB,KAAKiqB,kBAAiB,GAAMjlB,MAAMyc,IAChC,IAAI,MAAMyI,KAAaH,EAAY,CACjC,MAAM7M,GAAYgN,EACdzI,EAAQle,MAAM9E,GAAWA,EAAOF,KAAO2e,KACzCld,KAAKypB,qBAAqB,CAACnrB,EAAG,qBAAsBC,GAAI2e,IAI5Dld,KAAK2pB,0BAA0B,CAACrrB,EAAG,0BAA2B2d,MAAOwF,EAAQrd,KAAK3F,GAAWA,EAAOF,WAIxG4rB,wBAAyBnqB,KAAK2pB,4BAuBzB3pB,KAAK+d,gBAAgB5W,WAAWnC,MAAMiC,IAC3C0Q,GAAkB3X,KAAKyhB,QAASxa,EAAMwa,SAEtC,IAAI,MAAMvE,KAAYld,KAAKyhB,QAAS,CAClC,MAAMhjB,EAASuB,KAAKyhB,QAAQvE,GACzBze,EAAO+S,eAAe,eAAiB/S,EAAOyhB,YAAclgB,KAAKkgB,aAClElgB,KAAKkgB,WAAazhB,EAAOyhB,WAAa,OA2DvCQ,oBAAoB1G,EAAgBvb,GACzC,GAAGA,EAAOF,IAAM,EACd,OAAOyb,EAAOqB,YAAc5c,EAAOF,GAGrC,MAAM6Y,EAAS4C,EAAO5C,OAGtB,IAAIpX,KAAKkX,mBAAmB4E,cAAc1E,GACxC,OAAO,EAIT,GAAG3Y,EAAO2rB,eAAeC,SAASjT,GAChC,OAAO,EAIT,GAAG3Y,EAAO6rB,eAAeD,SAASjT,GAChC,OAAO,EAGT,MAAMvY,EAASJ,EAAOI,OAGtB,GAAGA,EAAO0rB,kBAAyC,IAArBvQ,EAAOqB,UACnC,OAAO,EAIT,GAAGxc,EAAO2rB,eAAiBxqB,KAAKkX,mBAAmBuT,eAAezQ,GAChE,OAAO,EAIT,GAAGnb,EAAO6rB,eAAiB1qB,KAAKogB,wBAAwBC,iBAAiBjJ,MAAa4C,EAAO2Q,wBAAyB3Q,EAAOoN,cAC3H,OAAO,EAGT,GAAGpnB,KAAK4c,gBAAgByH,UAAUjN,GAAS,CAEzC,GAAGvY,EAAO+rB,YAAc5qB,KAAK4c,gBAAgBiO,YAAYzT,GACvD,OAAO,EAIT,GAAGvY,EAAOisB,QAAU9qB,KAAK4c,gBAAgBmO,WAAW3T,GAClD,OAAO,MAEJ,CACL,MAAMoB,EAASpB,EAAO4T,WAGtB,GAAGhrB,KAAKyc,gBAAgBwO,MAAMzS,GAC5B,QAAS3Z,EAAOqsB,KAIlB,GAAGrsB,EAAOssB,eAAiBnrB,KAAKyc,gBAAgB2O,UAAU5S,GACxD,OAAO,EAIT,GAAG3Z,EAAOwsB,UAAYrrB,KAAKyc,gBAAgB2O,UAAU5S,GACnD,OAAO,EAIX,OAAO,EAGF8S,sBAAsBtR,EAAgBkD,GAC3C,OAAOld,KAAK0gB,oBAAoB1G,EAAQha,KAAKyhB,QAAQvE,IAGhD+C,UAAU/C,GACf,OAAOld,KAAKyhB,QAAQvE,GAGfwE,aACL,OAAO1hB,KAAKyhB,QAGP+H,eACL,MAAM/H,EAAUzhB,KAAK0hB,aACrB,IAAI,MAAMxE,KAAYuE,EACpBzhB,KAAKypB,qBAAqB,CACxBnrB,EAAG,qBACHC,IAAK2e,IAKEqO,gBAAgBnU,EAAgB8F,G,0CAC3C,MAAMze,EAASuB,KAAKyhB,QAAQvE,GAEtB/b,EAAQ1C,EAAOmiB,cAAcvkB,QAAQ+a,GACrC6N,GAAuB,IAAX9jB,EAOlB,GALG8jB,IACDxmB,EAAOsiB,aAAahW,OAAO5J,EAAO,GAClC1C,EAAOmiB,cAAc7V,OAAO5J,EAAO,KAGjC8jB,EAAW,CACb,GAAGxmB,EAAOsiB,aAAa3iB,eAAiB4B,KAAKqU,WAAWmX,aAAaC,0BACnE,OAAO9pB,QAAQC,OAAO,CAACnC,KAAM,4BAG/BhB,EAAOsiB,aAAa0G,QAAQznB,KAAK4c,gBAAgB8O,iBAAiBtU,IAClE3Y,EAAOmiB,cAAc6G,QAAQrQ,GAG/B,OAAOpX,KAAK6pB,mBAAmBprB,MAG1BktB,mBAAmBltB,EAAwBmtB,GAChD,MAAM9F,EAAQ3G,KAAKyD,IAAI,KAAM/mB,OAAO6X,KAAK1T,KAAKyhB,SAASrd,KAAKyB,IAAOA,KAGnE,OAFApH,GAAS,EAAAurB,GAAA,GAAKvrB,IACPF,GAAKunB,EAAQ,EACb9lB,KAAK6pB,mBAAmBprB,OAAQkN,EAAWigB,GAG7C/B,mBAAmBprB,EAAwBotB,GAAS,EAAOD,GAAU,GAC1E,MAAME,EAAQD,EAAS,EAAI,EAE3B,OAAO7rB,KAAKqU,WAAWC,UAAU,8BAA+B,CAC9DwX,MAAAA,EACAvtB,GAAIE,EAAOF,GACXE,OAAQotB,OAASlgB,EAAY3L,KAAK+rB,sBAAsBttB,KACvDuG,MAAMgnB,IAGP,GAAGA,IAODhsB,KAAKypB,qBAAqB,CACxBnrB,EAAG,qBACHC,GAAIE,EAAOF,GACXE,OAAQotB,OAASlgB,EAAYlN,IAG5BmtB,GAAS,CACV,MAAMK,EAAsB,GAC5B,IAAI,MAAM/O,KAAYld,KAAKyhB,QAAS,CAClC,MAAMhjB,EAASuB,KAAKyhB,QAAQvE,KAC1Bze,EAAOyhB,WACT+L,EAAE3rB,KAAK7B,GAGTA,EAAOyhB,WA9RS,EAgShB,MAAMjE,EAAQgQ,EAAEpD,MAAK,CAACqD,EAAGC,IAAMD,EAAEhM,WAAaiM,EAAEjM,aAAY9b,KAAK3F,GAAWA,EAAOF,KACnFyB,KAAK2pB,0BAA0B,CAC7BrrB,EAAG,0BACH2d,MAAAA,IAKN,OAAO+P,KAIJD,sBAAsBttB,GAC3B,MAAMwY,GAAI,EAAA+S,GAAA,GAAKvrB,GAOf,OAFAuB,KAAKosB,0BAA0B3tB,GAExBwY,EAGDmV,0BAA0B3tB,IAChC,EAAA6mB,GAAA,GAAe7mB,EAAO6rB,gBAAgB,CAAClT,EAAQ5S,KAC1C/F,EAAOmiB,cAAcyJ,SAASjT,KAC/B3Y,EAAO4tB,cAActhB,OAAOvG,EAAK,GACjC/F,EAAO6rB,eAAevf,OAAOvG,EAAK,OA6BjCikB,qBAAqBvL,EAAkBzd,EAA2D,gBACvG,MAAMhB,EAASuB,KAAKigB,UAAU/C,GACxBoP,EAAQ7tB,GAAUA,EAAOgB,GAC/B,KAAI6sB,MAAAA,OAAK,EAALA,EAAOluB,QACT,OAIF,MAAMmuB,EAAgBD,EAAM7tB,QAAQ+tB,IAClC,MAAMpV,GAAS,EAAAwB,GAAA,GAAU4T,GACnBC,EAAoBzsB,KAAKupB,gBAAgBX,IAAIxR,GAC7C4C,EAASha,KAAKkX,mBAAmB4E,cAAc1E,GAMrD,OADgBqV,IAAsBzS,KAIxC,IAAIuS,EAAcnuB,OAKhB,OAGF,MAAMsuB,EAAiBH,EAAcnoB,KAAKooB,IACxC,MAAMpV,GAAS,EAAAwB,GAAA,GAAU4T,GAQzB,OAPgBxsB,KAAKkX,mBAAmB0H,mBAAmB4N,GAC1DxnB,MAAMgV,IACLha,KAAKupB,gBAAgB5S,IAAIS,GAElB4C,OAASrO,EAAYyL,QAehC,OATsBzV,QAAQmR,IAAI4Z,GAAgB1nB,MAAM2nB,KACtDA,EAAiBA,EAAeluB,OAAOC,UACpBN,UAUV6rB,iBAAiB2C,GAAY,G,0CACxC,MAAMlZ,EAAO7X,OAAO6X,KAAK1T,KAAKyhB,SAC9B,OAAG/N,EAAKtV,SAAWwuB,EACVlZ,EAAKtP,KAAK8Y,GAAald,KAAKyhB,QAAQvE,KAAW2L,MAAK,CAACqD,EAAGC,IAAMD,EAAEhM,WAAaiM,EAAEjM,oBAGlElgB,KAAKqU,WAAWwY,gBAAgB,8BACvCzoB,KAAK3F,GAAWuB,KAAK0pB,iBAAiBjrB,EAAQmuB,KAAYnuB,OAAOC,YAG3EouB,6BACL,OAAO9sB,KAAKqU,WAAWC,UAAU,sCAG5BoV,iBAAiBjrB,EAAsByc,GAAS,IASrD,EAAA6R,GAAA,GAA2BtuB,GAC3B4qB,GAAYnmB,SAAQ,EAAEnC,EAAMisB,OAC1B,EAAAD,GAAA,GAA2BtuB,GAC3BA,EAAOuuB,GAAMvuB,EAAOsC,GAAMqD,KAAKkX,IAAS,EAAA1C,GAAA,GAAU0C,QAGpDtb,KAAKosB,0BAA0B3tB,GAE/BA,EAAO4tB,cAAgB5tB,EAAOsiB,aAAa7c,OAAOzF,EAAO4tB,eACzD5tB,EAAO6rB,eAAiB7rB,EAAOmiB,cAAc1c,OAAOzF,EAAO6rB,gBAE3D,MAAM2C,EAAYjtB,KAAKyhB,QAAQhjB,EAAOF,IAetC,OAdG0uB,EACDpxB,OAAOC,OAAOmxB,EAAWxuB,GAEzBuB,KAAKyhB,QAAQhjB,EAAOF,IAAME,EAG5BuB,KAAK4pB,cAAcnrB,GAEhByc,EACDlb,KAAKwc,UAAU7V,cAAc,gBAAiBlI,GACrCwuB,GACTjtB,KAAKwc,UAAU7V,cAAc,aAAclI,GAGtCA,EAGFmrB,cAAcnrB,GAChBA,EAAO+S,eAAe,cACpB/S,EAAOyhB,YAAclgB,KAAKkgB,aAC3BlgB,KAAKkgB,WAAazhB,EAAOyhB,WAAa,GAGxCzhB,EAAOyhB,WAAalgB,KAAKkgB,aAG3BlgB,KAAK+d,gBAAgBhW,YAAY,UAAW/H,KAAKyhB,U,0BCletC,SAASyL,GAAYC,EAAkBC,GAGpDA,EAAalqB,SAASmqB,IACpBxxB,OAAOyxB,oBAAoBD,EAASE,WAAWrqB,SAASjD,IACtD,MAAMsE,EAA4B1I,OAAO2xB,yBAAyBH,EAASE,UAAWttB,IAASpE,OAAOiI,OAAO,MAIvF,gBAAT7D,GAIbpE,OAAO4xB,eACLN,EAAYI,UACZttB,EACAsE,SCoBR,MAAMmpB,GAcJ5tB,cAbO,KAAA6tB,aAA6B,CAClCC,kBAAmB,GACnBC,kBAAmB,GACnBC,YAAa,KACbC,YAAa,MAGP,KAAAC,cAAqD,GACrD,KAAAC,UAAW,EAEX,KAAA9tB,KAAM,EAAAsJ,EAAA,IAAO,UAAW,WAAiB,UAAgB,KAAAD,KACzD,KAAAF,MAAQ,KA4HT,KAAA4kB,qBAAuB,CAACC,EAAoB9wB,EAE9C,MAEH,MAAM+wB,EAAc,CAClBhN,KAAM+M,EAAc/M,KACpBiN,IAAKF,EAAcE,IACnBC,SAAUH,EAAcI,WAM1B,OAFAvuB,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,uBAAwB6kB,GAE9CA,EAAc7vB,GACnB,IAAK,iBACL,IAAK,sBACH0B,KAAKwuB,qBACL,MAEF,IAAK,cACHxuB,KAAKyuB,cAAcN,EAAcjT,OAAQkT,GACzC,MAEF,IAAK,qBACL,IAAK,yBAA0B,EAC7B,EAAArB,GAAA,GAAwEoB,GACxEnuB,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,8CAA+C,OAAF,UAAM6kB,IAChF,MAAMjH,EAAQiH,EAActvB,OAAOgb,IAC7B7B,EAAUmW,EAAiD7H,UAAYY,EAAQlnB,KAAK4c,gBAAgBxF,OAAU+W,EAA6C9V,SAC3JqW,EAAQP,EAAiD/U,QAC1D+U,EAAiD/U,QAAQ3S,UAAS,GACjE0nB,EAA6C9V,QAAQ5R,UAAS,IAAUzG,KAAK4c,gBAAgBxF,OAEnGpX,KAAKyuB,cAAc,CACjBnwB,EAAG,mBACHuD,QAAS,CACPvD,EAAG,UACHO,OAAQsvB,EAActvB,OACtBN,GAAI4vB,EAAc5vB,GAClB+nB,QAAStmB,KAAK4c,gBAAgB2J,cAAcvO,EAAOvR,YACnDoS,QAAS7Y,KAAK4c,gBAAgB2J,cAAcmI,GAC5CtN,KAAM+M,EAAc/M,KACpBvf,QAASssB,EAActsB,QACvB8sB,SAAUR,EAAcQ,SACxBC,SAAUT,EAAcS,SACxBC,SAAUV,EAAcU,UAE1BpL,IAAK0K,EAAc1K,IACnBqL,UAAWX,EAAcW,WACxBV,GACH,MAGF,IAAK,kBACL,IAAK,UACHpuB,KAAKyc,gBAAgB8I,aAAa4I,EAAcnV,MAAO3b,EAAQ0xB,UAC/D/uB,KAAKud,gBAAgBiI,aAAa2I,EAAc1I,MAAOpoB,EAAQ0xB,UAE/DZ,EAAcpI,QAAQ7iB,SAASgY,IAC7Blb,KAAKyuB,cAAcvT,EAAQkT,MAE7B,MAEF,QACEpuB,KAAKG,IAAI2C,KAAK,yBAA0BqrB,KAzL5CnuB,KAAKgvB,cAAa,GAGZC,WACN,MAAMC,EAAOlvB,KACbA,KAAK2tB,aAAe,IAAIwB,MAAMnvB,KAAK2tB,aAAc,CAC/CxlB,IAAK,SAASzF,EAA2C2E,EAA8C9C,GAIrG,OAFA7B,EAAO2E,GAAO9C,EACd2qB,EAAKE,oBACE,KAKNA,mBACL,MAAMC,EAAKrvB,KAAK2tB,aAChB3tB,KAAK+d,gBAAgBhW,YAAY,UAAW,CAC1CsmB,IAAKgB,EAAGhB,IACR5K,IAAK4L,EAAG5L,IACRrC,KAAMiO,EAAGjO,OAILkO,sBACN,MAAMroB,EAAQjH,KAAK2tB,aACb4B,EAAUtoB,EAAMonB,IAAM,EACtBmB,EAAqBvoB,EAAM4mB,kBAAkB0B,GACnD,IAAIC,EACF,OAAO,EAGT,MAAMzJ,EAAUyJ,EAAmBzJ,QACnC,IAAI,IAAIlgB,EAAI,EAAGzH,EAAS2nB,EAAQ3nB,OAAQyH,EAAIzH,IAAUyH,EACpD7F,KAAKimB,WAAWF,EAAQlgB,IAqB1B,OAlBAoB,EAAMonB,IAAMmB,EAAmBnB,IAC5BmB,EAAmBpO,MAAQna,EAAMma,KAAOoO,EAAmBpO,OAC5Dna,EAAMma,KAAOoO,EAAmBpO,aAE3Bna,EAAM4mB,kBAAkB0B,IAE3BvvB,KAAKsvB,uBACProB,EAAM6mB,aACN7mB,EAAM6mB,YAAY2B,aAClBxoB,EAAMonB,KAAOpnB,EAAM6mB,YAAY2B,cAC3BxoB,EAAM6mB,YAAY4B,mBAIbzoB,EAAM6mB,YAAY2B,aAHzBvqB,aAAa+B,EAAM6mB,YAAY3oB,SAC/B8B,EAAM6mB,YAAc,QAMjB,EAGD6B,oBAAoBzM,GAC1B,MAAM0M,EAAW1M,EAAYljB,KAAKukB,gBAAgBrB,GAAaljB,KAAK2tB,aACpE,IAAIiC,EAAShC,kBAAkBxvB,OAC7B,OAAO,EAGTwxB,EAAShC,kBAAkB/E,MAAK,CAACqD,EAAGC,IAC3BD,EAAEzI,IAAM0I,EAAE1I,MAInB,IAAIoM,EAASD,EAASnM,IAClBqM,EAAU,EACVC,EAAY,EAChB,IAAI,IAAIlqB,EAAI,EAAGzH,EAASwxB,EAAShC,kBAAkBxvB,OAAQyH,EAAIzH,IAAUyH,EAAG,CAC1E,MAAMqV,EAAS0U,EAAShC,kBAAkB/nB,GAC1CgqB,GAAU3U,EAAO4T,UACde,GAAU3U,EAAOuI,MAClBqM,EAAU5U,EAAOuI,IACjBsM,EAAYlqB,GAIhB,IAAIiqB,EACF,OAAO,EAGT9vB,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,0BAA2BwmB,EAASF,EAAShC,kBAAkBjmB,MAAM,EAAGooB,EAAY,IAEjHH,EAASnM,IAAMqM,EACf,IAAI,IAAIjqB,EAAI,EAAGA,GAAKkqB,IAAalqB,EAAG,CAClC,MAAMqV,EAAS0U,EAAShC,kBAAkB/nB,GAG1C7F,KAAKimB,WAAW/K,GAalB,OAXA0U,EAAShC,kBAAkB7iB,OAAO,EAAGglB,EAAY,IAE7CH,EAAShC,kBAAkBxvB,QAAUwxB,EAAS9B,cAC5C8B,EAAS9B,YAAY2B,mBAIhBG,EAAS9B,YAAY4B,aAH5BxqB,aAAa0qB,EAAS9B,YAAY3oB,SAClCyqB,EAAS9B,YAAc,QAMpB,EAGFU,qBACDxuB,KAAK2tB,aAAaI,aACpB/tB,KAAKgwB,gBAIFC,mBAAmB/U,GACxBlb,KAAKkuB,qBAAqB,CACxB5vB,EAAG,cACH4c,OAAAA,IAwEI8U,cAAcloB,GAAQ,GAE5B,MAAM6lB,EAAe3tB,KAAK2tB,aAC1B,IAAIuC,EAAavC,EAAaI,YAC1BmC,IACFvC,EAAaE,kBAAoB,GACjCF,EAAaC,kBAAoB,IAGhCD,EAAaG,cACd5oB,aAAayoB,EAAaG,YAAY3oB,SACtCwoB,EAAaG,YAAc,MAG7B,MAAMljB,EAAU5K,KAAKqU,WAAWC,UAAU,wBAAyB,CACjEmP,IAAKkK,EAAalK,IAClB0M,gBAAiBroB,EAA+B,UAAO6D,EACvDyV,KAAMuM,EAAavM,KACnBgP,KAAM,GACL,CACDjrB,QAAS,aACRH,MAAMqrB,IAGP,GAFArwB,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,kBAAmB+mB,GAEtB,4BAAvBA,EAAiB/xB,EAIlB,OAHA0B,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,mBAAoB+mB,EAAiBhC,KAClEV,EAAavM,KAAOiP,EAAiBjP,UACrCuM,EAAaU,IAAMgC,EAAiBhC,KAStC,GAJGvmB,GACD9H,KAAKwc,UAAU7V,cAAc,uBAGL,8BAAvB0pB,EAAiB/xB,EAAmC,CACrD0B,KAAKyc,gBAAgB8I,aAAa8K,EAAiBrX,OACnDhZ,KAAKud,gBAAgBiI,aAAa6K,EAAiB5K,OAKnD4K,EAAiBC,cAAcptB,SAASgY,IACtC,OAAOA,EAAO5c,GACZ,IAAK,uBACL,IAAK,0BACL,IAAK,2BAEH,YADA0B,KAAKyuB,cAAcvT,GAIvBlb,KAAKimB,WAAW/K,MAIlBmV,EAAiBE,aAAartB,SAASstB,IACrCxwB,KAAKimB,WAAW,CACd3nB,EAAG,mBACHuD,QAAS2uB,EACT/M,IAAKkK,EAAalK,IAClBqL,UAAW,OAIf,MAAM2B,EAAmC,uBAAvBJ,EAAiB/xB,EAA6B+xB,EAAiBppB,MAAQopB,EAAiBK,mBAC1G/C,EAAaU,IAAMoC,EAAUpC,IAC7BV,EAAalK,IAAMgN,EAAUhN,IAC7BkK,EAAavM,KAAOqP,EAAUrP,UAE9BuM,EAAalK,IAAM4M,EAAiB5M,IACpCkK,EAAavM,MAAQ9R,KAAKvK,MAAQ,IAAO,GAAK/E,KAAKuhB,YAAYC,6BACxDmM,EAAaU,IAEpBruB,KAAKguB,cAAgB,GAErBhuB,KAAKG,IAAI2C,KAAK,iBAAkButB,EAAiB/xB,GACjD0B,KAAK2wB,sBAKP,GAA0B,4BAAvBN,EAAiB/xB,EAClB,OAAO0B,KAAKgwB,gBAEZhwB,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,wBAQjC,OAJI4mB,GACFlwB,KAAK4wB,UAAUjD,EAAc/iB,GAGxBA,EAGDimB,qBAAqB3N,GAC3B,MAAM4N,EAAe9wB,KAAKukB,gBAAgBrB,GACpCgN,EAAaY,EAAa/C,YAC5BmC,IACFY,EAAalD,kBAAoB,IAGhCkD,EAAahD,cACd5oB,aAAa4rB,EAAahD,YAAY3oB,SACtC2rB,EAAahD,YAAc,MAI7B,MAAMljB,EAAU5K,KAAKqU,WAAWC,UAAU,+BAAgC,CACxE+O,QAASrjB,KAAKud,gBAAgBwT,gBAAgB7N,GAC9CzkB,OAAQ,CAACH,EAAG,8BACZmlB,IAAKqN,EAAarN,IAClB0E,MAAO,IACN,CAAChjB,QAAS,aAAaH,MAAMqrB,IAI9B,GAHArwB,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,0BAA2B+mB,GACxDS,EAAarN,IAAM,QAAS4M,EAAmBA,EAAiB5M,SAAM9X,EAE5C,mCAAvB0kB,EAAiB/xB,EAApB,CAKA,GAA0B,qCAAvB+xB,EAAiB/xB,EAKlB,OAJA0B,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,wBAAyB+mB,UAC/CrwB,KAAKguB,cAAc9K,QAE1BljB,KAAKimB,WAAW,CAAC3nB,EAAG,sBAAuB6a,WAAY+J,IAyBzD,GArBAljB,KAAKyc,gBAAgB8I,aAAa8K,EAAiBrX,OACnDhZ,KAAKud,gBAAgBiI,aAAa6K,EAAiB5K,OAGnDzlB,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,WAAY+mB,EAAiBC,cAAclyB,OAAQ,yBAChFiyB,EAAiBC,cAAcptB,SAASgY,IACtClb,KAAKimB,WAAW/K,MAGlBlb,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,WAAY+mB,EAAiBE,aAAanyB,OAAQ,wBAC/EiyB,EAAiBE,aAAartB,SAASstB,IACrCxwB,KAAKimB,WAAW,CACd3nB,EAAG,0BACHuD,QAAS2uB,EACT/M,IAAKqN,EAAarN,IAClBqL,UAAW,OAIf9uB,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,qBAAsBwnB,EAAarN,KAEtC,8BAAvB4M,EAAiB/xB,IACjB+xB,EAAiBxxB,OAAc,MAChC,OAAOmB,KAAK6wB,qBAAqB3N,GAEjCljB,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,kCArC7BtJ,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,2BAA4B+mB,MA6C7D,OAJIH,GACFlwB,KAAK4wB,UAAUE,EAAclmB,EAASsY,GAGjCtY,EAGD+lB,sBACN3wB,KAAKyc,gBAAgBpY,QACrBrE,KAAKud,gBAAgBlZ,QACrBrE,KAAKkX,mBAAmB7S,QAExBrE,KAAKwc,UAAU7V,cAAc,iBAGvBiqB,UAAU3pB,EAAqB2D,EAAsCsY,GAC3Ejc,EAAM8mB,YAAcnjB,EACpB5K,KAAKwc,UAAU7V,cAAc,sBAAuBuc,GAEpDtY,EAAQ5F,MAAK,KACXiC,EAAM8mB,YAAc,KACpB/tB,KAAKwc,UAAU7V,cAAc,qBAAsBuc,MAClD,KACDjc,EAAM8mB,YAAc,QAIjBjG,gBAAgB5E,EAAmBO,GACxC,IAAIA,EACF,MAAM,IAAIxX,MAAM,iCAAmCiX,GAGrD,QAAKA,KAAaljB,KAAKguB,iBACrBhuB,KAAKguB,cAAc9K,GAAa,CAC9BO,IAAAA,EACAmK,kBAAmB,GACnBE,YAAa,KACbC,YAAa,OAGR,GAMJxJ,gBAAgBrB,EAAmBO,GAKxC,YAJqC9X,IAAlC3L,KAAKguB,cAAc9K,IACpBljB,KAAK8nB,gBAAgB5E,EAAWO,GAG3BzjB,KAAKguB,cAAc9K,GAGpBuL,cAAcvT,EAAgB7d,EAKjC,I,MACH,IAAI6lB,EACJ,OAAOhI,EAAO5c,GACZ,IAAK,0BACL,IAAK,2BACH4kB,GAAY,EAAAtK,GAAA,GAAUsC,EAAOrZ,QAAQgX,SAASuK,WAC9C,MAIF,IAAK,uBAEH,GADAF,EAAYhI,EAAO/B,aACd+J,KAAaljB,KAAKguB,eACrB,OAAO,EAET,MACF,QACK,eAAgB9S,GAAU,QAASA,IACpCgI,EAAYhI,EAAO/B,YAKzB,MAAM,IAACsK,EAAG,UAAEqL,GAAa5T,EACnB0U,EAAW1M,EAAYljB,KAAKukB,gBAAgBrB,EAAWO,GAAOzjB,KAAK2tB,aAIzE,GAAGiC,EAAS7B,YACV,OAAO,EAGT,GAAgB,yBAAb7S,EAAO5c,EAMR,QALIsxB,EAASoB,mBACTpB,EAASoB,kBAAqB1hB,KAAKvK,MA3c1B,IA6cX/E,KAAK6wB,qBAAqB3N,IAErB,EAGT,GAAgB,qBAAbhI,EAAO5c,GACO,sBAAb4c,EAAO5c,GACM,4BAAb4c,EAAO5c,GACM,6BAAb4c,EAAO5c,EAAkC,CAC3C,MAAMuD,EAAUqZ,EAAOrZ,QACjB4E,GAAW,EAAAmS,GAAA,GAAU/W,EAAQgX,SAC7BoY,EAA+CpvB,EAAQ8sB,UAAY,GACzE,IAAIuC,EACJ,GAAGrvB,EAAQykB,UAAYtmB,KAAKyc,gBAAgB0U,SAAQ,EAAAvY,GAAA,GAAU/W,EAAQykB,SAAUzkB,EAAQhD,OAAOuyB,QAA2BF,EAAS,WAC/HD,EAAU3K,UAAYtmB,KAAKyc,gBAAgB0U,SAAQ,EAAAvY,GAAA,GAAUqY,EAAU3K,WAAa2K,EAAU3K,QAA6BnN,cAAgB+X,EAAS,eAC7G,QAAvC,EAACD,EAAU3K,eAA4B,eAAEnN,cAAenZ,KAAKud,gBAAgB8T,QAASJ,EAAU3K,QAA6BnN,YAAY,KAAU+X,EAAS,eAC5JzqB,EAAS6qB,WAAatxB,KAAKyc,gBAAgB0U,QAAQ1qB,KAAcyqB,EAAS,gBAC1EzqB,EAAS4d,cAAgBrkB,KAAKud,gBAAgB8T,QAAQ5qB,EAAS2c,cAAgB8N,EAAS,eAO1F,OANAlxB,KAAKG,IAAI2C,KAAK,qCAAsC2D,EAAUyqB,EAAQrvB,GACnEqhB,GAAaljB,KAAKud,gBAAgB8T,QAAQnO,GAC3CljB,KAAK6wB,qBAAqB3N,GAE1BljB,KAAKwuB,sBAEA,OAEJ,GAAGtL,IAAcljB,KAAKud,gBAAgB8T,QAAQnO,GAEnD,OAAO,EAGT,IAAIqO,EACAC,EAEJ,GAAG/N,EAAK,CAEN,GADemM,EAASnM,KAAOqL,GAAa,GAChCrL,EAsBV,OArBAzjB,KAAKsJ,OAAStJ,KAAKG,IAAI2C,KAAK,WAAY8sB,EAAU1U,EAAQgI,GAAaljB,KAAKud,gBAAgBC,QAAQ0F,IACpG0M,EAAShC,kBAAkBttB,KAAK4a,GAC5B0U,EAAS9B,aAAgB8B,EAAS7B,cACpC6B,EAAS9B,YAAc,CACrB3oB,QAASwK,EAAA,cAAe,KACtBigB,EAAS9B,YAAc,KAEpB8B,EAAS7B,cAIT7K,EACDljB,KAAK6wB,qBAAqB3N,GAE1BljB,KAAKgwB,mBAhgBF,KAsgBXJ,EAAS9B,YAAY4B,aAAc,GAC5B,EAGT,GAAGjM,EAAMmM,EAASnM,IAChBmM,EAASnM,IAAMA,EACf8N,GAAS,EAET3B,EAASoB,kBAAoB1hB,KAAKvK,WAC7B,GAAG+pB,EAER,OAAO,EAGN5L,GAAa7lB,EAAQ+jB,MAAQphB,KAAK2tB,aAAavM,KAAO/jB,EAAQ+jB,OAC/DphB,KAAK2tB,aAAavM,KAAO/jB,EAAQ+jB,WAE9B,IAAI8B,GAAa7lB,EAAQgxB,IAAM,EAAG,CACvC,MAAMA,EAAMhxB,EAAQgxB,IACdC,EAAWjxB,EAAQixB,UAAYD,EAErC,GAAGC,IAAasB,EAASvB,IAAM,GAC1BC,EAAWsB,EAASvB,IA0BrB,OAzBAruB,KAAKsJ,OAAStJ,KAAKG,IAAI2C,KAAK,WAAY8sB,EAAUA,EAAS9B,aAAe8B,EAAS9B,YAAY2B,kBAEnD9jB,IAAzCikB,EAAS/B,kBAAkBS,KAC5BsB,EAAS/B,kBAAkBS,GAAY,CAACD,IAAAA,EAAKjN,KAAM/jB,EAAQ+jB,KAAM2E,QAAS,KAE5E6J,EAAS/B,kBAAkBS,GAAUvI,QAAQzlB,KAAK4a,GAE9C0U,EAAS9B,cACX8B,EAAS9B,YAAc,CACrB3oB,QAASwK,EAAA,cAAe,KACtBigB,EAAS9B,YAAc,KAEpB8B,EAAS7B,aAIZ/tB,KAAKgwB,kBA7iBF,OAkjBLJ,EAAS9B,YAAY2B,aACvBG,EAAS9B,YAAY2B,YAAcnB,KACnCsB,EAAS9B,YAAY2B,YAAcnB,IAE9B,EAIRsB,EAASvB,MAAQA,IAClBuB,EAASvB,IAAMA,EACZhxB,EAAQ+jB,MAAQwO,EAASxO,KAAO/jB,EAAQ+jB,OACzCwO,EAASxO,KAAO/jB,EAAQ+jB,MAG1BoQ,GAAS,GAIbxxB,KAAKimB,WAAW/K,GAEbqW,EACDvxB,KAAK2vB,oBAAoBzM,GACjBsO,GACRxxB,KAAKsvB,sBAIFrJ,WAAW/K,GAEhBlb,KAAK2G,cAAcuU,EAAO5c,EAAG4c,GAGxBuW,OAAOC,GACT1xB,KAAKiuB,WAIRjuB,KAAKG,IAAI,UAETH,KAAKiuB,UAAW,EAEhBjuB,KAAK+d,gBAAgB5W,WAAWnC,MAAK,EAAE+gB,QAAS9e,MAC9C,MAAMjE,EAAahD,KAAK+d,gBAAgB/a,WAGpCiE,GAAUA,EAAMwc,KAAQxc,EAAMma,MAiChCvlB,OAAOC,OAAOkE,KAAK2tB,aAAc1mB,GAEjCjH,KAAKG,IAAI,sBAAuBtE,OAAOC,OAAO,GAAImL,IAElDjH,KAAKgwB,eAAc,KApCnBhwB,KAAKG,IAAI,sBAETH,KAAK2tB,aAAaI,YAAc,IAAIpsB,SAASM,IAC3CjC,KAAKqU,WAAWC,UAAU,mBAAoB,GAAI,CAACqd,YAAY,IAAO3sB,MAAM4sB,IAC1E5xB,KAAK2tB,aAAaU,IAAMuD,EAAYvD,IACpCruB,KAAK2tB,aAAalK,IAAMmO,EAAYnO,IACpCzjB,KAAK2tB,aAAavM,KAAOwQ,EAAYxQ,KACrCphB,KAAKovB,mBAEHpvB,KAAK2tB,aAAaI,YAAc,KAChC9rB,WAiCRjC,KAAKqU,WAAWwd,oBAAoB7xB,KAAKkuB,sBAGvCluB,KAAKivB,WAGJjsB,GACDhD,KAAK2tB,aAAaI,YAAY/oB,MAAK,KAAW,O,EAAA,K,OAAA,E,EAAA,YAC5C,MAAM8sB,EAA+B,CACnCC,GAAI,yBACJC,GAAI,sBAGAC,EAAgBC,IACpBroB,MAAM,cAAcqoB,KAAQlvB,EAAWwE,MAAM,KAAK,SACjDxC,MAAMmtB,GAAwB,MAAfA,EAAIzrB,QAAkByrB,EAAIC,IAAMD,EAAIn1B,QAAW2E,QAAQC,WACtEoD,MAAMhI,IACL,MAAMq1B,EAAUP,EAAKI,IAASJ,EAAKC,GAGnC/0B,EAFY,iBAAiB,cAAcq1B,KAAWrvB,UAEzChG,EAEb,MAAM6xB,EAA4B,GAG5B3T,EAA2C,CAC/C5c,EAAG,4BACHuwB,SAAAA,EACAhtB,SALc,EAAAywB,GAAA,GAAct1B,EAAM6xB,GAMlCpvB,KAAM,QACNZ,OAAQ,GACR0zB,WAAYjjB,KAAKvK,MAAQ,IAAO,EAChCoT,WAAOxM,GAGT3L,KAAKiwB,mBAAmB/U,OAItBsX,GAAY,EAAAC,GAAA,GAAa,CAACf,EAAU,OAC1C,IAAI,MAAMgB,KAAYF,EACpB,UACQP,EAAaS,GACnB,MACA,MAAMnoB,M,YArCkC,K,sRAkDtD2iB,GAAYQ,GAAmB,CAAC,IAAmBva,IChuB5C,MAAMwf,WAA0Bxf,EAAvC,c,oBACU,KAAAyf,gBAIJ,GAEMrW,QACRvc,KAAKwc,UAAUhW,iBAAiB,iBAAkB4Q,IAChDpX,KAAK6yB,uBAAuBzb,MAIzB0b,eAAe1b,EAAgBtD,GACpC,MAAMif,EAAQ/yB,KAAK4yB,gBAAgBxb,GACnC,YAAYzL,IAATmI,IACQif,KAGDA,IAASA,EAAMjf,IAAWif,EAAMjf,aAAiBnS,SAGtDkxB,uBAAuBzb,GACzBpX,KAAK4yB,gBAAgBxb,WACfpX,KAAK4yB,gBAAgBxb,GAIzB4b,WAAW5b,EAAgB6b,EAAgEnf,GAChG,IAAIif,EAAQ/yB,KAAK4yB,gBAAgBxb,GACjC,GAAI2b,GAAUA,EAAMjf,GAkClB,OAAOif,EAAMjf,GAlCY,CACrBif,IACFA,EAAQ/yB,KAAK4yB,gBAAgBxb,GAAU,IAIzC,MAAM8b,EAAsE,CAC1E50B,EAAG,6BACHO,OAAQ,GACRyc,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CxY,SAAUq0B,EAAMr0B,UAGZu0B,EAAmC,CAACzqB,KAAMuqB,EAAMG,MAAOl1B,SAAUg1B,GAC3D,cAATpf,IACDof,EAAsBr0B,OAAOC,KAAM,EACnCq0B,EAAgBE,UAAY,QAS9B,MAAMzoB,EAAU5K,KAAKszB,eAAe5hB,SAASyhB,GAC7C,OAAOJ,EAAMjf,GAAQlJ,EAAQ5F,MAAMuuB,GAC1BR,EAAMjf,GAAQ0f,IAAIC,gBAAgBF,O,qTCrD1C,MAAMG,WAAwBvgB,EAGzBoJ,QACRvc,KAAK2zB,MAAQ,IAAInrB,IAEbxC,IAAiB4tB,mBAIrB5zB,KAAK0d,kBAAkBC,2BAA2B,CAChDkW,gBAAkB3Y,IAChBlb,KAAK8zB,SAAS5Y,EAAO6Y,aAGvBC,6BAA+B9Y,IAC7Blb,KAAKwc,UAAU7V,cAAc,iBAAkB,CAACstB,OAAQ/Y,EAAOgZ,cAAe3oB,KAAM2P,EAAO3P,UAK1F4oB,WAAWC,EAAiBlI,EAAemI,GAChD,OAAOr0B,KAAKgV,aAAaC,aAAa,iBAAkBmf,EAAKlI,EAAGmI,GAG3DP,SAASQ,GACd,MAAMC,EAAyB,uBAAXD,EAAKh2B,EACnBk2B,EAAUx0B,KAAK2zB,MAAMjvB,IAAI4vB,EAAK/1B,IAiBpC,OAhBGi2B,GAED7c,GAAkB6c,EAASF,GAGxBC,GACDv0B,KAAK2zB,MAAM5vB,OAAOuwB,EAAK/1B,IAGzB+1B,EAAOE,GACED,GACTv0B,KAAK2zB,MAAMxrB,IAAImsB,EAAK/1B,GAAI+1B,GAG1Bt0B,KAAKwc,UAAU7V,cAAc,cAAe2tB,GAErCA,EAGFG,QAAQR,GACb,OAAOj0B,KAAK2zB,MAAMjvB,IAAIuvB,GAGjBS,aAAan2B,GAClB,MAAM+1B,EAAOt0B,KAAKy0B,QAAQl2B,GAC1B,MAAO,CACLD,EAAG,iBACHC,GAAI+1B,EAAK/1B,GACTo2B,YAAaL,EAAKK,aAIfC,mBAAmBC,GAExB,OADA70B,KAAKyc,gBAAgB8I,aAAasP,EAAe7b,OAC1ChZ,KAAK8zB,SAASe,EAAed,YAG/Be,aACL,OAAO90B,KAAKqU,WAAWC,UAAU,uBAAwB,CACvD1Y,QAAS,EACTm5B,cAAe,MACd/vB,MAAMgwB,GACAh1B,KAAKgV,aAAaC,aAAa,cAAe+f,KAY5CC,YAAYzc,EAAgB0c,EAA6BC,EAAsBC,G,0CAC1F,MAAMP,QAAuB70B,KAAKqU,WAAWC,UAAU,oBAAqB,CAC1E+D,QAASrY,KAAKyc,gBAAgB4Y,aAAa7c,GAC3C0c,SAAUA,EACVE,MAAOA,EACPE,WAAW,QAAe,IAC1BH,SAAUA,IAGZ,OAAOn1B,KAAK40B,mBAAmBC,MAGpBU,YAAYtB,EAAgBuB,EAAkBtE,EAAqCkE,G,0CAC9F,IAAIp1B,KAAKy0B,QAAQR,GACf,OAGF,MAAMlO,QAAgB/lB,KAAKqU,WAAWC,UAAU,oBAAqB,CACnE8gB,MAAAA,EACA9Z,KAAMtb,KAAK00B,aAAaT,GACxBuB,SAAAA,EACAtE,OAAQ,CACN5yB,EAAG4yB,GAELuE,cAAe,MAGjBz1B,KAAK0d,kBAAkBwQ,qBAAqBnI,OC3HhD,MAAM2P,GAAY,IAAIlf,IAAI,CACxB,MACA,MACA,SAGImf,GAAS,IAAInf,IAEZ,SAASof,GAAqBC,GAEnC,OAAOA,EAAQtyB,MAAM2tB,GAAWwE,GAAU9M,IAAIsI,EAAO10B,YAAcm5B,GAAO/M,IAAIsI,EAAOA,UAGhF,SAAS4E,GAAaD,GAC3B,QAASD,GAAqBC,G,0BCSzB,MAAME,WAAwB5iB,EAArC,c,oBAqES,KAAA9O,MAAQ,CAACkI,GAAO,KACrB,GAAIA,EAcFvM,KAAKylB,MAAQ,QAbb,IAAI,MAAMpM,KAAUrZ,KAAKylB,MACnBpM,IACArZ,KAAKmkB,aAAa6R,aAAa3c,EAAO5S,UAAS,MAMjDzG,KAAK0D,QAAQK,OAAOsV,UACbrZ,KAAKylB,MAAMpM,MA4SlB,KAAA4c,cAAgB,CAAC5c,EAAgB0M,K,MAGvC/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,IACzB,QAAhB,EAAAA,MAAAA,OAAO,EAAPA,EAASA,eAAO,eAAE3nB,SAAU4B,KAAKmjB,UAAU9J,IAC5CrZ,KAAKwc,UAAU7V,cAAc,0BAA2B0S,IAzXlDkD,QA0BR,OAzBAvc,KAAKqE,OAAM,GAEXrE,KAAK0d,kBAAkBC,2BAA2B,CAOhDuY,yBAA2Bhb,IACzBlb,KAAKqU,WAAW8hB,WAAW,4BAA6BzhB,GAC9CA,EAAO2O,QAAsClK,aAAe+B,EAAO/B,cAI/Eid,8BAAgClb,IAC9B,MAAM7B,GAAS,EAAAT,GAAA,GAAUsC,EAAOI,MAAM8H,WAChC9F,EAAkBtd,KAAKylB,MAAMpM,GAChCiE,IACDA,EAAK+Y,sBAAwBnb,EAAOmb,sBACpCr2B,KAAKwc,UAAU7V,cAAc,cAAe0S,OAK3C1X,QAAQmR,IAAI,CACjB9S,KAAK+d,gBAAgB5W,WACrBnH,KAAKge,mBAAmB7J,YAAY,WACnCnP,MAAK,EAAEiC,GAAQ5B,QAASogB,EAAO/hB,QAAAA,OAGhC,GAFA1D,KAAK0D,QAAUA,EAEZ+hB,EAAMrnB,OACP,IAAI,IAAIyH,EAAI,EAAGzH,EAASqnB,EAAMrnB,OAAQyH,EAAIzH,IAAUyH,EAAG,CACrD,MAAMyX,EAAOmI,EAAM5f,GAChByX,IACDtd,KAAKylB,MAAMnI,EAAK/e,IAAM+e,GAK5Btd,KAAKmkB,aAAa3d,iBAAiB,cAAe4Q,IAC7CA,EAAOka,UAAYtxB,KAAK0D,QAAQ4yB,aAAalf,EAAOgM,aAIvDpjB,KAAK0D,QAAQyE,IAAI,CACf,CAACiP,EAAOgM,YAAapjB,KAAKwd,QAAQpG,EAAOgM,iBAI7CpjB,KAAKmkB,aAAa3d,iBAAiB,gBAAiB4Q,KAC/CA,EAAOka,UAAatxB,KAAK0D,QAAQ4yB,aAAalf,EAAOgM,aAIxDpjB,KAAK0D,QAAQK,OAAOqT,EAAOgM,kBAwB1BoC,aAAa+Q,EAAiBxH,GAC/BwH,EAAiBxD,QACpBwD,EAAiBxD,OAAQ,EAC1BwD,EAASrzB,SAASoa,GAAStd,KAAKw2B,YAAYlZ,EAAMyR,MAG7CyH,YAAYlZ,EAAYyR,G,QAC7B,GAAc,cAAXzR,EAAKhf,EAAmB,OAQ3B,MAAMm4B,EAAyCz2B,KAAKylB,MAAMnI,EAAK/e,IAU/D,QAJkCoN,IAA9B2R,EAAmBze,SACpBye,EAAmBze,OAAS,IAG3Bye,EAAsBze,OAAOugB,UAAmBzT,IAAZ8qB,EACtC,OAGY,YAAXnZ,EAAKhf,QACwBqN,IAA5B2R,EAAKoZ,yBACO/qB,IAAZ8qB,GACCA,EAAyBC,qBAC5BpZ,EAAKoZ,mBAAsBD,EAAyBC,oBAQtD,IAAIC,GAAe,EAAOC,GAAe,OAC1BjrB,IAAZ8qB,EACDz2B,KAAKylB,MAAMnI,EAAK/e,IAAM+e,IAEkD,QAApD,EAACmZ,EAAsBxD,aAA6B,eAAEr0B,aACL,QAAjD,EAAC0e,EAAmB2V,aAA6B,eAAEr0B,YAErE+3B,GAAe,GAGdF,EAAQI,QAAUvZ,EAAKuZ,QACxBD,GAAe,GAGjBjf,GAAkB8e,EAASnZ,GAC3Btd,KAAKwc,UAAU7V,cAAc,cAAe2W,EAAK/e,KAGnD,MAAM6Y,EAASkG,EAAK/e,GAAGkI,UAAS,GAC7BkwB,GACD32B,KAAKwc,UAAU7V,cAAc,gBAAiByQ,GAG7Cwf,GACD52B,KAAKwc,UAAU7V,cAAc,kBAAmByQ,GAG/CpX,KAAKmkB,aAAa6R,aAAa5e,IAChCpX,KAAK0D,QAAQyE,IAAI,CACf,CAACmV,EAAK/e,IAAK+e,IAKVE,QAAQjf,GACb,OAAOyB,KAAKylB,MAAMlnB,IAAO,CAACD,EAAG,YAAaC,GAAAA,EAAIioB,SAAS,EAAMmO,YAAa,GAAI91B,OAAQ,IAGjFi4B,aAAav4B,GAClB,OAAOyB,KAAKwd,QAAQjf,GAWfw4B,UAAUx4B,EAAYua,EAAoBke,EAA6CC,GAC5F,OAAO,EAAAF,GAAA,GAAU/2B,KAAKwd,QAAQjf,GAAKua,EAAQke,EAAQC,GAG9CC,4BAA4B34B,EAAY44B,GAC7C,MAAM7Z,EAAkBtd,KAAKwd,QAAQjf,GACrC,OAAG+e,EAAK+Y,uBACH/Y,EAAK+Y,sBAAsBe,aAAeD,EAAcC,aAAc,EAAA1gB,EAAA,GAAU4G,EAAK+Y,sBAAsBx3B,OAAQs4B,EAAct4B,QAC3H8C,QAAQM,UAIZjC,KAAKqU,WAAWC,UAAU,uCAAwC,CACvEgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBntB,EAAGkI,UAAS,IACxD0wB,cAAAA,IACCnyB,KAAKhF,KAAKi2B,cAAc9X,KAAKne,KAAMzB,IAejC4kB,UAAU5kB,GACf,MAAM+e,EAAOtd,KAAKylB,MAAMlnB,GACxB,SAAU+e,GAAoB,YAAXA,EAAKhf,GAA8B,qBAAXgf,EAAKhf,GAG3C+4B,YAAY94B,G,MAKjB,MAAM+e,EAAatd,KAAKylB,MAAMlnB,GAC9B,SAAuC,QAA9B,EAAC+e,MAAAA,OAAI,EAAJA,EAAuBze,cAAM,eAAEy4B,WAGpCzM,YAAYtsB,GACjB,OAAOyB,KAAKmjB,UAAU5kB,KAAQyB,KAAKq3B,YAAY94B,GAG1Cg5B,SAASh5B,GACd,IAAIi5B,GAAO,EACX,MAAMla,EAAatd,KAAKwd,QAAQjf,GAUhC,OATc,qBAAX+e,EAAKhf,GACQ,kBAAXgf,EAAKhf,GACM,cAAXgf,EAAKhf,GACJgf,EAAmBze,OAAO8G,MAE1B2X,EAAmBze,OAAO8nB,eAC9B6Q,GAAO,GAGFA,EAGFzG,gBAAgBxyB,GACrB,MAAM+e,EAAatd,KAAKwd,QAAQjf,GAChC,MAAc,cAAX+e,EAAKhf,GAAuBgf,EAAsBqX,YAK5C,CACLr2B,EAAG,eACH6a,WAAY5a,EACZo2B,YAAcrX,EAAsBqX,aAA+C,KAP9E,CACLr2B,EAAG,qBAWFm5B,aAAal5B,GAClB,OAAOyB,KAAKmjB,UAAU5kB,GAAMyB,KAAK03B,oBAAoBn5B,GAAMyB,KAAK23B,iBAAiBp5B,GAG5Eo5B,iBAAiBp5B,GACtB,MAAO,CACLD,EAAG,gBACH8a,QAAS7a,GAINm5B,oBAAoBn5B,GACzB,MAAO,CACLD,EAAG,mBACH6a,WAAY5a,EACZo2B,YAAa30B,KAAKwd,QAAQjf,GAAIo2B,aAA+C,GAI1EtD,QAAQ9yB,EAAYq5B,GACzB,MAAMta,EAAOtd,KAAKylB,MAAMlnB,GACxB,OAAO,EAAA4iB,GAAA,GAAS7D,KAAUsa,IAAata,EAAKze,OAAOugB,KAG9CyY,aAAat5B,GAClB,MAAM+e,EAAkBtd,KAAKwd,QAAQjf,GAErC,OAAO+e,GAAQA,EAAK2V,OAAS,CAC3B30B,EAAG,kBAIAw5B,cAAcv5B,GACnB,MAAM+e,EAAOtd,KAAKwd,QAAQjf,GAC1B,OAAGyB,KAAKmjB,UAAU5kB,IACRyB,KAAKq3B,YAAY94B,GAAM,IAAM,KAAOA,EAAK,IAAM+e,EAAKqX,YAEvD,IAAMp2B,EAuDRw5B,cAAc16B,GACnB,OAAO2C,KAAKqU,WAAWC,UAAU,yBAA0BjX,GAAS2H,MAAM+gB,IACxE/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,GAEzBA,EAAgBN,MAAM,GAAGlnB,MAKzCy5B,gBAAgBz5B,EAAYwa,GACjC,MAAMkf,EAAQj4B,KAAK+wB,gBAAgBxyB,GAC7B25B,EAAcnf,EAAQ3U,KAAK+zB,GAAMn4B,KAAKyc,gBAAgB4Y,aAAa8C,KAEzE,OAAOn4B,KAAKqU,WAAWC,UAAU,2BAA4B,CAC3D+O,QAAS4U,EACTjf,MAAOkf,IACNlzB,KAAKhF,KAAKi2B,cAAc9X,KAAKne,KAAMzB,IAGjC65B,WAAWvB,EAAe9d,GAC/B,OAAO/Y,KAAKqU,WAAWC,UAAU,sBAAuB,CACtD0E,MAAOD,EAAQ3U,KAAK+zB,GAAMn4B,KAAKyc,gBAAgB4Y,aAAa8C,KAC5DtB,MAAAA,IACC7xB,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,GAE5BA,EAAmCN,MAAM,GAAGlnB,MAczD85B,aAAa95B,GAClB,OAAOyB,KAAKqU,WAAWC,UAAU,wBAAyB,CACxD+O,QAASrjB,KAAK+wB,gBAAgBxyB,KAC7ByG,KAAKhF,KAAKi2B,cAAc9X,KAAKne,KAAMzB,IAGjC+5B,YAAY/5B,GACjB,OAAOyB,KAAKqU,WAAWC,UAAU,uBAAwB,CACvD+O,QAASrjB,KAAK+wB,gBAAgBxyB,KAC7ByG,KAAKhF,KAAKi2B,cAAc9X,KAAKne,KAAMzB,IAGjCg6B,YAAYh6B,EAAYia,EAAgBggB,EAAW,KACxD,OAAOx4B,KAAKqU,WAAWC,UAAU,uBAAwB,CACvD8E,QAAS7a,EACT8Z,QAASrY,KAAKyc,gBAAgB4Y,aAAa7c,GAC3CigB,UAAWD,IACVxzB,KAAKhF,KAAKi2B,cAAc9X,KAAKne,KAAMzB,IAGjCm6B,eAAen6B,EAAYia,GAChC,OAAOxY,KAAKqU,WAAWC,UAAU,0BAA2B,CAC1D8E,QAAS7a,EACT8Z,QAASrY,KAAKyc,gBAAgB4Y,aAAa7c,KAC1CxT,KAAKhF,KAAKi2B,cAAc9X,KAAKne,KAAMzB,IAGjCo6B,UAAUp6B,GACf,OAAOyB,KAAK04B,eAAen6B,EAAIyB,KAAKyc,gBAAgBC,UAAUne,IAGzDq6B,MAAMr6B,GACX,OAAOyB,KAAKmjB,UAAU5kB,GAAMyB,KAAKq4B,aAAa95B,GAAMyB,KAAK24B,UAAUp6B,GAG9DwF,OAAOxF,GACZ,OAAOyB,KAAKmjB,UAAU5kB,GAAMyB,KAAK64B,cAAct6B,GAAMyB,KAAK84B,WAAWv6B,GAGhEs6B,cAAct6B,GACnB,OAAOyB,KAAKqU,WAAWC,UAAU,yBAA0B,CACzD+O,QAASrjB,KAAK+wB,gBAAgBxyB,KAC7ByG,KAAKhF,KAAKi2B,cAAc9X,KAAKne,KAAMzB,IAGjCu6B,WAAWv6B,GAEd,OAAOyB,KAAKqU,WAAWC,UAAU,sBAAuB,CACtD8E,QAAS7a,IAKRw6B,YAAYx6B,GACjB,MAAM+e,EAAatd,KAAKwd,QAAQjf,GAChC,MAAc,YAAX+e,EAAKhf,EAAwBqD,QAAQM,QAAQqb,EAAK/e,IAC9CyB,KAAKqU,WAAWC,UAAU,uBAAwB,CACvD8E,QAAS7a,IACRyG,MAAM+gB,IACP/lB,KAAKi2B,cAAc13B,EAAIwnB,GACeA,EAA4BA,QAAQxiB,MAAM40B,GAAc,kBAARA,EAAE75B,IAC1E6a,cAIX6f,eAAez6B,EAAY06B,GAChC,OAAOj5B,KAAKqU,WAAWC,UAAU,0BAA2B,CAC1D+O,QAASrjB,KAAK+wB,gBAAgBxyB,GAC9B06B,SAAAA,IACCj0B,MAAMgnB,IACJA,IAC0BhsB,KAAKwd,QAAQjf,GACnC06B,SAAWA,GAGXjN,KAIJkN,UAAU36B,EAAY46B,GAC3B,MAAMC,EAAiC,CACrC96B,EAAG,yBACH+6B,KAAMF,GAGR,IAAIvuB,EAaJ,OAXEA,EADC5K,KAAKmjB,UAAU5kB,GACNyB,KAAKqU,WAAWC,UAAU,qBAAsB,CACxD+O,QAASrjB,KAAK+wB,gBAAgBxyB,GAC9B00B,MAAOmG,IAGCp5B,KAAKqU,WAAWC,UAAU,yBAA0B,CAC5D8E,QAAS7a,EACT00B,MAAOmG,IAIJxuB,EAAQ5F,MAAM+gB,IACnB/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzCuT,UAAU/6B,EAAYs4B,GAC3B,IAAIjsB,EAcJ,OAXEA,EADC5K,KAAKmjB,UAAU5kB,GACNyB,KAAKqU,WAAWC,UAAU,qBAAsB,CACxD+O,QAASrjB,KAAK+wB,gBAAgBxyB,GAC9Bs4B,MAAAA,IAGQ72B,KAAKqU,WAAWC,UAAU,yBAA0B,CAC5D8E,QAAS7a,EACTs4B,MAAAA,IAIGjsB,EAAQ5F,MAAM+gB,IACnB/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzCwT,UAAUh7B,EAAYi7B,GAC3B,MAAMpiB,EAAS7Y,EAAGkI,UAAS,GAC3B,OAAOzG,KAAKqU,WAAWC,UAAU,yBAA0B,CACzDgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CoiB,MAAAA,IACCx0B,MAAMgnB,IACJA,GACDhsB,KAAKwc,UAAU7V,cAAc,gBAAiByQ,GAGzC4U,KAIJyN,WAAWl7B,EAAYm7B,EAA0CvC,GACtE,MAAM/f,EAAiC,iBAAlB,EAA6BsiB,GAAc,EAAAC,GAAA,GAAqBD,GACrF,OAAO15B,KAAKqU,WAAWC,UAAU,sBAAuB,CACtD+O,QAASrjB,KAAK+wB,gBAAgBxyB,GAC9Bm7B,YAAa15B,KAAK4c,gBAAgB8O,iBAAiBtU,GACnD+f,cAAAA,IACCnyB,MAAM+gB,IAGP,GAFA/lB,KAAKi2B,cAAc13B,EAAIwnB,GAEI,iBAAlB,EAA4B,CACnC,MAAM6T,EAAYtqB,KAAKvK,MAAQ,IAAO,EACtC/E,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,2BACH6a,WAAY5a,EACZ6iB,KAAMwY,EACNC,cAAUluB,EACVykB,SAAKzkB,EACL0M,QAASjB,EACT0iB,iBAAkBJ,EAClBK,gBAAiBl+B,OAAO6X,KAAKyjB,EAAct4B,QAAQT,OAAS,CAC1DE,EAAG,2BACH8iB,KAAMwY,EACNzC,cAAAA,EACA6C,UAAWh6B,KAAKyc,gBAAgBC,UAAUne,GAC1C+c,KAAMtb,KAAK4c,gBAAgB2J,cAAcnP,GACzCvY,OAAQ,SACN8M,QAMLsuB,oCAAoC17B,EAAYm7B,GACrD,OAAO15B,KAAKy5B,WAAWl7B,EAAIm7B,EAAa,CACtCp7B,EAAG,mBACH84B,WAAY,EACZv4B,OAAQ,KAILq7B,gBAAgB37B,EAAYm7B,GACjC,OAAO15B,KAAKy5B,WAAWl7B,EAAIm7B,EAAa,CACtCp7B,EAAG,mBACH84B,WAAY,EACZv4B,OAAQ,CACNs7B,eAAe,KAKdC,aAAa77B,EAAYm7B,GAC9B,OAAG15B,KAAKmjB,UAAU5kB,GAAYyB,KAAKk6B,gBAAgB37B,EAAIm7B,GAC3C15B,KAAK04B,eAAen6B,EAAKm7B,EAAuB1O,YAGvDqP,eAAe97B,GACpB,OAAOyB,KAAKqU,WAAWwY,gBAAgB,uBAAwB,CAC7DtuB,GAAI,CAAC,CACHD,EAAG,eACH6a,WAAY5a,EACZo2B,YAAa,QAEd3vB,MAAMs1B,IACPt6B,KAAKwlB,aAAa8U,EAAc7U,UAI7B8U,uBAAuBh8B,EAAYi8B,GACxC,OAAOx6B,KAAK+4B,YAAYx6B,GAAIyG,MAAMke,GACzBljB,KAAKqU,WAAWC,UAAU,kCAAmC,CAClE+O,QAASrjB,KAAK+wB,gBAAgB7N,GAC9BsX,QAAAA,MAEDx1B,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzC0U,iBAAiBl8B,EAAYi8B,GAClC,OAAOx6B,KAAKqU,WAAWC,UAAU,4BAA6B,CAC5D+O,QAASrjB,KAAK+wB,gBAAgBxyB,GAC9Bi8B,QAAAA,IACCx1B,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzC2U,iBAAiBn8B,EAAYi8B,GAClC,OAAOx6B,KAAKqU,WAAWC,UAAU,4BAA6B,CAC5DgH,KAAMtb,KAAKy3B,aAAal5B,GACxBi8B,QAAAA,IACCx1B,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzC4U,0BAA0Bp8B,EAAYq8B,GAC3C,OAAO56B,KAAKqU,WAAWC,UAAU,qCAAsC,CACrEgH,KAAMtb,KAAKy3B,aAAal5B,GACxBs8B,oBAAqBD,IACpB51B,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzC+P,aAAazc,GAClB,MAAMiE,EAAqBtd,KAAKwd,QAAQnE,GAClCyhB,EAAqBxd,EAAKyd,mBAEhC,SAAUzd,EAAKze,OAAOm8B,YAAcF,GAAsBhF,GAAagF,IAGlEG,UAAU/X,GACf,OAAOljB,KAAKqU,WAAW6mB,uBAAuB,CAC5CpxB,OAAQ,qBACR4K,OAAQ,CACN4G,KAAMtb,KAAK03B,oBAAoBxU,IAEjCiY,cAAgBC,IACdp7B,KAAKyc,gBAAgB8I,aAAa6V,EAAYpiB,OAC9ChZ,KAAKwlB,aAAa4V,EAAY3V,OAEvB2V,EAAY9O,SAKlB+O,iBAAiBC,GACtB,OAAOt7B,KAAKqU,WAAWC,UAAU,4BAA6B,CAACgnB,KAAAA,IAC9Dt2B,MAAM+gB,IACL/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,GAC9BA,EAA4BN,MAAM,GACpClnB,MAITg9B,cAAcliB,EAAgB4f,GACnC,OAAOj5B,KAAKqU,WAAWC,UAAU,yBAA0B,CACzD+O,QAASrjB,KAAK+wB,gBAAgB1X,GAC9B4f,SAAAA,IAIGuC,oBAAoBniB,GACzB,OAAOrZ,KAAKqU,WAAWonB,mBAAmB,gCAAiC,CACzEpY,QAASrjB,KAAK+wB,gBAAgB1X,IAC7B,CAACqiB,aAAc,MAAM12B,MAAM22B,IAC5B37B,KAAKyc,gBAAgB8I,aAAaoW,EAAkB3iB,OACpDhZ,KAAKud,gBAAgBiI,aAAamW,EAAkBlW,OAEpD,MAAMmW,EAAmBD,EAAkBjW,SAASzW,QAGpD,OAFA0sB,EAAkBjW,SAASplB,KAAKs7B,GAEzBD,KAIJE,qBAAqBxiB,EAAgByiB,GAC1C,OAAO97B,KAAKqU,WAAWwY,gBAAgB,gCAAiC,CACtExJ,QAASrjB,KAAK+wB,gBAAgB1X,GAC9Bic,UAAWwG,IAIRC,gBAAgBT,GACrB,OAAOt7B,KAAKqU,WAAWC,UAAU,2BAA4B,CAC3DgnB,KAAMA,IACLt2B,MAAMg3B,IACHA,EAAyC1e,MAC3Ctd,KAAKw2B,YAAawF,EAAyC1e,MAAM,GAG5D0e,M,YCvoBH,G,6CAAV,SAAUC,GAGT,IAAIC,EAEAC,EA8BH,SAASC,IACP,GAAkB,QAAf,EAAAC,WACD,IACE,MAAMC,EAAiBC,EAAkB,CAACC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,IAChFtb,EAAO,IAAI9R,KACjB8R,EAAKub,SAAS,GACd,MAAMC,EAASN,EAAeO,OAAOzb,GACrC,EAAA0b,UAAUC,GAAKH,EAAOp1B,MAAM,KAAK,GACjC4Z,EAAKub,SAAS,IACd,MAAMK,EAASV,EAAeO,OAAOzb,GACrC,EAAA0b,UAAUG,GAAKD,EAAOx1B,MAAM,KAAK,GACjC,MAAM+C,GACNjL,QAAQC,MAAM,mBAAoBgL,GAClC,EAAAuyB,UAAY,CAACC,GAAI,KAAME,GAAI,OA0BlC,SAAgBC,IACf,MAAMC,EAAc,iBAEpB,OADA,EAAAC,sBAAwBD,EACjBx7B,QAAQmR,IAAI,CAClB,8BACA,8BACA,8BACE9N,MAAK,EAAEktB,EAAMmL,EAAUC,MACzB,MAAMC,EAA4B,GAalC,OAZAC,EAAmBtL,EAAKuL,QAASF,GACjCC,EAAmBH,EAASI,QAASF,GAW9BG,EAT8B,CACpCp/B,EAAG,qBACHq/B,aAAc,EACdC,UAAWT,EACXI,QAAAA,EACA3hC,QAAS,EACTiiC,OAAO,EACPP,UAAWA,EAAUG,aAMxB,SAAgBK,EAAapM,GAC5B,EAAAqM,yBAA0B,EACxB,MAAM1qB,EAAW,WACnB,OAAO1R,QAAQmR,IAAI,CAClBO,EAASgB,WAAWonB,mBAAmB,uBAAwB,CAC9DmC,UAAWlM,EACXsM,UAAW,eAEZ3qB,EAASgB,WAAWonB,mBAAmB,uBAAwB,CAC9DmC,UAAWlM,EACXsM,UAAW,YAEZ,8BACA,8BACA3qB,EAASgB,WAAWonB,mBAAmB,wBAAyB,CAC/DmC,UAAWlM,EACX4J,KAAM,IAEP,EAAA2C,kBAYF,SAAgBT,EAAmBD,EAAcW,EAA2B,IAC3E,IAAI,MAAMr4B,KAAK03B,EAAS,CAEvB,MAAMY,EAAIZ,EAAQ13B,GACD,iBAAR,EACRq4B,EAAO59B,KAAK,CACXhC,EAAG,iBACH+I,IAAKxB,EACLtB,MAAO45B,IAGRD,EAAO59B,KAAK,OAAD,QACVhC,EAAG,2BACH+I,IAAKxB,GACFs4B,IAKN,OAAOD,EAwBR,SAAgBR,EAAaU,GAG5B,OAFAA,EAASC,WAAa,oBAEfn3B,EAAA,MAAiB,CAACk3B,SAAAA,IAAWp5B,MAAK,KACxCs5B,EAAcF,GACPA,KAcT,SAAgBE,EAAcF,GAC7B,GAAGA,EAASR,YAAc,EAAAR,sBAA1B,CAIA,IACClB,EAAc,IAAIqC,KAAKC,YAAYJ,EAASR,WAC3C,MAAMrzB,GACPjL,QAAQC,MAAM,oBAAqBgL,GACnC2xB,EAAc,IAAIqC,KAAKC,YAAYJ,EAASR,UAAUp2B,MAAM,IAAK,GAAG,IAGrE,EAAA+1B,QAAQl5B,QAER,IAAI,MAAMo6B,KAAUL,EAASb,QAC5B,EAAAA,QAAQp1B,IAAIs2B,EAAOp3B,IAAoBo3B,GAGrCL,EAASd,YACX,EAAAoB,cAActgC,OAAS,EACvB,EAAAsgC,cAAcp+B,QAAQ89B,EAASd,UAAUA,WAEzCc,EAASd,UAAUA,UAAUp6B,SAASy7B,IACrC,GAAGA,EAAQ1+B,KAAM,CAChB,MAAM2+B,EAAmBD,EAAQE,aACjC,EAAAtB,QAAQp1B,IAAIy2B,EAAa,CACxBtgC,EAAG,iBACH+I,IAAKu3B,EACLr6B,MAAOo6B,EAAQ1+B,YAMhB,EAAA6+B,sBAAwBV,EAASR,YACnC,gBAAwB,kBAAmBQ,EAASR,WACpD,EAAAkB,oBAAsBV,EAASR,UAC5BmB,EAAsB16B,QACtB+3B,KAGat7B,MAAMC,KAAKi+B,SAASC,iBAAiB,UAC7C/7B,SAASg8B,IACjB,MAAM17B,EAAW,EAAA27B,QAAQz6B,IAAIw6B,GAE1B17B,GACFA,EAAS0X,aAcZ,SAAgBkkB,EAAenH,EAAerxB,EAA2By4B,EAAc,CAACx5B,EAAG,IAC1F,IAAIgU,EAAyC,GAGzCylB,EAAY,EAyDhB,OAxDArH,EAAMv6B,QAHS,0DAGO,CAAChB,EAAO6iC,EAASC,EAASC,EAASC,EAAY1W,EAAgByV,KAKpF,GAFA5kB,EAAIvZ,KAAKm+B,EAAO92B,MAAM23B,EAAWtW,IAE9BuW,EAAI,CAEF,IAAIL,EACR,OAAOK,GACN,IAAK,KACEL,EAAUF,SAASW,cAAc,KACvC,MAGI,IAAK,KACHT,EAAUF,SAASW,cAAc,KAKrCT,EAAQU,UAAUR,EAAeI,EAAI54B,EAAMy4B,IAC3CxlB,EAAIvZ,KAAK4+B,QACP,GAAGO,EACT5lB,EAAIvZ,KAAK0+B,SAASW,cAAc,YAC1B,GAAGD,EAAI,CACT,MAAMl7B,EAAMk7B,EAAGG,YAAY,KACzB7iC,EAAO0iC,EAAG/3B,MAAM,EAAGnD,GAEnBnF,EAAMqgC,EAAG/3B,MAAMnD,EAAM,EAAGk7B,EAAGthC,OAAS,GACtC,IAAI8tB,EACR,GAAG7sB,IAAO,EAAAygC,GAAA,GAAiBzgC,GAAM,CAC3B6sB,EAAI8S,SAASW,cAAc,KAC3B,MAAMI,GAAa,EAAAC,GAAA,GAAQ3gC,GAC3B6sB,EAAE+T,KAAOF,EAAW1gC,IACjB0gC,EAAWG,SAAShU,EAAEiU,aAAa,UAAWJ,EAAWG,SAC5DhU,EAAExpB,OAAS,cAEXwpB,EAAItlB,EAAKy4B,EAAYx5B,KACrBqmB,EAAEkU,YAAc,GAGlBlU,EAAE0T,UAAUR,EAAepiC,EAAM4J,EAAMy4B,IAE3CxlB,EAAIvZ,KAAK4rB,QACAtlB,GA1DX,SAA0BiT,EAAwCjT,EAA0By4B,GAC1F,MAAMgB,EAAMz5B,EAAKy4B,EAAYx5B,KAC5B/E,MAAMmD,QAAQo8B,GAChBxmB,EAAIvZ,QAAQ+/B,GAEZxmB,EAAIvZ,KAAK+/B,GAsDJC,CAAiBzmB,EAAKjT,EAAMy4B,GAIjC,OADAC,EAAYtW,EAAStsB,EAAM0B,OACpB,MAGLkhC,IAAcrH,EAAM75B,QACtByb,EAAIvZ,KAAK23B,EAAMtwB,MAAM23B,IAGfzlB,EAKR,SAAgBgjB,EAAOx1B,EAAkBk5B,GAAQ,EAAO35B,GACvD,MAAMvI,EAAM,EAAAk/B,QAAQ74B,IAAI2C,GACxB,IAAI4wB,EACJ,GAAG55B,EACF,GAAa,6BAAVA,EAAIC,IAAoCsI,MAAAA,OAAI,EAAJA,EAAMxI,QAAQ,CACxD,IAAI+/B,EAAIv3B,EAAK,GACI,iBAAR,IAAkBu3B,GAAKA,EAAEzgC,QAAQ,MAAO,KAGjDu6B,EAAQ55B,EAFE69B,EAAYsE,OAAOrC,GAEb,WAAa9/B,EAAiB,iBAE9C45B,EADmB,mBAAV55B,EAAIC,EACLD,EAAIkG,MAGJ8C,OAIT4wB,EAAQ5wB,EAGP,MAAMjF,EAASg9B,EAAenH,EAAOrxB,GACrC,OAAG25B,EACMn+B,EAAOgC,KAAKq8B,GAASA,aAAgBC,KAAOD,EAAKL,YAAcK,IAAM9hC,KAAK,IAE1EyD,EArVC,EAAAm7B,QAA4C,IAAI/0B,IAChD,EAAAk2B,cAA+B,GAMjC,EAAAX,yBAA0B,EAErB,EAAA4C,iBAAhB,WACC,OAAGxE,IACIA,EAAuBx6B,QAAQmR,IAAI,CACzC5L,EAAA,MAAiB,YACjB,EAAA+2B,kBACEj5B,MAAK,EAAEo5B,KACLA,GAEM,KAMN,EAAAhB,wBACH,EAAAA,sBAAwBgB,EAASR,WAGlCU,EAAcF,GACPA,GAZClB,MAaNj0B,SAAQ,KACVkzB,OAAuBxwB,OAsBR,EAAAi1B,cAAhB,SACE/D,EACAgE,IAAiB,EAAAxE,YAAc,EAAAA,aAAeQ,GAE9C,EAAAR,WAAaQ,EAEbT,IAEGyE,IACD9B,EAAsB16B,QACLvD,MAAMC,KAAKi+B,SAASC,iBAAiB,UAC7C/7B,SAASg8B,IAChB,MAAM17B,EAAW,EAAA27B,QAAQz6B,IAAIw6B,GAE1B17B,aAAoBs9B,GACrBt9B,EAAS0X,cAMF,EAAAgiB,kBAAiB,EAyBjB,EAAAY,aAAY,EAsBZ,EAAAiD,WAAhB,SAA2BrP,EAAkB6L,GAC5C,OAAO,gCAAwC,sBAAuB,CACrES,UAAW,aACXJ,UAAWlM,EACXhe,KAAM6pB,KAIQ,EAAAC,mBAAkB,EAsBlB,EAAAwD,YAAhB,SAA4BtP,GAE3B,OADA,EAAA0L,sBAAwB1L,EACjBoM,EAAapM,GAAU1sB,MAAK,EAAEi8B,EAAWC,EAAWC,EAAgBC,EAAgB9D,EAAWh/B,MACrG,IAAIi/B,EAA4B,GAEhC,CAAC4D,EAAgBC,GAAgBl+B,SAASm+B,IACzC7D,EAAmB6D,EAAE5D,QAAgBF,MAGtCA,EAAUA,EAAQr5B,OAAO+8B,EAAU1D,SAEnC,IAAI,MAAMkB,KAAUyC,EAAU3D,QAC7BA,EAAQj9B,KAAKm+B,GAKd,OAFAwC,EAAU1D,QAAUA,EACpB0D,EAAU3D,UAAYA,EACfI,EAAauD,OAIN,EAAAvD,aAAY,EASf,EAAAO,gBACQ,oBAAX,WAAuD,IAAtBM,KAAgB,YAClD58B,QAAQM,UAER,8BAA2B+C,MAAMs8B,IACtCC,OAAehD,KAAO1iC,OAAOC,OAAwB,oBAAX,KAAyByiC,KAAO,GAAI+C,EAAM7D,YAKxE,EAAAa,cAAa,EA4Db,EAAAc,eAAc,EAkEd,EAAAvC,OAAM,EA2CT,EAAAsC,QAAyE,IAAIqC,QAO1F,MAAeC,EAId3hC,YAAYzC,GACX2C,KAAKk/B,SAAU7hC,MAAAA,OAAO,EAAPA,EAAS6hC,UAAWF,SAASW,cAAc,QAC1D3/B,KAAKk/B,QAAQwC,UAAU/qB,IAAI,QAExB3W,KAAK2hC,SAAWtkC,MAAAA,OAAO,EAAPA,EAASskC,SACtBtkC,IAAaA,EAAsCgK,KAAQhK,EAA0C+jB,OACtGphB,KAAKkb,OAAO7d,GAGjB,EAAA8hC,QAAQh3B,IAAInI,KAAKk/B,QAASl/B,OAU5B,MAAa4hC,UAAoBH,EAI9B3hC,YAAYzC,EAA8B,I,MACxC+I,MAAM,OAAD,wBAAK/I,GAAO,CAAEskC,SAA0B,QAAhB,EAAAtkC,EAAQskC,gBAAQ,QAAI,eAG9CzmB,OAAO7d,GAGb,IAFA,EAAAwkC,GAAA,GAAW7hC,KAAM3C,GAEI,cAAlB2C,KAAK2hC,SACP3hC,KAAKk/B,QAAQkB,YAAc,GAC3BpgC,KAAKk/B,QAAQU,UAAU/C,EAAO78B,KAAKqH,KAAK,EAAOrH,KAAK4G,WAC9C,CAEN,MAAMu3B,EAAIn+B,KAAKk/B,QAAQl/B,KAAK2hC,UACtBG,EAAYjF,EAAO78B,KAAKqH,KAAK,EAAMrH,KAAK4G,WAGrC+E,IAANwyB,EAAiBn+B,KAAKk/B,QAAQ6C,QAAQ/hC,KAAK2hC,UAAYG,EACpD9hC,KAAKk/B,QAA6Bl/B,KAAK2hC,UAAYG,GAIlDE,iBAAiB3kC,GACtB,GAAG2C,KAAKqH,MAAQhK,EAAQgK,OAAO,EAAAqP,EAAA,GAAU1W,KAAK4G,KAAMvJ,EAAQuJ,MAI5D,OAAO5G,KAAKkb,OAAO7d,IA9BX,EAAAukC,YAAW,EAkCvB,MAAM7C,EAA0D,IAAIv2B,IACpE,SAAS+zB,EAAkBl/B,EAAsC,IAC/D,IAAI4kC,EAAOtiC,KAAKC,UAAUvC,GACtBi/B,EAAiByC,EAAsBr6B,IAAIu9B,GAK/C,OAJI3F,GACFyC,EAAsB52B,IAAI85B,EAAM3F,EAAiB,IAAIiC,KAAK2D,eAAe,EAAA9E,sBAAwB,SAAW,EAAAf,WAAYh/B,IAGnHi/B,EAGE,EAAAQ,UAAY,CAACC,GAAI,KAAME,GAAI,MAKvC,MAAa6D,UAAwBW,EAIlC3hC,YAAYzC,G,MACV+I,MAAM,OAAD,wBAAK/I,GAAO,CAAEskC,SAA0B,QAAhB,EAAAtkC,EAAQskC,gBAAQ,QAAI,iBAG9CzmB,OAAO7d,GAGV,IAAIL,EACJ,IAHH,EAAA6kC,GAAA,GAAW7hC,KAAM3C,GAGX2C,KAAK3C,QAAQm/B,MAAQx8B,KAAK3C,QAAQo/B,QAA+C,IAArC5gC,OAAO6X,KAAK1T,KAAK3C,SAASe,OAA6B,CACpG,IAAI+jC,EAAQniC,KAAKohB,KAAKghB,WACtBplC,GAAQ,KAAsB,QAAf,EAAAq/B,WAAwB8F,EAAQ,IAAO,GAAKA,IAAQx6B,OAAO,GAAK,KAAO,IAAM3H,KAAKohB,KAAKihB,cAAc16B,OAAO,GAKzG,QAAf,EAAA00B,aACDr/B,GAAQ,KAAOmlC,EAAQ,GAAK,EAAArF,UAAUC,GAAK,EAAAD,UAAUG,SAElD,CAEL,MAAMX,EAAiBC,EAAkBv8B,KAAK3C,SAC9CL,GAAO,EAAAslC,GAAA,GAAsBhG,EAAeO,OAAO78B,KAAKohB,OAGzDphB,KAAKk/B,QAAgBl/B,KAAK2hC,UAAY3kC,GA5B/B,EAAA8jC,gBAAe,EAgCZ,EAAAyB,KAAhB,SAAqBl7B,EAAkBT,GACtC,OAAO,IAAIg7B,EAAY,CAACv6B,IAAAA,EAAKT,KAAAA,IAAOs4B,SAGrB,EAAAsD,MAAhB,SAAsBnlC,GACrB,OAAO,IAAIukC,EAAYvkC,GAAS6hC,SAGjB,EAAAuD,MAAhB,SAAsBvD,EAAsB73B,EAAkBT,EAA2B+6B,GACxF,OAAO,IAAIC,EAAY,CAAC1C,QAAAA,EAAS73B,IAAAA,EAAKT,KAAAA,EAAM+6B,SAAAA,IAAWzC,SAjezD,CAAU,QAAI,KAsed,YAEa,GAAKqD,KAGJ,GAAKC,MAGL,GAAKC,MA2BnB,UAAsB,GC5kBf,MAAMC,GAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACxHC,GAAO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAK1EC,GAAiBxhB,IAC5B,MAAM9E,EAAI,IAAIhN,KAAKA,KAAKuzB,IAAIzhB,EAAK0hB,cAAe1hB,EAAK2hB,WAAY3hB,EAAK4hB,YAChEC,EAAS3mB,EAAE4mB,aAAe,EAChC5mB,EAAE6mB,WAAW7mB,EAAE8mB,aAAe,EAAIH,GAClC,MAAMI,EAAY,IAAI/zB,KAAKA,KAAKuzB,IAAIvmB,EAAEgnB,iBAAkB,EAAG,IAC3D,OAAOnkB,KAAKokB,OAAQjnB,EAAEknB,UAAYH,EAAUG,WARvB,MAQ+C,GAAK,IAyF3E,OAAmB,mCAtFZ,SAAuCn0B,GAC5C,MAAMo0B,EAAQ,IAAIn0B,KACZvK,EAAM0+B,EAAMD,UAAY,IAAO,EAC/B5J,EAAYvqB,EAAKm0B,UAAY,IAAO,EAEpCnmC,EAAsC,GAa5C,OAZI0H,EAAM60B,EAjBW,OAiBa6J,EAAMT,YAAc3zB,EAAK2zB,UACzD3lC,EAAQm/B,KAAOn/B,EAAQo/B,OAAS,UACxBgH,EAAMX,gBAAkBzzB,EAAKyzB,eACrCzlC,EAAQqmC,KAAOrmC,EAAQsmC,IAAM,UAC7BtmC,EAAQumC,MAAQ,WACP7+B,EAAM60B,EAAa,QAAiBgJ,GAAca,KAAWb,GAAcvzB,GACpFhS,EAAQwmC,QAAU,SAElBxmC,EAAQumC,MAAQ,QAChBvmC,EAAQsmC,IAAM,WAGT,IAAI,mBAAqB,CAC9BviB,KAAM/R,EACNhS,QAAAA,IACC6hC,UAmEE,MAgBD4E,GAAU,KACVC,GAAc,IAAIC,OAAO,gBACzBC,GAAwB,IAAID,OAAO,yBAA0B,KAC7DE,GAA2B,IAAIF,OAAO,yBAA0B,KAChEG,GAAY,IAAIH,OAAO,0CAA2C,KAClEI,GAAW,IAAIJ,OAAO,mEAAoE,KAC1FK,GAAwB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAgO3E,SAASC,GAAmBC,EAAmBX,EAAeY,GAC5D,MAAMC,GAAc,IAAIn1B,MAAOwzB,cACzBW,EAAQn0B,KAAKvK,MACnB,GAAGy/B,GAAgBV,IAAWU,GAAgBC,EAAa,CACzD,MAAMrjB,EAAO,IAAI9R,KACjB8R,EAAKsjB,YAAYF,EAAcZ,EAAO,GACtCxiB,EAAKub,SAAS,EAAG,EAAG,GACpB,MAAMgI,EAAUvjB,EAAKoiB,UACrB,GAAGmB,EAAUlB,EACX,OAEFriB,EAAKwjB,SAASxjB,EAAK2hB,WAAa,GAChC,MAAM8B,EAAUzjB,EAAKoiB,UAAY,EAEjCe,EAAMjkC,KAAK,CACTu2B,MAAOiO,GAAmBH,GAC1BA,QAAAA,EACAE,QAAAA,KAKN,SAASE,GAAkBR,EAAmBZ,EAAaC,GACzD,GAAGoB,GAAkBrB,EAAKC,GAAQ,CAChC,MAAMa,GAAc,IAAIn1B,MAAOwzB,cACzBW,EAAQn0B,KAAKvK,MAEnB,IAAI,IAAIc,EAAI4+B,EAAa5+B,GAAKi+B,GAASj+B,IAAK,CAC1C,GAAa,IAAV+9B,GAAuB,KAARD,KA8DJD,EA9D8B79B,GA+DhC,GAAM,GAAO69B,EAAO,KAAQ,IAAQA,EAAO,KAAQ,EA9D7D,SAGF,MAAMtiB,EAAO,IAAI9R,KACjB8R,EAAKsjB,YAAY7+B,EAAG+9B,EAAOD,EAAM,GACjCviB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMgI,EAAUvjB,EAAKoiB,UACrB,GAAGmB,EAAUlB,EACX,SAGFriB,EAAKsjB,YAAY7+B,EAAG+9B,EAAOD,EAAM,GACjCviB,EAAKub,SAAS,EAAG,EAAG,GACpB,MAAMkI,EAAUzjB,EAAKoiB,UAAY,EAC9B39B,IAAM4+B,EACPF,EAAMjkC,KAAK,CACTu2B,MAAOoO,GAAkBN,GACzBA,QAAAA,EACAE,QAAAA,IAGFN,EAAMjkC,KAAK,CACTu2B,MAAOqO,GAAiBP,GACxBA,QAAAA,EACAE,QAAAA,KAoCV,IAAoBnB,EA7BpB,SAASoB,GAAmBlL,GAC1B,MAAMxY,EAAO,IAAI9R,KAAKsqB,GACtB,OAAO8I,GAAOthB,EAAK2hB,YAAYp7B,MAAM,EAAG,GAAK,IAAMyZ,EAAK0hB,cAG1D,SAASmC,GAAkBrL,GACzB,MAAMxY,EAAO,IAAI9R,KAAKsqB,GACtB,OAAO8I,GAAOthB,EAAK2hB,YAAYp7B,MAAM,EAAG,GAAK,IAAMyZ,EAAK4hB,UAG1D,SAASkC,GAAiBtL,GACxB,MAAMxY,EAAO,IAAI9R,KAAKsqB,GACtB,OAAQ,IAAMxY,EAAK4hB,WAAWr7B,OAAO,GAAK,KAAO,KAAOyZ,EAAK2hB,WAAa,IAAIp7B,OAAO,GAAK,IAAMyZ,EAAK0hB,cAGvG,SAASqC,GAAevL,GACtB,MAAMxY,EAAO,IAAI9R,KAAKsqB,GACtB,OAAO+I,GAAKvhB,EAAKgkB,UAGnB,SAASJ,GAAkBrB,EAAaC,GACtC,OAAGA,GAAS,GAAKA,EAAQ,IACpBD,GAAO,GAAKA,EAAMU,GAAsBT,GAW/C,SAASb,GAASsC,GAwBhBA,EAAIA,EAAEjpC,cACN,IAAI,IAAIyJ,EAAI,EAAGA,EAAI,GAAIA,IAErB,GAAwB,IADV68B,GAAO78B,GAAGzJ,cACfC,QAAQgpC,GACf,OAAOx/B,EAGX,OAAQ,EC5dM,SAASy/B,GAA4Bj+B,EAAQuQ,EAAgBC,GACxE,eAAgBA,EAAUxQ,KAC3BwQ,EAAUxQ,GAAO,IAAIwQ,EAAUxQ,KAG9BuQ,GAAaA,EAAUvQ,KAASwQ,EAAUxQ,KAC3CuQ,EAAUvQ,GAAKjJ,OAASyZ,EAAUxQ,GAAKjJ,OACtCyZ,EAAUxQ,GAAenE,SAAQ,CAACi7B,EAAGt4B,KACpC+R,EAAUvQ,GAAKxB,GAAKs4B,KAItBtmB,EAAUxQ,GAAOuQ,EAAUvQ,IDme/B,kBA1WO,SAAsBwT,EAAe0pB,GAC1C,MAAMc,EAAIxqB,EAAM0qB,OAAOnpC,cAEvB,GAAGipC,EAAEjnC,OAAS,EACZ,OAGF,GAA0B,IAAvB,QAAQ/B,QAAQgpC,GAAU,CAC3B,MAAMjkB,EAAO,IAAI9R,KACXo0B,EAAOtiB,EAAK0hB,cACZc,EAAQxiB,EAAK2hB,WACbY,EAAMviB,EAAK4hB,UACjB5hB,EAAKsjB,YAAYhB,EAAME,EAAOD,GAC9BviB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMgI,EAAUvjB,EAAKoiB,UACrBpiB,EAAKsjB,YAAYhB,EAAME,EAAOD,EAAM,GACpCviB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMkI,EAAUzjB,EAAKoiB,UAAY,EAMjC,YALAe,EAAMjkC,KAAK,CACTu2B,MAAO,QACP8N,QAAAA,EACAE,QAAAA,IAKJ,GAA8B,IAA3B,YAAYxoC,QAAQgpC,GAAU,CAC/B,MAAMjkB,EAAO,IAAI9R,KACXo0B,EAAOtiB,EAAK0hB,cACZc,EAAQxiB,EAAK2hB,WACbY,EAAMviB,EAAK4hB,UACjB5hB,EAAKsjB,YAAYhB,EAAME,EAAOD,GAC9BviB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMgI,EAAUvjB,EAAKoiB,UAAY,MACjCpiB,EAAKsjB,YAAYhB,EAAME,EAAOD,EAAM,GACpCviB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMkI,EAAUzjB,EAAKoiB,UAAY,SAMjC,YALAe,EAAMjkC,KAAK,CACTu2B,MAAO,YACP8N,QAAAA,EACAE,QAAAA,IAKJ,MAAMW,EAySR,SAAsBH,GACpB,MAAMpuB,EAAI,IAAI3H,KACd,GAAG+1B,EAAEjnC,QAAU,EACb,OAAQ,EAGV,IAAI,IAAIyH,EAAI,EAAGA,EAAI,EAAGA,IAGpB,GAFAoR,EAAEwuB,QAAQxuB,EAAE+rB,UAAY,GAEoC,IAAzDmC,GAAeluB,EAAEusB,WAAWpnC,cAAcC,QAAQgpC,GACnD,OAAOpuB,EAAEmuB,SAGb,OAAQ,EAtTUM,CAAaL,GAC/B,GAAGG,GAAa,EAAG,CACjB,MAAMpkB,EAAO,IAAI9R,KACXvK,EAAMqc,EAAKoiB,UAEXmC,EAAWH,EADEpkB,EAAKgkB,SAExBhkB,EAAKqkB,QAAQrkB,EAAK4hB,UAAY2C,GAC3BvkB,EAAKoiB,UAAYz+B,GAClBqc,EAAKwkB,QAAQxkB,EAAKoiB,UAAY,QAEhC,MAAME,EAAOtiB,EAAK0hB,cACZc,EAAQxiB,EAAK2hB,WACbY,EAAMviB,EAAK4hB,UACjB5hB,EAAKsjB,YAAYhB,EAAME,EAAOD,GAC9BviB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMgI,EAAUvjB,EAAKoiB,UACrBpiB,EAAKsjB,YAAYhB,EAAME,EAAOD,EAAM,GACpCviB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMkI,EAAUzjB,EAAKoiB,UAAY,EAMjC,YALAe,EAAMjkC,KAAK,CACTu2B,MAAOsO,GAAeR,GACtBA,QAAAA,EACAE,QAAAA,IAKJ,IAAIgB,EACJ,GAAqC,QAAjCA,EAAU1B,GAAU2B,KAAKT,IAyB7B,GAAoC,QAAhCQ,EAAUzB,GAAS0B,KAAKT,IAqC5B,GAAuC,QAAnCQ,EAAU9B,GAAY+B,KAAKT,IAA/B,CAyCA,GAAiD,QAA7CQ,EAAU5B,GAAsB6B,KAAKT,IAAc,CACrD,MAAMU,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbjC,EAAQb,GAASgD,GACvB,GAAGnC,GAAS,EAAG,CACb,MAAMqC,GAAKD,EACX,GAAGC,EAAI,GAAKA,GAAK,GAGf,YADAlB,GAAkBR,EADN0B,EAAI,EACcrC,GAEzB,GAAGqC,GAAKnC,GAGb,YADAQ,GAAmBC,EAAOX,EADLqC,IAO3B,GAAoD,QAAhDJ,EAAU3B,GAAyB4B,KAAKT,IAAc,CACxD,MAAMU,EAAKF,EAAQ,GAEbjC,EAAQb,GADH8C,EAAQ,IAEnB,GAAGjC,GAAS,EAAG,CACb,MAAMqC,GAAKF,EACX,GAAGE,EAAI,GAAKA,GAAK,GAGf,YADAlB,GAAkBR,EADN0B,EAAI,EACcrC,GAErBqC,GAAKnC,IAEdQ,GAAmBC,EAAOX,EADLqC,SAtE3B,CACE,IAAIzB,GAAgBa,EACpB,MAAMZ,GAAc,IAAIn1B,MAAOwzB,cAC/B,GAAG0B,EAAeV,GAAS,CACzBU,EAAeV,GACf,IAAI,IAAIj+B,EAAI4+B,EAAa5+B,GAAK2+B,EAAc3+B,IAAK,CAC/C,MAAMub,EAAO,IAAI9R,KACjB8R,EAAKsjB,YAAY7+B,EAAG,EAAG,GACvBub,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMgI,EAAUvjB,EAAKoiB,UACrBpiB,EAAKsjB,YAAY7+B,EAAI,EAAG,EAAG,GAC3Bub,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMkI,EAAUzjB,EAAKoiB,UAAY,EACjCe,EAAMjkC,KAAK,CACTu2B,MAAO,GAAKhxB,EACZ8+B,QAAAA,EACAE,QAAAA,UAGC,GAAGL,GAAgBC,EAAa,CACrC,MAAMrjB,EAAO,IAAI9R,KACjB8R,EAAKsjB,YAAYF,EAAc,EAAG,GAClCpjB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMgI,EAAUvjB,EAAKoiB,UACrBpiB,EAAKsjB,YAAYF,EAAe,EAAG,EAAG,GACtCpjB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMkI,EAAUzjB,EAAKoiB,UAAY,EACjCe,EAAMjkC,KAAK,CACTu2B,MAAO,GAAK2N,EACZG,QAAAA,EACAE,QAAAA,SAvEN,CACE,MAAMkB,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbK,EAAKL,EAAQ,GACnB,IAAIA,EAAQ,KAAOA,EAAQ,GACzB,OAGF,MAAMlC,EAAMwC,SAASJ,GACfnC,EAAQuC,SAASH,GAAM,EAC7B,IAAItC,EAAOyC,SAASD,GACjBxC,GAAQ,IAAMA,GAAQ,KACvBA,GAAQ,KAGV,MAAMe,GAAc,IAAIn1B,MAAOwzB,cAC/B,GAAGkC,GAAkBrB,EAAM,EAAGC,IAAUF,GAAQI,IAAWJ,GAAQe,EAAa,CAC9E,MAAMrjB,EAAO,IAAI9R,KACjB8R,EAAKsjB,YAAYhB,EAAME,EAAOD,GAC9BviB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMgI,EAAUvjB,EAAKoiB,UACrBpiB,EAAKsjB,YAAYhB,EAAME,EAAOD,EAAM,GACpCviB,EAAKub,SAAS,EAAG,EAAG,GAEpB,MAAMkI,EAAUzjB,EAAKoiB,UAAY,EAMjC,YALAe,EAAMjkC,KAAK,CACTu2B,MAAOqO,GAAiBP,GACxBA,QAAAA,EACAE,QAAAA,SAtDN,CACE,MAAMkB,EAAKF,EAAQ,GACbG,EAAKH,EAAQ,GACbI,EAAIE,SAASJ,GACbK,EAAKD,SAASH,GACpB,GAAGC,EAAI,GAAKA,GAAK,GAAI,CACnB,GAAGG,GAAMtC,IAAWmC,GAAK,GAIvB,YADA3B,GAAmBC,EADL0B,EAAI,EADGG,GAIZA,GAAM,IAGfrB,GAAkBR,EAFN0B,EAAI,EACFG,EAAK,QAGZH,GAAKnC,IAAWsC,GAAM,IAG/B9B,GAAmBC,EADL6B,EAAK,EADEH,K,gDE7M3B,MAAMI,GAA0B,CAC9BC,IAAK,kBACLC,IAAK,YACLC,IAAK,mBAKP,IAAIC,GAAwB,EAErB,MAAMC,WAAuBvzB,EAApC,c,oBAmBU,KAAAwzB,oBAAsB,KAC5B,IAAI,MAAMpoC,KAAMyB,KAAK4mC,KAAM,CACzB,MAAMC,EAAM7mC,KAAK4mC,KAAKroC,GAEnBsoC,EAAIC,2BACED,EAAIC,kBACX9mC,KAAK+mC,cAAcC,mBAAmBH,MAlBlCtqB,QACRvc,KAAK4mC,KAAO,GACZ5mC,KAAKinC,oBAAsB,GAC3BjnC,KAAKknC,oBAAsB,GAE3B,kBAAwC1gC,iBAAiB,uBAAwB2gC,IAC3EA,GACFnnC,KAAK2mC,yBAgBJS,QAAQP,EAAevwB,GAC5B,IAAIuwB,GAAiB,kBAAVA,EAAIvoC,EACb,OAGF,MAAM+oC,EAASrnC,KAAK4mC,KAAKC,EAAItoC,IAE1BsoC,EAAIS,iBACLhC,GAAyB,iBAAkB+B,EAAQR,GACnD7mC,KAAKunC,kBAAkBnxB,YAAYywB,EAAIS,eAAgBhxB,IAuBrD+wB,IACFrnC,KAAK4mC,KAAKC,EAAItoC,IAAMsoC,GAStB,IAAI,IAAIhhC,EAAI,EAAGzH,EAASyoC,EAAIW,WAAWppC,OAAQyH,EAAIzH,IAAUyH,EAAG,CAC9D,MAAM4hC,EAAYZ,EAAIW,WAAW3hC,GACjC,OAAO4hC,EAAUnpC,GACf,IAAK,4BACHuoC,EAAIa,WAAY,EAAAC,GAAA,GAAcF,EAAUC,WACxC,MAEF,IAAK,yBACHb,EAAIrR,SAAWiS,EAAUjS,SACzBqR,EAAIpnC,KAAOgoC,EAAU5oC,OAAO+oC,OAA2B,cAAlBf,EAAIgB,UAA4B,QAAU,QAI/E,MAEF,IAAK,yBACHhB,EAAIrR,SAAWiS,EAAUjS,SACzBqR,EAAIiB,EAAIL,EAAUK,EAClBjB,EAAIkB,EAAIN,EAAUM,EAEQN,EAAU5oC,OAAOmpC,cACzCnB,EAAIpnC,KAAO,QAEXonC,EAAIpnC,KAAO,QAEb,MAEF,IAAK,2BAcH,QAbqBkM,IAAlB87B,EAAUQ,MACXpB,EAAIqB,gBAAkBT,EAAUQ,KAG/BR,EAAU1oC,aACmB,yBAA3B0oC,EAAU1oC,WAAWT,SACfmpC,EAAU1oC,WACkB,sBAA3B0oC,EAAU1oC,WAAWT,IAC7BuoC,EAAIsB,gBAAkBV,EAAU1oC,aAKQ,eAAlB8nC,EAAIgB,YAA+BhB,EAAIuB,QAAUpiC,IAAiBqiC,mBAC1FxB,EAAIpnC,KAAO,UACXonC,EAAIyB,QAAU,OACT,GAAqB,eAAlBzB,EAAIgB,UAA4B,CACxC,IAAI7hC,IAAiBuiC,kBACnB,OAGF1B,EAAIpnC,KAAO,UACXonC,EAAIyB,QAAU,EACdzB,EAAI2B,UAAW,EAEjB,MAEF,IAAK,6BACH3B,EAAIpnC,KAAO,QACXonC,EAAIiB,EAAIL,EAAUK,EAClBjB,EAAIkB,EAAIN,EAAUM,EAClB,MAEF,IAAK,4BACmB,cAAlBlB,EAAIgB,WAA+C,cAAlBhB,EAAIgB,YACvChB,EAAIpnC,KAAO,OAGbonC,EAAI2B,UAAW,GAKrB,GAAI3B,EAAIgB,UA2BEhB,EAAIgB,YAAcxB,GAAwBG,IAClDK,EAAIpnC,KAAO,MACHonC,EAAIgB,YAAcxB,GAAwBE,MAClDM,EAAIpnC,KAAO,WA9BM,CACjB,MAAMtB,GAAO0oC,EAAIa,WAAa,IAAIlgC,MAAM,KAAKI,MAEvC6gC,EAAiBtqC,GAAOkoC,GAAwBloC,EAAI/B,eAC1D,GAAGqsC,EACD5B,EAAIgB,UAAYY,OAEhB,OAAO5B,EAAIpnC,MACT,IAAK,MACL,IAAK,QACL,IAAK,QACHonC,EAAIgB,UAAY,YAChB,MACF,IAAK,UACHhB,EAAIgB,UAAY,aAChB,MACF,IAAK,QACHhB,EAAIgB,UAAY,aAChB,MACF,IAAK,QACHhB,EAAIgB,UAAY,YAChB,MACF,QACEhB,EAAIgB,UAAY,4BA4CxB,MAlCgB,UAAbhB,EAAIpnC,MAAiC,UAAbonC,EAAIpnC,OAE7BonC,EAAIa,UAAYb,EAAIpnC,KAAO,IF3GN,EAAC2hB,EAAY/jB,EAKnC,MACH,MAAMqrC,EAASrrC,EAAQsrC,cAAgB,IAAM,IACvCt5B,GAAQ,IAAM+R,EAAKghB,YAAYz6B,OAAO,GAAK,KAAO,IAAMyZ,EAAKihB,cAAc16B,OAAO,IAAMtK,EAAQurC,UAAY,GAAK,KAAO,IAAMxnB,EAAKynB,cAAclhC,OAAO,IAE9J,OAAQtK,EAAQyrC,aAAe,IAAM1nB,EAAK4hB,WAAWr7B,OAAO,GAAKyZ,EAAK4hB,WACpE0F,GAAUrrC,EAAQsrC,eAAiB,KAAOvnB,EAAK2hB,WAAa,IAAIp7B,OAAO,GAAK+6B,GAAOthB,EAAK2hB,aACxF2F,EAAStnB,EAAK0hB,eACbzlC,EAAQ0rC,OAAS,GAAK,KAAO15B,IE+FK25B,CAAY,IAAI15B,KAAgB,IAAXu3B,EAAIzlB,MAAc,CAACunB,eAAe,EAAMG,aAAa,IAAOprC,QAAQ,SAAU,KAAKA,QAAQ,KAAM,MAGtJurC,OACgB,QAAbpC,EAAIpnC,MAAkBonC,EAAI/yB,KAAO,KAAqB,UAAb+yB,EAAIpnC,MAAiC,UAAbonC,EAAIpnC,QACvEonC,EAAIC,mBAAoB,EAEH9mC,KAAK+mC,cAAcmC,gBAAgBrC,GACvCxnC,KACfW,KAAK+mC,cAAcoC,mBAAmBtC,OAAKl7B,ECzNtC,SAAwBk7B,EAAwBn1B,GAAW,EAAO03B,GAC/E,IAAI3pC,EAWJ,OATEA,EADCiS,EACM,WACC03B,EACD,QACCvC,EAAIC,kBACL,SAEA,YAGF,QAAWrnC,GAAM,EAAA4pC,GAAA,GAA2BxC,EAAKuC,ID6MME,CAAezC,GAAM,IAS7EA,EAAIa,YACNb,EAAIa,UAAY,IAGG,4BAAlBb,EAAIgB,WAA6D,wBAAlBhB,EAAIa,YACpDb,EAAIpnC,KAAO,UACXonC,EAAI2B,UAAW,EACf3B,EAAIyB,QAAU,GAObjB,EACMxrC,OAAOC,OAAOurC,EAAQR,GAGxBA,EAGF0C,OAAOC,GACZ,OAAO,EAAAroB,GAAA,GAAqBqoB,GAASA,EAAQxpC,KAAK4mC,KAAK4C,GAGlDC,YAAY5C,EAAiB6C,EAAkBC,GACpD,OAAO3pC,KAAKszB,eAAesW,cAAc,CACvCzxB,MAAO0uB,EACP6C,QAAAA,EACAC,UAAAA,IAIGE,qBAAqBL,EAAcM,GACxC,MAAMvhB,EAASvoB,KAAKinC,oBAAoBuC,GACxC,OAAOjhB,GAAUA,EAAOuhB,GAGnBC,kBAAkBP,EAAcjW,EAAYyW,EAAeC,EAAgBH,G,UAChF,MAAMjD,EAAM7mC,KAAKupC,OAAOC,GACxB,IAAI3C,EACF,OAGF,MAAMte,EAAwC,QAAlC,KAAGvoB,KAAKinC,qBAAmB,EAACJ,EAAItoC,WAAE,aAAM,GAE9C6qC,EAAQ7gB,EAAOuhB,GAClBV,GAASA,EAAMtB,GAAKkC,GAASZ,EAAMrB,GAAKkC,IAI3C1hB,EAAOuhB,GAAa,CAClBzqC,IAAKm0B,IAAIC,gBAAgBF,GACzBuU,EAAGkC,EACHjC,EAAGkC,IAIAC,+BAA+BV,EAAcz7B,GAClD,MAAM84B,EAAM7mC,KAAKupC,OAAOC,GACxB,IAAI3C,EACF,OAGF,MAAMuC,EAAQvC,EAAIuB,QAAUvB,EAAIuB,OAAO7kC,MAAM6lC,GAAsB,sBAAZA,EAAM9qC,IACzD8qC,IAIJvC,EAAIhoC,OAAOsrC,uBAAwB,EACnCf,EAAMr7B,MAAQA,GAGTq8B,gBACL,OAAOpqC,KAAKqU,WAAWg2B,kBAAkB,CAACvgC,OAAQ,0BAA0B9E,MAAMslC,IAChF,MAAMC,EAAcD,EAA0DE,WAK9E,OAJAD,EAAWrnC,SAASunC,IAClBA,EAAUzL,SAAWh/B,KAAKonC,QAAQqD,EAAUzL,aAGvCuL,KAIJG,uBAAuBrR,GAC5B,MAAM96B,EAAK,uBAAwBkoC,GAE7B2C,EAAQ,CACZ9qC,EAAG,YACHypC,EAAG,EACHD,EAAG,EACH5pC,SAAU,GACV4V,KAAMulB,EAAKvlB,KACXrU,KAAM,QAER,IAAIu/B,EAAuB,CACzB1gC,EAAG,WACHq2B,YAAa,GACb6S,WAAY,GACZpU,MAAO,EACPkU,eAAgB,GAChB/oC,GAAAA,EACAspC,UAAWxO,EAAK55B,KAChBqU,KAAMulB,EAAKvlB,KACXsN,KAAM9R,KAAKvK,MAAQ,IACnBlG,OAAQ,GACRupC,OAAQ,CAACgB,GACT1B,UAAWrO,EAAKp5B,MAGlB++B,EAAWh/B,KAAKonC,QAAQpI,GAExB,MAAM2L,EAAe3qC,KAAK+mC,cAAcoC,mBAAmBnK,OAAUrzB,EAAW6nB,IAAIC,gBAAgB4F,GAAOA,EAAKvlB,MAE1G82B,EAAiC,CACrCtsC,EAAG,YACHq2B,YAAa,GACbqK,SAAUA,EACVzgC,GAAAA,EACAssC,KAAMtsC,EACNM,OAAQ,IAQV,OALAmB,KAAKknC,oBAAoB3oC,GAAM,CAC7BosC,aAAAA,EACAtR,KAAAA,GAGKuR,EAGFE,gBAAgBvsC,GACrB,MAAM,aAACosC,EAAY,KAAEtR,GAAQr5B,KAAKknC,oBAAoB3oC,GAItD,cAHOyB,KAAKknC,oBAAoB3oC,GAEjByB,KAAKszB,eAAe3hB,OAAO,CAAC0nB,KAAAA,EAAM0R,SAAU1R,EAAKp5B,OAClD+E,MAAMm0B,GACXn5B,KAAKqU,WAAWC,UAAU,0BAA2B,CAC1D+kB,KAAMF,EACN0O,UAAWxO,EAAK55B,KAChBqH,SAAU,CACRxI,EAAG,uBAGJ0G,MAAMylC,KACP,EAAA1d,GAAA,GAAgC0d,GAChCA,EAAUzL,SAAWh/B,KAAKonC,QAAQqD,EAAUzL,UAC5Ch/B,KAAK+mC,cAAcoC,mBAAmBsB,EAAUzL,cAAUrzB,EAAWg/B,EAAatrC,IAAKsrC,EAAaK,YAE7FP,OAKNQ,UACL,OAAOjrC,KAAKqU,WAAWg2B,kBAAkB,CACvCvgC,OAAQ,wBACRqxB,cAAgBhJ,KACd,EAAApF,GAAA,GAAgDoF,GACzCA,EAAI+Y,KAAK9mC,KAAKyiC,GAAQ7mC,KAAKonC,QAAQP,QAKzCsE,eAAe3B,EAAc9gC,EAAcsgB,EAAgBb,GAChE,MAAM0e,EAAM7mC,KAAKupC,OAAOC,GACxB,OAAOxpC,KAAKszB,eAAe8X,gBAAgB1iC,GAAM,EAAA2iC,GAAA,GAAiBxE,GAAM7d,EAAQb,IE1X7E,MAAMmjB,WAAyBn4B,EAAtC,c,oBACU,KAAAo4B,OAAwD,GACxD,KAAAC,mBAAoC,KAElCjvB,QACRvc,KAAK0d,kBAAkBC,2BAA2B,CAChD8tB,mBAAqBvwB,IACnB,MAAM9D,GAAS,EAAAwB,GAAA,GAAUsC,EAAOI,MAChCtb,KAAKinB,UAAU7P,EAAQ8D,EAAOwwB,SAAUxwB,EAAOoI,MAAO,CAACqoB,QAAQ,OAItDzkC,EAAA,MAAiB,UAAUlC,MAAMumC,IAC5CvrC,KAAKurC,OAASA,GAAU,MAIpBK,OAAOx0B,EAAgBs0B,GAC7B,OAAYt0B,GAAUs0B,EAAW,IAAMA,EAAW,IAG7CG,SAASz0B,EAAgBs0B,GAC9B,OAAO1rC,KAAKurC,OAAOvrC,KAAK4rC,OAAOx0B,EAAQs0B,IAGlCrtB,mBACL,OAAOre,KAAK8rC,eAAe9mC,MAAK,KAC9B,IAAI,MAAMqC,KAAOrH,KAAKurC,OAAQ,CAC5B,IAAyB,IAAtBlkC,EAAIhL,QAAQ,KACb,SAGF,MAAM+a,EAAS/P,EAAIZ,WACJzG,KAAKkX,mBAAmB4E,cAAc1E,IAEnDpX,KAAKkX,mBAAmB0H,mBAAmBxH,OAW5C00B,eACL,OAAO9rC,KAAKwrC,qBACVxrC,KAAKwrC,mBAAqBxrC,KAAKqU,WAAWC,UAAU,yBACnDtP,MAAM+gB,KACK/lB,KAAK0d,kBAAkBiQ,aAAaI,aAAepsB,QAAQM,WACnE+C,MAAK,KACLhF,KAAK0d,kBAAkBwQ,qBAAqBnI,UAM7CkB,UAAU7P,EAAgBs0B,EAAkBK,EAAwB1uC,EAGtE,IACH,MAAMimB,EAAQtjB,KAAKgsC,gBAAgBD,GAE7B1kC,EAAMrH,KAAK4rC,OAAOx0B,EAAQs0B,GAqBhC,OApBGpoB,EACDtjB,KAAKurC,OAAOlkC,GAAOic,SAEZtjB,KAAKurC,OAAOlkC,GAGrBH,EAAA,MAAiB,CACfqkC,OAAQvrC,KAAKurC,SAGZluC,EAAQsuC,QAET3rC,KAAKwc,UAAU7V,cAAc,gBAAiB,CAC5CyQ,OAAAA,EACAs0B,SAAAA,EACApoB,MAAAA,EACA2oB,MAAO5uC,EAAQ4uC,QAIZ3oB,EAGD4oB,eAAeC,EAAsBC,GAC3C,UAAS,UAAmB,EAC1B,OAAO,EAGT,KAAI,EAAAjrB,GAAA,GAASgrB,GACX,OAAO,EAGT,GAAGA,EAAO7tC,IAAM8tC,EAAO9tC,EACrB,OAAO,EAGT,GAAgB,iBAAb6tC,EAAO7tC,GAAwB8tC,EAAO9tC,IAAM6tC,EAAO7tC,EAAG,CACvD,GAAG6tC,EAAOE,kBAAoBD,EAAOC,gBACnC,OAAO,EAGT,KAAI,EAAA31B,EAAA,GAAUy1B,EAAOtd,SAAUud,EAAOvd,UACpC,OAAO,EAGT,GAAGsd,EAAOtqC,UAAYuqC,EAAOvqC,QAC3B,OAAO,EAGT,GAAGsqC,EAAOttC,OAAOytC,aAAeF,EAAOvtC,OAAOytC,WAC5C,OAAO,EAIX,OAAO,EAGDC,aAAajpB,GACnB,OAAIA,GAAqB,sBAAZA,EAAMhlB,KAIhBglB,EAAM+oB,gBAAkB,KAIvB/oB,EAAMzhB,QAAQzD,OAOZ4tC,gBAAgB1oB,GACtB,GAAIA,GAAqB,iBAAZA,EAAMhlB,EAQnB,OAJGglB,EAAM+oB,kBACP/oB,EAAM+oB,iBAAkB,EAAAlmB,GAAA,GAAkB7C,EAAM+oB,kBAG3C/oB,EAGIkpB,UAAUp1B,EAAgBs0B,EAAkBe,EAA2BC,GAAe,EAAMT,GAAQ,G,qCAE/G,MAAMU,EAAc3sC,KAAK6rC,SAASz0B,EAAQs0B,GAC1C,GAAG1rC,KAAKksC,eAAeS,EAAaF,GAElC,OAAO,EAIT,IAKIG,EALAl4B,EAA4B,CAC9B4G,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CvV,QAAS,IAIX,GAAG7B,KAAKusC,aAAaE,GACnBG,EAAW,CAACtuC,EAAG,yBACV,EACL,EAAAyuB,GAAA,GAAsC0f,GACtC,IAAI5qC,EAAU4qC,EAAW5qC,QACrBgtB,EAA4B4d,EAAW5d,SAExC4d,EAAWJ,kBACZ33B,EAAO23B,iBAAkB,EAAA9tB,GAAA,GAAmBkuB,EAAWJ,mBAGtDxd,MAAAA,OAAQ,EAARA,EAAUzwB,UACXsW,EAAOma,SAAW7uB,KAAKkX,mBAAmB21B,iBAAiBhe,IAG1D4d,EAAW5tC,OAAOytC,aACnB53B,EAAO43B,WAAaG,EAAW5tC,OAAOytC,YAGxC53B,EAAO7S,QAAUA,EAGnB,MAAMirC,EAAiBF,GAAYH,EAKnC,OAJAK,EAAe1rB,MAAO,EAAAE,GAAA,IAAM,GAAQthB,KAAKuhB,YAAYC,sBAErDxhB,KAAKinB,UAAU7P,EAAQs0B,EAAUoB,EAAgB,CAACnB,QAAQ,EAAMM,MAAAA,MAE7DS,IAAiBhB,IACX1rC,KAAKqU,WAAWC,UAAU,qBAAsBI,I,+RAMpDq4B,iBACL,OAAO/sC,KAAKqU,WAAWC,UAAU,2BAA2BtP,MAAMgnB,IAChE,GAAIA,EAIJ,IAAI,MAAMghB,KAAYhtC,KAAKurC,OAAQ,CACjC,MAAOn0B,EAAQs0B,GAAYsB,EAASxlC,MAAM,KAC1CxH,KAAKwc,UAAU7V,cAAc,gBAAiB,CAC5CyQ,OAAQA,EAAO3Q,WACfilC,SAAUA,GAAYA,OAAW//B,EACjC2X,WAAO3X,QAMRshC,WAAW71B,EAAgBs0B,GAChC,MAAMwB,EAA6C,CACjD5uC,EAAG,qBAGFotC,EACD1rC,KAAKwsC,UAAUp1B,EAAQs0B,EAAUwB,GAAmB,GAAO,GAE3DltC,KAAKinB,UAAU7P,EAAQs0B,EAAUwB,EAAY,CAACvB,QAAQ,EAAMM,OAAO,IAIhEkB,SAAS/1B,EAAgBs0B,EAAkB7pC,EAAiBgtB,GACjE,MAAMvL,EAAmC,CACvChlB,EAAG,eACH8iB,KAAM9R,KAAKvK,MAAQ,IAAO,EAC1BlD,QAAAA,EACAhD,OAAQ,GACRgwB,SAAAA,GAGC6c,EACD1rC,KAAKwsC,UAAUp1B,EAAQs0B,EAAUpoB,GAAO,GAAO,GAE/CtjB,KAAKinB,UAAU7P,EAAQs0B,EAAUpoB,EAAO,CAACqoB,QAAQ,EAAMM,OAAO,K,yBChPpE,MAAMmB,GAAiC,CACrCC,SAAU,GACVzxC,QAAS,EACT81B,SAAU,kBAKL,MAAM4b,WAAwBn6B,EAArC,c,oBAEU,KAAAo6B,iBAEJ,GAGI,KAAAC,iBAAkD,GAElD,KAAAC,oBAAoE,GAiErEC,iBAAiBhc,EAAmB,kBACzC,MAAM9mB,EAAU5K,KAAKytC,oBAAoB/b,GACzC,GAAG9mB,EACD,OAAOA,EAGT,MAAM+iC,EAAkB,iBAAmBjc,EAC3C,OAAO1xB,KAAKytC,oBAAoB/b,GAAYxqB,EAAA,MAAiBymC,GAAY3oC,MAAM4oC,KACzE,EAAAzsB,GAAA,GAASysB,KACXA,EAAO,KAGT,EAAAC,GAAA,GAAmBT,GAAiBQ,GAGpCA,EAAKlc,SAAWA,EAChB1xB,KAAKutC,iBAAiB7b,GAAYkc,EAE3B5tC,KAAKqU,WAAWC,UAAU,sCAAuC,CACtEspB,UAAWgQ,EAAKlc,SAChBiM,aAAciQ,EAAKhyC,UAClBoJ,MAAM8oC,IACPF,EAAKhyC,QAAUkyC,EAAmBlyC,QAElC,MAAMmyC,EAAeH,EAAKP,SACpBA,EAAWS,EAAmBT,SACpC,IAAI,IAAIxnC,EAAI,EAAGzH,EAASivC,EAASjvC,OAAQyH,EAAIzH,IAAUyH,EAAG,CACxD,MAAM,QAACmoC,EAAO,UAAEC,GAAaZ,EAASxnC,GACtCkoC,EAAaC,GAAWC,EAO1B,OAJA/mC,EAAA,MAAiB,CACf,CAACymC,GAAaC,IAGTA,KACN,IACMA,OAKNM,uBACL,MAAM9lB,EAA2B,CAC/BpoB,KAAK0tC,oBAWP,OARG,2BAA+B,kBAChCtlB,EAAS9nB,KAAKN,KAAK0tC,iBAAiB,2BAGlC1tC,KAAKmuC,QACP/lB,EAAS9nB,KAAKN,KAAKouC,mBAGdzsC,QAAQmR,IAAIsV,GAGbimB,cACFruC,KAAKmB,QACPnB,KAAKmB,MAAQ,IAAI,UAAYwK,EAAW,IAG1C,IAAI,MAAM+lB,KAAY1xB,KAAKutC,iBAAkB,CAC3C,GAAGvtC,KAAKwtC,iBAAiB9b,GACvB,SAGF,MACM2b,EADOrtC,KAAKutC,iBAAiB7b,GACb2b,SAEtB,IAAI,MAAMW,KAAWX,EAAU,CAC7B,MAAMY,EAAYZ,EAASW,GAC3BhuC,KAAKmB,MAAM2b,YAAYmxB,EAAWD,GAGpChuC,KAAKwtC,iBAAiB9b,IAAY,GAI/B4c,aAAajJ,GAMlB,IAAIkJ,EACJ,GANAvuC,KAAKquC,eAELhJ,EAAIA,EAAEjpC,cAAcsB,QAAQ,KAAM,MAI7B6nC,OAAQ,CACX,MAAMp9B,EAAMnI,KAAKmB,MAAMhF,OAAOkpC,GAC9BkJ,EAASztC,MAAMC,KAAKoH,GAAKqmC,QAAO,CAACC,EAAKtQ,IAAMsQ,EAAIvqC,OAAOi6B,IAAI,SAE3DoQ,EAASvuC,KAAKmuC,OAAOjqC,OAAOopC,GAAgBoB,eAAe/mC,MAAM,EAvK7C,IAmLtB,OATA4mC,EAASztC,MAAMC,KAAK,IAAIyV,IAAI+3B,IASrBA,EAGFH,kBACL,OAAGpuC,KAAK2uC,uBAA+B3uC,KAAK2uC,uBACrC3uC,KAAK2uC,uBAAyB3uC,KAAK+d,gBAAgB5W,WAAWnC,MAAMiC,GAClEjH,KAAKmuC,OAASrtC,MAAMmD,QAAQgD,EAAM2nC,aAAe3nC,EAAM2nC,YAAc,KAIzEC,gBAAgBC,GACrBA,GAAQ,EAAAC,GAAA,GAASD,GACjB9uC,KAAKouC,kBAAkBppC,MAAMmpC,KAC3B,EAAAjlC,EAAA,GAAiBilC,EAAQW,GACzBX,EAAO1mB,QAAQqnB,GACZX,EAAO/vC,OAlMU,KAmMlB+vC,EAAO/vC,OAnMW,IAsMpB4B,KAAK+d,gBAAgBhW,YAAY,cAAeomC,GAChDnuC,KAAKwc,UAAU7V,cAAc,eAAgBmoC,OApMlC,GAAAJ,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,M,2SCQjO,MAAMM,WAA6B77B,EAS9BoJ,QACRvc,KAAKG,KAAM,EAAAsJ,EAAA,IAAO,eAElBzJ,KAAKivC,WAAa,IAAIzmC,IACtBxI,KAAKkvC,aAAe,IAAI1mC,IACxBxI,KAAKmvC,YAAc,IAAI3mC,IAEvBxI,KAAK0d,kBAAkBC,2BAA2B,CAChDyxB,gBAAkBl0B,IAChBlb,KAAKqvC,cAAcn0B,EAAOoZ,KAAMpZ,EAAO9B,UAGzCk2B,4BAA8Bp0B,IAC5Blb,KAAKqvC,cAAcn0B,EAAOoZ,MAI1B,MAAMib,EAAcr0B,EAAOoZ,KAAK/1B,GAChCyB,KAAKwvC,oBAAoBD,EAAar0B,EAAOg0B,iBAIjDlvC,KAAKwc,UAAUhW,iBAAiB,qBAAsBipC,IACjC,uBAAhBA,EAAUnxC,GACX0B,KAAKkvC,aAAanrC,OAAO0rC,EAAUlxC,OAKlCmxC,sBAAsBH,GAC3B,IAAIL,EAAelvC,KAAKkvC,aAAaxqC,IAAI6qC,GAKzC,OAJIL,GACFlvC,KAAKkvC,aAAa/mC,IAAIonC,EAAaL,EAAe,IAAI1mC,KAGjD0mC,EAGDS,0BAA0BJ,GAChC,MAAMK,EAAiB5vC,KAAKmvC,YAQtBU,EAAaD,EAAelrC,IAAI6qC,GACtC,MAAO,CACLM,WAAAA,EACAC,cATqBC,IAClBH,EAAelrC,IAAI6qC,KAAiBM,GACrCD,EAAeznC,IAAIonC,EAAaQ,KAW/BC,mBAAmBT,EAA0B7V,EAAmCuW,GACrF,MAAMf,EAAelvC,KAAK0vC,sBAAsBH,GAE1Cn4B,GAAS,EAAAwB,GAAA,GAAU8gB,EAAYpe,MAE/B40B,EAAiBhB,EAAaxqC,IAAI0S,GAClC+4B,EAAUzW,EAAY76B,OAAO8G,KACnC,IAAIuqC,GAAkBC,EACpB,OAIEzW,EAAY76B,OAAOuxC,OAAU1W,EAAY76B,OAAOwxC,kBAClD3W,EAAY76B,OAAOwxC,iBAAkB,GAGpCH,GACDv4B,GAAkBu4B,EAAgBxW,GAClCA,EAAcwW,GAEdhB,EAAa/mC,IAAIiP,EAAQsiB,GAIzB,MAAM+V,EAAYzvC,KAAKswC,aAAaf,GACpC,GAAoB,eAAjBE,MAAAA,OAAS,EAATA,EAAWnxC,GAAmB,CAC/B,IAAIiyC,GAAW,EACZJ,KACCV,EAAU/Y,mBACZ6Z,GAAW,IACH7W,EAAY76B,OAAO2xC,aAAgBN,GAAmBxW,EAAY76B,OAAOqwB,SAC/EugB,EAAU/Y,mBACZ6Z,GAAW,GAGVA,GACDvwC,KAAKwc,UAAU7V,cAAc,oBAAqB8oC,GAKrDU,GACDjB,EAAanrC,OAAOqT,GAIpBpX,KAAKwc,UAAU7V,cAAc,yBAA0B,CACrD4oC,YAAAA,EACA7V,YAAAA,IAKC8V,oBAAoBD,EAA0BkB,EAAyCR,GACxFQ,EAAwB1d,QAC3B0d,EAAwB1d,OAAQ,EACjC0d,EAAgBvtC,SAASmxB,GAAMr0B,KAAKgwC,mBAAmBT,EAAalb,EAAG4b,MAG5DS,gBAAgBnB,EAA0B7V,EAAmCr8B,G,0CAQxF2C,KAAKgwC,mBAAmBT,EAAa7V,GAErC,MAAMtiB,EAASsiB,EAAY76B,OAAOqwB,KAAO,MAAe,EAAAtW,GAAA,GAAU8gB,EAAYpe,MACxEyK,QAAgB/lB,KAAKqU,WAAWwY,gBAAgB,iCAAkC,CACtFyH,KAAMt0B,KAAK2wC,kBAAkBpB,GAC7B7V,YAAatiB,IAAW,KAAepX,KAAK4c,gBAAgBg0B,mBAAqB5wC,KAAK4c,gBAAgB8O,iBAAiBtU,GACvHg5B,MAAO/yC,EAAQ+yC,MACfS,OAAQxzC,EAAQwzC,OAChBC,WAAYzzC,EAAQ0zC,UACpBC,aAAc3zC,EAAQ4zC,YACtBC,cAAe7zC,EAAQ8zC,aACvBC,oBAAqB/zC,EAAQg0C,qBAK/BrxC,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIvCuqB,aAAa/xC,GAClB,OAAOyB,KAAKivC,WAAWvqC,IAAInG,GAGhB+yC,iBAAiB/yC,EAAiBwwB,G,0CAC7C,MAAMuF,EAAOt0B,KAAKswC,aAAa/xC,GAC/B,GAAG+1B,GAAmB,mBAAXA,EAAKh2B,IAA2BywB,EACzC,OAAOuF,EAGT,MAAMnM,EAAQnoB,KAAK0vC,sBAAsBnxC,GAAIuV,KAAO,EApKzB,IAqK3B,OAAO9T,KAAKqU,WAAW6mB,uBAAuB,CAC5CpxB,OAAQ,qBACR4K,OAAQ,CACN4f,KAAMt0B,KAAK2wC,kBAAkBpyC,GAC7B4pB,MAAAA,GAEFgT,cAAgBsU,IAEdzvC,KAAKyc,gBAAgB8I,aAAakqB,EAAUz2B,OAC5ChZ,KAAKud,gBAAgBiI,aAAaiqB,EAAUhqB,OAC5CzlB,KAAKwvC,oBAAoBjxC,EAAIkxC,EAAUP,cAAc,GACrD,MAAM5a,EAAOt0B,KAAKqvC,cAAcI,EAAUnb,MAM1C,OAJGnM,QAAsCxc,IAA7B3L,KAAKmvC,YAAYzqC,IAAInG,IAC/ByB,KAAKmvC,YAAYhnC,IAAI5J,EAAIkxC,EAAU8B,0BAG9Bjd,QAKN+a,cAAc/a,EAAmBjb,GACtC,MAAMmb,EAAUx0B,KAAKivC,WAAWvqC,IAAI4vB,EAAK/1B,IACnCizC,EAA0B,mBAAXld,EAAKh2B,KAA4Bk2B,GAAyB,uBAAdA,EAAQl2B,GAezE,OAdGk2B,GACEgd,GACD75B,GAAkB6c,EAASF,GAG7BA,EAAOE,GAEPx0B,KAAKivC,WAAW9mC,IAAImsB,EAAK/1B,GAAI+1B,GAG5Bkd,GACDxxC,KAAKwc,UAAU7V,cAAc,oBAAqB2tB,GAG7CA,EAGImd,gBAAgBp4B,EAAgBq4B,EAAuB7a,G,0CAClE,MAAM9Q,QAAgB/lB,KAAKqU,WAAWC,UAAU,wBAAyB,CACvEgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBrS,EAAO5S,UAAS,IAC5D6uB,WAAW,QAAe,IAC1Bqc,cAAeD,EACf7a,MAAAA,IAMF,OAHA72B,KAAK0d,kBAAkBwQ,qBAAqBnI,GAE5BA,EAA4BA,QAAQxiB,MAAM2X,GAAwB,oBAAbA,EAAO5c,IAC9Dg2B,QAGTqc,kBAAkBpyC,GACvB,MAAMkxC,EAAYzvC,KAAKswC,aAAa/xC,GACpC,MAAO,CACLD,EAAG,iBACHC,GAAIkxC,EAAUlxC,GACdo2B,YAAa8a,EAAU9a,aAqBdid,yBAAyBrzC,G,0CACpC,MAAM,WAACsxC,EAAU,cAAEC,GAAiB9vC,KAAK2vC,0BAA0BpxC,GAwBnE,MAtBkB,KAAfsxC,UACK7vC,KAAKqU,WAAW6mB,uBAAuB,CAC3CpxB,OAAQ,6BACR4K,OAAQ,CACN4f,KAAMt0B,KAAK2wC,kBAAkBpyC,GAC7BszC,IAAK,GACLC,QAAS,GACT9oB,OAAQ6mB,GAAc,GACtB1nB,MAlQqB,KAoQvBgT,cAAgB4W,IACd,MAAMhC,EAAgBgC,EAAsBj3B,QAAUi3B,EAAsB7C,aAAa9wC,OAAS,GAAK2zC,EAAsBC,YAE7HhyC,KAAKud,gBAAgBiI,aAAausB,EAAsBtsB,OACxDzlB,KAAKyc,gBAAgB8I,aAAawsB,EAAsB/4B,OACxDhZ,KAAKwvC,oBAAoBjxC,EAAIwzC,EAAsB7C,cAEnDY,EAAcC,OAKb,CACLb,aAAclvC,KAAK0vC,sBAAsBnxC,GACzC8oB,MAAoC,KAA7BrnB,KAAKmvC,YAAYzqC,IAAInG,OAIzB0zC,OAAO1zC,EAAiB2zC,GAC7B,MAAMC,EAAiBnyC,KAAK2wC,kBAAkBpyC,GAC9C,IAAIqM,EAuBJ,OArBEA,EADqB,kBAAd,GAA2BsnC,EACxBlyC,KAAKqU,WAAWC,UAAU,yBAA0B,CAC5DggB,KAAM6d,IAEoB,iBAAd,EACJnyC,KAAKqU,WAAWC,UAAU,uBAAwB,CAC1DggB,KAAM6d,EACNC,OAAQF,IAGAlyC,KAAKqU,WAAWC,UAAU,sBAAuB,CACzDggB,KAAM6d,EACNE,QAAS,CAAC/zC,EAAG,iBACb8xC,OAAO,EACPc,eAAe,EACfx8B,OAAQ,CACNpW,EAAG,WACHiN,KAAM,MAKLX,EAAQ5F,MAAM+gB,IACnB/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAInCusB,cAAc/C,EAA0B76B,EAAkBrX,G,0CACrE,MAAM80C,EAAiBnyC,KAAK2wC,kBAAkBpB,GAC9C,IAAI3kC,EACJ,GAAoB,SAAjBvN,EAAQoC,KAAiB,CAC1B,MAAM+B,EAA8B,CAClC8yB,KAAM6d,EACNE,QAAS,CAAC/zC,EAAG,iBACboW,OAAAA,EACA07B,MAAO/yC,EAAQk1C,QACfrB,eAAgB7zC,EAAQm1C,WAG1B5nC,EAAU5K,KAAKqU,WAAWC,UAAU,sBAAuB9S,GAC3DxB,KAAKG,IAAI,0BAA0BovC,IAAe/tC,OAC7C,CACL,MAAMA,EAA0C,CAC9C8yB,KAAM6d,EACNz9B,OAAAA,GAGF9J,EAAU5K,KAAKqU,WAAWC,UAAU,kCAAmC9S,GACvExB,KAAKG,IAAI,sCAAsCovC,IAAe/tC,GAGhE,MAAMukB,QAAgBnb,EAItB,OAHA5K,KAAK0d,kBAAkBwQ,qBAAqBnI,GAE5BA,EAA4BA,QAAQxiB,MAAM2X,GAAwB,8BAAbA,EAAO5c,OAIvEm0C,2BAA2BlD,GAChC,OAAOvvC,KAAKqU,WAAWC,UAAU,mCAAoC,CACnEggB,KAAMt0B,KAAK2wC,kBAAkBpB,KAC5BvqC,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,OCnXnC,SAAS2sB,GAAczf,GACpC,MAAO,CACL30B,EAAG,aACHC,GAAI00B,EAAM10B,GACVo2B,YAAa1B,EAAM0B,YACnB2S,eAAgBrU,EAAMqU,gBCJX,SAASqL,GAAmB1f,GACzC,MAAO,CACL30B,EAAG,kBACHC,GAAIm0C,GAAczf,GAClB2f,YAAa,G,cCNF,SAASC,GAAchM,GACpC,MAAO,CACLvoC,EAAG,qBACHC,GAAI,CACFD,EAAG,gBACHC,GAAIsoC,EAAItoC,GACRo2B,YAAakS,EAAIlS,YACjB2S,eAAgBT,EAAIS,gBAEtBsL,YAAa,GCKV,MAAME,WAA6B3/B,EAA1C,c,oBACU,KAAA4/B,cAAgE,GAChE,KAAAC,QAKJ,GAEGC,YAAYC,GACjB,MAAiB,aAAVA,EAAI50C,EAAmB,CAC5BA,EAAG,gBACH60C,IAAKD,EAAIC,IACTC,KAAMF,EAAIE,KACVC,gBAAiBH,EAAIG,iBACnB,CACF/0C,EAAG,sBAIAg1C,iBAAiBl8B,EAAgBm8B,EAAc14B,EAAQ,GAAImO,EAAS,GAAIkqB,GAC7E,OAAOlzC,KAAKqU,WAAWC,UAAU,+BAAgC,CAC/Dk/B,IAAKxzC,KAAKyc,gBAAgB4Y,aAAake,GACvCj4B,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CyD,MAAAA,EACA44B,UAAWP,EAAMlzC,KAAKizC,YAAYC,QAAOvnC,EACzCqd,OAAAA,GACC,CAAmB0qB,UAAW,EAAG/hB,YAAY,IAAO3sB,MAAM2uC,IAC3D,MAAMC,EAAUD,EAAWE,SAoB3B,OAdAF,EAAWtuC,QAAQnC,SAASd,IACV,yBAAbA,EAAO9D,IACL8D,EAAO48B,WACR58B,EAAO48B,SAAWh/B,KAAK8zC,eAAe1M,QAAQhlC,EAAO48B,WAGpD58B,EAAO6wB,QACR7wB,EAAO6wB,MAAQjzB,KAAK+zC,iBAAiBC,UAAU5xC,EAAO6wB,SAI1DjzB,KAAK+yC,eAAc,EAAAkB,GAAA,GAAYL,EAASxxC,EAAO7D,KAAO6D,KAGjDuxC,KAIHO,eAAeX,GACrBvzC,KAAKyc,gBAAgB03B,YAAY,eAAenvC,MAAMovC,IACpD,MAAMC,EAAYd,EAAM9sC,WAClBtF,EAAQizC,EAASt0B,WAAWw0B,GAAYA,EAAQ/1C,KAAO81C,IAC7D,IAAIC,EAEFA,GADY,IAAXnzC,EACSizC,EAASjzC,GAET,CACR5C,GAAI81C,EACJE,OAAQ,KAIVD,EAAQC,QACV,EAAAvyB,GAAA,GAA2BoyB,EAAUE,EAAS,UAE9Ct0C,KAAK+d,gBAAgB7V,qBAAqB,oBAMvCssC,WAAWC,EAAoBlB,EAAcmB,GAElD,OADA10C,KAAKgzC,QAAQO,GAAS,CAACn8B,OAAQq9B,EAAYplC,KAAMC,KAAKvK,OAC/C/E,KAAKkX,mBAAmBy9B,SAASpB,OAAO5nC,EAAW+oC,GA8G/CE,kBAAkBrB,G,qCAC7B,MAAMC,EAAMxzC,KAAKyc,gBAAgBo4B,QAAQtB,GACzC,IAAIC,IAAQA,EAAI30C,OAAO20C,MAAQA,EAAIsB,uBACjC,OAGF,MAAMC,EAAW/0C,KAAKgzC,QAAQO,GAC9B,OAAGwB,WACM/0C,KAAKgzC,QAAQO,GAChBjkC,KAAKvK,MAAQgwC,EAAS1lC,KAAQ,MACzB0lC,EAAS39B,YAHpB,G,+RAQK49B,kBAAkB59B,EAAgBs0B,EAAkB6H,EAAc14B,GACvE7a,KAAKoe,iBAAiB+uB,SAAS/1B,EAAQs0B,EAAU,IAAM1rC,KAAKyc,gBAAgBo4B,QAAQtB,GAAOta,SAAW,IAAMpe,GAGvGo6B,oBAAoB79B,EAAgB4M,EAAakxB,GACtD,OAAOl1C,KAAKqU,WAAWC,UAAU,gCAAiC,CAChEgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C+9B,QAAQ,EAAA52B,GAAA,GAAmByF,GAC3BzY,KAAM2pC,EAAO3pC,MACZ,CAAmBmoC,UAAW,EAAG/hB,YAAY,IAqB3CyjB,iBAAiBh+B,EAAgBm8B,EAAc8B,EAA2Bh4C,EAY5E,I,MACH,MAAMi4C,EAAet1C,KAAK+yC,cAAcsC,GACxC,IAAIC,EACF,OAGFt1C,KAAKk0C,eAAeX,GACpB,MAAMhsC,EAAW8tC,EAAkB7tC,MAAM,KACnC+tC,EAAUhuC,EAAS0H,QACnBumC,EAAWjuC,EAAS5I,KAAK,KAQ/B,GAPAtB,EAAQ4a,SAAWs7B,EACnBl2C,EAAQu2C,QAAU2B,EAClBl4C,EAAQo4C,SAAWD,EAChBF,EAAaI,aAAaC,eAC3Bt4C,EAAQu4C,YAAcN,EAAaI,aAAaC,cAGf,yBAAhCL,EAAaI,aAAap3C,EAC3BjB,EAAQwxB,SAAWymB,EAAaI,aAAa7mB,SAC7C7uB,KAAKkX,mBAAmB2+B,SAASz+B,EAAQk+B,EAAaI,aAAa7zC,QAASxE,OACvE,CACL,IACIy4C,EADAC,EAAU,GAEd,MAAMC,EAAcV,EAAaI,aACjC,OAAOM,EAAY13C,GACjB,IAAK,4BAGH,GAFAy3C,EAAUC,EAAYn0C,QAEA,yBAAnByzC,EAAah3C,EAA8B,CAC5C,MAAM,SAAC0gC,EAAQ,MAAE/L,GAASqiB,EAExBQ,EADC9W,EACY,GAAsBA,GAEtB2T,GAAmB1f,GAIpC,MAGF,IAAK,2BACH6iB,EAAa,CACXx3C,EAAG,qBACHm1C,UAAWzzC,KAAKizC,YAAY+C,EAAY9C,MAG1C71C,EAAQ44C,SAAWD,EAAY9C,IAE/B,MAGF,IAAK,6BACH4C,EAAa,CACXx3C,EAAG,kBACHm1C,UAAWzzC,KAAKizC,YAAY+C,EAAY9C,KACxCrc,MAAOmf,EAAYnf,MACnBqf,QAASF,EAAYE,QACrBC,SAAUH,EAAYG,SACtBC,SAAUJ,EAAYI,SACtBC,WAAYL,EAAYK,YAG1Bh5C,EAAQ44C,SAAWD,EAAY9C,IAE/B,MAGF,IAAK,+BACH4C,EAAa,CACXx3C,EAAG,oBACHg4C,aAAcN,EAAYM,aAC1BC,WAAYP,EAAYO,WACxBC,UAAWR,EAAYQ,UACvBC,MAAOT,EAAYS,OAOrBX,IACFA,EAAa,CACXx3C,EAAG,sBACHmB,KAAM61C,EAAa71C,KACnBioC,UAAW4N,EAAaze,QACmC,QAAxD,EAAAye,EAAiDoB,eAAO,eAAEr3C,MAC1Di2C,EAAiDj2C,IACpDyU,KAAM,EACN6iC,SAAU,CAACC,QAAS,GAAIC,MAAO,KAInC72C,KAAKkX,mBAAmB4/B,UAAU1/B,EAAQ0+B,EAAYz4C,K,eC7VrD,MAAM05C,GAAb,cACU,KAAAC,QAAU,EAEX3wB,sBAAsBtX,GAC3B,MAAMkoC,IAAQj3C,KAAKg3C,QACnB,OAAO,EAAA7wB,GAAA,GAAkBpX,IAAckoC,EAAO,KAAuB,I,0BCoDzE,MAAMC,GAAuB,IAjDtB,MAAP,cACU,KAAAC,SAA2B,WAA0D,IAA5C,oBAAoBj5C,SAASk5C,UAEvEC,cAAcC,GACnB,IAAGt3C,KAAKm3C,SAIR,OAAOI,GAAA,MAAmB,aAAavyC,MAAMwyC,IAC3C,MAAMC,GAAK,EAAAn2B,GAAA,IAAM,GACjB,GACEg2B,IACAE,MAAAA,OAAQ,EAARA,EAAUF,eAAgBA,GACzBE,EAASC,GAAK,MAASA,EAExB,OAGFF,GAAA,MAAmB,CACjBG,UAAW,CACTJ,YAAAA,EACAG,GAAAA,KAIJ,MAAMzmC,EAAO,oBAAoBsmC,EAAc,IAAM,eAAe53C,mBAAmB,YAAc,IAAM,cAMrG0oB,EALO,CACX,iBAAmBpX,EACnB,UAAYA,GAGQ5M,KAAK/E,IACzB,MAAMs4C,EAAS3Y,SAASW,cAAc,UAChC/0B,EAAU,IAAIjJ,SAAeM,IACjC01C,EAAOC,OAASD,EAAO31C,QAAU,KAC/B21C,EAAO9rB,SACP5pB,QAKJ,OAFA01C,EAAOE,IAAMx4C,EACb2/B,SAASp1B,KAAKkuC,YAAYH,GACnB/sC,KAGT,OAAOjJ,QAAQmR,IAAIsV,QAMzB,OAAmB,0BAAsC8uB,IACzD,Y,0BCpEe,SAASa,GAAoB15C,EAAa25C,GACvD,GAAG35C,EAAID,OAAS45C,EAAW,MAAO,CAAC35C,GACnC,IAAID,EAAS,EAAG65C,EAAsB,EAAGC,EAAa,EACtD,MACMr+B,EAAgB,GAEhBs+B,EAAOC,IACX,IAAIC,EAAOh6C,EAAIsJ,MAAMswC,EAAqBG,GAC1C,MAAME,EAAcJ,IACjBG,EAAKj6C,OAAS45C,IAEED,GADEM,EAAK1wC,MAAMqwC,GACqBA,GAC1C90C,SAASm1C,IAChBx+B,EAAIq+B,KAAgBG,KAGtBA,EAAOA,EAAK1wC,MAAM,EAAGqwC,IAGvBC,EAAsBG,EACtBh6C,EAAS,EACTyb,EAAIy+B,IAAgBz+B,EAAIy+B,IAAgB,IAAMD,GAGhD,IAAI/Y,EAAY,EAChB,OAAG,CACD,IAAIn+B,EAAQ9C,EAAIhC,QAvBA,IAuBmBijC,GACnC,IAAc,IAAXn+B,EAAc,CACZm+B,IAAejhC,EAAID,OAAS,GAC7B+5C,IAGF,MAGFh3C,GAhCgB,IAgCG/C,OAEnB,MAAMm6C,EAAap3C,EAAQm+B,EACvBlhC,EAASm6C,EAAcP,GACzBG,EAAI/5C,GAGNkhC,EAAYn+B,EACZ/C,GAAUm6C,EAGZ,OAAO1+B,E,sECGT,MAAM2+B,GAAiB,IAlChB,MAGL14C,cACEE,KAAKy4C,KAAO,IAAIjwC,IAGXkwC,QACQ,kBAERlyC,iBAAiB,YAAY,CAACS,EAAOmrC,KAC5BpyC,KAAKy4C,KAAK/zC,IAAI0tC,GACtBnrC,MAAQA,KAIT0xC,UACL,MAAO,IAAI34C,KAAKy4C,KAAK3hC,UAAUrY,QAAQm6C,KAAUA,EAAI3xC,QAGhD4xC,OAAOzG,GACZ,MAAMwG,EAAW,CACfxG,OAAAA,EACAnrC,WAAO0E,GAGT3L,KAAKy4C,KAAKtwC,IAAIiqC,EAAQwG,GAGjBE,UAAU1G,GACfpyC,KAAKy4C,KAAK10C,OAAOquC,KAKrB,OAAmB,oBAAgCoG,IACnD,Y,sTCeA,MAwEMO,GAAgBC,IAEpBA,KAGK,MAAMC,WAA2B9lC,EAAxC,c,oBA2BU,KAAA+lC,kBAEJ,GACI,KAAAC,mBAA4C,GAC5C,KAAAC,iBAAwD,GACzD,KAAAvzB,eAA6C,GAC5C,KAAAwzB,sBAOJ,GAEI,KAAAC,sBAAwB,IAAI,KAAkB,IAE9C,KAAAC,mBAA6G,IAAI/wC,IACjH,KAAAgxC,2BAA4C,KAE5C,KAAAC,UAAY,EAEb,KAAA5yB,eAA6C,GAC7C,KAAAC,eAA6C,GAG5C,KAAA4yB,mBAAiD,GAClD,KAAA1zB,8BAAiE,GAEhE,KAAA2zB,2BAA6B,EAC7B,KAAAC,sBAIH,GAGG,KAAAC,yBAAiH,IAAIrxC,IAEtH,KAAArI,KAAM,EAAAsJ,EAAA,IAAO,WAAY,WAAiB,WAAiB,KAAAD,IAAe,WAEzE,KAAAswC,cAAgB,EAEhB,KAAAC,QAA6E,GAI7E,KAAAC,eAA0D,GAC1D,KAAAC,wBAA+D,GAE/D,KAAAC,aAKJ,GAuJG,KAAA71C,MAASkI,IACXvM,KAAKm6C,WACNn6C,KAAKm6C,WAAWC,SAEhBp6C,KAAKm6C,YAAa,UAClBn6C,KAAKq6C,mBAAqB,IAG5Br6C,KAAKs6C,wBAA0B,GAC/Bt6C,KAAKu6C,uBAAyB,GAC9Bv6C,KAAKw6C,yBAA2B,GAChCx6C,KAAKy6C,iBAAmB,GACxBz6C,KAAK06C,eAAiB,GACtB16C,KAAK26C,gBAAkB,GACvB36C,KAAK46C,eAAiB,GACtB56C,KAAK66C,iCAAmC,GACxC76C,KAAK86C,iBAAmB,GAExB96C,KAAKgoB,gBAAkBhoB,KAAKgoB,eAAe3jB,MAAMkI,GACjDvM,KAAKggB,gBAAkBhgB,KAAKggB,eAAe3b,MAAMkI,IA2lG3C,KAAAwuC,iBAAmB,KACzB,IAAIC,EAAe,EACnB,MAAMjpC,EAAM/R,KAAK05C,mBACjB,IAAI,MAAMtiC,KAAUrF,EAAK,CACvB,MAAMiI,EAASjI,EAAIqF,GACf4C,GAIFha,KAAKgoB,eAAerM,WAAW3B,GAC3Bha,KAAK4c,gBAAgBuG,UAAU/L,EAAO3Q,cACxCu0C,EAAe77B,KAAKyD,IAAIo4B,EAAchhC,EAAOsE,aAAe,MAL9Dte,KAAK4e,mBAAmBxH,EAAO3Q,mBACxBsL,EAAIqF,IAWK,IAAjB4jC,GACDh7C,KAAKi7C,mBAAmBD,GAG1Bh7C,KAAKwc,UAAU7V,cAAc,sBAAuBoL,GACpD/R,KAAK05C,mBAAqB,IAmXpB,KAAAwB,oBAAsB,KAC5BvrC,EAAA,eAAiB3P,KAAK25C,4BACtB35C,KAAK25C,2BAA6B,EAKlC,IAAI,MAAMwB,KAAWn7C,KAAK45C,sBAAuB,CAC/C,MAAMxiC,EAAS+jC,EAAQ10C,WAKjB20C,EAAqBp7C,KAAK45C,sBAAsBxiC,GACtDpX,KAAKq7C,sBAAsBjkC,GAAQpS,MAAK,EAAEorC,MAAAA,EAAOkL,uBAAAA,MAC/C,MAAM98B,EAAa48B,EAAmB58B,WAClC4xB,IAAU5xB,EAAW3f,OAAO08C,YAAe/8B,EAAW3f,OAAOsoB,QAK5D3I,EAAW3f,OAAOsoB,QACnBnnB,KAAKw7C,mBAAmBh9B,EAAY,CAClCi9B,SAAUL,EAAmBK,SAC7BH,uBAAAA,OAOVt7C,KAAK45C,sBAAwB,IAGvB,KAAA8B,kBAAqBxgC,IAC3B,MAAM4gB,EAAW5gB,EAAOoa,UAClBqmB,EAAc37C,KAAKk5C,kBAAkBpd,GAE3C,GAAG6f,EAAa,CACd,MAAM,OAACvkC,EAAM,OAAEwkC,EAAM,SAAElQ,EAAQ,QAAEhoC,GAAWi4C,EACtC33B,GAAM,EAAAmC,GAAA,GAAkBjL,EAAO3c,IAC/BsD,EAAU7B,KAAKikB,sBAAsBvgB,EAASsgB,GACjDniB,GACD,CAAC7B,KAAK2jB,kBAAkBvM,GAASs0B,EAAW1rC,KAAK2jB,kBAAkBvM,EAAQs0B,QAAY//B,GACtFlN,OAAOC,SACPwE,SAASQ,IACRA,EAAQogB,QAAQ/f,OAAO63C,MAGzB57C,KAAK67C,gCAAgCn4C,EAASk4C,EAAQ/5C,IAEtD7B,KAAKm5C,mBAAmBn1B,GAAO8X,IAK7B,KAAAggB,mBAAsB5gC,I,MAC5B,MAAMrZ,EAAUqZ,EAAOrZ,QACjBuV,EAASpX,KAAK+7C,eAAel6C,GAC7B6B,EAAU1D,KAAK6jB,0BAA0BzM,GACzC4C,EAASha,KAAK8b,cAAc1E,GAG5B4kC,EAAmC,+BAAb9gC,EAAO5c,EAGnC0B,KAAKye,aAAa,CAAC5c,GAAU,CAAC6B,QAAS1D,KAAKi8C,qBAAqB7kC,EAAQ,aAEzE,MAAM8kC,EAAYl8C,KAAKm8C,aAAat6C,GAC9B6pC,EAAWwQ,GAAaA,EAAU10C,MAAM,KAAK,QAAKmE,EACxD,GAAG+/B,IAAasQ,GAAuBh8C,KAAK06C,eAAetjC,IAAWpX,KAAK06C,eAAetjC,GAAQs0B,GAAW,CAC3G,MAAMxwB,EAAS,CACb5c,EAAG,6BACHuD,QAAAA,GAGF7B,KAAK87C,mBAAmB5gC,GAG1B,IAAIlB,IAAWgiC,EAAqB,CAClC,IAAIxkB,GAAO,EAKX,GAJGpgB,EAAOiN,cACRmT,EAAOx3B,KAAKud,gBAAgBga,SAASngB,EAAOgM,aAG3CoU,EAAM,CACP,MAAMrvB,EAAgD,QAA1C,EAAAnI,KAAKgmB,8BAA8B5O,UAAO,QAAKpX,KAAKgmB,8BAA8B5O,GAAU,IAAIZ,IAC5G,GAAGrO,EAAIygB,IAAI1N,GAET,YADAlb,KAAKG,IAAIZ,MAAM,mBAAoB6X,GAIpC8D,EAAekhC,gBAAiB,EACjCj0C,EAAIwO,IAAIuE,GACRlb,KAAK4b,yBAAyBxE,GAGhC,OAUFpX,KAAKye,aAAa,CAAC5c,GAAU,CAAC6B,QAAAA,IAOP1D,KAAKq8C,oBAAoBx6C,GAAhD,MACM6hB,EAAiB1jB,KAAK2jB,kBAAkBvM,EAAQ4kC,EAAsBtQ,OAAW//B,GAEnFqwC,GACFh8C,KAAKs8C,6BAA6Bz6C,GAIpC,MAAMu6C,EAA2BlhC,EAAekhC,eAEhD,GADqB14B,EAAeI,QAAQy4B,UAAU16C,EAAQmiB,MAE5D,IAAIo4B,EACF,OAAO,MAEJ,CAEL,MAAMI,EAAa94B,EAAeI,QAAQhc,MAC1C,GAAG00C,EAAWn1B,MAAM,aAAkB,CACpC,IAAIxhB,EAAI,EACR,IAAI,MAAMzH,EAASo+C,EAAWp+C,OAAQyH,EAAIzH,KACrCyD,EAAQmiB,IAAMw4B,EAAW32C,MADsBA,GAMpD22C,EAAWzxC,OAAOlF,EAAG,EAAGhE,EAAQmiB,UAEhCN,EAAeI,QAAQ2D,QAAQ5lB,EAAQmiB,KAGb,OAAzBN,EAAe5I,OAChB4I,EAAe5I,QAIhB9a,KAAKwnB,mBAAmB9D,EAAgB7hB,IACzC7B,KAAKwc,UAAU7V,cAAc,uBAAwB,CAACyQ,OAAAA,IAGxD,MAAMY,EAASnW,EAAQmW,OACvB,GAAGA,EAAOsZ,WAAazvB,EAAQhD,OAAOgb,KAAOhY,EAAQykB,QAAS,CAC5DtmB,KAAKyc,gBAAgBggC,gBAAgBzkC,EAAQnW,EAAQuf,MAErD,MAAMtI,EAA4B,CAChCxa,EAAG,2BAGL,IAAI4c,EAEFA,EADC9D,EAAOka,SACC,CACPhzB,EAAG,mBACHwa,OAAAA,EACAT,QAASL,GAEHhY,KAAK4c,gBAAgBuG,UAAU/L,GAC9B,CACP9Y,EAAG,0BACHwa,OAAAA,EACAK,WAAY/B,EAAOgM,WACnBkD,QAAStmB,KAAK4c,gBAAgB2J,cAAcvO,GAC5C0kC,WAAYhR,GAAW,EAAAntB,GAAA,GAAmBmtB,QAAY//B,GAG/C,CACPrN,EAAG,uBACHwa,OAAAA,EACAM,QAAShC,EAAOgM,WAChBkD,QAAStmB,KAAK4c,gBAAgB2J,cAAcvO,IAIhDhY,KAAK0d,kBAAkBuS,mBAAmB/U,GAQ5C,GAHElb,KAAK28C,iBAAiB96C,GAGrBm6C,EACD,OAGF,MAAMY,GAAe/6C,EAAQhD,OAAOgb,KAAOhY,EAAQhD,OAAOsoB,OAC1D,GAAGnN,EAAQ,CACT,GAAG4iC,GAAe/6C,EAAQmiB,IAAMhK,EAAOsE,YAAa,CAClD,MAAMyJ,EAAqB/nB,KAAKgoB,eAAe3K,kCAAkCrD,KAE/EA,EAAOoN,aACNvlB,EAAQhD,OAAO08C,cACdvhC,EAAO2Q,sBACT3qB,KAAK68C,qBAAqBzlC,EAAQvV,EAAQmiB,KAAK,IAGjD+D,IAGClmB,EAAQmiB,KAAOhK,EAAOsE,aACvBte,KAAK88C,oBAAoBj7C,EAASmY,GAItC,GAAG4iC,EAAsF,CACvF,MAAMG,EAAa3lC,EACnB,IAAIgkC,EAAqBp7C,KAAK45C,sBAAsBmD,QAC1BpxC,IAAvByvC,IACDA,EAAqBp7C,KAAK45C,sBAAsBmD,GAAc,CAC5DtB,SAAU,EACVzjC,OAAQ,OAITojC,EAAmBpjC,SAAWA,IAC/BojC,EAAmBpjC,OAASA,EAC5BojC,EAAmBK,SAAW,GAG5B55C,EAA4B8sB,YAC5BysB,EAAmBK,SAGvBL,EAAmB58B,WAAa3c,EAE5B7B,KAAK25C,6BACP35C,KAAK25C,2BAA6BhqC,EAAA,aAAe3P,KAAKk7C,oBAAqB,MAKzE,KAAA8B,yBAA4B9hC,IAClC,MAAM,KAACI,EAAI,OAAE65B,EAAM,UAAEva,GAAa1f,EAC5B8I,GAAM,EAAAmC,GAAA,GAAkBgvB,GACxB/9B,GAAS,EAAAwB,GAAA,GAAU0C,GACnBzZ,EAAqB7B,KAAK2e,iBAAiBvH,EAAQ4M,GAEzD,GAAkB,aAAfniB,MAAAA,OAAO,EAAPA,EAASvD,GACV,OAGF,MAAMma,EAAkBmiB,MAAAA,OAAS,EAATA,EAAWliB,iBACnC,IAAGD,MAAAA,OAAe,EAAfA,EAAiBra,SAAUyD,EAAQhD,OAAOgb,IAAK,CAChD,MAAMojC,EAAiBxkC,EAAgBA,EAAgBra,OAAS,GAC1D8+C,EAAoBr7C,EAAQ+4B,UAC5BuiB,EAA0BD,MAAAA,OAAiB,EAAjBA,EAAmBxkC,kBAEjD,EAAAE,GAAA,GAAUqkC,EAAepkC,WAAa7Y,KAAK4c,gBAAgBxF,QACxD+lC,KACDA,EAAwB/+C,QAAUqa,EAAgBra,SAEjD++C,IACA,EAAAzmC,EAAA,GAAUumC,EAAgBE,EAAwBA,EAAwB/+C,OAAS,KAGtF4B,KAAKq7C,sBAAsBjkC,GAAQpS,MAAK,EAAEorC,MAAAA,EAAOkL,uBAAAA,MAC5BA,EAAuB8B,eAC1Cp9C,KAAKw7C,mBAAmB35C,EAAS,CAC/Bw7C,aAAcJ,EACd3B,uBAAAA,OAMR,MAAMj0C,EAAMxF,EAAQuV,OAAS,IAAMvV,EAAQmiB,IAC3ChkB,KAAKs9C,gBAAgB,qBAAsBt9C,KAAKu9C,qBAAsBl2C,GAAK,KAAM,EAAA2iB,GAAA,GAAKnoB,EAAQ+4B,aAE9F/4B,EAAQ+4B,UAAYA,EAEhB1f,EAAO2iB,OACT79B,KAAKw9C,+BAA+B37C,IAIhC,KAAA47C,yBAA4BviC,IAElC,MAAM9D,GAAS,EAAAwB,GAAA,GAAWsC,EAAOI,KAA+BA,MAC1DtB,EAASha,KAAK8b,cAAc1E,GAElC,GAAI4C,EAEG,CACL,MAAM+N,EAAqB/nB,KAAKgoB,eAAe3K,kCAAkCrD,GAE7EkB,EAAOrc,OAAOsoB,OAGhBnN,EAAOnb,OAAO6+C,aAAc,SAFrB1jC,EAAOnb,OAAO6+C,YAKvB31B,IACA/nB,KAAKwc,UAAU7V,cAAc,sBAAuB,CAAC,CAACyQ,GAAS4C,IAC/Dha,KAAKgoB,eAAexE,iBAAiBxJ,QAZrCha,KAAK4b,yBAAyBxE,IAgB1B,KAAAumC,oBAAuBziC,IAC7B,MAAMrZ,EAAUqZ,EAAOrZ,QACjBuV,EAASpX,KAAK+7C,eAAel6C,GAC7BmiB,GAAM,EAAAmC,GAAA,GAAkBtkB,EAAQtD,IAChCmF,EAAU1D,KAAK6jB,0BAA0BzM,GAC/C,IAAI1T,EAAQklB,IAAI5E,GAEd,OAKF,MAAM45B,EAAsB59C,KAAKikB,sBAAsBvgB,EAASsgB,GAChEhkB,KAAKye,aAAa,CAAC5c,GAAU,CAAC6B,QAAAA,IAC9B,MAAMm6C,EAAsB79C,KAAKikB,sBAAsBvgB,EAASsgB,GAEhEhkB,KAAK89C,oBAAoBF,EAAYC,EAAYn6C,GAEjD,MAAMsW,EAASha,KAAK8b,cAAc1E,GAQ5B2mC,EAAe/jC,GAAUA,EAAOsE,cAAgB0F,EACtD,GAAIniB,EAAmCm8C,cAClCD,GACD/9C,KAAKwc,UAAU7V,cAAc,eAAgB,CAACyQ,OAAAA,EAAQ4C,OAAAA,QAEnD,CAEL,GAAqB,aAAlB4jC,MAAAA,OAAU,EAAVA,EAAYt/C,MAAoB,EAAAoY,EAAA,GAAUknC,EAAWhjB,UAAYijB,EAA+BjjB,WAAY,CAC7G,MAAMqjB,EAAgBJ,EAA+BjjB,UASrD,OARCijB,EAA+BjjB,UAAYgjB,EAAWhjB,eACvD56B,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,yBACHgd,KAAMtb,KAAK4c,gBAAgB2J,cAAcnP,GACzC+9B,OAAQtzC,EAAQtD,GAChBq8B,UAAWqjB,IAaf,GAPAj+C,KAAKwc,UAAU7V,cAAc,eAAgB,CAC3CgnC,WAAYjqC,EAAQ2D,IACpB+P,OAAAA,EACA4M,IAAAA,EACAniB,QAAAA,IAGCk8C,GAAiBl8C,EAA4Bq8C,WAAY,CAC1D,MAAMv4B,EAA6C,GACnDA,EAAevO,GAAU4C,EACzBha,KAAKwc,UAAU7V,cAAc,sBAAuBgf,GACpD3lB,KAAKgoB,eAAexE,iBAAiBxJ,MAKnC,KAAAmkC,oBAAuBjjC,IAG7B,MAAMgI,EAAahI,EAAyC/B,WACtD2M,GAAQ,EAAAK,GAAA,GAAmBjL,EAAyCkjC,QAAWljC,EAAmDmjC,aAClI3S,GAAW,EAAAvlB,GAAA,GAAmBjL,EAAmDwhC,YACjFtlC,EAAS8L,EAAYA,EAAUzc,UAAS,IAAQ,EAAAmS,GAAA,GAAWsC,EAAyCI,MAEpG4L,EAAqB,4BAAbhM,EAAO5c,GAAgD,4BAAb4c,EAAO5c,GAAgD,sCAAb4c,EAAO5c,QAAmDqN,EAEtJjI,EAAU1D,KAAK6jB,0BAA0BzM,GACzC0M,GAAU,EAAAw6B,GAAA,GAAqB56C,EAAS,QACxCshB,EAAchlB,KAAK8b,cAAc1E,GACjCmnC,EAAoBrjC,EAAyCsjC,mBACnE,IAAIl8B,EAAiB,EACjBm8B,EAAyB,EACzBC,GAAgB,EAIpB,MAAMh7B,EAAiB1jB,KAAK2jB,kBAAkBvM,EAAQs0B,GAMtD,GAJGt0B,EAAOka,UAAYpK,GACpBlnB,KAAKyc,gBAAgBggC,gBAAgBrlC,GAGpCs0B,EAAU,CACX,MAAMiT,EAAa3+C,KAAK86C,iBAAiB1jC,EAAS,IAAMs0B,GACxD,GAAGiT,EAAY,CACb,MAAOvnC,EAAQ4M,GAAO26B,EAAWn3C,MAAM,KACvCxH,KAAKmuB,cAAc/W,EAAO3Q,YAAaud,EAAK,oBAIhD,MAAM+D,GAAsB2jB,GAAY1mB,GAAehlB,KAAKgoB,eAAe3K,kCAAkC2H,GAE7G,IAAI,IAAInf,EAAI,EAAGzH,EAAS0lB,EAAQ1lB,OAAQyH,EAAIzH,EAAQyH,IAAK,CACvD,MAAMme,EAAMF,EAAQje,GACpB,GAAGme,EAAM8B,EACP,SAGF,MAAMjkB,EAAqB6B,EAAQgB,IAAIsf,GAEvC,GAAGniB,EAAQhD,OAAOgb,MAAQqN,EAA1B,CAIA,IAAIrlB,EAAQhD,OAAOsoB,OACjB,MAGF,GAAGukB,EAAU,CACX,MAAMkT,EAAU/8C,EAAQ+sB,SACxB,IAAIgwB,IAAYA,EAAQC,iBAAmBD,EAAQvS,mBAAqBX,EACtE,SAKD7pC,EAAQhD,OAAOsoB,gBACTtlB,EAAQhD,OAAOsoB,OAClBu3B,IACFA,GAAgB,GAGd78C,EAAQhD,OAAOgb,KAAQ6xB,IAAY1mB,SACbrZ,IAArB4yC,IACDj8B,IAAmB0C,EAAYoC,cAG9BvlB,EAAQhD,OAAO08C,YAChBkD,IAA2Bz5B,EAAY2F,sBACvC3qB,KAAK68C,qBAAqBzlC,EAAQvV,EAAQmiB,KAAK,KAInDhkB,KAAKwc,UAAU7V,cAAc,sBAAuB,MAAQqd,KAOhE,GAHGkD,EAAOxD,EAAeiE,gBAAkB7B,EACtCpC,EAAegE,UAAY5B,GAE5B4lB,GAAY1mB,EAAa,CAI3B,GAHGkC,EAAOlC,EAAYgC,mBAAqBlB,EACtCd,EAAY+B,kBAAoBjB,GAEjCoB,EAAO,CACT,IAAI43B,OACoBnzC,IAArB4yC,EACDO,EAAWP,EACHj8B,EAAiB,IAAMtiB,KAAK++C,qBAAqB3nC,GACzD0nC,EAAW,EACHx8B,GAAkB0C,EAAY1G,YAAcwH,IACpDg5B,EAAWx8B,QAGG3W,IAAbmzC,IACD95B,EAAYoC,aAAe03B,IAG1BL,EAAyB,IAAMz5B,EAAYoC,gBAC5CpC,EAAY2F,sBAAwB,GAIrC5C,GACDA,IAGF/nB,KAAKgoB,eAAe7K,wBAAwB6H,GAE5ChlB,KAAKwc,UAAU7V,cAAc,gBAAiB,CAACyQ,OAAAA,EAAQ4C,OAAQgL,IAC/DhlB,KAAKgoB,eAAexE,iBAAiBwB,GAOvC,GAJG05B,GACD1+C,KAAKwc,UAAU7V,cAAc,kBAG3B+kC,GAAYxoB,EAAW,CACzB,MAAM87B,EAAgB5nC,EAAS,IAC/B,IAAI,MAAM8kC,KAAal8C,KAAK86C,iBAC1B,GAAwC,IAArCoB,EAAU7/C,QAAQ2iD,GAAsB,CACzC,MAAO5nC,EAAQ4M,GAAOhkB,KAAK86C,iBAAiBoB,GAAW10C,MAAM,KAC7DxH,KAAKwc,UAAU7V,cAAc,kBAAmB3G,KAAK2e,iBAAiBvH,EAAO3Q,YAAaud,OAM1F,KAAAi7B,6BAAgC/jC,IACtC,MAAMgI,EAAahI,EAAoD/B,WACjE+lC,EAAQhkC,EAA6CwK,SAASthB,KAAK7F,IAAO,EAAA4nB,GAAA,GAAkB5nB,KAC5F6Y,EAAS8L,EAAYA,EAAUzc,UAAS,GAAQzG,KAAKm/C,iBAAiBD,GAC5E,IAAI,IAAIr5C,EAAI,EAAGzH,EAAS8gD,EAAK9gD,OAAQyH,EAAIzH,IAAUyH,EAAG,CACpD,MAAMme,EAAMk7B,EAAKr5C,GACXhE,EAAqB7B,KAAK2e,iBAAiBvH,EAAQ4M,GACtDniB,EACEA,EAAQhD,OAAOugD,sBACTv9C,EAAQhD,OAAOugD,aACtBp/C,KAAKw9C,+BAA+B37C,IAEhCA,EAAQhD,OAAOgb,KAAOhY,EAAQhD,OAAO08C,WACvCv7C,KAAK68C,qBAAqBzlC,EAAQ4M,GAAK,IAI3ChkB,KAAKq/C,mCAAmCjoC,GAI5CpX,KAAKwc,UAAU7V,cAAc,sBAAuB,CAACyQ,OAAAA,EAAQ8nC,KAAAA,KAGvD,KAAAI,iCAAoCpkC,IAC1C,MAAM9D,EAAS8D,EAAO/B,WAAW1S,UAAS,GACpCqd,EAAU9jB,KAAK2jB,kBAAkBvM,GAAQ0M,QAAQnc,MACjD43C,GAAiB,EAAAp5B,GAAA,GAAkBjL,EAAOskC,kBAC1C95B,EAAW5B,EAAQrlB,QAAQulB,GAAQA,GAAOu7B,IAE/CrkC,EAAqDwK,SAAWA,EACjE1lB,KAAKy/C,uBAAuBvkC,IAGtB,KAAAukC,uBAA0BvkC,IAChC,MAAMgI,EAAahI,EAA8C/B,WAE3DuM,EAAYxK,EAAqDwK,SAASthB,KAAK7F,IAAO,EAAA4nB,GAAA,GAAkB5nB,KACxG6Y,EAAiB8L,EAAYA,EAAUzc,UAAS,GAAQzG,KAAKm/C,iBAAiBz5B,GAEpF,IAAItO,EACF,OAGFpX,KAAKqU,WAAW8hB,WAAW,8BAA+BzhB,IACjD,EAAAkE,GAAA,GAAUlE,EAAO4G,QAAUlE,IAGpC,MAAMsoC,EAA0B,IAAIlpC,IACpC,IAAI,MAAMwN,KAAO0B,EAAU,CACzB,MAAM7jB,EAAU7B,KAAK2e,iBAAiBvH,EAAQ4M,GACxCk4B,EAAYl8C,KAAKm8C,aAAat6C,GACjCq6C,GAAal8C,KAAK06C,eAAetjC,IAAWpX,KAAK06C,eAAetjC,IAAS8kC,EAAU10C,MAAM,KAAK,KAC/Fk4C,EAAW/oC,IAAIulC,GAInB,MAAMyD,EAAiB3/C,KAAK4/C,sBAAsBxoC,EAAQpX,KAAK6jB,0BAA0BzM,GAASsO,GAE5Fm6B,EAAkB/+C,MAAMC,KAAK2+C,GAAYt7C,KAAK83C,IAClD,MAAO9kC,EAAQ4M,GAAOk4B,EAAU10C,MAAM,KACtC,OAAOxH,KAAK2jB,kBAAkBvM,EAAO3Q,YAAaud,MAG9CN,EAAiB1jB,KAAK2jB,kBAAkBvM,GAC9C,CAACsM,GAAgBxf,OAAO27C,GAAiB38C,SAASwgB,IAChD,IAAI,MAAMM,KAAO27B,EAAeG,KAC9Bp8B,EAAeI,QAAQ/f,OAAOigB,GAG7B27B,EAAe7kC,OAAS4I,EAAe5I,QACxC4I,EAAe5I,MAAQqE,KAAKyD,IAAI,EAAGc,EAAe5I,MAAQ6kC,EAAe7kC,WAI7E9a,KAAKwc,UAAU7V,cAAc,iBAAkB,CAACyQ,OAAAA,EAAQ0oC,KAAMH,EAAeG,OAE7E,MAAM96B,EAAchlB,KAAK8b,cAAc1E,GACvC,GAAG4N,EAAa,CACd,MAAM+6B,EAAWJ,EAAe3F,gBAAkB2F,EAAex4B,OAC3DY,EAAqBg4B,GAAY//C,KAAKgoB,eAAe3K,kCAAkC2H,GAe7F,GAbG26B,EAAex4B,SAChBnC,EAAYoC,aAAejI,KAAKyD,IAAI,EAAGoC,EAAYoC,aAAeu4B,EAAex4B,SAGhFw4B,EAAe3F,iBAChBh1B,EAAY2F,sBAAyB3F,EAAYoC,aAAmBjI,KAAKyD,IAAI,EAAGoC,EAAY2F,sBAAwBg1B,EAAe3F,gBAAnE,GAG/D+F,IACDh4B,IACA/nB,KAAKwc,UAAU7V,cAAc,gBAAiB,CAACyQ,OAAAA,EAAQ4C,OAAQgL,KAG9D26B,EAAeG,KAAKl3B,IAAI5D,EAAY1G,aAAc,CACnD,MAAM3W,EAAQ+b,EAAeI,QAAQhc,MACrC,GAAGH,EAAM0f,MAAM,cAAoB1f,EAAMvJ,OAAQ,CAC/C,MAAM4lB,EAAMrc,EAAM,GACZ9F,EAAU7B,KAAK2e,iBAAiBvH,EAAQ4M,GAC9ChkB,KAAK88C,oBAAoBj7C,EAASmjB,QAElChlB,KAAK4e,mBAAmBxH,MAMxB,KAAA4oC,gBAAmB9kC,IACzB,MAAMgI,EAAYhI,EAAO/B,WACnB/B,EAAS8L,EAAUzc,UAAS,GAC5B4c,EAAwBrjB,KAAKud,gBAAgBC,QAAQ0F,GAErD+8B,EAAajgD,KAAKud,gBAAgBga,SAASrU,MAExBG,EAAQ4V,WAAa5V,EAAQxkB,OAAO8G,aACRgG,IAAlC3L,KAAKy6C,iBAAiBrjC,aAGhCpX,KAAKy6C,iBAAiBrjC,GAC7BpX,KAAKwc,UAAU7V,cAAc,oBAAqByQ,MAGrCpX,KAAK8b,cAAc1E,KAClB6oC,IACXA,EACDjgD,KAAK4e,mBAAmBxH,GAExBpX,KAAKgoB,eAAevK,qBAAqBrG,IAI7CpX,KAAKwc,UAAU7V,cAAc,iBAAkBuc,IAGzC,KAAAg9B,sBAAyBhlC,IAC/B,MAAM9D,EAAS8D,EAAO/B,WAAW1S,UAAS,GAE1CzG,KAAKgoB,eAAezM,WAAWnE,UAExBpX,KAAKy6C,iBAAiBrjC,GAC7BpX,KAAK4e,mBAAmBxH,GAAQpS,MAAK,KACnChF,KAAKwc,UAAU7V,cAAc,iBAAkByQ,OAI3C,KAAA+oC,4BAA+BjlC,IACrC,MAAMklC,EAAQllC,EAAOklC,MACfhpC,EAAS8D,EAAO/B,WAAW1S,UAAS,GACpCud,GAAM,EAAAmC,GAAA,GAAkBjL,EAAO3c,IAC/BsD,EAAU7B,KAAK2e,iBAAiBvH,EAAQ4M,QACxBrY,KAAnB9J,MAAAA,OAAO,EAAPA,EAASu+C,QAAuBv+C,EAAQu+C,MAAQA,IACjDv+C,EAAQu+C,MAAQA,EAChBpgD,KAAKs9C,gBAAgB,iBAAkBt9C,KAAKqgD,iBAAkBx+C,EAAQuV,OAAS,IAAMvV,EAAQmiB,KAC7FhkB,KAAKw9C,+BAA+B37C,KAIhC,KAAAy+C,4BAA+BplC,I,MAErC,GAAgB,QAAb,EAAAA,EAAOrc,cAAM,eAAE0hD,MAEhB,YADAvgD,KAAKwc,UAAU7V,cAAc,uBAAwBuU,GAIvD,MAAMlD,EAAS,KACTZ,EAASY,EACTjJ,EAAY/O,KAAKqmB,sBAAsBjP,GACvCvV,EAA2B,CAC/BvD,EAAG,UACHC,GAAIwQ,EACJuX,QAAStmB,KAAK4c,gBAAgB2J,cAAcvO,GAC5Ca,QAAS7Y,KAAK4c,gBAAgB2J,cAAcnP,GAC5CvY,OAAQ,CAACsoB,QAAQ,GACjB/F,MAAOlG,EAAOqX,aAAc,EAAAjR,GAAA,IAAM,IAASthB,KAAKuhB,YAAYC,sBAC5D3f,QAASqZ,EAAOrZ,QAChBsW,MAAO+C,EAAO/C,MACd0W,SAAU3T,EAAO2T,UAEf7uB,KAAKyc,gBAAgB0U,QAAQnZ,IAC/BhY,KAAKyc,gBAAgB8I,aAAa,CAAC,CACjCjnB,EAAG,OACHC,GAAIyZ,EACJnZ,OAAQ,CAAC2hD,UAAU,GACnB7rB,YAAa,IACb4hB,WAAY,WACZkK,MAAO,WAGXzgD,KAAKye,aAAa,CAAC5c,GAAU,CAAC4kB,YAAY,IAEvCvL,EAAOqX,aACRvyB,KAAK6lB,eAAezO,GAAUrI,EAC9B/O,KAAK87C,mBAAmB,CACtBx9C,EAAG,mBACHuD,QAAAA,EACA4hB,SAAK9X,EACLmjB,eAAWnjB,MAKT,KAAA+0C,uBAA0BxlC,IAChC,MAAMgI,EAAyB,gCAAbhI,EAAO5c,EAAsC4c,EAAO/B,gBAAaxN,EAC7EyL,EAAS8L,EAAYA,EAAUzc,UAAS,IAAQ,EAAAmS,GAAA,GAAWsC,EAAuCI,MAYlGoK,EAAWxK,EAAOwK,SAASthB,KAAK7F,IAAO,EAAA4nB,GAAA,GAAkB5nB,KAEzDmF,EAAU1D,KAAK6jB,0BAA0BzM,GACzCupC,EAAkBj7B,EAASjnB,QAAQulB,IAAStgB,EAAQklB,IAAI5E,MACpC28B,EAAgBviD,OAASuD,QAAQmR,IAAI6tC,EAAgBv8C,KAAK4f,GAAQhkB,KAAKmX,kBAAkBC,EAAQ4M,MAASriB,QAAQM,WAC1HgH,SAAQ,K,MACxB,MAAM23C,EAA0B,QAAb,EAAA1lC,EAAOrc,cAAM,eAAE2c,OAClC,GAAGolC,EACD,IAAI,MAAM58B,KAAO0B,EAEChiB,EAAQgB,IAAIsf,GACpBnlB,OAAO2c,QAAS,OAU1B,IAAI,MAAMwI,KAAO0B,SAEChiB,EAAQgB,IAAIsf,GACbnlB,OAAO2c,cASnBxb,KAAK46C,eAAexjC,GAC3BpX,KAAK+d,gBAAgB5W,WAAWnC,MAAMiC,WAC7BA,EAAM45C,qBAAqBzpC,GAClCpX,KAAKwc,UAAU7V,cAAc,uBAAwB,CAACyQ,OAAAA,EAAQ8nC,KAAMx5B,EAAUlK,OAAQolC,WAKpF,KAAAE,uBAA0B5lC,IAChC,MAAM,KAACI,EAAI,gBAAEuM,GAAmB3M,EAChC,GAAc,eAAXI,EAAKhd,EAAoB,CAC1B,MAAM8Y,GAAS,EAAAwB,GAAA,GAAW0C,EAA+BA,MAEnDtB,EAASha,KAAK8b,cAAc1E,GAC/B4C,IACDA,EAAO6N,gBAAkBA,EACzB7nB,KAAKwc,UAAU7V,cAAc,yBAA0BqT,GACvDha,KAAKgoB,eAAexE,iBAAiBxJ,MAKnC,KAAA+mC,4BAA+B7lC,IACrC,MAAMrZ,EAAUqZ,EAAOrZ,QACjBuV,EAASpX,KAAK+7C,eAAel6C,GAE7B6B,EAAU1D,KAAKw6C,yBAAyBpjC,GAC9C,IAAI1T,EACF,OAGF,MAAMsgB,GAAM,EAAAmC,GAAA,GAAkBtkB,EAAQtD,IAEhCq/C,EAAa59C,KAAKikB,sBAAsBvgB,EAASsgB,GACvDhkB,KAAKye,aAAa,CAAC5c,GAAU,CAAC6B,QAAAA,EAASs9C,aAAa,IACpD,MAAMnD,EAAa79C,KAAKikB,sBAAsBvgB,EAASsgB,GAEpD45B,GACD59C,KAAK89C,oBAAoBF,EAAYC,EAAYn6C,GACjD1D,KAAKwc,UAAU7V,cAAc,eAAgB,CAACgnC,WAAYjqC,EAAQ2D,IAAK+P,OAAAA,EAAQ4M,IAAKniB,EAAQmiB,IAAKniB,QAAAA,KAE1E7B,KAAKq8C,oBAAoBx6C,IAE9C7B,KAAKwc,UAAU7V,cAAc,gBAAiB9E,IAK5C,KAAAo/C,gCAAmC/lC,IACzC,MAAM9D,GAAS,EAAAwB,GAAA,GAAUsC,EAAOI,MAE1B5X,EAAU1D,KAAKw6C,yBAAyBpjC,GAC9C,GAAG1T,EAAS,CACV,MAAMw7C,EAAOhkC,EAAOwK,SAASthB,KAAK7F,IAAO,EAAA4nB,GAAA,GAAkB5nB,KAC3DyB,KAAK4/C,sBAAsBxoC,EAAQ1T,EAASw7C,GAE5Cl/C,KAAKwc,UAAU7V,cAAc,mBAAoB,CAACyQ,OAAAA,EAAQ8nC,KAAAA,MAyiCtD,KAAAmB,iBAAoBa,IAC1B,MAAMC,EAA6D,GAE7D/8C,EAAMpE,KAAKohD,mBAAmBF,GACpC,IAAI,MAAOr/C,KAAYuC,EACrB+8C,EAAW7gD,KAAK,CACd8W,OAAQvV,EAAQuV,OAChB4M,IAAKniB,EAAQmiB,IACbo8B,MAAOv+C,EAAQu+C,QAInB,OAAOe,GAGD,KAAA5D,qBAAwB2D,I,UAC9B,MAAMC,EAA0F,GAE1F/8C,EAAMpE,KAAKohD,mBAAmBF,GACpC,IAAI,MAAOr/C,EAASq7C,KAAsB94C,EAAK,CAC7C,MAAMiB,EAAoC,QAA1B,EAAiB,QAAjB,EAAAxD,EAAQ+4B,iBAAS,eAAEv1B,eAAO,QAAI,GACxCg8C,EAA4C,QAA1B,EAAAnE,MAAAA,OAAiB,EAAjBA,EAAmB73C,eAAO,QAAI,GAChDi8C,EAAiBj8C,EAAQ5G,QAAQ8iD,IACrC,MAAMC,EAAwBH,EAAgB99C,MAAMk+C,GAAmBA,EAAe9oC,WAAa4oC,EAAc5oC,WACjH,OACE9W,EAAQhD,OAAOgb,OACZ2nC,GACDD,EAAczmC,MAAQ0mC,EAAsB1mC,QAG9CymC,EAAc1iD,OAAO6iD,UAClBF,IACAA,EAAsB3iD,OAAO6iD,WAKpCP,EAAW7gD,KAAK,CAACuB,QAAAA,EAASy/C,eAAAA,IAG5B,OAAOH,GAngLC5kC,QA2IR,OA1IAvc,KAAKqE,OAAM,GAEXrE,KAAK0d,kBAAkBC,2BAA2B,CAChDgkC,gBAAiB3hD,KAAK07C,kBAEtBkG,2BAA4B5hD,KAAK87C,mBACjC+F,iBAAkB7hD,KAAK87C,mBACvBgG,wBAAyB9hD,KAAK87C,mBAE9BiG,uBAAwB/hD,KAAKy9C,yBAE7BuE,kBAAmBhiD,KAAK29C,oBACxBsE,yBAA0BjiD,KAAK29C,oBAE/BuE,uBAAwBliD,KAAKg9C,yBAE7BmF,iCAAkCniD,KAAKm+C,oBACvCiE,kCAAmCpiD,KAAKm+C,oBACxCkE,uBAAwBriD,KAAKm+C,oBAC7BmE,wBAAyBtiD,KAAKm+C,oBAC9BoE,uBAAwBviD,KAAKm+C,oBAC7BqE,wBAAyBxiD,KAAKm+C,oBAE9BsE,kCAAmCziD,KAAKi/C,6BACxCyD,2BAA4B1iD,KAAKi/C,6BAEjC0D,+BAAgC3iD,KAAKs/C,iCAErCsD,qBAAsB5iD,KAAKy/C,uBAC3BoD,4BAA6B7iD,KAAKy/C,uBAElCqD,cAAe9iD,KAAKggD,gBAEpB+C,oBAAqB/iD,KAAKkgD,sBAE1B8C,0BAA2BhjD,KAAKmgD,4BAEhC8C,0BAA2BjjD,KAAKsgD,4BAEhC4C,qBAAsBljD,KAAK0gD,uBAC3ByC,4BAA6BnjD,KAAK0gD,uBAElC0C,qBAAsBpjD,KAAK8gD,uBAE3BuC,0BAA2BrjD,KAAK+gD,4BAEhCuC,8BAA+BtjD,KAAKihD,kCAItCjhD,KAAKwc,UAAUhW,iBAAiB,6BAA6B,EAAEa,IAAAA,EAAKP,SAAAA,MAElE,IAAIy8C,EACsBA,EAAf,gBAARl8C,EAAqC2S,GAAWA,EAAO5C,OAAOka,SACjD,qBAARjqB,EAA0C2S,GAAWha,KAAK4c,gBAAgBiO,YAAY7Q,EAAO5C,QAClF4C,GAAWha,KAAK4c,gBAAgBmO,WAAW/Q,EAAO5C,QAJrDpX,KAAKgoB,eAAe7L,iBAAiB,GAAGjY,OAAOlE,KAAKgoB,eAAe7L,iBAAiB,IAOnG1d,OAAO8kD,GACPrgD,SAAS8W,IACRha,KAAKwc,UAAU7V,cAAc,yBAA0BqT,SAI3Dha,KAAKwc,UAAUhW,iBAAiB,mBAAmB,EAAEjI,GAAAA,EAAIuhD,KAAAA,MACvDA,EAAK58C,SAAQ,EAAEkU,OAAAA,EAAQ4M,IAAAA,EAAKg9B,YAAAA,MAC1B,MAAMt9C,EAAUs9C,EAAchhD,KAAKwjD,4BAA4BpsC,GAAUpX,KAAK6jB,0BAA0BzM,GAClGvV,EAAU7B,KAAKikB,sBAAsBvgB,EAASsgB,GAChDniB,IACJA,EAAQsW,MAAQ,CACd7Z,EAAG,sBACHmlD,QAASzjD,KAAK0jD,mBAAmBC,iBAAiBplD,IAGpDyB,KAAKwc,UAAU7V,cAAc,eAAgB,CAC3CgnC,WAAYjqC,EAAQ2D,IACpB+P,OAAAA,EACA4M,IAAAA,EACAniB,QAAAA,WAKN7B,KAAKwc,UAAUhW,iBAAiB,iBAAiB,EAAE4Q,OAAAA,EAAQs0B,SAAAA,EAAUpoB,MAAAA,MACnE,GAAGooB,EAAU,OAEb,MAAM1xB,EAASha,KAAK8b,cAAc1E,GAClC,GAAG4C,GACD,IAAI0xB,EAAU,CACZ1xB,EAAOsJ,MAAQA,EAEf,IAAIsgC,GAAO,EACPtgC,IAAU,EAAA/E,GAAA,GAAmBvE,EAAOsE,cAItCte,KAAKgoB,eAAetM,uBAAuB1B,GAC3Cha,KAAKgoB,eAAerM,WAAW3B,KAJ/Bha,KAAKgoB,eAAezM,WAAWnE,GAC/BwsC,GAAO,GAMT5jD,KAAKwc,UAAU7V,cAAc,eAAgB,CAC3CyQ,OAAAA,EACA4C,OAAAA,EACA4pC,KAAAA,EACAtgC,MAAAA,UAIJtjB,KAAK4e,mBAAmBxH,MAI5BpX,KAAKwc,UAAUhW,iBAAiB,eAAe,EAAEq9C,KAAAA,MAC/C,MAAM17C,EAAMnI,KAAK8jD,gBAAgBC,eAAeF,EAAKtlD,IACrD,GAAG4J,EACD,IAAI,MAAMd,KAAOc,EAAK,CACpB,MAAOiP,EAAQ4M,GAAO3c,EAAIG,MAAM,KAE1B3F,EAAU7B,KAAK2e,iBAAiBvH,EAAO3Q,YAAaud,GAC1DhkB,KAAKw9C,+BAA+B37C,OAK1C7B,KAAKgkD,uBAAwB,EAAAC,GAAA,IAAS,KACpC,IAAI,MAAM9hD,KAASnC,KAAKk6C,aAAc,CACpC,MAAMgK,EAAUlkD,KAAKk6C,aAAa/3C,UAC3BnC,KAAKk6C,aAAa/3C,GAGzB,MAAMC,EAAS8hD,EAAQt/C,SAASs/C,EAAQhD,QACrC9+C,GAAaA,aAAkBtB,QAAUsB,EAAOhE,QAEjDoe,UAAU7V,cAAcxE,EAA6BC,MAGxD,IAAI,GAAO,GAEPpC,KAAK+d,gBAAgB5W,WAAWnC,MAAMiC,IACxCA,EAAMk9C,eACPnkD,KAAKy5C,UAAYxyC,EAAMk9C,iBA2BtBtX,iBAAiBhe,GACtB,MAAMu1B,GAAc,EAAAp6B,GAAA,GAAK6E,GAOzB,OANAu1B,EAAYlhD,SAASmhD,IACH,6BAAbA,EAAO/lD,IACP+lD,EAA8D/lD,EAAI,gCAClE+lD,EAA8DhsC,QAAUrY,KAAKyc,gBAAgB4Y,aAAagvB,EAAOhsC,aAG/G+rC,EAGFE,yBAAyB1I,EAAgB2I,EAAsB3/C,G,QACpE,MAAM4/C,EAA6C,QAAlC,EAAAxkD,KAAKq5C,sBAAsBuC,UAAO,QAAK57C,KAAKq5C,sBAAsBuC,GAAU,GACvF7pC,EAA4B,QAAtB,EAAAyyC,EAASD,UAAa,QAAKC,EAASD,GAAgB,CAACnpD,UAAU,UAI3E,OAFA2W,EAAInN,SAAWA,EAERmN,EAAI3W,SAGNqpD,YAAY5iD,EAAc7E,EAAcK,EAK1C,IAKH,MAAM,IAAC2mB,EAAG,OAAE5M,GAAUvV,EAEtB,GAAGA,EAAQhD,OAAOqlB,YAChB,OAAOlkB,KAAKskD,yBAAyBtgC,EAAK,QAASniB,GAE1C7B,KAAKykD,YAAY5iD,EAAS7E,EAAMK,KAI3C,IAAIwxB,EAAWxxB,EAAQwxB,UAAY,GAChC7xB,IACDA,GAAO,EAAAs1B,GAAA,GAAct1B,EAAM6xB,IAG7B,MAAM8iB,EAAgBt0C,EAAQq0C,eAAiB7vC,EAAQhD,OAAO6lD,aAAe7iD,EAAQuf,UAAOzV,GAC5F,OAAO3L,KAAKqU,WAAWC,UAAU,uBAAwB,CACvDgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C7Y,GAAIsD,EAAQtD,GACZsD,QAAS7E,EACTmb,MAAO9a,EAAQsnD,SACf91B,SAAUA,EAASzwB,OAAS4B,KAAK6sC,iBAAiBhe,QAAYljB,EAC9D2gC,WAAYjvC,EAAQunD,UACpBjT,cAAAA,IACC3sC,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAC1CxmB,IAGF,GAFAS,KAAKG,IAAIZ,MAAM,qBAAsBA,IAElCA,GAAwB,yBAAfA,EAAME,KAOlB,OAHGF,GAAwB,kBAAfA,EAAME,OAChBF,EAAMslD,SAAU,GAEXljD,QAAQC,OAAOrC,GANpBA,EAAMslD,SAAU,KAUThP,SAASz+B,EAAgBpa,EAAcK,EAc/C,I,kDACH,IAAIL,EAAKuoC,OACP,OAGc,QAAhB,EAAAloC,EAAQwxB,gBAAQ,QAAhBxxB,EAAQwxB,SAAa,IAGlBxxB,EAAQquC,WAAaruC,EAAQynD,eAC9BznD,EAAQynD,aAAeznD,EAAQquC,UAGjC,MACMqZ,SADe/kD,KAAKqU,WAAWmX,aACXw5B,mBACpBz9C,EAAWwwC,GAAoB/6C,EAAM+nD,GAC3C/nD,EAAOuK,EAAS,GACbA,EAASnJ,OAAS,IACO,aAAR,QAAf,EAAAf,EAAQ4nD,eAAO,eAAE3mD,IAAoBtB,EAAKqtB,SAAShtB,EAAQ4nD,QAAQ5lD,aAC7DhC,EAAQ4nD,SAInB7tC,EAASpX,KAAK4c,gBAAgBsoC,kBAAkB9tC,IAAWA,EAE3D,IAAIyX,EAAWxxB,EAAQwxB,SACnBxxB,EAAQ4a,WACVjb,GAAO,EAAAs1B,GAAA,GAAct1B,EAAM6xB,IAI7B,IAAIu1B,EAAcpkD,KAAK6sC,iBAAiBhe,GACpCu1B,EAAYhmD,SACdgmD,OAAcz4C,GAGhB,MAAM9J,EAAU7B,KAAKmlD,wBAAwB/tC,EAAQ/Z,GACrDwE,EAAQgtB,SAAWA,EACnBhtB,EAAQA,QAAU7E,EAElB,MAAM8nD,EAAeznD,EAAQynD,cAAe,EAAAvmC,GAAA,GAAmBlhB,EAAQynD,mBAAgBn5C,EACjFwX,EAAYnjB,KAAK4c,gBAAgBuG,UAAU/L,GAE9C/Z,EAAQ4nD,UACTpjD,EAAQsW,MAAQ,CACd7Z,EAAG,sBACHmlD,QAASpmD,EAAQ4nD,UAIrB,MAAMG,EAAeC,IAChBA,EACDxjD,EAAQtC,OAAQ,SAETsC,EAAQtC,MAEjBS,KAAKwc,UAAU7V,cAAc,qBAG/B9E,EAAQ6I,KAAO,KACb06C,GAAY,GACZ,MAAME,EAAsC,GACzCtlD,KAAKo5C,iBAAiBhiC,KACvBkuC,EAAmBC,eAAiBvlD,KAAKo5C,iBAAiBhiC,GAAQrI,WAGpE,MAAMy2C,EAASnoD,EAAQooD,aAAezlD,KAAK4c,gBAAgB8O,iBAAiBruB,EAAQooD,mBAAgB95C,EACpG,IAAI+5C,EAiCJ,OA/BEA,EADCroD,EAAQ4a,SACIjY,KAAKqU,WAAWsxC,eAAe,+BAAgC,CAC1ErqC,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5Cke,UAAWzzB,EAAQyzB,UACnB+W,gBAAiByY,QAAgBn5C,EACjCkoC,SAAUx2C,EAAQu2C,QAClBr1C,GAAIlB,EAAQo4C,SACZmQ,YAAavoD,EAAQ4vC,WACrB4Y,QAASL,GACRF,GAEUtlD,KAAKqU,WAAWsxC,eAAe,uBAAwB,CAClErZ,WAAYjvC,EAAQunD,UACpBtpC,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CvV,QAAS7E,EACTs4B,UAAWzzB,EAAQyzB,UACnB+W,gBAAiByY,QAAgBn5C,EACjCkjB,SAAUu1B,EACVwB,YAAavoD,EAAQ4vC,WACrB0E,cAAet0C,EAAQq0C,mBAAgB/lC,EACvCm6C,OAAQzoD,EAAQyoD,OAChBD,QAASL,GACRF,GAQLtlD,KAAKo5C,iBAAiBhiC,GAAUkuC,EAEzBI,EAAW1gD,MAAM+gB,IAGtB,GAAiB,2BAAdA,EAAQznB,EAAgC,CAIzC,MAAMsM,EAAU/I,EAAQ+I,eACjB/I,EAAQ+I,QACf,MAAMizC,GAAa,EAAA7zB,GAAA,GAAKnoB,GACxB4X,GAA6B5X,EAAS,CAAC,YACvCA,EAAQ+I,QAAUA,EAElBizC,EAAWz8B,KAAO2E,EAAQ3E,KAC1By8B,EAAWt/C,GAAKwnB,EAAQxnB,GACxBs/C,EAAW1lC,MAAQ4N,EAAQ5N,MAC3B0lC,EAAWhvB,SAAW9I,EAAQ8I,SAC9B7uB,KAAK+lD,oBAAoBlI,GACtB93B,EAAQlnB,OAAOgb,MAChBgkC,EAAWh/C,OAAOgb,KAAM,GAI1BkM,EAAU,CACRznB,EAAG,UACH0a,MAAO,GACPyM,MAAO,GACP4I,IAAK,EACLjN,UAAMzV,EACNoa,QAAS,CAAC,CACRznB,EAAG,kBACHg3B,UAAWzzB,EAAQyzB,UACnB/2B,GAAIs/C,EAAWt/C,IACd,CACDD,EAAGjB,EAAQq0C,aAAe,4BAA+BvuB,EAAY,0BAA4B,mBACjGthB,QAASg8C,EACTp6B,IAAKsC,EAAQtC,IACbqL,UAAW/I,EAAQ+I,kBAGd/I,EAA4BA,SACpCA,EAA4BA,QAAQ7iB,SAASgY,IAC5B,uBAAbA,EAAO5c,IACR4c,EAAO2iB,OAAQ,MAQrB79B,KAAK0d,kBAAkBwQ,qBAAqBnI,GAK5ClkB,EAAQ+I,QAAQ3I,aACd1C,IACF6lD,GAAY,GACZvjD,EAAQ+I,QAAQhJ,OAAOrC,MACtB0J,SAAQ,KACNjJ,KAAKo5C,iBAAiBhiC,KAAYkuC,UAC5BtlD,KAAKo5C,iBAAiBhiC,OAKnCpX,KAAKgmD,qBAAqBnkD,EAAS,CACjCm/C,cAAe3jD,EAAQq0C,mBAAgB/lC,EACvC+/B,SAAUruC,EAAQquC,SAClBuB,WAAY5vC,EAAQ4vC,WACpBgZ,YAAY,IAGd,MAAM79B,EAAyD,CAACvmB,EAAQ+I,SACxE,IAAI,IAAI/E,EAAI,EAAGA,EAAI0B,EAASnJ,SAAUyH,EACpCuiB,EAAS9nB,KAAKN,KAAK61C,SAASz+B,EAAQ7P,EAAS1B,GAAIxI,IAGnD,OAAOsE,QAAQmR,IAAIsV,GAAUpjB,KAAKgE,EAAA,MAG7Bk9C,SAAS9uC,EAAgBiiB,EAAgCh8B,EA+B3D,IACH+Z,EAASpX,KAAK4c,gBAAgBsoC,kBAAkB9tC,IAAWA,EAI3D,MAAMvV,EAAU7B,KAAKmlD,wBAAwB/tC,EAAQ/Z,GAC/CynD,EAAeznD,EAAQynD,cAAe,EAAAvmC,GAAA,GAAmBlhB,EAAQynD,mBAAgBn5C,EAEvF,IAAIw6C,EAAgEC,EAEpE,MAAMC,EAAW,cAAehtB,EAAOA,EAAKwO,UAAYxO,EAAK55B,KACvDsrC,EAAW1R,aAAgBitB,KAAOjtB,EAAKp5B,KAAO,GAC9CsmD,IAAeltB,aAAgBitB,MAAWjtB,aAAgBmtB,MAChE,IAAIzQ,EAAU14C,EAAQ04C,SAAW,GAEjC/1C,KAAKG,IAAI,WAAYk5B,EAAMgtB,GAE3B,MAAMx3B,EAAWxxB,EAAQwxB,UAAY,GAClCknB,IACDA,GAAU,EAAAzjB,GAAA,GAAcyjB,EAASlnB,IAGnC,MAAM2Y,EAAkC,GAElCif,EAAUzgD,IAAiB0gD,2BAA2B99B,IAAIy9B,GAEhE,IAAIpzB,EAAgB+L,EAEhB2nB,EACJ,GAAGJ,EACDJ,EAAa,WACbC,EAAc,QACT,GAAkC,IAA/BC,EAAShqD,QAAQ,WAAmB,CAAC,aAAaA,QAAQgqD,IAAa,EAAG,CAClFF,EAAa,QACbC,EAAc,UAAuC,QAA3BC,EAAS7+C,MAAM,KAAK,GAAe,MAAQ,OACrEm/C,EAAa,+BAEVtpD,EAAQupD,iBACTT,EAAa,QACbtkD,EAAQhD,OAAOugD,cAAe,GAGhC,IAAI3X,EAAsD,CACxDnpC,EAAG,yBACHO,OAAQ,CACN+oC,MAAOvqC,EAAQupD,gBAEjBC,SAAUxpD,EAAQwpD,SAClBrxB,SAAUn4B,EAAQm4B,UAAY,GAGhCgS,EAAWlnC,KAAKmnC,QACX,GAAIpqC,EAAQypD,QAIZ,GAAGL,EAAS,CACjBN,EAAa,QACbC,EAAc,SAAWC,EAAS7+C,MAAM,KAAK,GAC7Cm/C,EAAa,+BAEb,MAAMI,EAAY,CAChBzoD,EAAG,YACHwpC,EAAGzqC,EAAQ2sC,MACXjC,EAAG1qC,EAAQ4sC,OACXxqC,KAAM,OACNvB,SAAU,KACV4V,KAAMulB,EAAKvlB,MAGbmf,EAAQ,CACN30B,EAAG,QACHC,GAAI,GAAKsD,EAAQtD,GACjByoD,MAAO,CAACD,GACRjf,EAAGzqC,EAAQ2sC,MACXjC,EAAG1qC,EAAQ4sC,QAGb,MAAMU,EAAe3qC,KAAK+mC,cAAcmC,gBAAgBjW,EAAO8zB,EAAUtnD,MACzEkrC,EAAaK,WAAa3R,EAAKvlB,KAC/B62B,EAAatrC,IAAMhC,EAAQ4pD,WAAa,GAExCh0B,EAAQjzB,KAAK+zC,iBAAiBC,UAAU/gB,QACnC,GAAGjtB,IAAiBkhD,2BAA2Bt+B,IAAIy9B,GAAW,CACnEF,EAAa,QACbC,EAAc,YACdO,EAAa,+BAEb,MAAMQ,EAA2D,CAC/D7oD,EAAG,yBACHO,OAAQ,CACNmpC,cAAe3qC,EAAQ+pD,eACvBC,oBAAoB,GAEtB7xB,SAAUn4B,EAAQm4B,SAClBsS,EAAGzqC,EAAQ2sC,MACXjC,EAAG1qC,EAAQ4sC,QAGbzC,EAAWlnC,KAAK6mD,GAGb9pD,EAAQiqD,SACTjuB,EAAKvlB,KAAO,OACZulB,EAAKvlB,KAAO,UACZ0zB,EAAWlnC,KAAK,CACdhC,EAAG,mCAIP6nD,EAAa,WACbC,EAAc,YAAcC,EAAS7+C,MAAM,KAAK,GAChDm/C,EAAa,uCA3DbR,EAAa,WACbC,EAAc,YAAcC,EAAS7+C,MAAM,KAAK,GAChDm/C,EAAa,kCA8Df,GAFAnf,EAAWlnC,KAAK,CAAChC,EAAG,4BAA6BopC,UAAWqD,GAAYqb,KAEuB,IAA3F,CAAC,WAAY,QAAS,QAAS,SAAmC/pD,QAAQ8pD,KAAuBI,EAAY,CAC/G,MAAMne,EAAsB,GAa5B,GAZApJ,EAAW,CACT1gC,EAAG,WACHC,GAAI,GAAKsD,EAAQtD,GACjBi3B,SAAUn4B,EAAQm4B,SAClBgS,WAAAA,EACAM,EAAGzqC,EAAQ2sC,MACXjC,EAAG1qC,EAAQ4sC,OACX7B,OAAAA,EACAP,UAAWwe,EACXvyC,KAAMulB,EAAKvlB,MAGVzW,EAAQ4pD,UAAW,CACpB,MAAMtc,EAAe3qC,KAAK+mC,cAAcmC,gBAAgBlK,GACxD2L,EAAaK,WAAa3R,EAAKvlB,KAC/B62B,EAAatrC,IAAMhC,EAAQ4pD,UAG7B,IAAI7d,EACJ,GAAGqd,EACDjf,EAAWlnC,KAAK,CACdhC,EAAG,6BACHwpC,EAAGzqC,EAAQ2sC,MACXjC,EAAG1qC,EAAQ4sC,SAGbb,EAAQ,CACN9qC,EAAG,YACHwpC,EAAGzqC,EAAQ2sC,MACXjC,EAAG1qC,EAAQ4sC,OACXxqC,KAAM,OACNqU,KAAMulB,EAAKvlB,WAER,GAAkB,UAAfqyC,GACL9oD,EAAQ+rC,MAAO,CAChBA,EAAQ,CACN9qC,EAAG,YACHwpC,EAAGzqC,EAAQ+rC,MAAMt1B,KAAKk2B,MACtBjC,EAAG1qC,EAAQ+rC,MAAMt1B,KAAKm2B,OACtBxqC,KAAM,cACNqU,KAAMzW,EAAQ+rC,MAAM7V,KAAKzf,MAG3B,MAAMyzC,EAAoBvnD,KAAK+mC,cAAcmC,gBAAgBlK,EAAUoK,EAAM3pC,MAC7E8nD,EAAkBvc,WAAa5B,EAAMt1B,KACrCyzC,EAAkBloD,IAAMhC,EAAQ+rC,MAAM/pC,IAIvC+pC,GACDhB,EAAO9nC,KAAK8oC,GAUdpK,EAAWh/B,KAAK8zC,eAAe1M,QAAQpI,GAGzCh/B,KAAKG,IAAI,WAAYgmD,EAAYC,EAAa/sB,EAAK55B,KAAMpC,GAEzD,MAAMmqD,GAAe,SAWfrvC,EAAsBouC,OAAa56C,EAAY,CACnDrN,EAAG20B,EAAQ,oBAAsB,uBACjCp0B,OAAQ,GAERo0B,MAAAA,EACA+L,SAAAA,GAGC7mB,IACDsB,GAA6BtB,EAAc,CAAC,YAC3CA,EAAcvN,QAAU48C,GAG3B3lD,EAAQgtB,SAAWA,EACnBhtB,EAAQA,QAAUk0C,EAClBl0C,EAAQsW,MAAQouC,EAAa,CAC3BjoD,EAAG,uBACHO,OAAQ,GACRmgC,SAAU3F,GAC6BlhB,EAEzC,MAAMsvC,EAAqBlB,OAA0C56C,GAA7B,EAAA+7C,GAAA,GAAqBruB,GAC7Dx3B,EAAQ4lD,kBAAoBA,EAEzBA,IACDznD,KAAKq6C,mBAAmBoN,GAAqBD,GAG/C,MAAMpC,EAAeC,IAChBA,EACDxjD,EAAQtC,OAAQ,SAETsC,EAAQtC,MAGjBS,KAAKwc,UAAU7V,cAAc,qBAG/B,IAAIghD,GAAW,EACbC,EAAsD,KAExD/lD,EAAQ6I,KAAO,KACb,GAAG67C,EAAY,CACb,MAAM,GAAChoD,EAAE,YAAEo2B,EAAW,eAAE2S,GAAkBjO,EAEpCyc,EAAyB,CAC7Bx3C,EAAG,qBACHC,GAAI,CACFD,EAAG,gBACHC,GAAAA,EACAo2B,YAAAA,EACA2S,eAAAA,IAIJkgB,EAAavlD,QAAQ6zC,QAChB,GAAGzc,aAAgBitB,MAAQjtB,aAAgBmtB,KAAM,CACtD,MAAMqB,EAAO,K,MA8BX,IAAIC,EAgDJ,OA7EIH,IAAY9lD,EAAQtC,QACtBooD,GAAW,EAEXC,EAAgB5nD,KAAKszB,eAAe3hB,OAAO,CAAC0nB,KAAAA,EAAM0R,SAAU0c,IAC5DG,EAAc7+C,OAAOwB,IACfo9C,IACF3nD,KAAKG,IAAI,oBAAqBgY,GAE9BnY,KAAK+nD,qBAAqBlmD,EAAQyzB,WAClCt1B,KAAKgoD,UAAU5wC,EAAQ,CAAC9Y,EAAG,4BAC3BkpD,EAAa5lD,OAAO2I,OAIxBq9C,EAAcK,mBAAmBtR,IAK/B,MAAMuR,EAAW/oC,KAAKyD,IAAI,EAAGzD,KAAKgpC,MAAM,IAAMxR,EAASyR,KAAOzR,EAASE,QACpE8P,GACD3mD,KAAKgoD,UAAU5wC,EAAQ,CAAC9Y,EAAGqoD,EAAYhQ,SAAqB,EAAXuR,IAEnDV,EAAaa,UAAU1R,MAGzB6Q,EAAaa,UAAU,CAACD,KAAM,EAAGvR,MAAOxd,EAAKvlB,QAI7B,UAAfqyC,GAA0B9oD,EAAQ4pD,YAA0B,QAAb,EAAA5pD,EAAQ+rC,aAAK,eAAE7V,QAC/Du0B,EAAqB9nD,KAAKszB,eAAe3hB,OAAO,CAAC0nB,KAAMh8B,EAAQ+rC,MAAM7V,QAGvEq0B,GAAiBA,EAAc5iD,MAAWm0B,GAAc,mCAOtD,IAAI2c,EAsBJ,GAxBA3c,EAAUl5B,KAAOmmD,EACjBuB,GAAW,EAIP7R,EADG,UADAqQ,EAEU,CACX7nD,EAAG,0BACH+6B,KAAMF,GAKK,CACX76B,EAAG,6BACH+6B,KAAMF,EACN0O,UAAWwe,EACXxnD,OAAQ,CACNypD,WAA2B,oCAAf3B,QAA0Dh7C,GAGxE67B,WAAAA,GAIHsgB,EACD,IACE,MAAM3uB,QAAkB2uB,EACvBhS,EAAqD1M,MAAQjQ,EAC9D,MAAM5uB,GACNvK,KAAKG,IAAIZ,MAAM,+BAAgCgL,GAInDi9C,EAAavlD,QAAQ6zC,QACpB,KACDsP,GAAY,MAGPoC,GAGNnqD,EAAQkrD,cACTV,IAEA7nD,KAAKs5C,sBAAsBh5C,KAAK,CAC9BunD,KAAAA,IAKN,OAAOL,GAGTxnD,KAAKgmD,qBAAqBnkD,EAAS,CACjC0mD,cAAelrD,EAAQkrD,cACvBvH,cAAe3jD,EAAQq0C,mBAAgB/lC,EACvC+/B,SAAUruC,EAAQquC,SAClBuB,WAAY5vC,EAAQ4vC,WACpB8L,aAAc17C,EAAQ07C,eAGpB17C,EAAQkrD,gBACVf,EAAaxiD,MAAM8wC,IACjB91C,KAAKgoD,UAAU5wC,EAAQ,CAAC9Y,EAAG,4BAEpB0B,KAAKqU,WAAWC,UAAU,qBAAsB,CACrDk0C,WAAYnrD,EAAQmrD,WACpBltC,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5Ce,MAAO29B,EACPj0C,QAASk0C,EACTzgB,UAAWzzB,EAAQyzB,UACnB+W,gBAAiByY,EACjBnT,cAAet0C,EAAQq0C,aACvBoU,OAAQzoD,EAAQyoD,OAChBj3B,SAAAA,EACA+2B,YAAavoD,EAAQ4vC,WACrB4Y,QAASxoD,EAAQooD,aAAezlD,KAAK4c,gBAAgB8O,iBAAiBruB,EAAQooD,mBAAgB95C,IAC7F3G,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAC1CxmB,IACF,GAAkB,UAAf4mD,GACc,MAAf5mD,EAAMuW,OACU,6BAAfvW,EAAME,MACQ,4BAAfF,EAAME,MAIN,OAHAF,EAAMslD,SAAU,EAChBsB,EAAa,gBACbtkD,EAAQ6I,OAKV,MADA06C,GAAY,GACN7lD,QAIVioD,EAAaxiD,KAAKnD,EAAQ+I,QAAQ3I,QAASJ,EAAQ+I,QAAQhJ,SAG7D,MAAM6mD,EAGF,CACF5mD,QAAAA,GAMF,OAHA4X,GAA6BgvC,EAAK,CAAC,YACnCA,EAAI79C,QAAU48C,EAEPiB,EAGIC,UAAUtxC,EAAgBuxC,EAAetrD,EAkBjD,I,0CAOH,GAJGA,EAAQquC,WAAaruC,EAAQynD,eAC9BznD,EAAQynD,aAAeznD,EAAQquC,UAGb,IAAjBid,EAAMvqD,OACP,OAAO4B,KAAKkmD,SAAS9uC,EAAQuxC,EAAM,GAAI,OAAF,wBAAMtrD,GAAYA,EAAQurD,gBAAgB,KAGjFxxC,EAASpX,KAAK4c,gBAAgBsoC,kBAAkB9tC,IAAWA,EAC3D,MAAM0tC,EAAeznD,EAAQynD,cAAe,EAAAvmC,GAAA,GAAmBlhB,EAAQynD,mBAAgBn5C,EAEvF,IAAIoqC,EAAU14C,EAAQ04C,SAAW,GAC7BlnB,EAAWxxB,EAAQwxB,UAAY,GAChCknB,IACDA,GAAU,EAAAzjB,GAAA,GAAcyjB,EAASlnB,IAGnC7uB,KAAKG,IAAI,YAAawoD,EAAOtrD,GAE7B,MAAMwrD,EAAU,MAAO7oD,KAAK85C,cAEtB73B,EAA+B,GAC/B82B,EAAgBC,IACpB/2B,EAAU3hB,KAAK04C,IAGXtzB,EAAWijC,EAAMvkD,KAAI,CAACi1B,EAAM70B,KAChC,MAAM0/C,EAAU7mD,EAAQurD,gBAAgBpkD,GAClCiD,EAAC,eACL8gD,eAAe,EACfzB,QAASzpD,EAAQypD,QACjBpV,aAAcr0C,EAAQq0C,aACtBoU,OAAQzoD,EAAQyoD,OAChBhB,aAAAA,EACApZ,SAAUruC,EAAQquC,SAClB+Z,aAAcpoD,EAAQooD,aACtBoD,QAAAA,EACA9P,aAAAA,GACGmL,GASL,OANW,IAAR1/C,IACDiD,EAAEsuC,QAAUA,EACZtuC,EAAEonB,SAAWA,GAIR7uB,KAAKkmD,SAAS9uC,EAAQiiB,EAAM5xB,GAAG5F,WAGrCxE,EAAQ4vC,YACThrB,EAAU3hB,MAAK,KACbN,KAAKoe,iBAAiB6uB,WAAW71B,EAAQ/Z,EAAQquC,aAIrDzpB,EAAU/e,SAAS0B,IACjBA,OAMF,MAAMwgD,EAAc,CAACvjD,EAAcwjD,KAC9BA,EACDxjD,EAAQtC,OAAQ,SAETsC,EAAQtC,MAGjBS,KAAKwc,UAAU7V,cAAc,qBAGzB6lB,EAAYxsB,KAAK4c,gBAAgB8O,iBAAiBtU,GAClD0xC,EAAUC,IACd/oD,KAAKgoD,UAAU5wC,EAAQ,CAAC9Y,EAAG,4BAE3B,MAAMlD,GAAW,SAqBjB,OApBA4E,KAAKs5C,sBAAsBh5C,KAAK,CAC9BunD,KAAM,IACG7nD,KAAKqU,WAAWC,UAAU,0BAA2B,CAC1DgH,KAAMkR,EACNw8B,YAAaD,EACb1c,gBAAiByY,EACjBnT,cAAet0C,EAAQq0C,aACvBoU,OAAQzoD,EAAQyoD,OAChBF,YAAavoD,EAAQ4vC,WACrB4Y,QAASxoD,EAAQooD,aAAezlD,KAAK4c,gBAAgB8O,iBAAiBruB,EAAQooD,mBAAgB95C,IAC7F3G,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,GAC5C3qB,EAAS6G,aACP1C,IACFmmB,EAASxiB,SAASrB,GAAYujD,EAAYvjD,GAAS,KACnDzG,EAASwG,OAAOrC,QAKfnE,GAGHgtB,EAAwC1C,EAASthB,KAAKvC,GAClDA,EAAQ6I,OAA+B1F,MAAM8wC,GAC5C91C,KAAKqU,WAAWC,UAAU,uBAAwB,CACvDgH,KAAMkR,EACNrU,MAAO29B,MAGV9wC,MAAMikD,IACL,IAAInT,EACkB,sBAAnBmT,EAAa3qD,EAEdw3C,EAAanD,GADC3yC,KAAK+zC,iBAAiBC,UAAUiV,EAAah2B,QAEhC,yBAAnBg2B,EAAa3qD,IAErBw3C,EAAa,GADD91C,KAAK8zC,eAAe1M,QAAQ6hB,EAAajqB,YAIvD,MAAMkqB,EAAqC,CACzC5qD,EAAG,mBACH6Z,MAAO29B,EACPxgB,UAAWzzB,EAAQyzB,UACnBzzB,QAASk0C,EACTlnB,SAAAA,GASF,OALGknB,IACDA,EAAU,GACVlnB,EAAW,IAGNq6B,KACNngD,OAAOwB,IACR,GAAgB,eAAbA,EAAItK,KACL,OAAO,KAKT,MAFAD,KAAKG,IAAIZ,MAAM,+BAAgCgL,EAAK1I,GACpDujD,EAAYvjD,GAAS,GACf0I,OAIV,OAAO5I,QAAQmR,IAAIsV,GAAUpjB,MAAMmkD,GAC1BL,EAAOK,EAAO1qD,OAAOC,eAIzB0qD,YAAYhyC,EAAgBiyC,GACjC,OAAOrpD,KAAK82C,UAAU1/B,EAAQpX,KAAKyc,gBAAgB6sC,qBAAqBD,IAGnEvS,UAAU1/B,EAAgB0+B,EAAwBz4C,EAYpD,I,MACH+Z,EAASpX,KAAK4c,gBAAgBsoC,kBAAkB9tC,IAAWA,EAG3D,MAAMvV,EAAU7B,KAAKmlD,wBAAwB/tC,EAAQ/Z,GAC/CynD,EAAeznD,EAAQynD,cAAe,EAAAvmC,GAAA,GAAmBlhB,EAAQynD,mBAAgBn5C,EAEvF,IAAIwM,EACJ,OAAO29B,EAAWx3C,GAChB,IAAK,iBAAkB,CACrB,MAAMirD,EAAS,GAAK1nD,EAAQtD,GAC5Bu3C,EAAW+N,KAAKtlD,GAAKgrD,EACrBvpD,KAAK8jD,gBAAgB0F,SAAS1T,EAAW+N,KAAM,CAC7CvlD,EAAG,cACHwtB,MAAO,EACP29B,aAAc,EACd5qD,OAAQ,GACR0Z,cAAe,KAGjB,MAAM,KAACsrC,EAAI,QAAEx+C,GAAWrF,KAAK8jD,gBAAgB4F,QAAQH,GACrDpxC,EAAQ,CACN7Z,EAAG,mBACHulD,KAAAA,EACAx+C,QAAAA,GAGF,MAGF,IAAK,kBACH8S,EAAQ,CACN7Z,EAAG,oBACH20B,MAAOjzB,KAAK+zC,iBAAiB4V,SAAU7T,EAAWv3C,GAA6BA,KAEjF,MAGF,IAAK,qBAKH4Z,EAAQ,CACN7Z,EAAG,uBACH0gC,SANUh/B,KAAK8zC,eAAevK,OAAQuM,EAAWv3C,GAAmCA,KAQtF,MAGF,IAAK,oBACH4Z,EAAQ,CACN7Z,EAAG,sBACHg4C,aAAcR,EAAWQ,aACzBC,WAAYT,EAAWS,WACvBC,UAAWV,EAAWU,UACtBn+B,QAA2B,QAAlB,EAAAy9B,EAAWz9B,eAAO,QAAI,IAC/Bo+B,MAAOX,EAAWW,OAEpB,MAGF,IAAK,qBACHt+B,EAAQ,CACN7Z,EAAG,kBACH40C,IAAK71C,EAAQ44C,UAEf,MAGF,IAAK,kBACH99B,EAAQ,CACN7Z,EAAG,oBACH40C,IAAK71C,EAAQ44C,SACbpf,MAAOif,EAAWjf,MAClBqf,QAASJ,EAAWI,QACpBC,SAAUL,EAAWK,SACrBC,SAAUN,EAAWM,SACrBC,WAAYP,EAAWO,YAEzB,MAIF,IAAK,sBACHl+B,EAAQ29B,EAKZj0C,EAAQsW,MAAQA,EAEhB,IAAIitC,EAAeC,IAajBrlD,KAAKwc,UAAU7V,cAAc,qBAiE/B,OA9DA9E,EAAQ6I,KAAO,KACb,MAAM46C,EAAsC,GACzCtlD,KAAKo5C,iBAAiBhiC,KACvBkuC,EAAmBC,eAAiBvlD,KAAKo5C,iBAAiBhiC,GAAQrI,WAGpE,MAAMy2C,EAASnoD,EAAQooD,aAAezlD,KAAK4c,gBAAgB8O,iBAAiBruB,EAAQooD,mBAAgB95C,EACpG,IAAI+5C,EA6BJ,OA3BEA,EADCroD,EAAQ4a,SACIjY,KAAKqU,WAAWsxC,eAAe,+BAAgC,CAC1ErqC,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5Cke,UAAWzzB,EAAQyzB,UACnB+W,gBAAiByY,QAAgBn5C,EACjCkoC,SAAUx2C,EAAQu2C,QAClBr1C,GAAIlB,EAAQo4C,SACZmQ,YAAavoD,EAAQ4vC,WACrB0E,cAAet0C,EAAQq0C,aACvBoU,OAAQzoD,EAAQyoD,OAChBD,QAASL,GACRF,GAEUtlD,KAAKqU,WAAWsxC,eAAe,qBAAsB,CAChErqC,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5Ce,MAAO29B,EACPxgB,UAAWzzB,EAAQyzB,UACnB+W,gBAAiByY,QAAgBn5C,EACjC9J,QAAS,GACT+jD,YAAavoD,EAAQ4vC,WACrB0E,cAAet0C,EAAQq0C,aACvBoU,OAAQzoD,EAAQyoD,OAChBD,QAASL,GACRF,GAGLtlD,KAAKo5C,iBAAiBhiC,GAAUkuC,EAEzBI,EAAW1gD,MAAM+gB,IACnBA,EAAQA,SACTA,EAAQA,QAAQ7iB,SAASgY,IACP,uBAAbA,EAAO5c,IACR4c,EAAO2iB,OAAQ,MAKrB79B,KAAK0d,kBAAkBwQ,qBAAqBnI,MAC1CxmB,IACF6lD,OACCn8C,SAAQ,KACNjJ,KAAKo5C,iBAAiBhiC,KAAYkuC,UAC5BtlD,KAAKo5C,iBAAiBhiC,OAKnCpX,KAAKgmD,qBAAqBnkD,EAAS,CACjCm/C,cAAe3jD,EAAQq0C,mBAAgB/lC,EACvC+/B,SAAUruC,EAAQquC,SAClBuB,WAAY5vC,EAAQ4vC,WACpBgZ,YAAY,IAGPpkD,EAAQ+I,QAcTo7C,qBAAqBnkD,EAA0BxE,EAOlD,IACH,MAAM0R,EAAYlN,EAAQtD,GACpB6Y,EAASpX,KAAK+7C,eAAel6C,GAC7B6B,EAAUrG,EAAQ2jD,YAAchhD,KAAKwjD,4BAA4BpsC,GAAUpX,KAAK6jB,0BAA0BzM,GAChH,IAAI6K,EAA+B,GACnC,GAAG5kB,EAAQ2jD,YAEThhD,KAAKye,aAAa,CAAC5c,GAAU,CAAC6B,QAAAA,EAASs9C,aAAa,EAAMv6B,YAAY,IACtExE,EAAU3hB,MAAK,KACbN,KAAKwc,UAAU7V,cAAc,gBAAiB9E,UAE3C,CAIL,MAAM0R,EAA6B,CACjCvT,KAAK2jB,kBAAkBvM,GACvB/Z,EAAQquC,SAAW1rC,KAAK2jB,kBAAkBvM,EAAQ/Z,EAAQquC,eAAY//B,GAGxE,IAAI,MAAMjI,KAAW6P,EAChB7P,GACDA,EAAQogB,QAAQ2D,QAAQ1Y,GAI5B/O,KAAKye,aAAa,CAAC5c,GAAU,CAAC6B,QAAAA,EAAS+iB,YAAY,IACnDzmB,KAAK88C,oBAAoBj7C,GACzBogB,EAAU3hB,MAAK,KACbN,KAAKwc,UAAU7V,cAAc,iBAAkB,CAACgnC,WAAYjqC,EAAQ2D,IAAKxF,QAAAA,OAI7E,MAAMwH,EAAiCrJ,KAAKk5C,kBAAkBr3C,EAAQyzB,WAAa,CACjFle,OAAAA,EACAwkC,OAAQ7sC,EACR28B,SAAUruC,EAAQquC,SAClBhoC,QAAAA,EACAuiD,WAAY5oD,EAAQ4oD,YAqBtB,OAlBI5oD,EAAQkrD,eAAiB1mD,EAAQ6I,MACnCuX,EAAU3hB,MAAK,KACVjD,EAAQ4vC,YACTjtC,KAAKoe,iBAAiB6uB,WAAW71B,EAAQ/Z,EAAQquC,UAGnD7pC,EAAQ6I,UAITuX,EAAU7jB,SACVf,EAAQ07C,cAAgBA,KAAc,KACrC,IAAI,MAAMn0C,KAAYqd,EACpBrd,OAKCyE,EAGD87C,wBAAwB/tC,EAAgB/Z,GAa9C,IAAIusD,EAJDvsD,EAAQquC,WAAaruC,EAAQynD,eAC9BznD,EAAQynD,aAAeznD,EAAQquC,UAIjC,MAAM7gB,EAAc7qB,KAAK4c,gBAAgBiO,YAAYzT,GACrD,GAAGyT,GACY7qB,KAAK4c,gBAAgBitC,QAAQzyC,GAClCvY,OAAOirD,WAAY,CACzB,MAAMl0C,EAAO5V,KAAKyc,gBAAgBC,UAElCktC,EADiBh0C,EAAK2gC,YAAc3gC,EAAK4gC,UAAY,IAAM5gC,EAAK4gC,UAAY,IAKhF,MAAM30C,EAA2B,CAC/BvD,EAAG,UACHC,GAAIyB,KAAKqmB,sBAAsBjP,GAC/BkP,QAASjpB,EAAQooD,aAAezlD,KAAK4c,gBAAgB2J,cAAclpB,EAAQooD,cAAgBzlD,KAAK+pD,eAAe3yC,GAC/GyB,QAAS7Y,KAAK4c,gBAAgB2J,cAAcnP,GAC5C4yC,YAAaJ,EACb/qD,OAAQmB,KAAKiqD,cAAc7yC,GAC3BgK,KAAM/jB,EAAQq0C,eAAiB,EAAApwB,GAAA,IAAM,GAAQthB,KAAKuhB,YAAYC,sBAC9D3f,QAAS,GACTq8C,WAAY7gD,EAAQwrD,QACpBvzB,WAAW,UACX1G,SAAU5uB,KAAKkqD,oBAAoB7sD,EAAQynD,aAAcznD,EAAQquC,UACjEye,WAAY9sD,EAAQ4a,SACpB09B,aAAct4C,EAAQu4C,YACtBwU,QAASpqD,KAAKqqD,gBAAgBjzC,GAC9BgpC,MAAOv1B,GAAe,EACtBxhB,SAAS,GAQX,OALAoQ,GAA6B5X,EAAS,CAAC,OAAQ,iBACxB8J,IAApBtO,EAAQwrD,UACThnD,EAAQ+I,SAAU,UAGb/I,EAGDqoD,oBAAoBpF,EAAsBwF,GAChD,MAAM18C,EAAS,CACbtP,EAAG,qBACH+tC,gBAAiByY,GAAgBwF,GAOnC,OAJGA,GAAgB18C,EAAOy+B,kBAAoBie,IAC5C18C,EAAOixC,gBAAkByL,GAGpB18C,EAGDy8C,gBAAgBjzC,GACtB,IAAIgzC,EACJ,GAAGpqD,KAAK4c,gBAAgBiO,YAAYzT,GAAS,CAC3C,MAAMmzC,EAAcvqD,KAAKwqD,kBAAkBC,kBAAkBrzC,EAAOgM,aACjEmnC,MAAAA,OAAW,EAAXA,EAAaG,kBACdN,EAAU,CACR9rD,EAAG,iBACHwtB,MAAO,EACPjtB,OAAQ,CACN8rD,UAAU,GAEZxxC,WAAYoxC,EAAYG,eACxBN,QAAS,EACTQ,YAAa,IAKnB,OAAOR,EAMDL,eAAe3yC,GACrB,OAAGpX,KAAK4c,gBAAgByH,UAAUjN,KAAYpX,KAAK4c,gBAAgBiO,YAAYzT,IAAWpX,KAAK6qD,mBAAmBzzC,SAChH,EAEOpX,KAAK4c,gBAAgB2J,cAAcvmB,KAAKyc,gBAAgBC,UAAUne,GAAGkI,YAIxEwjD,cAAc7yC,GACpB,MAAMvY,EAAoC,GAc1C,OAZGuY,IADYpX,KAAKyc,gBAAgBC,UAAUne,KAE5CM,EAAOgb,KAAM,EAET7Z,KAAK4c,gBAAgBuG,UAAU/L,IAAYpX,KAAKyc,gBAAgBwO,MAAM7T,KACxEvY,EAAOsoB,QAAS,IAIjBnnB,KAAK4c,gBAAgBiO,YAAYzT,KAClCvY,EAAOuyB,MAAO,GAGTvyB,EAGDisD,sBAAsB1zC,EAAgB2zC,GAC5C,MAAM1kD,EAAOrG,KAAKyc,gBAAgBC,UAAUne,GAAGkI,WACzCuR,EAAS+yC,EAAgB/yC,OAC/B,GAAGA,IAAW3R,GAAQ0kD,EAAgB3zC,SAAW/Q,IAAS0kD,EAAgBp8B,SACxE,OAGF,MAAMsC,EAA+C,CACnD3yB,EAAG,mBACHwtB,MAAO,EACP1K,KAAM2pC,EAAgB3pC,MAGxB,IAAI4pC,GAAe,EACnB,GAAGD,EAAgBp8B,SACjBsC,EAAU3K,QAAUykC,EAAgBp8B,SAASrI,QAC7C2K,EAAUg6B,UAAYF,EAAgBp8B,SAASs8B,UAC/Ch6B,EAAU+4B,YAAce,EAAgBp8B,SAASq7B,gBAC5C,CAGL,GAFA/4B,EAAU+4B,YAAce,EAAgBf,YAErChyC,EAAOsZ,SAAU,CAClB,MAAM45B,EAAWlrD,KAAKwqD,kBAAkBW,kBAAkBnzC,EAAOgT,aAC9DkgC,MAAAA,OAAQ,EAARA,EAAUE,wBACXn6B,EAAUg6B,UAAYC,EAASE,qBAC/BJ,GAAe,GAIfA,IACF/5B,EAAU3K,QAAUtmB,KAAK4c,gBAAgB2J,cAAcvO,IAiB3D,OAbGhY,KAAK4c,gBAAgBiO,YAAYkgC,EAAgB3zC,UAC/C2zC,EAAgBf,cACjB/4B,EAAU+4B,YAAce,EAAgBf,aAG1C/4B,EAAUo6B,aAAeN,EAAgBxsD,IAGxC6Y,IAAW/Q,GAAS2kD,IACrB/5B,EAAUq6B,kBAAoBP,EAAgBxsD,GAC9C0yB,EAAUs6B,gBAAkBvrD,KAAK4c,gBAAgB2J,cAAcwkC,EAAgB3zC,SAG1E6Z,EAGFu6B,0BAA0Bp0C,EAAgB6b,GAC/C,MAAMnN,EAAQ2lC,OAAOC,iBACf7pD,EAAkC,CACtCvD,EAAG,iBACHO,OAAQ,GACRia,OAAQ,CACNxa,EAAG,gCACH20B,MAAAA,GAEF10B,GAAIunB,EACJjN,QAAS7Y,KAAK4c,gBAAgB2J,cAAcnP,GAC5C4M,IAAK8B,EACL1O,OAAAA,EACAgK,KAAO6R,EAAsB7R,KAC7BpJ,OAAQZ,GAIV,OADApX,KAAK6jB,0BAA0BzM,GAAQjP,IAAI2d,EAAOjkB,GAC3CA,EAGF8pD,iBAAiBC,GACtB,OAAO5rD,KAAKq6C,mBAAmBuR,GAG1Bf,mBAAmBzzC,G,QACxB,OAAOA,EAAOiN,cAAwE,QAAzD,EAAiD,QAAjD,EAAArkB,KAAK4c,gBAAgBitC,QAAQzyC,GAAQy0C,oBAAY,eAAEhtD,cAAM,eAAEitD,WAGnFhP,oBAAoBj7C,EAAoBmY,EAA0Bha,KAAK8b,cAAcja,EAAQuV,SAC/F4C,IACDA,EAAOsE,YAAczc,EAAQmiB,IAENhkB,KAAK2jB,kBAAkB9hB,EAAQuV,QACvC0O,MAAQjkB,EAAQmiB,IAE/BhkB,KAAKgoB,eAAetM,uBAAuB1B,GAAQ,EAAOnY,GAE1D7B,KAAK4b,yBAAyB/Z,EAAQuV,OAAQ4C,IAI3C+tC,qBAAqBjsB,GAC1B,MAAM6f,EAAc37C,KAAKk5C,kBAAkBpd,GAM3C,GAAG6f,EAAa,CACd,MAAM,OAACvkC,EAAM,OAAEwkC,EAAM,QAAEl4C,GAAWi4C,EAC5Bj4B,EAAiB1jB,KAAK2jB,kBAAkBvM,GAc9C,OAZApX,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,uBACHonB,SAAU,CAACk2B,GACXn4B,SAAK9X,EACLmjB,eAAWnjB,IAGb+X,EAAeI,QAAQ/f,OAAO63C,UAEvB57C,KAAKk5C,kBAAkBpd,GAC9Bp4B,EAAQK,OAAO63C,IAER,EAGT,OAAO,EAwCImQ,oB,0CACX,MAAM5R,EAAan6C,KAAKm6C,WAAWz1C,MACnC,MAAO1E,KAAKgoB,eAAenJ,gBAAgB3E,KAAmB,CAC5D,MAAM9X,QAAepC,KAAKopB,eAAe,IAAKlP,IAC9C,IAAIigC,KAAgB/3C,EAAOilB,MACzB,UAwBC2kC,iBAAiBnxC,EAAQ,GAAIqN,EAAsBC,EAAgBnN,EAAW,EAAG0E,GACtF,OAAO1f,KAAKgoB,eAAeC,WAAWpN,EAAOqN,EAAaC,EAAOnN,EAAU0E,GAGtEq/B,qBAAqB3nC,EAAgBs0B,G,UAC1C,MAAMhoB,EAAiB1jB,KAAK2jB,kBAAkBvM,EAAQs0B,GACtD,GAAGA,EAAU,CACX,MAAMugB,EAAqBjsD,KAAK2jB,kBAAkBvM,GAC5CsQ,EAAYvI,KAAKyD,IAAgC,QAA5B,EAAAqpC,EAAmBvkC,iBAAS,QAAI,EAAGhE,EAAegE,WACvE7lB,EAAU7B,KAAK2e,iBAAiBvH,EAAQsM,EAAeoC,OAC7D,QAAuB,QAAf,EAAAjkB,MAAAA,OAAO,EAAPA,EAAShD,cAAM,eAAEgb,MAAO6N,EAAYhE,EAAeoC,MAAQ4B,EAAY,EAC1E,CACL,MAAM7lB,EAAU7B,KAAK2e,iBAAiBvH,EAAQsM,EAAeoC,OACvD4B,EAAYtQ,EAAOka,SAAWnS,KAAKyD,IAAIc,EAAegE,UAAWhE,EAAeiE,iBAAmBjE,EAAegE,UACxH,QAAuB,QAAf,EAAA7lB,MAAAA,OAAO,EAAPA,EAAShD,cAAM,eAAEgb,MAAO6N,EAAYhE,EAAeoC,MAAQ4B,EAAY,GAK5E0B,eAAejB,EAAenN,EAA2BkE,GAE9D,IAEIgJ,EAAc,OAEAvc,IAAfuT,IACDA,EAAalf,KAAKgoB,eAAe/I,cAAcjE,IAG9CkE,IACDgJ,EAA2B,MAAbhJ,EACdA,GAAclf,KAAKuhB,YAAYC,uBAGjC,MACM24B,EAAan6C,KAAKm6C,WAAWz1C,MAK7BgQ,EAA6B,CACjC2G,UAAWL,EACXkxC,YAAahtC,EACbitC,UAtBa,EAuBbC,YAAapsD,KAAK4c,gBAAgB8O,iBAtBhC2gC,WAuBFlkC,MAXe,IAYfmT,KAAM,KAGR,OAAOt7B,KAAKqU,WAAWwY,gBAAgB,sBAAuBnY,EAAQ,CAEpEid,YAAY,IACX3sB,MAAMoX,IACP,IAAI+9B,KAAoC,gCAApB/9B,EAAc9d,EAAqC,OAAO,KAE3E,MACD0B,KAAKG,IAAI,8BAA+Bic,EAAcrB,QAAS,OAAF,UAAMqB,EAAcrB,QAAQ,KAQ1EmE,GAA+BlE,IAAad,IAC3Dla,KAAKgoB,eAAejJ,iBAAiB/D,GAGnCkE,IACF,kBAAmC,GACnClf,KAAKoe,iBAAiBC,oBAGxBre,KAAKyc,gBAAgB8I,aAAanJ,EAAcpD,OAChDhZ,KAAKud,gBAAgBiI,aAAapJ,EAAcqJ,OAChDzlB,KAAKye,aAAarC,EAAcsJ,UAEhC,IAAI4mC,IAAuBptC,EACvBqtC,GAAa,EACjB,MAAMC,EAA2C,GAC3CC,EAA+BzxC,IAAad,GAAmB,EAAIc,EACnE0J,EAAmB1J,IAAad,IACtC,EAAAoL,GAAA,GAAgBlJ,EAAcrB,SAAuBf,SAG3BrO,IAArBqO,EAAOqB,YACRrB,EAAOqB,UAAYoxC,GAGrBzsD,KAAKgoB,eAAetJ,WAAW1E,OAAQrO,GAAW,EAAM+Y,GAEpD4nC,GACDtsD,KAAK4c,gBAAgBuG,UAAUnJ,EAAO5C,SAAU,EAAAwB,GAAA,GAAUoB,EAAOsB,SAClEtb,KAAKi7C,mBAAmBjhC,EAAOsE,aAC/BguC,GAAuB,QAGJ3gD,IAAlBqO,EAAO5C,SAQP8Q,IAAe,EAAAlH,GAAA,GAAehH,GAAUkO,IACzCloB,KAAK4b,yBAAyB5B,EAAO5C,OAAQ4C,GAC7CuyC,GAAa,IAKX,EAAAhuC,GAAA,GAAmBvE,EAAO+M,qBAAuB,EAAAxI,GAAA,GAAmBvE,EAAOgN,sBAC7EwlC,EAAaxyC,EAAO5C,QAAU4C,EAE9Bha,KAAKG,IAAIZ,MAAM,eAAgBya,EAAQtF,QAI3C,MAAMhB,EAAO7X,OAAO6X,KAAK84C,GACzB,GAAG94C,EAAKtV,OAAQ,CAEZ,MAAM2Z,EAAUrE,EAAKtP,KAAKiD,GAAQA,EAAIZ,aAChC2hB,EAAWrQ,EAAQ3T,KAAKgT,GAAWpX,KAAK4e,mBAAmBxH,KACjEzV,QAAQmR,IAAIsV,GAAUpjB,MAAK,KACzBhF,KAAKwc,UAAU7V,cAAc,sBAAuB6lD,GAEpD,IAAI,IAAI3mD,EAAI,EAAGA,EAAIkS,EAAQ3Z,SAAUyH,EAAG,CACtC,MAAMuR,EAASW,EAAQlS,GACvB7F,KAAKwc,UAAU7V,cAAc,gBAAiB,CAC5CyQ,OAAAA,EACA4C,OAAQha,KAAK8b,cAAc1E,SAOrC,MAAM0D,EAASsB,EAAuDtB,MAGhE4xC,EAAgB1sD,KAAKgoB,eAAe7L,iBAAiBnB,GAAU,GACrE,IAAI2xC,EAAgB,EACpB,IAAI,IAAI9mD,EAAI,EAAGzH,EAASsuD,EAActuD,OAAQyH,EAAIzH,IAAUyH,GACvD,EAAA0Y,GAAA,GAAmBmuC,EAAc7mD,GAAGyY,gBACnCquC,EAIN,MAAMtlC,GACHvM,GACD6xC,GAAiB7xC,IAChBsB,EAAcrB,QAAQ3c,OACtBipB,GACDrnB,KAAKgoB,eAAezN,iBAAiBS,GAAU,GAG9CuxC,EACDvsD,KAAK4b,2BAEL5b,KAAKwc,UAAU7V,cAAc,sBAAuB,IAGtD,MAAMoU,EAAWqB,EAAuDrB,QAClE6xC,EAlIS,MAkIOzkC,EAAqBpN,EAAUA,EAAQpT,MAAM,EAAGwgB,GACtE,MAAO,CACLd,MAAOA,GAASulC,EAAcA,EAAcxuD,OAAS,KAAO2c,EAAQA,EAAQ3c,OAAS,GACrF0c,MAAAA,EACAC,QAAS6xC,MAKFC,gBAAgBz1C,EAAgBq9B,EAAoByK,EAAgB7hD,EAO5E,I,0CACH+Z,EAASpX,KAAK4c,gBAAgBsoC,kBAAkB9tC,IAAWA,EAG3D,IAAI,IAAIvR,EAAI,EAAGzH,GAFf8gD,EAAOA,EAAKv3C,QAAQkhB,MAAK,CAACqD,EAAGC,IAAMD,EAAIC,KAEV/tB,OAAQyH,EAAIzH,IAAUyH,EAAG,CACpD,MAAMme,EAAMk7B,EAAKr5C,GACXklD,EAAkB/qD,KAAK2e,iBAAiB81B,EAAYzwB,GACvD+mC,EAAgBlsD,OAAOqlB,cACxBlkB,KAAK61C,SAASz+B,EAAQ2zC,EAAgBlpD,QAAS,CAC7CgtB,SAAUk8B,EAAgBl8B,SAC1B6iB,aAAcr0C,EAAQq0C,aACtBoU,OAAQzoD,EAAQyoD,SAGlB5G,EAAKn0C,OAAOlF,IAAK,KACfzH,GAIN,IAAI8gD,EAAK9gD,OACP,OAAOuD,QAAQM,UAGjB,MAAM6qD,QAAe9sD,KAAKqU,WAAWmX,YAC/BuhC,EAAe7N,EAAKn0C,OAAO+hD,EAAOE,oBAAqB9N,EAAK9gD,OAAS0uD,EAAOE,qBAE/E3vD,EAAQ4vD,eACT5vD,EAAQ6vD,YAAa,GAGvB,MAAMpiC,EAKF,GAEEqiC,EAAoB,GACpBC,EAAclO,EAAK96C,KAAK4f,I,YAC5B,MAAM+mC,EAAkB/qD,KAAK2e,iBAAiB81B,EAAYzwB,GACpDniB,EAA2B7B,KAAKmlD,wBAAwB/tC,EAAQ/Z,GACtE8vD,EAAQ7sD,KAAKuB,EAAQtD,IAErB,MAAMmV,EAAqC,CACzC,WACA,SAIErW,EAAQ6vD,aACVrrD,EAAQ8sB,SAAW3uB,KAAK8qD,sBAAsB1zC,EAAQ2zC,GACtDr3C,EAAKpT,KAAK,QAAS,aAEA,QAAhB,EAAAuB,EAAQ8sB,gBAAQ,eAAEs8B,YAAa7zC,IAAWpX,KAAK4c,gBAAgBxF,eACzDvV,EAAQykB,SAIfjpB,EAAQ4vD,cAAiBlC,EAAgB5yC,OAC3CzE,EAAKpT,KAAK,WAGZ,MAAM+sD,EAAqC,QAAxB,EAAAtC,EAAgBn8B,gBAAQ,eAAEyd,gBACvCihB,EAAoBpO,EAAK7iD,QAAQgxD,GACvC,GAAGA,IAAqC,IAAvBC,EAA0B,CACzC,MAAMC,EAAgBJ,EAAQG,GAC9BzrD,EAAQ+sB,SAAW,CACjBtwB,EAAG,qBACH+tC,gBAAiBkhB,GAQrB75C,EAAKxQ,SAASmE,IAEZxF,EAAQwF,GAAO0jD,EAAgB1jD,MAGjC,MAAM23B,EAA+D,QAAnD,EAAAn9B,EAAQsW,aAA2C,eAAE6mB,SAavE,OAZGA,GACmC,CAAC,QAAS,SACrC3U,SAAS2U,EAASv/B,QACxBoC,EAAsBhD,OAAOugD,cAAe,GAI9C2L,EAAgB7M,aAC+B,QAAlC,EAAApzB,EAAOigC,EAAgB7M,mBAAW,QAAKpzB,EAAOigC,EAAgB7M,YAAc,CAACtC,OAAQ,MAAO57C,KAAK85C,cAAep0B,SAAU,KAClIA,SAASplB,KAAKuB,GAGfA,KAGT,IAAI,MAAMgnD,KAAW/9B,EAAQ,CAC3B,MAAM0iC,EAAQ1iC,EAAO+9B,GAClB2E,EAAM9nC,SAAStnB,OAAS,GACzBovD,EAAM9nC,SAASxiB,SAASrB,IACtBA,EAAQq8C,WAAasP,EAAM5R,UAKjCwR,EAAYlqD,SAASrB,IACnB7B,KAAKgmD,qBAAqBnkD,EAAS,CACjCm/C,cAAe3jD,EAAQq0C,mBAAgB/lC,EACvCs6C,YAAY,OAIhB,MAAMX,EAAsC,GACzCtlD,KAAKo5C,iBAAiBhiC,KACvBkuC,EAAmBC,eAAiBvlD,KAAKo5C,iBAAiBhiC,GAAQrI,WAGpE,MAAMnE,EAA2C5K,KAAKqU,WAAWsxC,eAAe,2BAA4B,CAC1G8H,UAAWztD,KAAK4c,gBAAgB8O,iBAAiB+oB,GACjDl2C,GAAI2gD,EAAK96C,KAAK4f,IAAQ,EAAAzF,GAAA,GAAmByF,KACzCsR,UAAW83B,EAAYhpD,KAAKvC,GAAYA,EAAQyzB,YAChDo4B,QAAS1tD,KAAK4c,gBAAgB8O,iBAAiBtU,GAC/Cu2C,cAAetwD,EAAQuwD,YACvB9H,OAAQzoD,EAAQyoD,OAChBnU,cAAet0C,EAAQq0C,aACvBmc,YAAaxwD,EAAQ6vD,WACrBY,oBAAqBzwD,EAAQ4vD,aAC7BpH,QAASxoD,EAAQooD,aAAezlD,KAAK4c,gBAAgB8O,iBAAiBruB,EAAQooD,mBAAgB95C,GAC7F25C,GAAoBtgD,MAAM+gB,IAC3B/lB,KAAKG,IAAI,2BAA4B4lB,GACrC/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAC3C9c,SAAQ,KACNjJ,KAAKo5C,iBAAiBhiC,KAAYkuC,UAC5BtlD,KAAKo5C,iBAAiBhiC,MAIjCpX,KAAKo5C,iBAAiBhiC,GAAUkuC,EAEhC,MAAMl9B,EAA+B,CAACxd,GAKtC,OAJGmiD,EAAa3uD,QACdgqB,EAAS9nB,KAAKN,KAAK6sD,gBAAgBz1C,EAAQq9B,EAAYsY,EAAc1vD,IAGhEsE,QAAQmR,IAAIsV,GAAUpjB,KAAKgE,EAAA,MAG7B+kD,qBAAqB/pC,IAWrBgqC,wBAAwB3mD,GAC7B,MAAM4mD,EAAI5mD,EAAIG,MAAM,KACd4P,GAAkB62C,EAAE,GAE1B,MAAgB,cADkBA,EAAE,GACNjuD,KAAKwjD,4BAA4BpsC,GAAUpX,KAAK6jB,0BAA0BzM,GAGnG6M,sBAAsBvgB,EAA+CsgB,GAK1E,MAJuB,iBAAd,IACPtgB,EAAU1D,KAAKguD,wBAAwBtqD,IAGlCA,GAAWA,EAAQgB,IAAIsf,GAGxBi4B,qBAAqB7kC,EAAgB3X,GAC3C,MAAMiE,EAA2B,IAAI8E,IAqBrC,OApBA9E,EAAQ0T,OAASA,EACjB1T,EAAQjE,KAAOA,EACfiE,EAAQ2D,IAAM,GAAG+P,KAAU3X,IAkBpBiE,EAGFmgB,0BAA0BzM,G,MAC/B,OAA2C,QAApC,EAAApX,KAAKs6C,wBAAwBljC,UAAO,QAAKpX,KAAKs6C,wBAAwBljC,GAAUpX,KAAKi8C,qBAAqB7kC,EAAQ,WAGpH82C,mBAAmB7mD,GACxB,MAAmB,iBAAV,EACAA,EAEArH,KAAKguD,wBAAwB3mD,GAIjC8mD,eAAep/C,GACpB,IAAI,MAAMqI,KAAUpX,KAAKs6C,wBAAyB,CAChD,GAAGt6C,KAAK4c,gBAAgBuG,UAAU/L,EAAO3Q,YACvC,SAGF,MAAM5E,EAAU7B,KAAKs6C,wBAAwBljC,GAAQ1S,IAAIqK,GACzD,GAAGlN,EACD,OAAOA,EAIX,OAAO7B,KAAKikB,sBAAsB,KAAMlV,GAGnC4P,iBAAiBvH,EAAgBrI,GACtC,OAAIqI,EAIGpX,KAAKikB,sBAAsBjkB,KAAK6jB,0BAA0BzM,GAASrI,GAHjE/O,KAAKmuD,eAAep/C,GAMxBgtC,eAAel6C,GAGpB,OAFaA,EAAQgX,UAAW,EAAAD,GAAA,GAAU/W,EAAQgX,UAAY,KAKzDu1C,kBAAkBh3C,GACvB,OAAOpX,KAAKgoB,eAAe/G,UAAU7J,GAGhC0E,cAAc1E,GACnB,OAAOpX,KAAKgoB,eAAelM,cAAc1E,GAGpCi3C,sBAAsB1gB,EAAgCuR,GAC3D,MAAMx7C,EAAU1D,KAAKkuD,mBAAmBvgB,GACxC,IAAI2gB,GAAepP,EAAK9gD,OAAQmwD,GAAcrP,EAAK9gD,OACnD,IAAI,MAAM4lB,KAAOk7B,EAAM,CACrB,MAAMr9C,EAAU7B,KAAKikB,sBAAsBvgB,EAASsgB,GASpD,GARIsqC,IACFA,GAAetuD,KAAKwuD,WAAW3sD,IAG7B0sD,IACFA,GAAcvuD,KAAKyuD,iBAAiB5sD,IAGnCysD,GAAeC,EAAY,MAGhC,MAAO,CAACD,YAAAA,EAAaC,WAAAA,GAIhB3vC,mBAAmB4N,GACxB,IAAI5hB,EACJ,QAAiBe,IAAd6gB,EAAyB,CAC1B,MAAMpV,GAAS,EAAAwB,GAAA,GAAU4T,GACzB,IAAIza,EAAM/R,KAAK65C,yBAAyBn1C,IAAI0S,GAK5C,GAJGrF,IACDnH,EAAUmH,EAAInH,SAGbA,EACD,OAAOA,EAGTA,GAAU,SACV5K,KAAK65C,yBAAyB1xC,IAAIiP,EAAQrF,EAAM,CAC9C28C,gBAAiB1uD,KAAK4c,gBAAgB+xC,uBAAuBniC,GAC7D5hB,QAAAA,IAIJ,OAAG5K,KAAK4uD,6BAIR5uD,KAAK4uD,4BAA6B,EAAA5jD,EAAA,GAAM,GAAGhG,MAAK,KAC9C,MAAM6pD,EAAsC,GACtCzmC,EAA+C,GACrD,IAAI,MAAOhR,GAAQ,gBAACs3C,EAAe,QAAE9jD,MAAa5K,KAAK65C,yBACrDgV,EAAiBvuD,KAAKouD,GACtBtmC,EAAShR,GAAUxM,EAWrB,OARA5K,KAAK65C,yBAAyBx1C,QAQvBrE,KAAKqU,WAAWC,UAAU,0BAA2B,CAACgY,MAAOuiC,IAAmB7pD,MAAM5C,IAC3FpC,KAAKgoB,eAAe3L,aAAaja,GAEjCA,EAAO2Y,QAAQ7X,SAAS8W,IACtB,MAAM5C,EAAS4C,EAAO5C,OACnBA,IACDgR,EAAShR,GAAQnV,QAAQ+X,UAClBoO,EAAShR,UAMlB7M,QAIDvF,MAAK,KAvBa,MACnB,IAAI,MAAMoS,KAAUgR,EAClBA,EAAShR,GAAQnV,aAAQ0J,IAsB3BmjD,GAEA9uD,KAAK4uD,2BAA6B,KAC/B5uD,KAAK65C,yBAAyB/lC,MAC/B9T,KAAK4e,4BAzCFhU,GAAW5K,KAAK4uD,2BAiDnBG,eAAezzC,EAAiB0zC,EAAsBC,GAC5D,OAAOjvD,KAAKqU,WAAWwY,gBAAgB,yBAA0B,CAC/DmiC,WAAAA,EACAC,OAAAA,EACA3zC,KAAAA,EACA8iC,OAAQ,IACPp5C,MAAMkqD,IACPlvD,KAAK0d,kBAAkBwQ,qBAAqB,CAC1C5vB,EAAG,cACH4c,OAAQ,CACN5c,EAAG,YACHmlB,IAAKyrC,EAAgBzrC,IACrBqL,UAAWogC,EAAgBpgC,cAI3BogC,EAAgBlmC,QAIbhpB,KAAK+uD,eAAezzC,EAAM0zC,EAAYC,MAIpCE,aAAa/3C,EAAgBg4C,EAAqBH,G,0CAC7D,GAAGjvD,KAAK4c,gBAAgBuG,UAAU/L,GAAS,CACzC,MAAMxM,EAAU5K,KAAKqvD,WAAWj4C,EAAQ,EAAG,GAErCk4C,QAAsB1kD,EAEtBsY,EAAY9L,EAAOgM,WACnB0C,EAAQwpC,EAAcxrC,QAAQ,IAAM,EAC1C,OAAO9jB,KAAKqU,WAAWwY,gBAAgB,yBAA0B,CAC/DxJ,QAASrjB,KAAKud,gBAAgBwT,gBAAgB7N,GAC9Ck7B,QAAQ,EAAA7/B,GAAA,GAAmBuH,KAC1B9gB,MAAMgnB,IACJA,GACDhsB,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,iCACH6a,WAAY+J,EACZs8B,iBAAkB15B,IAIfkG,KAIX,OAAOhsB,KAAK+uD,eAAe/uD,KAAK4c,gBAAgB8O,iBAAiBtU,GAASg4C,EAAWH,GAAQjqD,MAAK,KAChG,CACEhF,KAAKy6C,iBACLz6C,KAAK06C,eACL16C,KAAK26C,gBACL36C,KAAK46C,eACL56C,KAAKo5C,iBACLp5C,KAAK6lB,gBACL3iB,SAAS+qD,WACFA,EAAE72C,MAGX,MAAMm4C,EAAIvvD,KAAKu5C,mBAAmB70C,IAAI0S,GAetC,GAdGm4C,GACDA,EAAElrD,QAGJ,CACErE,KAAKs6C,wBACLt6C,KAAKw6C,0BACLt3C,SAAS+qD,IACT,MAAMuB,EAAKvB,EAAE72C,GACVo4C,GACDA,EAAGnrD,WAIJ+qD,EACDpvD,KAAKwc,UAAU7V,cAAc,eAAgB,CAACyQ,OAAAA,EAAQ4C,OAAQha,KAAK8b,cAAc1E,SAC5E,QACEpX,KAAK45C,sBAAsBxiC,UAC3BpX,KAAK+5C,QAAQ3iC,GAEpB,MAAMH,EAAIjX,KAAK65C,yBAAyBn1C,IAAI0S,GACzCH,IACDjX,KAAK65C,yBAAyB91C,OAAOqT,GACrCH,EAAErM,QAAQ3I,aAAQ0J,IAGpB3L,KAAKgoB,eAAevK,qBAAqBrG,UAKxCq4C,mBAAmBr4C,GACxB,OAAOzV,QAAQmR,IAAI,CACjB9S,KAAK+d,gBAAgB5W,WACrBnH,KAAK0vD,iBAAiBt4C,KAEvBpS,MAAK,EAAEiC,EAAOuU,MACbvU,EAAM45C,qBAAqBzpC,GAAUoE,EAAOsK,MAC5C9lB,KAAKwc,UAAU7V,cAAc,qBAAsB,CAACyQ,OAAAA,EAAQ0O,MAAOtK,EAAOsK,WAIvE4pC,iBAAiBt4C,G,MACtB,MAAMid,EAA+B,QAA3B,EAAAr0B,KAAK46C,eAAexjC,UAAO,QAAKpX,KAAK46C,eAAexjC,GAAU,GACxE,OAAGid,EAAEzpB,QAAgBypB,EAAEzpB,QACfypB,EAAEvO,MAAcnkB,QAAQM,QAAQoyB,GAEjCA,EAAEzpB,QAAU5K,KAAK2vD,UAAU,CAChCv4C,OAAAA,EACAw4C,YAAa,CAACtxD,EAAG,6BACjBwnB,MAAO,EACPqC,MAAO,IACNnjB,MAAM5C,I,MAGP,OAFAiyB,EAAEvZ,MAAQ1Y,EAAO0Y,MACjBuZ,EAAEvO,MAAyB,QAAjB,EAAA1jB,EAAO0hB,QAAQ,UAAE,eAAEE,IACtBqQ,KACNprB,SAAQ,YACForB,EAAEzpB,WAINilD,uBAAuBz4C,G,MAC5B,OAAkC,QAA3B,EAAApX,KAAK46C,eAAexjC,UAAO,eAAE0D,MAG/Bg1C,uBAAuB14C,G,MAC5B,OAAkC,QAA3B,EAAApX,KAAK46C,eAAexjC,UAAO,eAAE0O,MAG/BiqC,oBAAoB34C,EAAgB4M,EAAagsC,EAAiBlK,EAAkBmK,GACzF,OAAOjwD,KAAKqU,WAAWC,UAAU,+BAAgC,CAC/DgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C44C,MAAAA,EACAlK,OAAAA,EACAmK,WAAAA,EACA1xD,IAAI,EAAAggB,GAAA,GAAmByF,KACtBhf,MAAM+gB,IAEP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzCmqC,iBAAiB94C,GACtB,OAAOpX,KAAKqU,WAAWwY,gBAAgB,4BAA6B,CAClEvR,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,KAC3CpS,MAAMkqD,IACPlvD,KAAK0d,kBAAkBwQ,qBAAqB,CAC1C5vB,EAAG,cACH4c,OAAQ,CACN5c,EAAG,YACHmlB,IAAKyrC,EAAgBzrC,IACrBqL,UAAWogC,EAAgBpgC,aAI3BogC,EAAgBlmC,OAcbhpB,KAAKkwD,iBAAiB94C,IAbXpX,KAAK6jB,0BAA0BzM,GACvClU,SAASrB,IACXA,EAA4BhD,OAAO2c,eAC7B3Z,EAA4BhD,OAAO2c,UAI/Cxb,KAAKwc,UAAU7V,cAAc,uBAAwB,CAACyQ,OAAAA,EAAQ+4C,UAAU,WACjEnwD,KAAK46C,eAAexjC,IAEpB,MAONg5C,aAAalS,GAClB,MAAMsP,EAAQxtD,KAAKu6C,uBAAuB2D,GAC1C,OAAO,EAAAkS,GAAA,GAAatvD,MAAMC,KAAKysD,EAAM12C,WAGhCu5C,sBAAsBxuD,GAC3B,KAAIA,MAAAA,OAAO,EAAPA,EAASq8C,YAAY,OAAOr8C,EAEhC,MAAM6B,EAAU1D,KAAKu6C,uBAAuB14C,EAAQq8C,YACpD,IAAIoS,EAAS7E,OAAOC,iBACpB,IAAI,MAAO1nC,EAAKniB,KAAY6B,EACvB7B,EAAQmiB,IAAMssC,IACfA,EAASzuD,EAAQmiB,KAIrB,OAAOhkB,KAAKikB,sBAAsBvgB,EAAS4sD,GAGtCC,eAAeC,EAAmB3nC,EAAuB,OAC9D,OAAO,EAAAy1B,GAAA,GAAqBt+C,KAAKu6C,uBAAuBiW,GAAY3nC,GAG/D4nC,mBAAmBD,GACxB,MAAMtR,EAAOl/C,KAAKuwD,eAAeC,EAAW,OACtC9sD,EAAU1D,KAAKu6C,uBAAuBiW,GAC5C,OAAOtR,EAAK96C,KAAK4f,GAAQhkB,KAAKikB,sBAAsBvgB,EAASsgB,KAGxD0sC,iBAAiB7uD,GACtB,OAAIA,EACKA,EAA4Bq8C,WAAmBl+C,KAAKuwD,eAAgB1uD,EAA4Bq8C,YAC7F,CAACr8C,EAAQmiB,KAFD,GAKf2sC,eAAe9uD,EAAoB+uD,GACxC,MAAM/2C,EAAmB,GACzB,GAAIhY,EAA4Bq8C,WAAY,CAC1C,MAAMx6C,EAAU1D,KAAKu6C,uBAAwB14C,EAA4Bq8C,YACzE,IAAI,MAAOl6B,EAAKniB,KAAY6B,EACvBktD,EAAO/uD,IACRgY,EAAIvZ,KAAKuB,QAIV+uD,EAAO/uD,IACRgY,EAAIvZ,KAAKuB,GAIb,OAAOgY,EAGFwM,sBAAsBjP,GAC3B,MAAM4C,EAASha,KAAK8b,cAAc1E,GAClC,OAAOpX,KAAK6wD,sBAAsBxqC,uBAAsBrM,MAAAA,OAAM,EAANA,EAAQsE,cAAe,GAG1EwyC,YAAYjvD,EAAkBxE,EAKhC,I,QACH,IAAIwE,GAAyB,iBAAdA,EAAQvD,EACrB,YAGoBqN,IAAnB9J,EAAQhD,SACTgD,EAAQhD,OAAS,IAMnB,MAAMuY,EAASpX,KAAK+7C,eAAel6C,GAC7B6B,EAAUrG,EAAQqG,SAAW1D,KAAK6jB,0BAA0BzM,GAC5D+L,EAAkC,gBAAtBthB,EAAQgX,QAAQva,EAC5BusB,EAAc1H,GAAanjB,KAAKud,gBAAgBsN,YAAYzT,EAAOgM,YACnE2tC,EAA0B,YAAdlvD,EAAQvD,EAEvBjB,EAAQopB,aACT5kB,EAAQhD,OAAOqlB,aAAc,GAG/B,MAAMF,GAAM,EAAAmC,GAAA,GAAkBtkB,EAAQtD,IACtCsD,EAAQmiB,IAAMA,EAEX+sC,IACE1zD,EAAQ2jD,cACTn/C,EAAQhD,OAAO6lD,cAAe,GAG7B7iD,EAAQq8C,aACsD,QAA/C,EAAAl+C,KAAKu6C,uBAAuB14C,EAAQq8C,mBAAW,QAAKl+C,KAAKu6C,uBAAuB14C,EAAQq8C,YAAcl+C,KAAKi8C,qBAAqB7kC,EAAQ,YAChJjP,IAAI6b,EAAKniB,GAGhBA,EAAQsoD,aAETtoD,EAAQoW,SAAWpW,EAAQsoD,aAI/B,MAAMnwC,EAASha,KAAK8b,cAAc1E,GAC/B4C,GAAUgK,GACRA,EAAMhK,EAAOnY,EAAQhD,OAAOgb,IAC3B,qBACA,uBACFhY,EAAQhD,OAAOsoB,QAAS,GAKzBtlB,EAAQ+sB,WACN/sB,EAAQ+sB,SAASyd,kBAClBxqC,EAAQ+sB,SAASyd,gBAAkBxqC,EAAQmvD,cAAe,EAAA7qC,GAAA,GAAkBtkB,EAAQ+sB,SAASyd,kBAG5FxqC,EAAQ+sB,SAASiwB,kBAClBh9C,EAAQ+sB,SAASiwB,iBAAkB,EAAA14B,GAAA,GAAkBtkB,EAAQ+sB,SAASiwB,mBAI1E,MAAMuL,EAAU2G,GAAalvD,EAAQuoD,QAClCA,IACEA,EAAQhM,SAAQgM,EAAQhM,QAAS,EAAAj4B,GAAA,GAAkBikC,EAAQhM,SAC3DgM,EAAQ/L,cAAa+L,EAAQ/L,aAAc,EAAAl4B,GAAA,GAAkBikC,EAAQ/L,eAG1E,MAAM4S,IAAgB75C,EAClB65C,IACFpvD,EAAQuf,MAAQphB,KAAKuhB,YAAYC,uBAInC,MAAMnb,EAAOrG,KAAK4c,gBAAgBxF,OAE5B6Z,EAAY8/B,GAAclvD,EAA4B8sB,SAU5D,GARA9sB,EAAQuV,OAASA,EAEfvV,EAAQmW,OADPZ,IAAW/Q,EACK4qB,EAAaA,EAAU3K,SAAU,EAAA1N,GAAA,GAAUqY,EAAU3K,SAAW,KAAgBjgB,EAGhFxE,EAAQhD,OAAOuyB,OAASvvB,EAAQykB,QAAUlP,GAAS,EAAAwB,GAAA,GAAU/W,EAAQykB,SAGrF2K,EAAW,CAEPA,EAAUq6B,oBAAmBr6B,EAAUq6B,mBAAoB,EAAAnlC,GAAA,GAAkB8K,EAAUq6B,oBACvFr6B,EAAUo6B,eAAcp6B,EAAUo6B,cAAe,EAAAllC,GAAA,GAAkB8K,EAAUo6B,eAEhF,MAAM/vC,EAAO2V,EAAUs6B,iBAAmBt6B,EAAU3K,QAC9C4qC,EAAQjgC,EAAUq6B,mBAAqBr6B,EAAUo6B,aACvD,GAAG/vC,GAAQ41C,EAAO,CAChB,MAAMC,GAAkB,EAAAv4C,GAAA,GAAU0C,GAC5B81C,GAAe,EAAAjrC,GAAA,GAAkB+qC,GACvCrvD,EAAQwvD,UAAYF,EAAkB,IAAMC,EAUhDvvD,EAAQqW,WAAY,EAAAU,GAAA,GAAUqY,EAAU3K,SAEpC2qC,IACFhgC,EAAU7P,MAAQphB,KAAKuhB,YAAYC,uBAIvC,MAAM8vC,EAAiC,CACrC7xD,KAAM,UACN2X,OAAAA,EACArI,UAAWiV,GAUb,GAAG+sC,GAAalvD,EAAQsW,MAAO,CAC7B,IAAIo5C,GAAc,EAClB,OAAO1vD,EAAQsW,MAAM7Z,GACnB,IAAK,2BACIuD,EAAQsW,MACf,MAGF,IAAK,oBACAtW,EAAQsW,MAAMy6B,YACf2e,GAAc,EAEd1vD,EAAQsW,MAAM8a,MAAQjzB,KAAK+zC,iBAAiBC,UAAUnyC,EAAQsW,MAAM8a,MAAOq+B,GAGxEzvD,EAAQsW,MAAyC8a,cAC7CpxB,EAAQsW,MAGjB,MAGF,IAAK,mBAAoB,CACvB,MAAM/V,EAASpC,KAAK8jD,gBAAgB0F,SAAS3nD,EAAQsW,MAAM0rC,KAAMhiD,EAAQsW,MAAM9S,QAASxD,GACxFA,EAAQsW,MAAM0rC,KAAOzhD,EAAOyhD,KAC5BhiD,EAAQsW,MAAM9S,QAAUjD,EAAOiD,QAC/B,MAGF,IAAK,uBACH,GAAGxD,EAAQsW,MAAMy6B,YACf2e,GAAc,MACT,CACL,MAAMC,EAAc3vD,EAAQsW,MAAM6mB,SAClCn9B,EAAQsW,MAAM6mB,SAAWh/B,KAAK8zC,eAAe1M,QAAQoqB,EAAaF,GAE9DzvD,EAAQsW,MAAM6mB,UAA8B,kBAAlBwyB,EAAYlzD,IACxCizD,GAAc,GAIlB,MAGF,IAAK,sBAAuB,CAC1B,MAAME,EAAazxD,KAAK0jD,mBAAmBgO,+BAA+Bt6C,EAAQ4M,EAAK3mB,EAAQ2jD,aAC/Fn/C,EAAQsW,MAAMsrC,QAAUzjD,KAAK0jD,mBAAmBiO,YAAY9vD,EAAQsW,MAAMsrC,QAASgO,EAAYH,GAC/F,MAQF,IAAK,sBACHC,GAAc,EACd1vD,EAAQsW,MAAQ,CAAC7Z,EAAG,2BACpB,MAGF,IAAK,0BACHizD,GAAc,EAKfA,IACD1vD,EAAQsW,MAAQ,CAAC7Z,EAAG,2BACpBuD,EAAQA,QAAU,UACXA,EAAQgtB,gBACRhtB,EAAQ+vD,eAInB,IAAIb,GAAalvD,EAAQiX,OAAQ,CAC/B,MAAMA,EAASjX,EAAQiX,OACvB,IAAI+4C,EACAC,EACJ,MAAM/gD,EAASlP,EAAQmW,SAAWhY,KAAKyc,gBAAgBC,UAAUne,GAAK,MAAQ,GAU9E,OARIua,EAAoDma,QACrDna,EAAoDma,MAAQjzB,KAAK+zC,iBAAiBC,UAAWl7B,EAAoDma,MAAOq+B,IAGvJx4C,EAAekmB,WAChBlmB,EAAekmB,SAAWh/B,KAAK8zC,eAAe1M,QAAStuB,EAAema,MAAOq+B,IAGzEx4C,EAAOxa,GAEZ,IAAK,8BAE6B,QAA5B,EAAAwa,EAAOma,aAAqB,eAAE8+B,aAEhCj5C,EAAOxa,EAAIusB,EAAc,gCAAkC,6BAExDA,IAED/R,EAAOxa,EAAI,iCAGf,MAEF,IAAK,yBAA0B,CAK7B,IAAImB,EAFJO,KAAKgyD,qBAAqB3iB,cAAcv2B,EAAOwb,MAI7C70B,OADqBkM,IAApBmN,EAAO0c,SACD,UAEA,QAGL3K,IACFprB,GAAQ,MAAQsR,GAIlB+H,EAAOrZ,KAAOA,EAEd,MAGF,IAAK,6BAOAorB,IAED/R,EAAOxa,EAAI,iCAEb,MAEF,IAAK,+BACAusB,IAED/R,EAAOxa,EAAI,mCAEb,MAEF,IAAK,2BACwB,IAAxBwa,EAAOE,MAAM5a,QAEd0a,EAAOT,QAAUS,EAAOE,MAAM,GAE3BnX,EAAQmW,SAAWc,EAAOT,UAGzBS,EAAOxa,EAFN6kB,EAEU,0BAA4BpS,EAG5B,0BAA4BA,IAGnC+H,EAAOE,MAAM5a,OAAS,IAE9B0a,EAAOxa,EAAI,6BAEb,MAEF,IAAK,8BACAuD,EAAQmW,SAAWc,EAAOT,UAE3BS,EAAOxa,EAAI,yBAA2ByS,GAExC,MAEF,IAAK,kCACH8gD,EAAc/4C,EAAOM,QAAQ3S,UAAS,GACtCqrD,EAAY16C,EACZ,MAEF,IAAK,6BACHy6C,EAAcz6C,EACd06C,EAAYh5C,EAAOK,WAAW1S,UAAS,GACvC,MAEF,IAAK,4BAEH5E,EAAQm8C,eAAgB,SACjBn8C,EAAQhD,OAAOgb,WACfhY,EAAQhD,OAAOsoB,OACtB,MAEF,IAAK,yBAEHrO,EAAOrZ,MACJqZ,EAAOja,OAAOu2B,MAAQ,SAAW,UACbzpB,IAApBmN,EAAO0c,SAA0B3zB,EAAQhD,OAAOgb,IAAM,OAAS,MAAS,UAEnDlO,IAApBmN,EAAO0c,SAAyB,KACV,iCAApB1c,EAAOoY,OAAO5yB,EACV,SACA,aAMXuzD,GACCC,IACC9xD,KAAK6mB,eAAegrC,KACpB7xD,KAAK8mB,eAAegrC,IACvB9xD,KAAKiyD,cAAcJ,EAAaC,GAoBpC,OANGf,GAAalvD,EAAQA,QAAQzD,SAAWyD,EAAQ+vD,eACjD5xD,KAAK+lD,oBAAoBlkD,GAG3B6B,EAAQyE,IAAI6b,EAAKniB,GAEVA,EAGF4c,aAAaiH,EAAiBroB,EAKhC,IACH,OAAIqoB,EAAiBqN,QACpBrN,EAAiBqN,OAAQ,EAC1BrN,EAASxiB,SAAQ,CAACrB,EAAS2C,EAAKuH,KAC9BA,EAAIvH,GAAOxE,KAAK8wD,YAAYjvD,EAASxE,OAHJqoB,EASxBwsC,sBAAsB96C,EAAgBs0B,G,0CACjD,MACM/jC,EADiB3H,KAAK2jB,kBAAkBvM,EAAQs0B,GACzB5nB,QAAQnc,MACrC,GAAGA,EAAM0f,MAAM,cAAoB1f,EAAMvJ,OAAQ,CAC/C,IAAI+zD,EACJ,MAAMC,EAAWpyD,KAAK4c,gBAAgBxF,OACtC,IAAI,MAAM4M,KAAOrc,EAAO,CACtB,MAAM9F,EAAU7B,KAAK2e,iBAAiBvH,EAAQ4M,GAG9C,IAFaouC,IAAah7C,EAASvV,EAAQmW,SAAWo6C,EAAWvwD,EAAQhD,OAAOgb,aAGrE7Z,KAAKqyD,eAAexwD,EAAS,SAAS,CAC7CswD,EAActwD,EACd,OAQN,OAAOswD,MAIHpM,oBAAoBlkD,GAC1B,MAAMywD,EAAczwD,EAAQgtB,SAAWhtB,EAAQgtB,SAASlnB,QAAU,GAClE9F,EAAQA,SAAU,EAAAktC,GAAA,GAASltC,EAAQA,QAASywD,GAE5C,MAAMC,GAAa,EAAAC,GAAA,GAAc3wD,EAAQA,SACzCA,EAAQ+vD,eAAgB,EAAAa,GAAA,GAAcH,EAAaC,GAG9CG,eAAet7C,EAAgB8nC,EAAgBhuB,EAA2BrvB,GAC/E,OAAO7B,KAAKqU,WAAWwY,gBAAgB,kBAAmB,CACxDvR,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C7Y,GAAI2gD,EAAK96C,KAAK4f,IAAQ,EAAAzF,GAAA,GAAmByF,KACzCkN,OAAQ,CACN5yB,EAAG4yB,GAELrvB,QAAAA,IAIG8yC,SAASpB,EAAcl6B,EAAiBq7B,GAC7C,MAAMt9B,EAASiC,EAASA,EAAO5S,UAAS,GAAQ8sC,EAAM9sC,WACtD,GAAGiuC,EAAY,CACb,MAAM5Y,GAAW,UAEjB,OAAO97B,KAAKqU,WAAWC,UAAU,oBAAqB,CACpDk/B,IAAKxzC,KAAKyc,gBAAgB4Y,aAAake,GACvCj4B,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5Cke,UAAWwG,EACX62B,YAAaje,IACZ1vC,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIhD,MAAM1nB,EAAM,SACZ,GAAGgb,EAAQ,CACT,IAAIzO,EAOJ,OALEA,EADC5K,KAAKud,gBAAgB4F,UAAU9J,GACtBrZ,KAAKud,gBAAgBya,gBAAgB3e,EAAQ,CAACk6B,IAE9CvzC,KAAKud,gBAAgBgb,YAAYlf,EAAQk6B,EAAO,GAGrD3oC,EAAQ7B,OAAOxJ,IACpB,IAAGA,GAAuB,4BAAdA,EAAME,KAKlB,MAAMF,EAJJA,EAAMslD,SAAU,KAKjB7/C,MAAK,KACN,MAAMwuC,EAAMxzC,KAAKyc,gBAAgBo4B,QAAQtB,GACzC,OAAOvzC,KAAK61C,SAASz+B,EAAQ/Y,EAAM,IAAMm1C,EAAIva,aAIjD,OAAOj5B,KAAK61C,SAASz+B,EAAQ/Y,GAGxBu0D,gBAAgB76C,EAAmBiD,GACxChb,KAAKqU,WAAWC,UAAU,0BAA2B,CACnD6G,aAAcpD,EAAQ3T,KAAKgT,IAClB,CACL9Y,EAAG,kBACHgd,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CiE,UAAWL,QAGdhW,MAAM+gB,IAEP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzC9F,UAAU/C,GACf,OAAOld,KAAKggB,eAAeC,UAAU/C,GAG1BqO,gBAAgBnU,EAAgB8F,G,gDAC3C,GAAGA,EAAW,EACZ,OAAOld,KAAKggB,eAAeuL,gBAAgBnU,EAAQ8F,GAGrD,MAAMlD,EAASha,KAAK8b,cAAc1E,GAClC,IAAI4C,EAAQ,OAAOrY,QAAQC,SAE3B,MAAM4Z,IAAsB,QAAb,EAAAxB,EAAOnb,cAAM,eAAE2c,cAAS7P,EAEvC,GAAG6P,EAAQ,CACT,MAAMq3C,QAAkB7yD,KAAKqU,WAAWy+C,eAClClwC,EAAmB,IAAb1F,EACTld,KAAKwc,UAAUjW,QAAUssD,EAAUE,oCAAsCF,EAAUG,oCACnFhzD,KAAKwc,UAAUjW,QAAUssD,EAAUI,6BAA+BJ,EAAUK,6BAC/E,GAAGlzD,KAAKgoB,eAAehJ,gBAAgB9B,GAAU9e,QAAUwkB,EACzD,OAAOjhB,QAAQC,OAAO,CAACnC,KAAM,4BAIjC,OAAOO,KAAKqU,WAAWC,UAAU,2BAA4B,CAC3DgH,KAAMtb,KAAK4c,gBAAgB+xC,uBAAuBv3C,GAClDoE,OAAAA,IACCxW,MAAMgnB,IACP,GAAGA,EAAM,CACP,MAAMntB,EAA8C2c,EAAS,CAACA,OAAAA,GAAU,GACxExb,KAAK0d,kBAAkBuI,WAAW,CAChC3nB,EAAG,qBACHgd,KAAMtb,KAAK4c,gBAAgBu2C,cAAc/7C,GACzCiE,UAAW6B,EACXre,OAAAA,WAMDu0D,iBAAiBh8C,EAAgBi8C,G,MACtC,MAAMr5C,EAASha,KAAK8b,cAAc1E,GAClC,IAAI4C,EAAQ,OAAOrY,QAAQC,SAE3B,MAAMulB,GAASksC,KAAqB,QAAb,EAAAr5C,EAAOnb,cAAM,eAAE6+C,mBAAc/xC,EACpD,OAAO3L,KAAKqU,WAAWC,UAAU,4BAA6B,CAC5DgH,KAAMtb,KAAK4c,gBAAgB+xC,uBAAuBv3C,GAClD+P,OAAAA,IACCniB,MAAMgnB,IACP,GAAGA,EAAM,CACP,MAAMntB,EAAkDsoB,EAAS,CAACA,OAAAA,GAAU,GAC5EnnB,KAAKy9C,yBAAyB,CAC5Bn/C,EAAG,yBACHgd,KAAMtb,KAAK4c,gBAAgBu2C,cAAc/7C,GACzCvY,OAAAA,QAMDozD,cAAcJ,EAAqBC,GACxC,IAAI9xD,KAAK6mB,eAAegrC,KACrB7xD,KAAK8mB,eAAegrC,IACrB9xD,KAAKud,gBAAgB8T,QAAQygC,EAAU1uC,YAAa,CACpD,MAAMkwC,EAAsBtzD,KAAKud,gBAAgBC,QAAQq0C,EAAYzuC,aAClEkwC,MAAAA,OAAQ,EAARA,EAAU5sC,cAAgB4sC,EAAS5sC,YAA0CvN,aAAe24C,EAAU1uC,aACvGpjB,KAAK6mB,eAAegrC,GAAeC,EACnC9xD,KAAK8mB,eAAegrC,GAAaD,EAEjC7xD,KAAKwc,UAAU7V,cAAc,iBAAkB,CAACkrD,YAAAA,EAAaC,UAAAA,IAE7D9xD,KAAKgoB,eAAe5C,oBAAoBysC,KAKtC0B,mBAAmB1xD,EAAkB2xD,G,QAC3C,GAAuC,QAAnC,EAAA3xD,MAAAA,OAAO,EAAPA,EAA6BhD,cAAM,eAAEqlB,YACvC,OAAO,EAGT,MAAMuvC,EAAa,CACjB,oBACA,uBACA,uBAOF,MAJY,SAATD,GACDC,EAAWnzD,KAAK,uBAGduB,GACc,YAAdA,EAAQvD,GACRuD,EAAQ2kB,SACR3kB,EAAQ8sB,UACR9sB,EAAQsoD,YACRtoD,EAAQsW,QAAkD,IAAzCs7C,EAAWp3D,QAAQwF,EAAQsW,MAAM7Z,IAClDuD,EAAQmW,QAAUhY,KAAKyc,gBAAgBwO,MAAMppB,EAAQmW,SAIjC,0BAAR,QAAb,EAAAnW,EAAQsW,aAAK,eAAE7Z,KACZuD,EAAQsW,MAAM6mB,SAA+BsJ,SAAkE,UAAtDzmC,EAAQsW,MAAM6mB,SAA+Bv/B,OAOjG4yD,eAAexwD,EAAmD2xD,EAAwB,Q,gDACrG,SAAI3xD,IAAY7B,KAAKuzD,mBAAmB1xD,EAAS2xD,IAKlBxzD,KAAK+7C,eAAel6C,KAAa7B,KAAKyc,gBAAgBC,UAAUne,MAI3FsD,EAAQhD,OAAOgb,KACO,gBAAtBhY,EAAQgX,QAAQva,GAChBuD,EAAQuf,MAAQ,EAAAE,GAAA,IAAM,UAAethB,KAAKqU,WAAWmX,aAAakoC,iBACxB,sBAAR,QAAlC,EAAC7xD,EAA4BsW,aAAK,eAAE7Z,QASnCmwD,iBAAiB5sD,GACtB,OAAOA,IACLA,EAAQuV,OAAOka,UACZzvB,EAAQhD,OAAOgb,KAC+C,SAA9D7Z,KAAKud,gBAAgBC,QAAQ3b,EAAQuV,OAAOgM,YAAY9kB,GACxD0B,KAAKud,gBAAgBwZ,UAAUl1B,EAAQuV,OAAOgM,WAAY,sBACzDvhB,EAAQhD,OAAOqlB,YAGhByvC,iBAAiBv8C,GACtB,OAAOpX,KAAK2jB,kBAAkBvM,GAAQw+B,YAGjCpuB,mBAAmB9D,EAAgC7hB,G,QAExD,IAAIA,EACF,OAAO,EAGT,IAAI+xD,EAAsB/xD,EAA4B8zC,aACtD,IAAIie,KACa,QAAd,EAAA/xD,EAAQhD,cAAM,eAAEgb,OACfhY,EAAmCiX,OACrC,OAAO,EAGT,GAA6B,uBAA1B86C,MAAAA,OAAkB,EAAlBA,EAAoBt1D,GACrB,OAAO,EAGT,MAAMu1D,EAAkBnwC,EAAekyB,YACvC,GAAGge,EACD,QAAGC,GAAmBA,EAAgB7vC,KAAOniB,EAAQmiB,KAIlD4vC,EAAmB/0D,OAAOi1D,YAI1BpwC,EAAeqwC,UAChBlyD,EAAQmiB,IAAMN,EAAeqwC,UAC5BH,EAA6F/0D,OAAOm1D,aACpGJ,EAA6F/0D,OAAOo1D,QAAS,GAGhHL,EAAmB5vC,IAAMniB,EAAQmiB,IAKL,sBAAzB4vC,EAAmBt1D,IACpBs1D,EAAmB57C,QAAS,EAAAY,GAAA,GAAU/W,EAAQykB,UAGhD5C,EAAekyB,YAAcge,EAEtB,IAGT,GAAG/xD,EAAQhD,OAAOgb,IAChB,GAAGg6C,GAED,IADA,EAAA9mC,GAAA,GAA4C8mC,GACzCA,EAAgBh1D,OAAOm1D,aACvBH,EAAgBh1D,OAAOo1D,SACvBpyD,EAAQmiB,IAAM6vC,EAAgB7vC,KAAOniB,EAAQhD,OAAOqlB,cACpDriB,EAA4BA,QAG7B,OAFAgyD,EAAgBh1D,OAAOo1D,QAAS,GAEzB,QAEAvwC,EAAeqwC,UACxBlyD,EAAQmiB,IAAMN,EAAeqwC,YAC7BrwC,EAAeqwC,SAAWlyD,EAAQmiB,KAKtC,OADA,EAAA+I,GAAA,GAAmClrB,KACV,iCAAR,QAAd,EAAAA,EAAQiX,cAAM,eAAExa,MAChBu1D,EACGhyD,EAAQiX,OAAOT,UAAaw7C,EAAoD77C,OAChFhY,KAAKyc,gBAAgBwO,MAAMppB,EAAQiX,OAAOT,YAG9CqL,EAAekyB,YAAc,CAC3Bt3C,EAAG,oBACH0lB,IAAKniB,EAAQmiB,IACbnlB,OAAQ,IAGH,IAMJq1D,iBAAiB98C,EAAgBw4C,GAGtC,OAFI5vD,KAAK26C,gBAAgBvjC,KAASpX,KAAK26C,gBAAgBvjC,GAAU,IAC7DpX,KAAK26C,gBAAgBvjC,GAAQw4C,KAAc5vD,KAAK26C,gBAAgBvjC,GAAQw4C,GAAe,CAAC9rC,QAAS,KAC9F9jB,KAAK26C,gBAAgBvjC,GAAQw4C,GAG/BuE,kBAAkB/8C,EAAgBqK,EAA2B2yC,GAAW,GAC7E,OAAGp0D,KAAK4c,gBAAgBkZ,aAAa1e,GAC5BzV,QAAQM,QAAQwf,EAAQrd,KAAK3F,IAC3B,CACLH,EAAG,yBACHO,OAAQ,GACRJ,OAAQA,EACRqc,MAAO,QAKCs5C,EAAWp0D,KAAKqU,WAAWonB,mBAAqBz7B,KAAKqU,WAAWC,WAAW6J,KAAKne,KAAKqU,WAC5FggD,CAAK,6BAA8B,CACxC/4C,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CqK,QAAAA,IAIG6yC,uCAAuC1E,EAAoC9rC,EAAmBpgB,EAA+CykB,GAClJ,MAAMosC,EAAWv0D,KAAKkuD,mBAAmBxqD,GACzC,OAAO,EAAA8wD,GAAA,GAA4B5E,EAAa9rC,EAAQ1f,KAAK4f,GAAQuwC,EAAS7vD,IAAIsf,KAAOmE,GAGpFwnC,WAAU,OAACv4C,EAAM,MAAEyD,EAAK,YAAE+0C,EAAW,MAAE9pC,EAAK,MAAEqC,EAAK,SAAEssC,EAAQ,UAAEC,EAAS,SAAEhpB,EAAQ,SAAE1wB,EAAQ,QAAE2pB,EAAO,QAAEE,IAoB5G,GAAG7kC,KAAK4c,gBAAgBkZ,aAAa1e,GACnC,OAAOzV,QAAQM,QAAQ,CACrB6Y,MAAO,EACP65C,iBAAkB,EAClBC,eAAWjpD,EACXmY,QAAS,KAITjJ,IAAOA,EAAQ,IACf+0C,IAAaA,EAAc,CAACtxD,EAAG,kCACtBqN,IAAVwc,IAAqBA,EAAQ,IAC5BssC,IAAUA,EAAW,GACrBC,IAAWA,EAAY,GAE3B/vB,EAAUA,EAAUA,EAAU,IAAO,EAAI,EACzCE,EAAUA,EAAUA,EAAU,IAAO,EAAI,EAEzC,IAAIgwB,EAAyB,GAI1BH,IACDvsC,GAASusC,GAMX,IAAIhxD,EAaJ,IAPG0T,GAAWs9C,GAAc5uC,GAAUjL,GAAmB,IAAVsN,GAAgBujB,IAC7DhoC,EAEE1D,KAAK2jB,kBAAkBvM,GACzBy9C,EAAY70D,KAAKs0D,uCAAuC1E,EAAYtxD,EAAGoF,EAAQogB,QAAQnc,MAAO3H,KAAK6jB,0BAA0BzM,GAAS+Q,IAGrI0sC,EAAUz2D,OAAQ,CACnB,KAAGy2D,EAAUz2D,OAAS+pB,GAIpB,OAAOxmB,QAAQM,QAAQ,CACrB6Y,MAA8B,EAC9B85C,UAAW,EACXD,iBAAkB,EAClB7wC,QAAS+wC,IAPX/uC,EAAQ+uC,EAAUA,EAAUz2D,OAAS,GAAG4lB,IACxCmE,GAAgB0sC,EAAUz2D,OAkB9B,MACM0L,EAA0D9J,KAAKqU,WAAWC,UAAW6J,KAAKne,KAAKqU,YAErG,IAAIqxC,EACJ,GAAGtuC,IAAWq9C,QAAyB9oD,IAAbqP,EACxB0qC,EAAa57C,EAAO,kBAAmB,CACrCwR,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CiuB,EAAGxqB,GAAS,GACZpc,OAAQmxD,EACRkF,SAAUnwB,EACVowB,SAAUlwB,EACV1c,MAAAA,EACAgkC,WAAW,EAAA5tC,GAAA,GAAmBuH,IAAU,EACxCkvC,WAAYN,GAAaA,EAAY,EACrCtW,OAAQ,EACR6W,OAAQ,EACR35B,KAAM,GACNohB,YAAY,EAAAn+B,GAAA,GAAmBmtB,IAAa,GAC3C,CAED/Z,YAAY,QAET,CAEL,IAAI06B,EACA6I,EAAW,EACXC,EAAgBrvC,GAAS9lB,KAAK2e,iBAAiBvH,EAAQ0O,GAExDqvC,GAAiBA,EAAc/zC,OAEhC8zC,EAAWC,EAAc52D,GACzB8tD,EAAersD,KAAK+7C,eAAeoZ,IAGrCzP,EAAa57C,EAAO,wBAAyB,CAC3Cu7B,EAAGxqB,EACHpc,OAAQmxD,EACRkF,SAAUnwB,EACVowB,SAAUlwB,EACVuwB,YAAaX,EACbrI,YAAapsD,KAAK4c,gBAAgB8O,iBAAiB2gC,GACnDF,UAAW+I,EACX/sC,MAAAA,EACA9M,UAAWL,GACV,CAED2W,YAAY,IAIhB,OAAO+zB,EAAW1gD,MAAMqwD,IACtBr1D,KAAKyc,gBAAgB8I,aAAa8vC,EAAar8C,OAC/ChZ,KAAKud,gBAAgBiI,aAAa6vC,EAAa5vC,OAC/CzlB,KAAKye,aAAa42C,EAAa3vC,UAU5B,MACD1lB,KAAKG,IAAI,oBAAqByvD,EAAayF,GAG7C,MAAMC,EAAqBD,EAAav6C,OAAU+5C,EAAUz2D,OAASi3D,EAAa3vC,SAAStnB,OAc3F,OAZAi3D,EAAa3vC,SAASxiB,SAASrB,IAC7B,MAAMuV,EAASpX,KAAK+7C,eAAel6C,GACnC,GAAGuV,EAAOiN,YAAa,CACrB,MAAM/G,EAAkBtd,KAAKud,gBAAgBC,QAAQpG,EAAOgM,YACzD9F,EAAKoJ,aACN1mB,KAAKiyD,cAAc76C,EAASkG,EAAKoJ,YAA0CvN,WAAW1S,UAAS,IAInGouD,EAAUv0D,KAAKuB,MAGV,CACLiZ,MAAOw6C,EACPX,iBAAkBU,EAAaV,kBAAoB,EACnDC,UAAWS,EAAaT,UACxB9wC,QAAS+wC,MAKRU,uBAAuBn+C,EAAgB4M,GAC5C,MAAM26B,EAAavnC,EAAS,IAAM4M,EAClC,IAAI,MAAMk4B,KAAal8C,KAAK86C,iBAC1B,GAAG96C,KAAK86C,iBAAiBoB,KAAeyC,EAAY,OAGtD3+C,KAAKw1D,qBAAqBp+C,EAAQ4M,GAG7ByxC,kCAAkC5zD,GACvC,MAAMq6C,EAAYr6C,EAAQuV,OAAS,IAAMvV,EAAQmiB,IACjD,GAAGhkB,KAAK66C,iCAAiCqB,GAAY,OAErD,MAAMwZ,GAAe,EAAAn3C,GAAA,GAAmBY,KAAKyD,OAAO5iB,KAAK0wD,iBAAiB7uD,KACpE8zD,EAA8C,CAClDr3D,EAAG,iBACHO,OAAQ,CACN+2D,WAAW,GAEbr3D,GAAIyB,KAAK6wD,sBAAsBxqC,sBAAsBqvC,GACrDt0C,KAAMvf,EAAQuf,KACdkF,QAAS,CAAChoB,EAAG,WAAY+Z,QAAS,MAClCQ,QAAShX,EAAQgX,QACjBC,OAAQ,CACNxa,EAAG,kCAELswB,SAAU5uB,KAAKkqD,oBAAoBroD,EAAQtD,KAG7CyB,KAAKye,aAAa,CAACk3C,GAAsB,CAAClvC,YAAY,IACtDzmB,KAAK66C,iCAAiCqB,GAAayZ,EAAoB3xC,IAGlE6xC,0BAA0Bz+C,EAAgBs0B,GAC/C,OAAO1rC,KAAK66C,iCAAiCzjC,EAAS,IAAMs0B,GAGvD8pB,qBAAqBp+C,EAAgB4M,GAC1C,OAAOhkB,KAAKqU,WAAWwY,gBAAgB,gCAAiC,CACtEvR,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C+9B,QAAQ,EAAA52B,GAAA,GAAmByF,KAC1Bhf,MAAM5C,I,MACPpC,KAAKud,gBAAgBiI,aAAapjB,EAAOqjB,OACzCzlB,KAAKyc,gBAAgB8I,aAAanjB,EAAO4W,OACzChZ,KAAKye,aAAarc,EAAOsjB,UAEzB,MAAM7jB,EAAU7B,KAAK81D,sBAAsB1zD,EAAOsjB,SAAS,IACrDw2B,EAAYr6C,EAAQuV,OAAS,IAAMvV,EAAQmiB,IAEjDhkB,KAAKy1D,kCAAkC5zD,GAEvC,MAAM6hB,EAAiB1jB,KAAK2jB,kBAAkB9hB,EAAQuV,OAAQvV,EAAQmiB,KAOtE,OANA5hB,EAAOg8C,OAAS16B,EAAeoC,OAAQ,EAAAK,GAAA,GAAkB/jB,EAAOg8C,SAAW,EAC3Eh8C,EAAO2kB,kBAAoBrD,EAAegE,WAAY,EAAAvB,GAAA,GAA0C,QAAxB,EAAA/jB,EAAO2kB,yBAAiB,QAAIllB,EAAQmiB,KAC5G5hB,EAAO4kB,mBAAqBtD,EAAeiE,iBAAkB,EAAAxB,GAAA,GAAkB/jB,EAAO4kB,qBAAuB,EAE7GhnB,KAAK86C,iBAAiBoB,GAAa9kC,EAAS,IAAM4M,EAE3CniB,KAIH86C,iBAAiB96C,GACvB7B,KAAKwc,UAAU7V,cAAc,sBAAuB9E,GA6B/C+Z,yBAAyBxE,EAAiB4C,GAK/C,YAJcrO,IAAXyL,IACDpX,KAAK05C,mBAAmBtiC,GAAU4C,GAGjCha,KAAK+1D,wBAAgC/1D,KAAK+1D,wBACtC/1D,KAAK+1D,yBAA0B,EAAA/qD,EAAA,GAAM,GAAGhG,MAAK,KAClDhF,KAAK+1D,6BAA0BpqD,EAC/B3L,KAAK+6C,sBAIIib,eAAe5+C,EAAgB8nC,EAAgB+P,G,kDAC1D,IAAIrkD,EAEJ,MAAMkiD,QAAe9sD,KAAKqU,WAAWmX,YAC/BuhC,EAAe7N,EAAKn0C,OAAO+hD,EAAOE,oBAAqB9N,EAAK9gD,OAAS0uD,EAAOE,qBAE5EiJ,EAAkB/W,EAAK96C,KAAK4f,IAAQ,EAAAzF,GAAA,GAAmByF,KAE7D,GAAG5M,EAAOiN,aAAerkB,KAAK4c,gBAAgBuG,UAAU/L,GAAS,CAC/D,MAAM8L,EAAY9L,EAAOgM,WACnBC,EAAwBrjB,KAAKud,gBAAgBC,QAAQ0F,GAC3D,IAAIG,EAAQxkB,OAAOq3D,WAAwC,QAA5B,EAAoB,QAApB,EAAA7yC,EAAQwoC,oBAAY,eAAEhtD,cAAM,eAAEs3D,oBAC3DjX,EAAOA,EAAKzgD,QAAQulB,KACFhkB,KAAK2e,iBAAiBvH,EAAQ4M,GAC7BnlB,OAAOgb,OAGjBzb,OACP,OAIJwM,EAAU5K,KAAKqU,WAAWC,UAAU,0BAA2B,CAC7D+O,QAASrjB,KAAKud,gBAAgBwT,gBAAgB7N,GAC9C3kB,GAAI03D,IACHjxD,MAAMoxD,IACPp2D,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,8BACH6a,WAAY+J,EACZwC,SAAUw5B,EACVz7B,IAAK2yC,EAAiB3yC,IACtBqL,UAAWsnC,EAAiBtnC,oBAIhClkB,EAAU5K,KAAKqU,WAAWC,UAAU,0BAA2B,CAC7D26C,OAAAA,EACA1wD,GAAI03D,IACHjxD,MAAMoxD,IACPp2D,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,uBACHonB,SAAUw5B,EACVz7B,IAAK2yC,EAAiB3yC,IACtBqL,UAAWsnC,EAAiBtnC,eAKlC,MAAM1G,EAA+B,CAACxd,GAKtC,OAJGmiD,EAAa3uD,QACdgqB,EAAS9nB,KAAKN,KAAKg2D,eAAe5+C,EAAQ21C,EAAckC,IAGnDttD,QAAQmR,IAAIsV,GAAUpjB,KAAKgE,EAAA,MAG7BqtD,YAAYj/C,EAAgB0O,EAAQ,EAAG4lB,EAAmBO,GAAQ,GAOvE,GADAjsC,KAAKG,IAAI,eAAgBiX,EAAQ0O,EAAO4lB,IACpC1rC,KAAK++C,qBAAqB3nC,EAAQs0B,GAAW,CAC/C,IAAIO,IAAUP,EAAU,CACtB,MAAM1xB,EAASha,KAAK8b,cAAc1E,GAC/B4C,GAAUha,KAAKyqB,eAAezQ,KAC/BiyB,GAAQ,GAIZ,IAAIA,EAEF,OADAjsC,KAAKG,IAAI,6BACFwB,QAAQM,UAInB,MAAMyhB,EAAiB1jB,KAAK2jB,kBAAkBvM,EAAQs0B,GAEtD,GAAGhoB,EAAe4yC,kBAAoBxwC,EACpC,OAAOnkB,QAAQM,UAGjB,IAAIyjD,EA4DJ,OA3DGha,GACGhoB,EAAe6yC,cACjB7Q,EAAa1lD,KAAKqU,WAAWC,UAAU,0BAA2B,CAChEgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C+9B,QAAQ,EAAA52B,GAAA,GAAmBmtB,GAC3B2S,aAAa,EAAA9/B,GAAA,GAAmBuH,MAIpC9lB,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,mCACH6a,WAAY/B,EAAOgM,WACnBs5B,WAAYhR,EACZ2S,YAAav4B,KAEP9lB,KAAK4c,gBAAgBuG,UAAU/L,IACnCsM,EAAe6yC,cACjB7Q,EAAa1lD,KAAKqU,WAAWC,UAAU,uBAAwB,CAC7D+O,QAASrjB,KAAKud,gBAAgBwT,gBAAgB3Z,EAAOgM,YACrDg7B,QAAQ,EAAA7/B,GAAA,GAAmBuH,MAI/B9lB,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,yBACH8/C,OAAQt4B,EACR3M,WAAY/B,EAAOgM,WACnBo7B,wBAAoB7yC,EACpB8X,SAAK9X,MAGH+X,EAAe6yC,cACjB7Q,EAAa1lD,KAAKqU,WAAWC,UAAU,uBAAwB,CAC7DgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CgnC,QAAQ,EAAA7/B,GAAA,GAAmBuH,KAC1B9gB,MAAMoxD,IACPp2D,KAAK0d,kBAAkBwQ,qBAAqB,CAC1C5vB,EAAG,cACH4c,OAAQ,CACN5c,EAAG,YACHmlB,IAAK2yC,EAAiB3yC,IACtBqL,UAAWsnC,EAAiBtnC,iBAMpC9uB,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,yBACH8/C,OAAQt4B,EACRxK,KAAMtb,KAAK4c,gBAAgB2J,cAAcnP,GACzConC,wBAAoB7yC,EACpB8X,SAAK9X,EACLmjB,eAAWnjB,KAIf3L,KAAKwc,UAAU7V,cAAc,qBAAsB3G,KAAK4c,gBAAgB45C,cAAcp/C,IAEnFsM,EAAe6yC,YACT7yC,EAAe6yC,aAGxB7yC,EAAe4yC,iBAAmBxwC,EAElC4/B,EAAWz8C,SAAQ,YACVya,EAAe6yC,YAEtB,MAAM,UAAC7uC,GAAahE,EACpB1jB,KAAKG,IAAI,+BAAgC2lB,EAAO4B,GAE7CA,EAAY5B,GACb9lB,KAAKq2D,YAAYj/C,EAAQsQ,EAAWgkB,GAAU,MAI3ChoB,EAAe6yC,YAAc7Q,GAG/B+Q,eAAer/C,EAAgBs0B,EAAmBO,GAAQ,GAC/D,MAAMvoB,EAAiB1jB,KAAK2jB,kBAAkBvM,EAAQs0B,GACnDhoB,EAAeoC,OAChB9lB,KAAKq2D,YAAYj/C,EAAQsM,EAAeoC,MAAO4lB,EAAUO,GAItDoT,mCAAmCjoC,GACxC,MAAM4C,EAASha,KAAK8b,cAAc1E,IAC/B4C,MAAAA,OAAM,EAANA,EAAQ2Q,wBACT3qB,KAAK4e,mBAAmBxH,GAIrBylC,qBAAqBzlC,EAAgB4M,EAAarN,GACvD,MAAM+/C,EAAc12D,KAAKg6C,eAAe5iC,GACpCs/C,IAED//C,EACE+/C,EAAY5uD,MAAMuf,MAAM,WACzBqvC,EAAYpvC,YAAY,CAACtD,IAG3B0yC,EAAY3yD,OAAOigB,IAIf2yC,+BAA+Bv/C,EAAgBs/C,GACrD,MAAM18C,EAASha,KAAK8b,cAAc1E,IAC9Bs/C,EAAYt4D,SAAU4b,MAAAA,OAAM,EAANA,EAAQ2Q,wBAChC3qB,KAAK4e,mBAAmBxH,GAIrBw/C,gBAAgBx/C,G,MAKrB,MAAMxM,EAAU5K,KAAKi6C,wBAAwB7iC,GAC7C,GAAGxM,EACD,OAAOA,EAGT,MAAM8rD,EAAyC,QAA3B,EAAA12D,KAAKg6C,eAAe5iC,UAAO,QAAKpX,KAAKg6C,eAAe5iC,GAAU,IAAI,KAChFhZ,EAASs4D,EAAYt4D,OACrB+qB,EAAWutC,EAAY5uD,MAAMuf,MAAM,UACzC,IAAIjpB,GAAU+qB,EAEZ,OADAnpB,KAAK22D,+BAA+Bv/C,EAAQs/C,GACrC/0D,QAAQM,UAGjB,IAAI40D,EAAkBl1D,QAAQM,UAK9B,OAJIknB,GAAY/qB,EAAS,KACvBy4D,EAAkB72D,KAAK82D,iBAAiB1/C,IAGnCpX,KAAKi6C,wBAAwB7iC,GAAUy/C,EAAgB7xD,MAAK,KACjE,MAAM+xD,EAAOL,EAAYK,KACnB/yC,EAAM+yC,GAAQA,EAAKA,EAAK34D,OAAS,GACvC,GAAG4lB,EAED,OADA0yC,EAAY3yD,OAAOigB,GACZA,EAEPhkB,KAAK22D,+BAA+Bv/C,EAAQs/C,MAE7CztD,SAAQ,YACFjJ,KAAKi6C,wBAAwB7iC,MAIjC0/C,iBAAiB1/C,GACtB,MAAMs/C,EAAc12D,KAAKg6C,eAAe5iC,GAClC0O,EAAQ4wC,EAAY5uD,MAAM,IAAM,EAKtC,OAAO9H,KAAKg3D,kBAAkB5/C,EAAQ0O,GAFnB,GADD,IAG8C9gB,MAAM0gB,IACpE1lB,KAAKi3D,mBAAmBP,EAAahxC,EAAoB,IAAVI,EAAc,EAAIA,EAJjD,IACC,OAOdkxC,kBAAkB5/C,EAAgB89C,EAAkBF,EAAoB7sC,EAAerC,EAAQ,EAAGoxC,EAAQ,GAC/G,OAAOl3D,KAAKqU,WAAWwY,gBAAgB,6BAA8B,CACnEvR,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C+0C,WAAW,EAAA5tC,GAAA,GAAmB22C,GAC9BF,WAAAA,EACA7sC,MAAAA,EACAi2B,QAAQ,EAAA7/B,GAAA,GAAmBuH,GAC3BmvC,QAAQ,EAAA12C,GAAA,GAAmB24C,KAC1BlyD,MAAMmyD,KACP,EAAApqC,GAAA,GAAoFoqC,GACpFn3D,KAAKyc,gBAAgB8I,aAAa4xC,EAAiBn+C,OACnDhZ,KAAKud,gBAAgBiI,aAAa2xC,EAAiB1xC,OACnDzlB,KAAKye,aAAa04C,EAAiBzxC,UAE5ByxC,KAIJC,aAAahgD,EAAgBigD,GAKlC,IAAIA,EAAOj5D,OACT,OAAOuD,QAAQM,UAIjB,IAAI2I,EAAuBsQ,EAC3B,GAFAm8C,EAASA,EAAOjzD,KAAK4f,IAAQ,EAAAzF,GAAA,GAAmByF,KAE7C5M,EAAOiN,aAAerkB,KAAK4c,gBAAgBuG,UAAU/L,GAAS,CAC/D,MAAM8L,EAAY9L,EAAOgM,WAEzBlI,EAAS,CACP5c,EAAG,oCACH6a,WAAY+J,EACZwC,SAAU2xC,GAGZzsD,EAAU5K,KAAKqU,WAAWC,UAAU,+BAAgC,CAClE+O,QAASrjB,KAAKud,gBAAgBwT,gBAAgB7N,GAC9C3kB,GAAI84D,SAGNn8C,EAAS,CACP5c,EAAG,6BACHonB,SAAU2xC,EACV5zC,SAAK9X,EACLmjB,eAAWnjB,GAGbf,EAAU5K,KAAKqU,WAAWC,UAAU,+BAAgC,CAClE/V,GAAI84D,IACHryD,MAAMoxD,IACNl7C,EAA6CuI,IAAM2yC,EAAiB3yC,IACpEvI,EAA6C4T,UAAYsnC,EAAiBtnC,UAC3E9uB,KAAK0d,kBAAkBuS,mBAAmB/U,MAM9C,OAFAlb,KAAK0d,kBAAkBuS,mBAAmB/U,GAEnCtQ,EAGF+Y,kBAAkBvM,EAAgBs0B,G,QACvC,OAAGA,GAEG1rC,KAAK06C,eAAetjC,KAASpX,KAAK06C,eAAetjC,GAAU,IACnB,QAArC,EAAApX,KAAK06C,eAAetjC,GAAQs0B,UAAS,QAAK1rC,KAAK06C,eAAetjC,GAAQs0B,GAAY,CAAC5wB,MAAO,KAAMgJ,QAAS,IAAI,OAGlF,QAA7B,EAAA9jB,KAAKy6C,iBAAiBrjC,UAAO,QAAKpX,KAAKy6C,iBAAiBrjC,GAAU,CAAC0D,MAAO,KAAMgJ,QAAS,IAAI,MAG/FwzC,8BAA8BlgD,EAAgBs0B,GACnD,MAAMhoB,EAAiB1jB,KAAK2jB,kBAAkBvM,EAAQs0B,IAChD,MACJ5wB,EAAK,QACLgJ,EAAO,MACPgC,EAAK,UACL4B,EAAS,gBACTC,EAAe,SACfosC,EAAQ,YACRne,GACElyB,EAEJ,MAAO,CACL5I,MAAAA,EACAgJ,aAASnY,EACT4rD,kBAAmBzzC,EAAQ0zC,SAC3B1xC,MAAAA,EACA4B,UAAAA,EACAC,gBAAAA,EACAosC,SAAAA,EACAne,YAAAA,GAIIyF,sBAAsBjkC,GAC5B,OAAOzV,QAAQmR,IAAI,CACjB9S,KAAKogB,wBAAwBq3C,4BAC7Bz3D,KAAKogB,wBAAwBs3C,kBAAkB13D,KAAK4c,gBAAgB+6C,uBAAuBvgD,GAAQ,MAClGpS,MAAK,EAAE1G,EAAGg9C,MACJ,CACLlL,MAAOpwC,KAAKogB,wBAAwBC,iBAAiBjJ,GAAQ,GAC7DkkC,uBAAAA,MAizBCkC,+BAA+B37C,GACjC7B,KAAK43D,sBAAsB/1D,IAC5B7B,KAAKgoB,eAAexE,iBAAiBxjB,KAAK8b,cAAcja,EAAQuV,SAI7DwgD,sBAAsB/1D,GAC3B,MAAMmY,EAASha,KAAK8b,cAAcja,EAAQuV,QAC1C,OAAO4C,GAAUA,EAAOsE,cAAgBzc,EAAQmiB,IAG1Cs4B,6BAA6Bub,GACnC,IACE,MAAM3b,EAAYl8C,KAAKm8C,aAAa0b,GACpC,GAAG3b,EAAW,CACZ,MAAMyC,EAAa3+C,KAAK86C,iBAAiBoB,GACzC,GAAGyC,EAAY,CACb,MAAOvnC,EAAQ4M,GAAO26B,EAAWn3C,MAAM,KAEvCxH,KAAKmuB,cAAc/W,EAAO3Q,YAAaud,EAAK,qBAGhD,MAAMzZ,GACNvK,KAAKG,IAAIZ,MAAM,8BAA+BgL,EAAKstD,IAI/C1b,aAAa0b,G,MACnB,IAAI3b,EAAY,GAChB,IAAG2b,MAAAA,OAAa,EAAbA,EAAejpC,YAAgC,QAApB,EAAAipC,EAAczgD,cAAM,eAAEiN,aAAa,CAC/D,MAAMqnB,EAAWmsB,EAAcjpC,SAASiwB,iBAAmBgZ,EAAcjpC,SAASyd,gBAClF6P,EAAY2b,EAAczgD,OAAS,IAAMs0B,EAG3C,OAAOwQ,EAGF/tB,cAAc/W,EAAgB4M,EAAa8zC,GAchD,OAb0C93D,KAAKmX,kBAAkBC,EAAQ4M,GAAK,GAAMhf,MAAK,KACvF,MAAMnD,EAAU7B,KAAK2e,iBAAiBvH,EAAQ4M,GAC9C,GAAIniB,EAQJ,OAJGi2D,GACD93D,KAAKwc,UAAU7V,cAAcmxD,EAAoBj2D,GAG5CA,KAMHw6C,oBAAoBx6C,GAC1B,MAAMi6B,EAAW97B,KAAKm5C,mBAAmBt3C,EAAQmiB,KACjD,IAAI+zC,EACJ,GAAGj8B,EAAU,CACX,MAAM6f,EAAc37C,KAAKk5C,kBAAkBpd,IACxCi8B,EAAiB/3D,KAAKg4D,uBAAuBl8B,EAAUj6B,KACxD7B,KAAKwc,UAAU7V,cAAc,iBAAkB,CAACgnC,WAAYgO,EAAYj4C,QAAQ2D,IAAKxF,QAAAA,EAASokD,WAAYtK,EAAYsK,oBAGjHjmD,KAAKm5C,mBAAmBt3C,EAAQmiB,KAGzC,OAAO+zC,EAGFE,SAAS7gD,EAAgB8gD,GAC9B,MAAMpxD,EAAoC,CACxCxI,EAAG,2BAKL,OAFAwI,EAASqxD,WAAaD,EAEfl4D,KAAKogB,wBAAwBgjC,qBAAqB,CACvD9kD,EAAG,kBACHgd,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,IAC3CtQ,GAGEsxD,eAAehhD,EAAgBihD,GAKpC,YAJY1sD,IAAT0sD,IACDA,GAAQr4D,KAAKogB,wBAAwBC,iBAAiBjJ,GAAQ,IAGzDpX,KAAKi4D,SAAS7gD,EAAQihD,EAAO,KAAa,GAG3ClZ,iBAAiBD,GACvB,IAAI,IAA0Br5C,EAAbq5C,EAAK9gD,OAAqB,EAAGyH,GAAK,IAAKA,EAAG,CACzD,MAAMme,EAAMk7B,EAAKr5C,GACXhE,EAAU7B,KAAKmuD,eAAenqC,GACpC,GAAGniB,EACD,OAAOA,EAAQuV,QAKdkhD,cAAclhD,EAAgBs0B,EAAmB5yB,EAAqB,iBAC3E,GAAG9Y,KAAK4c,gBAAgBkZ,aAAa1e,GACnC,OAAO,EAGT,GAAGA,EAAOiN,YAAa,CAErB,MAAM/G,EAAkBtd,KAAKud,gBAAgBC,QAAQpG,EAAOgM,YAE5D,OADqCpjB,KAAKud,gBAAgBwZ,UAAU3f,EAAOgM,WAAYtK,OAAQnN,IAAa+/B,MAClEpuB,EAAKze,OAAO8G,QAAU+lC,GAEhE,OAAO1rC,KAAKyc,gBAAgB87C,cAAcnhD,GAIvC4gD,uBAAuBl8B,EAAgB08B,GAC5C,MAAM7c,EAAc37C,KAAKk5C,kBAAkBpd,GAG3C,GAAG6f,EAAa,CACd,MAAM,OAACvkC,EAAM,OAAEwkC,EAAM,SAAElQ,EAAQ,QAAEhoC,GAAWi4C,EAE5C,CAAC37C,KAAK2jB,kBAAkBvM,GAASs0B,EAAW1rC,KAAK2jB,kBAAkBvM,EAAQs0B,QAAY//B,GACtFlN,OAAOC,SACPwE,SAASQ,IACRA,EAAQogB,QAAQ/f,OAAO63C,MAKzB,MAAM6c,EAAyBz4D,KAAKikB,sBAAsBvgB,EAASk4C,GAenE,OAdG6c,WACMD,EAAa35D,OAAOqlB,mBACpBs0C,EAAanvD,eACbmvD,EAAaj5D,aACbi5D,EAAaljC,iBACbkjC,EAAa9tD,MAGtB1K,KAAKwc,UAAU7V,cAAc,2BAEtB3G,KAAKk5C,kBAAkBpd,GAE9B97B,KAAK67C,gCAAgCn4C,EAASk4C,EAAQ4c,GAE/CC,GAIJ5c,gCAAgCn4C,EAA0Bk4C,EAAgB/5C,GAC/E,MAAMogB,EAAYjiB,KAAKq5C,sBAAsBuC,GAE7C,QAAiBjwC,IAAdsW,EAAyB,CAC1B,IAAI,MAAMhiB,KAAQgiB,EAAW,CAC3B,MAAM,SAAC7mB,EAAQ,SAAEwJ,GAAYqd,EAAUhiB,GAEvC2E,EAAS/C,GAASmD,KAAK5J,EAAS6G,QAAS7G,EAASwG,eAG7C5B,KAAKq5C,sBAAsBuC,GAIpC,GAAI/5C,EAA4BsW,MAAO,EACrC,EAAA4U,GAAA,GAA4BlrB,GAC5B,MAAOoxB,MAAOylC,EAAU15B,SAAU25B,GAAU92D,EAAQsW,MACpD,GAAGugD,EAAU,CACX,MAAMzlC,EAAQjzB,KAAK+zC,iBAAiB4V,SAAS,GAAK/N,GAClD,GAAiC3oB,EAAO,CACtC,MAAM2lC,EAAeF,EAAS1R,MAAM0R,EAAS1R,MAAM5oD,OAAS,GACtDusC,EAAe3qC,KAAK+mC,cAAcmC,gBAAgBwvB,EAAUE,EAAan5D,MACzEo5D,EAAkB74D,KAAK+mC,cAAcmC,gBAAgBjW,EAAO,QAClEp3B,OAAOC,OAAO6uC,EAAckuB,GAE5B,MAAM9R,EAAY2R,EAAS1R,MAAM0R,EAAS1R,MAAM5oD,OAAS,GAEnD+0B,GAAkB,EAAA2lC,GAAA,GAAwBJ,EAAU3R,IACzC,QAAsB5zB,EAAgBj1B,gBAGpD,GAAGy6D,EAAQ,CAChB,MAAMtxB,EAASrnC,KAAK8zC,eAAevK,OAAO,GAAKqS,GAC/C,GAAGvU,EAAQ,CACT,MAAMwxB,EAAkB74D,KAAK+mC,cAAcmC,gBAAgB7B,GAC3D,GAEEA,EAAO5nC,MACS,YAAhB4nC,EAAO5nC,MACc,cAArB4nC,EAAOQ,WACPgxB,EAAgBx5D,IAChB,CACA,MAAMsrC,EAAe3qC,KAAK+mC,cAAcmC,gBAAgByvB,GACxD98D,OAAOC,OAAO6uC,EAAckuB,GCl1JShyB,EDo1JK8xB,GCn1J7C,SAAsB,EAAAttB,GAAA,GAAiBxE,EADyBkyB,WACR,CAAChuB,SAAUlE,EAAIa,mBDu1J/D7lC,EAAQsW,MAAwC0rC,cAClD7jD,KAAK8jD,gBAAgBkV,MAAMpd,UAC3B57C,KAAK8jD,gBAAgBz+C,QAAQu2C,IC11J7B,IAAkC/U,ED81J7C,MAAM4xB,EAAcz4D,KAAKikB,sBAAsBvgB,EAASk4C,GACxDl4C,EAAQK,OAAO63C,GAEf57C,KAAKi5D,uBAAuBR,EAAa/0D,GAEzC1D,KAAKwc,UAAU7V,cAAc,eAAgB,CAACgnC,WAAYjqC,EAAQ2D,IAAKu0C,OAAAA,EAAQ6c,YAAAA,EAAaz0C,IAAKniB,EAAQmiB,IAAKniB,QAAAA,IAGzGo5C,mBAAmBn1B,GACxB,IAAIA,GAAY9lB,KAAKy5C,aAAa3zB,EAAQ9lB,KAAKy5C,WAC7C,OAAO,EAGTz5C,KAAKy5C,UAAY3zB,EACjB9lB,KAAK+d,gBAAgBhW,YAAY,eAAgB+d,GAEjD9lB,KAAKqU,WAAWC,UAAU,4BAA6B,CACrD8pC,QAAQ,EAAA7/B,GAAA,GAAmBuH,KAIlBozC,2CACXr3D,EACAsmB,EACAxP,EACAqQ,EACAmwC,EACAC,G,kDAEA,MAAMC,EAA4B,CAChCz+B,UAAW,GACX9f,MAAO,EACPk3B,iBAAarmC,GAGT2tD,QAAuCt5D,KAAKs5D,+BAA+Bz3D,GAOjF,OANGy3D,QAA4C3tD,IAAVwc,EACnCA,EAAQ,SACUxc,IAAVwc,IACRA,EAAQ,IAGHxmB,QAAQmR,IAAI,EACjBwmD,GAAmC3gD,GAAawgD,EAAkH,GAA3Fn5D,KAAKu5D,2BAA2B13D,EAAQuV,OAAQvV,EAAQmiB,KAAKjb,OAAM,IAAM,MAE7G,QAAnC,EAAiB,QAAjB,EAAAlH,EAAQ+4B,iBAAS,eAAEliB,wBAAgB,eAAEta,UAAWg7D,EAAoBp5D,KAAKw5D,oBAAoBC,wBAAwB53D,EAAQuV,OAAQvV,EAAQmiB,IAAKmE,EAAOxP,EAAUqQ,GAAQjgB,OAAOwB,GAAQ8uD,IAA6BA,IACtNr0D,MAAK,EAAE+T,EAAS2gD,MACjB,MAAMC,EAA0B5gD,EAAQ3U,KAAKoU,GAAWA,EAAO/R,aAEzDmzD,EAA2BD,EAAwBhyD,SACzD,EAAA2d,GAAA,GAAes0C,GAA0B,CAACxiD,EAAQ5S,EAAKuH,KAClD2tD,EAAqB9+B,UAAUi/B,MAAMlhD,IAAa,EAAAC,GAAA,GAAUD,EAASE,WAAazB,KACnFrL,EAAIhB,OAAOvG,EAAK,MAIpB,IAAIwoC,EAAkD0sB,EAAqB9+B,UAAUx2B,KAAKuU,IAAa,CAAEvB,QAAQ,EAAAwB,GAAA,GAAUD,EAASE,SAAUF,SAAUA,EAASA,aAGjK,OAFAq0B,EAAWA,EAAS9oC,OAAO01D,EAAyBx1D,KAAK01D,IAAe,CAAE1iD,OAAQ0iD,OAE3E,CACLl/B,UAAW8+B,EAAqB9+B,UAChCm/B,eAAgBL,EAAqB5+C,MACrCk/C,iBAAkBL,EAClB3sB,SAAUA,EACV6C,WAAY6pB,EAAqB1nB,mBAKhCunB,2BAA2BniD,EAAgB4M,GAChD,OAAOhkB,KAAKqU,WAAWwY,gBAAgB,sCAAuC,CAC5EvR,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C+9B,QAAQ,EAAA52B,GAAA,GAAmByF,KAC1Bhf,MAAM+T,GACAA,EAAQ3U,KAAKoU,GAAWA,EAAOwS,eAI7BsuC,+BAA+Bz3D,G,0CAC1C,GACiB,aAAfA,MAAAA,OAAO,EAAPA,EAASvD,IACTuD,EAAQhD,OAAOqlB,cACdriB,EAAQhD,OAAOgb,MACf7Z,KAAK4c,gBAAgBmO,WAAWlpB,EAAQuV,QAEzC,OAAO,EAGT,MAAMkG,EAAiCtd,KAAKud,gBAAgBC,QAAQ3b,EAAQuV,OAAOgM,YAC7EyvC,QAAkB7yD,KAAKqU,WAAWy+C,eACxC,OAAOx1C,EAAKoZ,oBAAsBm8B,EAAUoH,gCACzC,EAAA34C,GAAA,IAAM,GAAQzf,EAAQuf,KAAQyxC,EAAUqH,gCAGtCC,sBAAsB/iD,EAAgB8nC,GAC3C,GAAIA,EAAK9gD,OAIT,OAAO4B,KAAKqU,WAAWwY,gBAAgB,4BAA6B,CAClEvR,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C7Y,GAAI2gD,EAAK96C,KAAK4f,IAAQ,EAAAzF,GAAA,GAAmByF,KACzCo2C,WAAW,IACVp1D,MAAMo7C,IACP,MAAMr6B,EAAoB,IAAIjlB,MAAMo+C,EAAK9gD,QACnC8kB,EAAY9L,EAAOgM,WACzB,IAAI,IAAIvd,EAAI,EAAGzH,EAAS8gD,EAAK9gD,OAAQyH,EAAIzH,IAAUyH,EACjDkgB,EAAQlgB,GAAK,CACXvH,EAAG,4BACH6a,WAAY+J,EACZ3kB,GAAI2gD,EAAKr5C,GACTu6C,MAAOA,EAAMA,MAAMv6C,GAAGu6C,OAI1BpgD,KAAK0d,kBAAkBwQ,qBAAqB,CAC1C5vB,EAAG,UACHynB,QAAAA,EACAN,MAAO26B,EAAM36B,MACbzM,MAAOonC,EAAMpnC,WAKXwiC,mBAAmB35C,EAAoBxE,EAI1C,IACH,MAAM+Z,EAASpX,KAAK+7C,eAAel6C,GAEnC,GAAG7B,KAAK4c,gBAAgBkZ,aAAa1e,GACnC,OAGF,MAAMqhC,EAAO,aACb,IAAIG,EAAMH,EAAKl1C,MAAMq1C,IACnB,MAAM,YAACyhB,GAAezhB,EAAI3xC,MAC1B,OAAOozD,EAAYA,EAAYj8D,OAAS,KAAOgZ,KAG7CwhC,IACFH,EAAK5vB,MAAK,CAACqD,EAAGC,IAAMD,EAAEjlB,MAAMqzD,cAAgBnuC,EAAEllB,MAAMqzD,gBACpD1hB,EAAOH,EAAK,GAAGxxC,MAAMqzD,cAA0B7hB,EAAKA,EAAKr6C,OAAS,GAA7Bq6C,EAAK,IAG/B,kBACR5xC,WAAW,oBAAqB,OAAF,QACjChF,QAAAA,GACGxE,GACFu7C,EAAIxG,QAGFoR,4BAA4BpsC,G,MACjC,OAA4C,QAArC,EAAApX,KAAKw6C,yBAAyBpjC,UAAO,QAAKpX,KAAKw6C,yBAAyBpjC,GAAUpX,KAAKi8C,qBAAqB7kC,EAAQ,aAGtHmjD,0BAA0BnjD,EAAgB4M,GAC/C,OAAOhkB,KAAKikB,sBAAsBjkB,KAAKwjD,4BAA4BpsC,GAAS4M,GAGvEw2C,qBAAqBpjD,GAC1B,IAAIpX,KAAKs4D,cAAclhD,GAAS,OAEhC,MAAM1T,EAAU1D,KAAKwjD,4BAA4BpsC,GACjD,OAAG1T,EAAQoQ,KACF,IAAIpQ,EAAQgQ,QAGd1T,KAAKqU,WAAWwY,gBAAgB,+BAAgC,CACrEvR,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CkkB,KAAM,KACLt2B,MAAMsqD,IACP,GAAuB,iCAApBA,EAAchxD,EAAsC,CACrD0B,KAAKyc,gBAAgB8I,aAAa+pC,EAAct2C,OAChDhZ,KAAKud,gBAAgBiI,aAAa8pC,EAAc7pC,OAEhD,MAAM/hB,EAAU1D,KAAKwjD,4BAA4BpsC,GAEjD,OADApX,KAAKye,aAAa6wC,EAAc5pC,SAAU,CAAChiB,QAAAA,EAASs9C,aAAa,IAC1D,IAAIt9C,EAAQgQ,QAGrB,MAAO,MAIJ+mD,sBAAsBrjD,EAAgB8nC,GAC3C,OAAOl/C,KAAKqU,WAAWC,UAAU,iCAAkC,CACjEgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C7Y,GAAI2gD,EAAK96C,KAAK4f,IAAQ,EAAAzF,GAAA,GAAmByF,OACxChf,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzC20C,wBAAwBtjD,EAAgB8nC,GAC7C,OAAOl/C,KAAKqU,WAAWC,UAAU,mCAAoC,CACnEgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C7Y,GAAI2gD,EAAK96C,KAAK4f,IAAQ,EAAAzF,GAAA,GAAmByF,OACxChf,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzC+vC,sBAAsBj0D,GAC3B,OAAO7B,KAAK2wD,eAAe9uD,GAAUA,KAAeA,EAA4BuoD,UAAS,GAGpFuQ,6BAA6B94D,GAClC,GAAGA,EAAQuV,SAAW,KAAiB,CAErC,MAAMgzC,EAAUvoD,OADhBA,EAAU7B,KAAK81D,sBAAsBj0D,SACd,EAAPA,EAASuoD,QACzB,IAAKA,IAAWA,EAAQvrD,OAAO8rD,UAAYP,EAAQjxC,WAAWiK,aAAe,KAC3E,OAIJ,OAAOvhB,EAGF+4D,sBAAsBxjD,GAC3B,OAAOA,EAAOiN,cAAgBrkB,KAAKud,gBAAgBga,SAASngB,EAAOgM,YAGxDy3C,cAAczjD,EAAgBs0B,G,gDACzC,IAAI1rC,KAAK46D,sBAAsBxjD,GAC7B,OAGF,MAAMsM,EAAiB1jB,KAAK2jB,kBAAkBvM,EAAQs0B,GAChD/jC,EAAQ+b,EAAeI,QAAQnc,MACrC,IAAIA,EAAM0f,MAAM,aACd,cAGK3D,EAAeoC,MACtBne,EAAMmzD,SAAS,aAGf,MAAMxL,QAAsBtvD,KAAKqvD,WAAWj4C,EAAgB,QAAR,EAAAzP,EAAM,UAAE,QAAI,EAAG,EAAG,GAAI+jC,GAC1E,IAAI,IAAI7lC,EAAI,EAAGzH,EAASkxD,EAAcxrC,QAAQ1lB,OAAQyH,EAAIzH,IAAUyH,EAClE7F,KAAK28C,iBAAiB38C,KAAK2e,iBAAiBvH,EAAQk4C,EAAcxrC,QAAQje,KAG5E,MAAO,CAACk1D,YAAar3C,EAAeI,QAAQnc,MAAM0f,MAAM,iBAQnDgoC,WAAWj4C,EAAgB0O,EAAgB,EAAGqC,EAAgBusC,EAAoBhpB,GACvF,MAAMhoB,EAAiB1jB,KAAK2jB,kBAAkBvM,EAAQs0B,GAEtD,GAAG1rC,KAAK4c,gBAAgBkZ,aAAa1e,GAAS,CAC5C,MAAMtP,EAAQ4b,EAAeI,QAAQhc,MACrCA,EAAMyf,OAAO,WAEb,MAAM5f,EAAQG,EAAMH,MAAM,EAAG,GAG7B,OAFAA,EAAM4f,OAAO,WAEN,CACLzM,MAAO,EACPgJ,QAAShjB,MAAMC,KAAK4G,GACpB0f,MAAO1f,EAAMqzD,UACbC,eAAgB,GAIpB,IAAIjyC,EAAS,EAsCV0rC,IACD1rC,GAAU0rC,EACVvsC,GAASusC,GAcX,MAAMwG,EAAYx3C,EAAeI,QAAQq3C,QAAQr1C,EAAOkD,EAAQb,GAChE,OAAG+yC,GAAcA,EAAUvzD,MAAMvJ,SAAW+pB,IAAU+yC,EAAUE,UAAY,aAAmB,UAaxFp7D,KAAKq7D,mBAAmBjkD,EAAQ0O,EAAOqC,EAAOa,EAAQtF,EAAgBgoB,GAAU1mC,MAAK,KAC1F,MAAM2C,EAAQ+b,EAAeI,QAAQq3C,QAAQr1C,EAAOkD,EAAQb,GACtD8D,GAAItkB,MAAAA,OAAK,EAALA,EAAOA,QAAS+b,EAAeI,QAAQw3C,iBACjD,MAAO,CACLxgD,MAAO4I,EAAe5I,MACtBgJ,QAAShjB,MAAMC,KAAKkrB,GACpB5E,MAAO4E,EAAE+uC,UACTC,gBAAgBtzD,MAAAA,OAAK,EAALA,EAAOszD,iBAAkBv3C,EAAe5I,UAnBnD,CACLA,MAAO4I,EAAe5I,MACtBgJ,QAAShjB,MAAMC,KAAKm6D,EAAUvzD,OAC9B0f,MAAO6zC,EAAUvzD,MAAMqzD,UACvBC,eAAgBC,EAAUD,gBAoBzBM,mBAAmBjM,EAAwFnnC,EAAe6sC,GAC/H,MAAM,iBAACL,EAAgB,SAAEjvC,GAAY4pC,EAE/Bx0C,EAASw0C,EAAyDx0C,OAAS4K,EAAStnB,OACpF68D,EAAiBtG,GAAoB,EAErC6G,EAAoBxG,EAAa,EAAI7sC,EAAQ6sC,EAAa7sC,EAKhE,MAAO,CAACrN,MAAAA,EAAOmgD,eAAAA,EAAgB9xC,SAHd8xC,GAAmBngD,EAAQ0gD,GAAsB1gD,EAAQ0gD,EAGjCT,aAFpBE,GAAmBjG,EAAa,GAAMiG,EAAiBjG,GAAe,GAKtFiC,mBAAmBP,EACxBpH,EACAnD,EACAhkC,EACA6sC,GACA,MAAM,SAACtvC,GAAY4pC,EACbjoC,EAAQrnB,KAAKu7D,mBAAmBjM,EAAennC,EAAO6sC,IACtD,MAACl6C,EAAK,eAAEmgD,EAAc,SAAE9xC,EAAQ,YAAE4xC,GAAe1zC,EACjD63B,EAAOx5B,EAASthB,KAAKvC,GACjBA,EAAsBmiB,MAMhC,GAAGmoC,IAAa,EAAA5tC,GAAA,GAAmB4tC,KAAejN,EAAK70B,SAAS8hC,IAAc8O,EAAiBngD,EAAO,CACpG,IAAIjV,EAAI,EACR,IAAI,MAAMzH,EAAS8gD,EAAK9gD,OAAQyH,EAAIzH,KAC/B+tD,EAAYjN,EAAKr5C,MADwBA,GAM9Cq5C,EAAKn0C,OAAOlF,EAAG,EAAGsmD,GAGpB,MAAMxkD,EAAQ+uD,EAAYpvC,YAAY43B,IAASwX,EAAY/uD,MAS3D,OARGwhB,GACDxhB,EAAM4f,OAAO,UAGZwzC,GACDpzD,EAAM4f,OAAO,aAGR,OAAP,QAAQ5f,MAAAA,EAAOu3C,KAAAA,EAAMx5B,SAAAA,GAAa2B,GAG7Bg0C,mBAAmBjkD,EAAgB+0C,EAAmBhkC,EAAe6sC,EAAoBtxC,EAAgCgoB,GAC9H,MAAM+vB,EAAW/3C,EAAeoC,MAChC,OAAO9lB,KAAK07D,eAAetkD,EAAQ+0C,EAAWhkC,EAAO6sC,OAAYrpD,EAAW+/B,GAAU1mC,MAAMsqD,IAC1F,MAAM,MAACx0C,EAAK,YAAEigD,EAAW,MAAEpzD,EAAK,SAAE+d,GAAY1lB,KAAKi3D,mBAAmBvzC,EAAeI,QAASwrC,EAAenD,EAAWhkC,EAAO6sC,GAE/HtxC,EAAe5I,MAAQA,EAQvB,IAAI,IAAIjV,EAAI,EAAGzH,EAASsnB,EAAStnB,OAAQyH,EAAIzH,IAAUyH,EAAG,CACxD,MAAMhE,EAAU6jB,EAAS7f,GACtB7F,KAAKwnB,mBAAmB9D,EAAgB7hB,IACzC7B,KAAKwc,UAAU7V,cAAc,uBAAwB,CAACyQ,OAAAA,IAI1D,GAAG2jD,EAAa,CACd,MAAMY,EAAWh0D,EAAM,GAEvB,GAAG+b,EAAeoC,QAAU21C,EAAU,CACpC,MAAM3zD,EAAQ4b,EAAeI,QAAQhc,MAClCA,IAAUH,GACX+b,EAAeI,QAAQ83C,YAAY9zD,GAGlC4b,EAAeoC,QAAU61C,IAC1Bj4C,EAAeoC,MAAQne,EAAM,GAE7B3H,KAAK4e,mBAAmBxH,SA0C3BskD,eAAetkD,EAAgB0O,EAAeqC,EAAQ,EAAGa,EAAS,EAAG9J,EAAa,EAAGwsB,EAAW,GAKrG,MAAMruC,EAAe,CACnBie,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C+0C,WAAW,EAAA5tC,GAAA,GAAmBuH,IAAU,EACxComC,YAAahtC,EACb81C,WAAYhsC,EACZb,MAAAA,EACAi2B,OAAQ,EACR6W,OAAQ,EACR35B,KAAM,GAYR,OATGoQ,IACDruC,EAAQ83C,QAAS,EAAA52B,GAAA,GAAmBmtB,IAAa,GAGe1rC,KAAKqU,WAAWwY,gBAAgB6e,EAAW,sBAAwB,sBAAuBruC,EAAS,CAEnKs0B,YAAY,IAGC3sB,MAAMsqD,IAChB,MACDtvD,KAAKG,IAAI,yBAA0BiX,EAAQk4C,EAAexpC,EAAOqC,EAAOa,GAG1EhpB,KAAKyc,gBAAgB8I,aAAa+pC,EAAct2C,OAChDhZ,KAAKud,gBAAgBiI,aAAa8pC,EAAc7pC,OAChDzlB,KAAKye,aAAa6wC,EAAc5pC,UAE7B1lB,KAAK4c,gBAAgBuG,UAAU/L,IAChCpX,KAAK0d,kBAAkBoK,gBAAgB1Q,EAAOgM,WAAaksC,EAA2D7rC,KAGxH,IAAIrlB,EAASkxD,EAAc5pC,SAAStnB,OAAQ0c,EAASw0C,EAAyDx0C,MAC3G1c,IAAWkxD,EAAc5pC,SAAStnB,EAAS,KAC5CkxD,EAAc5pC,SAAS3a,OAAO3M,EAAS,EAAG,GAC1CA,IACA0c,KAKF,MAAM4I,EAAiB1jB,KAAK2jB,kBAAkBvM,EAAQs0B,GAChDmwB,EAAiCvM,EAAc5pC,SAAStnB,EAAS,GACvE,GAAGA,GAAUy9D,EAAc3d,WAAY,CACrC,MAAM4d,EAAap4C,EAAeI,QAAQy4B,UAAUsf,EAAc73C,KAClE,GAAG83C,GAAeA,EAAWn0D,MAAMvJ,OAASkxD,EAAc5pC,SAAStnB,OAAU0c,EAC3E,OAAO9a,KAAK07D,eAAetkD,EAAQykD,EAAc73C,IAAK,GAAI,EAAG9E,EAAYwsB,GAAU1mC,MAAM+2D,GAChFzM,IAKb,OAAOA,KACL/vD,IACF,GACO,oBADCA,EAAME,KACZ,CACE,IAAI4jB,EAAUrjB,KAAKud,gBAAgBC,QAAQpG,EAAOgM,YAClDC,EAAU,CAAC/kB,EAAG,mBAAoBq2B,YAAatR,EAAQsR,YAAakC,MAAOxT,EAAQwT,OACnF72B,KAAK0d,kBAAkBwQ,qBAAqB,CAC1C5vB,EAAG,UACHynB,QAAS,CAAC,CACRznB,EAAG,gBACH6a,WAAY/B,EAAOgM,aAErBqC,MAAO,CAACpC,GACRrK,MAAO,KAKb,MAAMzZ,KAIHy8D,sBACL,OAAGh8D,KAAKw5C,2BACCx5C,KAAKw5C,2BAGPx5C,KAAKw5C,4BAA6B,EAAAxuC,EAAA,GAAM,GAAGhG,MAAK,KACrD,MAAMi3D,EAAmC,GAEzC,IAAI,MAAO7kD,EAAQhT,KAAQpE,KAAKu5C,mBAAoB,CAClD,MAAM2F,EAAO,IAAI96C,EAAIsP,QACf2jD,EAAyBnY,EAAK96C,KAAK4f,IAChC,CACL1lB,EAAG,iBACHC,IAAI,EAAAggB,GAAA,GAAmByF,OAI3B,IAAIpZ,EAEFA,EADCwM,EAAOiN,aAAerkB,KAAK4c,gBAAgBuG,UAAU/L,GAC5CpX,KAAKqU,WAAWwY,gBAAgB,uBAAwB,CAChExJ,QAASrjB,KAAKud,gBAAgBwT,gBAAgB3Z,EAAOgM,YACrD7kB,GAAI84D,IAGIr3D,KAAKqU,WAAWwY,gBAAgB,uBAAwB,CAChEtuB,GAAI84D,IAIR,MAAM96C,EAAQ3R,EAAQ5F,MAAMk3D,KAC1B,EAAAnvC,GAAA,GAAqGmvC,GAErGl8D,KAAKyc,gBAAgB8I,aAAa22C,EAAkBljD,OACpDhZ,KAAKud,gBAAgBiI,aAAa02C,EAAkBz2C,OACpD,MAAMC,EAAW1lB,KAAKye,aAAay9C,EAAkBx2C,UAErD,IAAI,IAAI7f,EAAI,EAAGA,EAAI6f,EAAStnB,SAAUyH,EAAG,CACvC,MAAMhE,EAAU6jB,EAAS7f,GACzB,IAAIhE,EACF,SAGF,MAAMmiB,GAAM,EAAAmC,GAAA,GAAkBtkB,EAAQtD,IACtB6F,EAAIM,IAAIsf,GAChB/hB,QAAQJ,GAChBuC,EAAIL,OAAOigB,GAGb,GAAG5f,EAAI0P,KACL,IAAI,MAAOkQ,EAAKpZ,KAAYxG,EAC1BwG,EAAQ3I,QAAQjC,KAAK+tD,qBAAqB/pC,OAG7C/a,SAAQ,KACTjJ,KAAKwc,UAAU7V,cAAc,sBAAuB,CAACyQ,OAAAA,EAAQ8nC,KAAAA,OAG/D+c,EAAgB37D,KAAKic,GAKvB,OAFAvc,KAAKu5C,mBAAmBl1C,QAEjB1C,QAAQmR,IAAImpD,GAAiBj3D,KAAKgE,EAAA,EAAMA,EAAA,GAAMhE,MAAK,KACxDhF,KAAKw5C,2BAA6B,KAC/Bx5C,KAAKu5C,mBAAmBzlC,MAAM9T,KAAKg8D,4BAKrC7kD,kBAAkBC,EAAgB4M,EAAa4I,GAAY,GAChE,MAAM/qB,EAAU7B,KAAK2e,iBAAiBvH,EAAQ4M,GAC9C,GAAGniB,IAAY+qB,EAEb,OADA5sB,KAAKwc,UAAU7V,cAAc,sBAAuB,CAACyQ,OAAAA,EAAQ8nC,KAAM,CAACl7B,KAC7DriB,QAAQM,QAAQJ,GAClB,CACL,IAAIuC,EAAMpE,KAAKu5C,mBAAmB70C,IAAI0S,GAClChT,GACFpE,KAAKu5C,mBAAmBpxC,IAAIiP,EAAQhT,EAAM,IAAIoE,KAGhD,IAAIoC,EAAUxG,EAAIM,IAAIsf,GACtB,OAAGpZ,IAIHA,GAAU,SACVxG,EAAI+D,IAAI6b,EAAKpZ,GACb5K,KAAKg8D,sBACEpxD,IAIJuxD,oBAAoBt6D,GACzB,IAAIA,EAAQmvD,aAAc,OAAOrvD,QAAQM,QAAQjC,KAAK+tD,qBAAqB,IAC3E,MAAMqO,EAAgBv6D,EAAQ+sB,SAASytC,kBAAmB,EAAAzjD,GAAA,GAAU/W,EAAQ+sB,SAASytC,kBAAoBx6D,EAAQuV,OACjH,OAAOpX,KAAKmX,kBAAkBilD,EAAev6D,EAAQmvD,cAAchsD,MAAM+lD,IACnEA,UACFlpD,EAAU7B,KAAK2e,iBAAiB9c,EAAQuV,OAAQvV,EAAQmiB,MACzCgtC,aAGVjG,KAIJ/C,UAAU5wC,EAAgB0B,EAA2BmzB,G,MAC1D,IAAIqwB,EAASt8D,KAAK+5C,QAAQ3iC,GAC1B,OACGA,GACApX,KAAKs4D,cAAclhD,IACpBA,IAAWpX,KAAK4c,gBAAgBxF,SAE9B60B,IAAuB,QAAd,EAAAqwB,MAAAA,OAAM,EAANA,EAAQxjD,cAAM,eAAExa,KAAMwa,EAAOxa,KAKvCg+D,MAAAA,OAAM,EAANA,EAAQn3D,UACTD,aAAao3D,EAAOn3D,SAGtBm3D,EAASt8D,KAAK+5C,QAAQ3iC,GAAU,CAC9B0B,OAAAA,GAGK9Y,KAAKqU,WAAWC,UAAU,qBAAsB,CACrDgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C0B,OAAAA,IACC7P,SAAQ,KACNqzD,IAAWt8D,KAAK+5C,QAAQ3iC,KACzBklD,EAAOn3D,QAAUwK,EAAA,cAAe,YACvB3P,KAAK+5C,QAAQ3iC,KACnB,UAlBEzV,QAAQM,SAAQ,GAuBnBg3D,uBAAuBp3D,EAAoB6B,GACjD,MAAMyU,EAAStW,EAA4BsW,MAC3C,GAAGA,EAAO,CACR,MAAMlB,EAAKkB,EAA2CsrC,SAA8BtrC,EAC9EokD,EAAkCtlD,EAAqCgc,OAAiBhc,EAAwC+nB,SAMtI,IAJGu9B,MAAAA,OAAI,EAAJA,EAAMj1B,iBACPtnC,KAAKunC,kBAAkBxwB,cAAcwlD,EAAKj1B,eAAgB,CAAC7nC,KAAM,UAAW2X,OAAQvV,EAAQuV,OAAQrI,UAAWlN,EAAQmiB,MAGtH,YAAa7L,GAASA,EAAMsrC,QAAS,CACtC,MAAMzC,EAAchhD,KAAKwjD,4BAA4B3hD,EAAQuV,UAAY1T,EACnE+tD,EAAazxD,KAAK0jD,mBAAmBgO,+BAA+B7vD,EAAQuV,OAAQvV,EAAQmiB,IAAKg9B,GACvGhhD,KAAK0jD,mBAAmB8Y,yBAAyBrkD,EAAMsrC,QAASgO,GAG9Dt5C,EAAwC0rC,MAC1C7jD,KAAK8jD,gBAAgB2Y,oBAAoB56D,GAA4B,IAKnE+9C,sBAAsBxoC,EAAgB1T,EAA0BgiB,GACtE,MAAM5B,EAMF,CACFhJ,MAAO,EACPqM,OAAQ,EACR6yB,eAAgB,EAChB8F,KAAM,IAAItpC,KAGZ,IAAI,MAAMwN,KAAO0B,EAAU,CACzB,MAAM7jB,EAAqB7B,KAAKikB,sBAAsBvgB,EAASsgB,GAC/D,IAAIniB,EAAS,CACX7B,KAAKq/C,mCAAmCjoC,GACxC,SAGFpX,KAAKi5D,uBAAuBp3D,EAAS6B,GAErC1D,KAAKs8C,6BAA6Bz6C,GAE9BA,EAAQhD,OAAOgb,KAAQhY,EAAQhD,OAAOqlB,cAAeriB,EAAQhD,OAAOsoB,WACpErD,EAAQqD,OACVnnB,KAAKwc,UAAU7V,cAAc,sBAAuB,MAAQqd,GAEzDniB,EAAQhD,OAAO08C,cACdz3B,EAAQk2B,eACVh6C,KAAK68C,qBAAqBzlC,EAAQ4M,GAAK,OAIzCF,EAAQhJ,MACVgJ,EAAQg8B,KAAKnpC,IAAIqN,GAEjBniB,EAAQ2kB,SAAU,EAElB,MAAMgqC,EAAa3uD,EAA4Bq8C,WAC/C,GAAGsS,EAAW,CACZ,MAAMkM,EAAiB18D,KAAKu6C,uBAAuBiW,GAChDkM,IACDA,EAAe34D,OAAOigB,GAElBF,EAAQ64C,SAAQ74C,EAAQ64C,OAAS,KACpC74C,EAAQ64C,OAAOnM,KAAe1sC,EAAQ64C,OAAOnM,GAAa,IAAIh6C,MAAQG,IAAIqN,GAEvE04C,EAAe5oD,cACVgQ,EAAQ64C,cACR38D,KAAKu6C,uBAAuBiW,KAKzC9sD,EAAQK,OAAOigB,GAGjB,GAAGF,EAAQ64C,OACT,IAAI,MAAMnM,KAAa1sC,EAAQ64C,OAC7B38D,KAAK48D,kBAAkBpM,EAAW9sD,EAAS,IAAIogB,EAAQ64C,OAAOnM,KASlE,OAAO1sC,EAGDg6B,oBAAoBF,EAAqBC,EAAqBn6C,G,MACpE,GAAoB,YAAjBk6C,EAAWt/C,EAAiB,CAC7B,GAAyD,QAArD,EAAAs/C,EAAWzlC,aAA0C,eAAEsrC,QAAS,CAClE,MAAMgO,EAAazxD,KAAK0jD,mBAAmBgO,+BAA+B9T,EAAWxmC,OAAQwmC,EAAW55B,MAAO45B,EAAW/+C,OAAO6lD,cACjI1kD,KAAK0jD,mBAAmB8Y,yBAA0B5e,EAAWzlC,MAA2CsrC,QAASgO,GAGnH,MAAMjB,EAAY5S,EAAWM,WAC1BsS,GACDxwD,KAAK48D,kBAAkBpM,EAAW9sD,EAAS,KAKzCk5D,kBAAkBpM,EAAmB9sD,EAA0Bm5D,GACrE,MACMn3C,EADO1lB,KAAKuwD,eAAeC,GACXpsD,KAAK4f,GAAQhkB,KAAKikB,sBAAsBvgB,EAASsgB,KACvEhkB,KAAKwc,UAAU7V,cAAc,aAAc,CAACyQ,OAAQsO,EAAS,GAAGtO,OAAQyxC,QAAS2H,EAAWqM,YAAaA,GAAe,GAAIn3C,SAAAA,IAGvHtD,qBAAqBpI,GAC1B,OAAOA,EAAOoN,iBAAmBpN,EAAOnb,OAAO6+C,YAG1CjzB,eAAezQ,GACpB,QAASha,KAAKoiB,qBAAqBpI,GAG9Bw0C,WAAW3sD,GAChB,MAAsB,aAAfA,MAAAA,OAAO,EAAPA,EAASvD,KAAqBuD,EAA4BhD,OAAOi+D,aAAe98D,KAAK4c,gBAAgBmgD,WAAWl7D,EAAQuV,QAGzHkmC,gBACNn7C,EACAyC,EACAyC,EACA21D,GAEA,IAAI9Y,EAAUlkD,KAAKk6C,aAAa/3C,GAC5B+hD,IAEFA,EAAUlkD,KAAKk6C,aAAa/3C,GAAS,CACnCyC,SAAAA,EACAs8C,MAAO,IAAI14C,MAIX07C,EAAQhD,MAAMt4B,IAAIvhB,KAEpB68C,EAAQhD,MAAM/4C,IAAId,EAAK21D,EAAqBA,SAAuBrxD,GACnE3L,KAAKgkD,yBAID5C,mBAA4Ch9C,GAClD,MAAM64D,EAAgD,IAAIz0D,IAC1D,IAAI,MAAOnB,EAAK9C,KAAUH,EAAK,CAC7B,MAAO84D,EAAWl5C,GAAO3c,EAAIG,MAAM,KAC7B3F,EAAU7B,KAAK2e,iBAAiBu+C,EAAUz2D,YAAaud,GACzDniB,GAIJo7D,EAAO90D,IAAItG,EAAS0C,GAGtB,OAAO04D,EA8CFE,kBAAkB/lD,EAAgBquC,GAGvC,OAFoBzlD,KAAKwqD,kBAAkBC,kBAAkBrzC,EAAOgM,YACxDg6C,gBAAkBp9D,KAAK4c,gBAAgB2J,cAAck/B,GAC1DzlD,KAAKqU,WAAWC,UAAU,6BAA8B,CAC7DgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5CyuC,QAAS7lD,KAAK4c,gBAAgB8O,iBAAiB+5B,M,eEjvLtC,SAAS4X,GAAuCC,GAC7D,MAAMj/D,EAAMi/D,EAAS5/D,QAAQ,QAAS,IACtC,OAAQW,EAAI,GAAGjC,cAAgBiC,EAAIsJ,MAAM,GCoBpC,MAAM41D,WAAgCpqD,EAA7C,c,oBACU,KAAAqqD,aAAe,CACrBzgB,WAAY,GACZ0gB,YAAa,KACbC,YAAa,KACbC,iBAAkB,MA0HZ,KAAAC,eAAiB,UACWjyD,IAA/B3L,KAAK69D,wBACN34D,aAAalF,KAAK69D,uBAClB79D,KAAK69D,2BAAwBlyD,GAG/B,MAAMiuB,GAAY,EAAAtY,GAAA,IAAM,GACxB,IAAIw8C,EAAmB,KACvB,IAAI,MAAM1mD,KAAUpX,KAAKw9D,aAAazgB,WAAY,CAChD,MAAMghB,EAAqB/9D,KAAKw9D,aAAazgB,WAAW3lC,GACxD,GAAG2mD,aAA8Bp8D,QAC/B,SAGF,MAAMu2D,EAAY6F,EAAmB5F,WACjCD,IAIDA,GAAat+B,GAEdmkC,EAAmB5F,WAAa,EAEhCn4D,KAAK0d,kBAAkBuI,WAAW,CAChC3nB,EAAG,uBACHgd,KAAM,CACJhd,EAAG,aACHgd,KAAMtb,KAAK4c,gBAAgB2J,cAAcnP,EAAO3Q,aAElDohB,gBAAiBk2C,KAEX7F,EAAY4F,IACpBA,EAAmB5F,IAIvB,MAAM/yD,EAAUga,KAAKC,IAAI,KAAyC,KAAhC0+C,EAAmBlkC,IACrD55B,KAAK69D,sBAAwBluD,EAAA,aAAe3P,KAAK49D,eAAgBz4D,IApJzDoX,QAgBR,OAfAvc,KAAKg+D,yBAA0B,EAAAC,GAAA,GAASj+D,KAAK49D,eAAgB,KAAM,GAEnE59D,KAAK0d,kBAAkBC,2BAA2B,CAChDylC,qBAAuBloC,IACrB,MAAM9D,EAA2B,eAAlB8D,EAAOI,KAAKhd,IAAsB,EAAAsa,GAAA,GAAUsC,EAAOI,KAAKA,MACjEjU,EAAwB,eAAlB6T,EAAOI,KAAKhd,EAAqB4c,EAAOI,KAAKhd,OAAIqN,EAC7D3L,KAAK4nB,iBAAiB,CACpBvgB,IAAAA,EACA+P,OAAAA,EACAtQ,SAAUoU,EAAO2M,kBAEnB7nB,KAAKwc,UAAU7V,cAAc,kBAAmBuU,MAI7Clb,KAAK+d,gBAAgB5W,WAAWnC,MAAMiC,IAC3C,GAAGA,EAAMi3D,eACP,IAAI,MAAM72D,KAAOJ,EAAMi3D,gBACrB,EAAAnxC,GAAA,GAAmD1lB,GACnDrH,KAAK4nB,iBAAiB,CACpBvgB,IAAAA,EACAP,SAAUG,EAAMi3D,eAAe72D,QAOlCqwD,kBAAkBp8C,GACvB,IAGIlE,EAHA/P,EAAWg2D,GAAqB/hD,EAAKhd,GACrCyT,EAAW/R,KAAKw9D,aAAan2D,GAQjC,MALc,oBAAXiU,EAAKhd,IACN8Y,EAAS/P,GAAM,EAAAuR,GAAA,GAAU0C,EAAKA,MAC9BvJ,EAAMA,EAAI1K,IAGT0K,KAIKA,GAAO/R,KAAKw9D,cAAcn2D,GAAOrH,KAAKqU,WAAWC,UAAU,4BAA6B,CAACgH,KAAAA,IAChGtW,MAAM8B,IACL9G,KAAK4nB,iBAAiB,CACpBvgB,IAAAA,EACA+P,OAAAA,EACAtQ,SAAAA,IAGKA,MAIJ2wD,4BACL,GAAGz3D,KAAKm+D,yBAA0B,OAAOn+D,KAAKm+D,yBAE9C,MAAM/1C,EAAY,CAAC,wBAAyB,mBAAoB,oBAC/DhkB,KAAKk5D,GACGt9D,KAAK03D,kBAAkB,CAACp5D,EAAGg/D,MAGpC,OAAOt9D,KAAKm+D,yBAA2Bx8D,QAAQmR,IAAIsV,GAG9Cg7B,qBAAqB9nC,EAAuBxU,GAMjD,OAAO9G,KAAKqU,WAAWC,UAAU,+BAAgC,CAC/DgH,KAAAA,EACAxU,SAAAA,IACC9B,MAAMT,IACJA,GACDvE,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,uBACHgd,KAAM,OAAF,wBACCA,GAAW,CACdhd,EAAG++D,GAAqB/hD,EAAKhd,KAE/BupB,gBAAiB,OAAF,wBACV/gB,GAAQ,CACXxI,EAAG,4BAcN8/D,+BACL,OAAGp+D,KAAKq+D,qBAA6Br+D,KAAKq+D,qBACnCr+D,KAAKq+D,qBAAuBr+D,KAAKqU,WAAWC,UAAU,wCAGxDgqD,6BAA6BxY,GAClC9lD,KAAKqU,WAAWC,UAAU,uCAAwC,CAACwxC,OAAAA,IAClE9gD,MAAMT,IACLvE,KAAKq+D,qBAAuB18D,QAAQM,SAAS6jD,MA4C1Cl+B,kBAAiB,IAACvgB,EAAG,OAAE+P,EAAM,SAAEtQ,IAKpC,IAAIiL,EACDqF,IACD/P,EAAM+P,EACNrF,EAAM/R,KAAKw9D,aAAyB,aAGrCzrD,GAAO/R,KAAKw9D,cAAcn2D,GAAOP,EAE9BsQ,EAQFpX,KAAKg+D,2BAPLh+D,KAAKwc,UAAU7V,cAAc,4BAA6B,CAACU,IAAAA,EAAKP,SAAAA,IAChE9G,KAAK+d,gBAAgB5W,WAAWnC,MAAMiC,IACpC,MAAMi3D,EAAiBj3D,EAAMi3D,eAC7BA,EAAe72D,GAAOP,EACtB9G,KAAK+d,gBAAgBhW,YAAY,iBAAkBm2D,OASlD3rB,QAAQwrB,GACb,MAAgC,uBAAzBA,EAAmBz/D,IACvBy/D,EAAmBjY,aAA6Cn6C,IAAlCoyD,EAAmB5F,YAA6D,IAAhC4F,EAAmB5F,YAAqB,EAAA72C,GAAA,MAGnHi9C,aAAannD,GACnB,MAAMqxC,EAAMzoD,KAAK03D,kBAAkB,CAACp5D,EAAG,kBAAmBgd,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,KACtG,OAAQqxC,aAAe9mD,QAAU8mD,EAAM9mD,QAAQM,QAAQwmD,IACtDzjD,MAAM+4D,GAAuB/9D,KAAKuyC,QAAQwrB,KAGrCS,qBAAqBpnD,EAAgBqnD,GAAc,GACzD,MAAMC,EAAwB,CAC5BpgE,EAAG,sBAGC4/D,EAAiBl+D,KAAKw9D,aAAyB,WAAEpmD,GAMvD,IAJG8mD,GAAoBA,aAA0Bv8D,SAC/C9F,OAAOC,OAAO4iE,EAAGR,GAGhBO,EAAa,CACd,MACMp3D,EAAMg2D,GADQr9D,KAAK4c,gBAAgB+6C,uBAAuBvgD,GAAQ,GAC3B9Y,GACvCqgE,EAAqB3+D,KAAKw9D,aAAan2D,GAC7C,GAAGs3D,KAAwBA,aAA8Bh9D,SACvD,IAAI,IAAIkE,KAAK84D,OAEChzD,IAAT+yD,EAAE74D,KAEH64D,EAAE74D,GAAK84D,EAAmB94D,IAMlC,OAAO64D,EAGFr+C,iBAAiBjJ,EAAgBqnD,GAAc,GACpD,GAAGrnD,IAAWpX,KAAK4c,gBAAgBxF,OAAQ,OAAO,EAElD,MAAM8mD,EAAiBl+D,KAAKw+D,qBAAqBpnD,EAAQqnD,GACzD,OAAOz+D,KAAKuyC,QAAQ2rB,I,yBC/OjB,MAAMU,WAAwBzrD,EACxBiE,aACT,OAAOpX,KAAKyc,gBAAgBjE,OAAO/R,WAO9Bo4D,cAAcznD,GACnB,OAAOA,EAAOka,UAAYtxB,KAAKud,gBAAgBwZ,UAAU3f,EAAOgM,WAAY,gBAGvE07C,aAAa1nD,GAClB,GAAGpX,KAAK81B,aAAa1e,GACnB,OAGF,MAAM6b,EAAQ7b,EAAOka,SACjBtxB,KAAKyc,gBAAgBsiD,aAAa3nD,EAAO4T,YACzChrB,KAAKud,gBAAgBsa,aAAazgB,EAAOgM,YAE7C,MAAmB,mBAAZ6P,EAAM30B,GAAsC,0BAAZ20B,EAAM30B,EAAgC20B,OAAQtnB,EAGhFu5C,kBAAkB9tC,GACvB,GAAGA,EAAOka,SACR,OAAO,EAGT,MAAMhU,EAAkBtd,KAAKud,gBAAgBC,QAAQpG,EAAOgM,YAC5D,SAAG9F,GAAQA,EAAKoJ,aAAepJ,EAAKze,OAAO8nB,eAClC,EAAA/N,GAAA,GAAU0E,EAAKoJ,aAMnBH,cAAcnP,GACnB,GAAGA,EAAOka,SACR,MAAO,CAAChzB,EAAG,WAAY+Z,QAASjB,EAAO4T,YAGzC,MAAM3R,EAASjC,EAAOgM,WACtB,OAAGpjB,KAAKud,gBAAgB4F,UAAU9J,GACzB,CAAC/a,EAAG,cAAe6a,WAAYE,GAGjC,CAAC/a,EAAG,WAAY8a,QAASC,GAG3Bm9C,cAAcp/C,GACnB,OAAGA,EAAOka,SACDtxB,KAAKyc,gBAAgBuiD,cAAc5nD,EAAO4T,YAE5ChrB,KAAKud,gBAAgBua,cAAc1gB,EAAOgM,YAG5C67C,gBAAgB7nD,GACrB,OAAOpX,KAAK6pD,QAAQzyC,GAAQ6hB,UAAY,GAGnC4wB,QAAQzyC,GACb,OAAOA,EAAOka,SACVtxB,KAAKyc,gBAAgBo4B,QAAQz9B,EAAO4T,YACpChrB,KAAKud,gBAAgBC,QAAQpG,EAAOgM,YAGnC+vC,cAAc/7C,GACnB,MAAO,CACL9Y,EAAG,aACHgd,KAAMtb,KAAKumB,cAAcnP,IAItB+L,UAAU/L,GACf,OAAQA,EAAOka,UAAYtxB,KAAKud,gBAAgB4F,UAAU/L,EAAOgM,YAG5DiU,YAAYjgB,GACjB,OAAQA,EAAOka,UAAYtxB,KAAKud,gBAAgB8Z,YAAYjgB,EAAOgM,YAG9D2H,WAAW3T,GAChB,OAAQA,EAAOka,WAAatxB,KAAKud,gBAAgBsN,YAAYzT,EAAOgM,YAG/DyH,YAAYzT,GACjB,OAAOpX,KAAKmjB,UAAU/L,KAAYpX,KAAKq3B,YAAYjgB,GAG9C6T,MAAM7T,GACX,OAAOA,EAAOka,UAAYtxB,KAAKyc,gBAAgBwO,MAAM7T,EAAO4T,YAGvDI,UAAUhU,GACf,OAAOA,EAAOka,UAAYtxB,KAAKyc,gBAAgB2O,UAAUhU,EAAO4T,YAG3DsG,OAAOla,GACZ,OAAO,EAAAka,GAAA,GAAOla,GAGTiN,UAAUjN,GACf,OAAO,EAAAiN,GAAA,GAAUjN,GAGZ0e,aAAa1e,GAClB,OAAOA,EAAOka,SAAWtxB,KAAKyc,gBAAgBqZ,aAAa1e,EAAO4T,YAAchrB,KAAKud,gBAAgBuY,aAAa1e,EAAOgM,YAGpH87C,yBAAyB9nD,GAC9B,MAAMkE,EAAiCtb,KAAK6pD,QAAQzyC,GAC9C8Z,EAAS5V,EAAKyf,mBAAqBnF,GAAqBta,EAAKyf,yBAAsBpvB,EACzF,OAAGulB,EACMA,EAAOl0B,KAEPoa,EAAOka,SAAW,0BAA4B,0BAsClDqmC,uBAAuBvgD,EAAgB+nD,GAC5C,OAAGA,EACE/nD,EAAOka,SACD,CAAChzB,EAAG,oBAER0B,KAAK6qB,YAAYzT,GACX,CAAC9Y,EAAG,yBAEJ,CAACA,EAAG,oBAIR,CACLA,EAAG,kBACHgd,KAAMtb,KAAK0rB,iBAAiBtU,IAK3BsU,iBAAiBtU,GACtB,IAAIA,EACF,MAAO,CAAC9Y,EAAG,kBAGb,IAAI8Y,EAAOka,SAAU,CACnB,MAAMjY,EAASjC,EAAOgM,WACtB,OAAOpjB,KAAKud,gBAAgBka,aAAape,GAG3C,MAAMb,EAASpB,EAAO4T,WACtB,OAAOhrB,KAAKyc,gBAAgB2iD,iBAAiB5mD,GAGxCo4B,mBACL,MAAO,CAACtyC,EAAG,iBAGNqwD,uBAAuBv3C,GAC5B,MAAO,CACL9Y,EAAG,kBACHgd,MAAM,EAAA6F,GAAA,GAAoB/J,GAAUA,EAASpX,KAAK0rB,iBAAiBtU,IAIhEyF,kBAAkBzF,GACvB,IAAIpa,EAQJ,OANEA,EADCgD,KAAKsxB,OAAOla,GACN,OAASpX,KAAKyc,gBAAgB4iD,kBAAkBjoD,EAAO4T,YAGvD,QADMhrB,KAAKud,gBAAgBC,QAAQpG,EAAOgM,YAC3ByT,OAAS,IAG1B75B,EAGFsiE,cAAcloD,GACnB,OAAGpX,KAAKq3B,YAAYjgB,GACX,YACCpX,KAAKmjB,UAAU/L,GAChB,UACEpX,KAAKsxB,OAAOla,GAGdA,IAAWpX,KAAKoX,OAAS,QAAU,OAFnC,QAMJmoD,oBAAoBnoD,GACzB,OAAOpX,KAAKs/D,cAAcloD,IACxB,IAAK,UACH,OAAOpX,KAAKud,gBAAgBwZ,UAAU3f,EAAOgM,WAAY,eAAiB,gBAAkB,gCAE9F,IAAK,YACL,IAAK,QACH,OAAOpjB,KAAKud,gBAAgBwZ,UAAU3f,EAAOgM,WAAY,eAAiB,aAAe,8BAE3F,QACE,MAAO,+BAIN25C,WAAW3lD,G,MAChB,OAAGA,EAAOka,aAG2B,QAA1B,EADItxB,KAAKud,gBAAgBuZ,aAAa1f,EAAOgM,YACzBvkB,cAAM,eAAEi+D,aChPpC,MAAM0C,WAAyBrsD,EAAtC,c,oBACU,KAAAssD,OAEJ,GAEGzrB,UAAU/gB,EAAc3c,G,MAC7B,GAAe,eAAZ2c,EAAM30B,EAAoB,OAY7B,MAAMohE,EAAW1/D,KAAKy/D,OAAOxsC,EAAM10B,IAMnC,GALG00B,EAAMqU,iBACPhC,GAAyB,iBAAkBo6B,EAAUzsC,GACrDjzB,KAAKunC,kBAAkBnxB,YAAY6c,EAAMqU,eAAgBhxB,IAG7C,QAAX,EAAA2c,EAAM+zB,aAAK,eAAE5oD,OAAQ,CACtB,MAAM0V,EAAOmf,EAAM+zB,MAAM/zB,EAAM+zB,MAAM5oD,OAAS,GAChC,yBAAX0V,EAAKxV,IACNwV,EAAKA,KAAOA,EAAKkzC,MAAMlzC,EAAKkzC,MAAM5oD,OAAS,IAI/C,OAAGshE,EACM7jE,OAAOC,OAAO4jE,EAAUzsC,GAG1BjzB,KAAKy/D,OAAOxsC,EAAM10B,IAAM00B,EAG1B0sC,cAAcnnD,EAAgBsN,EAA2B,IAAKqC,EAAgB,IACnF,MAAMy3C,EAAY5/D,KAAKyc,gBAAgB4Y,aAAa7c,GACpD,OAAOxY,KAAKqU,WAAWonB,mBAAmB,uBAAwB,CAChEpjB,QAASunD,EACT52C,OAAQ,EACRb,MAAAA,EACAi2B,OAAQt4B,GACP,CAAC4V,aAAc,KAAK12B,MAAM66D,IAC3B7/D,KAAKyc,gBAAgB8I,aAAas6C,EAAa7mD,OAC/C,MAAM8mD,EAAWD,EAAaJ,OAAOr7D,KAAI,CAAC6uB,EAAOzuB,KAC/Cq7D,EAAaJ,OAAOj7D,GAAOxE,KAAKg0C,UAAU/gB,EAAO,CAACxzB,KAAM,eAAgB2X,OAAQoB,EAAO/R,aAChFwsB,EAAM10B,MAIf,GAAa,MAAVunB,GAAiBA,EAAO,CACzB,MAAMthB,EAAMs7D,EAASzjE,QAAQypB,IACjB,IAATthB,GACDs7D,EAAS/0D,OAAOvG,EAAK,GAIzB,MAAO,CACLsW,MAAQ+kD,EAAgD/kD,OAASglD,EAAS1hE,OAC1EqhE,OAAQK,MAyBPnW,SAASoW,GACd,OAAO,EAAA5+C,GAAA,GAAS4+C,GAAWA,EAAqB//D,KAAKy/D,OAAOM,ICjGzD,MAAMC,WAAwB7sD,EAArC,c,oBACS,KAAA6lD,MAA8B,GAC9B,KAAA3zD,QAAuC,GACvC,KAAA0+C,eAA8C,GAE7C,KAAA5jD,KAAM,EAAAsJ,EAAA,IAAO,QAAS,YAEpB8S,QACRvc,KAAK0d,kBAAkBC,2BAA2B,CAChDsiD,kBAAoB/kD,IAClBlb,KAAKG,IAAI,qBAAsB+a,GAE/B,IAAI2oC,EAAa3oC,EAAO2oC,MAAQ7jD,KAAKg5D,MAAM99C,EAAOglD,SAClD,IAAIrc,EACF,OAGF,IAAIx+C,EAAU6V,EAAO7V,QACrB,MAAMojD,EAAMzoD,KAAKwpD,SAAS3F,EAAMx+C,GAChCw+C,EAAO4E,EAAI5E,KACXx+C,EAAUojD,EAAIpjD,QAEdrF,KAAKwc,UAAU7V,cAAc,cAAe,CAACk9C,KAAAA,EAAMx+C,QAASA,OAK3DmkD,SAAS3F,EAAYx+C,EAAsBxD,GAC7CA,GACD7B,KAAKy8D,oBAAoB56D,GAAS,GAGpC,MAAMtD,EAAKslD,EAAKtlD,GAWhB,OAVGyB,KAAKg5D,MAAMz6D,IACZslD,EAAOhoD,OAAOC,OAAOkE,KAAKg5D,MAAMz6D,GAAKslD,GACrCx+C,EAAUrF,KAAKmgE,YAAYtc,EAAMx+C,KAEjCrF,KAAKg5D,MAAMz6D,GAAMslD,EAEjBA,EAAKuc,cAAgB,GACrB/6D,EAAUrF,KAAKmgE,YAAYtc,EAAMx+C,IAG5B,CAACw+C,KAAAA,EAAMx+C,QAAAA,GAGT86D,YAAYtc,EAAYx+C,G,MAkB7B,OAjBGrF,KAAKqF,QAAQw+C,EAAKtlD,IACnB8G,EAAUxJ,OAAOC,OAAOkE,KAAKqF,QAAQw+C,EAAKtlD,IAAK8G,GAE/CrF,KAAKqF,QAAQw+C,EAAKtlD,IAAM8G,EAGtBA,EAAQxG,OAAOugB,MACjBykC,EAAKuc,cAAchiE,OAAS,GACT,QAAhB,EAAAiH,MAAAA,OAAO,EAAPA,EAASA,eAAO,eAAEjH,SACnBiH,EAAQA,QAAQnC,SAAQ,CAACm9D,EAAQ77D,K,OACf,QAAb,EAAA67D,EAAOxhE,cAAM,eAAE6iD,SAChBmC,EAAKuc,cAAc9/D,KAAKkE,OAMzBa,EAGFqkD,QAAQH,GACb,MAAO,CACL1F,KAAM7jD,KAAKg5D,MAAMzP,GACjBlkD,QAASrF,KAAKqF,QAAQkkD,IAInB+W,kBAAkBzc,EAAY0c,EAA+BC,EAAmBC,GAWrF,OAVGD,GACGC,IACFA,EAAmB,IAGrBD,GAAW,EAAAluC,GAAA,GAAckuC,EAAUC,IAEnCD,OAAW70D,EAGN,CACLrN,EAAG,iBACHulD,KAAAA,EACA6c,gBAAiBH,EACjBC,SAAAA,EACAG,kBAAmBH,EAAWC,OAAmB90D,GAI9C8wD,oBAAoB56D,EAA0B8U,GACnD,MAAM,GAACpY,GAAOsD,EAAQsW,MAAwC0rC,KAC9D,IAAI17C,EAAMnI,KAAK+jD,eAAexlD,GAE9B,IAAIoY,IAAQxO,EACV,OAGEA,IACFA,EAAMnI,KAAK+jD,eAAexlD,GAAM,IAAIiY,KAGtC,MAAMnP,EAAMxF,EAAQuV,OAAS,IAAMvV,EAAQmiB,IACxCrN,EAAKxO,EAAIwO,IAAItP,GACXc,EAAIpE,OAAOsD,GAEZsP,GAAQxO,EAAI2L,cACP9T,KAAKg5D,MAAMz6D,UACXyB,KAAKqF,QAAQ9G,UACbyB,KAAK+jD,eAAexlD,IAIxBqiE,SAAS/+D,EAAcg/D,GAC5B,MAAMhd,EAAahiD,EAAQsW,MAAM0rC,KAE3BxmD,EAAwBwjE,EAAUz8D,KAAKjD,GACpC0iD,EAAKid,QAAQ3/D,GAAO4/D,SAGvBhyD,EAAYlN,EAAQmiB,IACpB5M,EAASvV,EAAQuV,OACjBoV,EAAYxsB,KAAK4c,gBAAgB8O,iBAAiBtU,GAExD,OAAGvV,EAAQhD,OAAOqlB,YACTlkB,KAAKkX,mBAAmBotC,yBAAyBv1C,EAAW,YAAalN,IAC9E7B,KAAKG,IAAI,4BACFH,KAAK4gE,SAAS/+D,EAASg/D,MAI3B7gE,KAAKqU,WAAWC,UAAU,oBAAqB,CACpDgH,KAAMkR,EACN2oB,QAAQ,EAAA52B,GAAA,GAAmB1c,EAAQmiB,KACnC3mB,QAAAA,IACC2H,MAAM+gB,IACP/lB,KAAKG,IAAI,oBAAqB4lB,GAC9B/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAIzCi7C,WAAWn/D,GAChB,MAAM2qB,EAAYxsB,KAAK4c,gBAAgB8O,iBAAiB7pB,EAAQuV,QAEhE,OAAOpX,KAAKqU,WAAWC,UAAU,0BAA2B,CAC1DgH,KAAMkR,EACN2oB,QAAQ,EAAA52B,GAAA,GAAmB1c,EAAQmiB,OAClChf,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,GAC5C/lB,KAAKG,IAAI,sBAAuB4lB,MAI7Bk7C,SAASp/D,EAAck/D,EAAqB/3C,EAAiBb,EAAQ,IAC1E,OAAOnoB,KAAKqU,WAAWC,UAAU,wBAAyB,CACxDgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiB7pB,EAAQuV,QACpD7Y,IAAI,EAAAggB,GAAA,GAAmB1c,EAAQmiB,KAC/B+8C,OAAAA,EACA/3C,OAAAA,EACAb,MAAAA,IACCnjB,MAAMk8D,IACPlhE,KAAKG,IAAI,yBAA0B+gE,GAEnClhE,KAAKyc,gBAAgB8I,aAAa27C,EAAUloD,OAErCkoD,KAIJC,SAASt/D,GACd,MAAMgiD,EAAahiD,EAAQsW,MAAM0rC,KAEjC,GAAGA,EAAKhlD,OAAOuiE,OAAQ,OAAOz/D,QAAQM,UAEtC,MAAMo/D,GAAU,EAAAr3C,GAAA,GAAK65B,GAErB,OADAwd,EAAQxiE,OAAOuiE,QAAS,EACjBphE,KAAKkX,mBAAmButC,YAAY5iD,OAAS8J,EAAW,CAC7Dg5C,SAAU3kD,KAAKsgE,kBAAkBe,KAChCr8D,MAAK,SAELuF,IACDvK,KAAKG,IAAIZ,MAAM,kBAAmBgL,OC5LjC,MAAM+2D,WAA0BnuD,EAAvC,c,oBACU,KAAAouD,QAEH,GAEKhlD,QACRvc,KAAK0d,kBAAkBC,2BAA2B,CAChD6jD,cAAgBtmD,IACd,MAAM7T,EAAM6T,EAAO7T,IAAI/I,EACvB0B,KAAKuhE,QAAQl6D,GAAO6T,EAAOumD,MAC3BzhE,KAAKwc,UAAU7V,cAAc,iBAAkBuU,MAK9CwmD,WAAWpE,EAAgCmE,GAChD,OAAOzhE,KAAKqU,WAAWC,UAAU,qBAAsB,CACrDjN,IAAK,CACH/I,EAAGg/D,GAELmE,MAAAA,IACCz8D,MAAM28D,IACP3hE,KAAKyc,gBAAgB8I,aAAao8C,EAAa3oD,OAC/ChZ,KAAKud,gBAAgBiI,aAAam8C,EAAal8C,OAE/CzlB,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,gBACH+I,IAAK,CACH/I,EAAG++D,GAAqBC,IAE1BmE,MAAOA,EAAMr9D,KAAKw9D,IAChB,MAAMC,EAAoB,GAG1B,OAFAhmE,OAAOC,OAAO+lE,EAAMD,GACpBC,EAAKvjE,EAAI++D,GAAqBwE,EAAKvjE,GAC5BujE,OAMJF,EAAaF,SAIjBK,WAAWxE,GAChB,MAAMyE,EAA8B1E,GAAqBC,GACnDmE,EAAQzhE,KAAKuhE,QAAQQ,GAC3B,OAAGN,EACM9/D,QAAQM,QAAQw/D,GAGlBzhE,KAAKuhE,QAAQQ,GAAc/hE,KAAKqU,WAAWC,UAAU,qBAAsB,CAChFjN,IAAK,CACH/I,EAAGg/D,KAEJt4D,MAAM28D,IACP3hE,KAAKyc,gBAAgB8I,aAAao8C,EAAa3oD,OAC/ChZ,KAAKud,gBAAgBiI,aAAam8C,EAAal8C,OAIxCzlB,KAAKuhE,QAAQQ,GAAcJ,EAAaF,U,2SC/C9C,MAAMO,WAA0B7uD,EAAvC,c,oBAEU,KAAA8uD,UAA+C,GAC/C,KAAAC,UAAsC,GAolBtC,KAAAC,mBAAsBjnD,I,MAC5B,MAAMlD,EAAUkD,EAAmC7C,QAChD6C,EAAmC7C,QAAQ5R,YAC5C,EAAAmS,GAAA,GAAWsC,EAAuCoL,SACpD,GAAGtmB,KAAK4c,gBAAgBxF,SAAWY,GAA8B,8BAApBkD,EAAOpC,OAAOxa,EACzD,OAGF,MAAM8Y,GAAS,EAAAwB,GAAA,GAAUsC,GACnB6+B,EAAoC,QAA1B,EAAA/5C,KAAKoiE,cAAchrD,UAAO,QAAKpX,KAAKoiE,cAAchrD,GAAU,GAC5E,IAAIklD,EAASviB,EAAQx2C,MAAM8+D,GAAMA,EAAE7pD,SAAWR,IAE9C,MAAMsqD,EAAe,YACZhG,EAAOn3D,QAEd,MAAMX,EAAMu1C,EAAQ19C,QAAQigE,IAChB,IAAT93D,GACDu1C,EAAQhvC,OAAOvG,EAAK,GAGtBxE,KAAKwc,UAAU7V,cAAc,eAAgB,CAACyQ,OAAAA,EAAQ2iC,QAAAA,IAElDA,EAAQ37C,eACH4B,KAAKoiE,cAAchrD,IAQ9B,GAJGklD,QAA6B3wD,IAAnB2wD,EAAOn3D,SAClBD,aAAao3D,EAAOn3D,SAGC,4BAApB+V,EAAOpC,OAAOxa,EAAiC,CAChD,IAAIg+D,EACF,OAIF,YADAgG,IAIEhG,IACFA,EAAS,CACP9jD,OAAQR,GAGV+hC,EAAQz5C,KAAKg8D,IAKfA,EAAOxjD,OAASoC,EAAOpC,OAEvB,MAAMqY,EAAUnxB,KAAKyc,gBAAgB0U,QAAQnZ,GACzCmZ,EAcFnxB,KAAKyc,gBAAgBggC,gBAAgBzkC,GAZrB,yBAAbkD,EAAO5c,GACL4c,EAAO9B,SAAWpZ,KAAKud,gBAAgB8T,QAAQnW,EAAO9B,WAAapZ,KAAKud,gBAAgB4F,UAAUjI,EAAO9B,UAC1GzX,QAAQM,QAAQjC,KAAKuiE,YAAYrnD,EAAO9B,UAAUpU,MAAK,UAC/B2G,IAAnB2wD,EAAOn3D,SAAyBnF,KAAKyc,gBAAgB0U,QAAQnZ,IAC9DhY,KAAKwc,UAAU7V,cAAc,eAAgB,CAACyQ,OAAAA,EAAQ2iC,QAAAA,OAWhEuiB,EAAOn3D,QAAUwK,EAAA,aAAe2yD,EAAc,KAC3CnxC,GACDnxB,KAAKwc,UAAU7V,cAAc,eAAgB,CAACyQ,OAAAA,EAAQ2iC,QAAAA,KAIlD,KAAAyoB,oBAAuBtnD,IAC7B,MAAM9D,GAAS,EAAAwB,GAAA,GAAUsC,EAAOrC,SAChC,GAAG7Y,KAAK4c,gBAAgB0U,OAAOla,GAAS,CACtC,MAAMoB,EAASpB,EAAO4T,WAChBkgC,EAAWlrD,KAAKiiE,UAAUzpD,GAC7B0yC,IACEhwC,EAAOunD,QAASvX,EAASrsD,OAAO4jE,SAAU,SACjCvX,EAASrsD,OAAO4jE,SAG9BziE,KAAKwc,UAAU7V,cAAc,mBAAoB6R,GAGnDxY,KAAKwc,UAAU7V,cAAc,aAAc,CAACyQ,OAAAA,EAAQqrD,QAASvnD,EAAOunD,WA1qB5DlmD,QACRvc,KAAK0d,kBAAkBC,2BAA2B,CAChD+kD,uBAAyBxnD,IACvB,MAAMg0B,EAAeh0B,EAAOg0B,aAC5B,GAAsB,qBAAnBA,EAAa5wC,EAA0B,CACxC,MAAM+a,EAAS61B,EAAa91B,QACtBupD,EAAW3iE,KAAKkiE,UAAU7oD,QAChB1N,IAAbg3D,IACDA,EAASzzB,aAAeA,EACxBlvC,KAAKwc,UAAU7V,cAAc,mBAAoB0S,MAKvDupD,yBAA2B1nD,IACzB,MAAMynD,EAAW3iE,KAAKkiE,UAAUhnD,EAAO9B,SACvC,QAAgBzN,IAAbg3D,EAAwB,CACzB,MAAME,EAAgBF,EAASzzB,aACzBA,EAAe2zB,EAAc3zB,cAAgB,GACnD,IAAI,IAAIrpC,EAAI,EAAGzH,EAAS8wC,EAAa9wC,OAAQyH,EAAIzH,EAAQyH,IACvD,GAAGqpC,EAAarpC,GAAGwS,UAAY6C,EAAO7C,QACpC,OAIJ62B,EAAa5uC,KAAK,CAChBhC,EAAG,kBACH+Z,QAAS6C,EAAO7C,QAChBY,WAAYiC,EAAOjC,WACnBmI,MAAM,EAAAE,GAAA,IAAM,KAGduhD,EAAcjnE,QAAUsf,EAAOtf,QAC/BoE,KAAKwc,UAAU7V,cAAc,mBAAoBuU,EAAO9B,WAI5D0pD,4BAA8B5nD,IAC5B,MAAMynD,EAAW3iE,KAAKkiE,UAAUhnD,EAAO9B,SACvC,QAAgBzN,IAAbg3D,EAAwB,CACzB,MAAME,EAAgBF,EAASzzB,aACzBA,EAAe2zB,EAAc3zB,cAAgB,GACnD,IAAI,IAAIrpC,EAAI,EAAGzH,EAAS8wC,EAAa9wC,OAAQyH,EAAIzH,EAAQyH,IACvD,GAAGqpC,EAAarpC,GAAGwS,UAAY6C,EAAO7C,QAIpC,OAHA62B,EAAankC,OAAOlF,EAAG,GACvBg9D,EAAcjnE,QAAUsf,EAAOtf,aAC/BoE,KAAKwc,UAAU7V,cAAc,mBAAoBuU,EAAO9B,WAOhE2pD,iBAAkB/iE,KAAKmiE,mBACvBa,qBAAsBhjE,KAAKmiE,mBAC3Bc,wBAAyBjjE,KAAKmiE,mBAE9Be,kBAAmBljE,KAAKwiE,sBAG1BxiE,KAAKwc,UAAUhW,iBAAiB,eAAgB6S,I,QAC9C,MAAM8pD,EAAWnjE,KAAKkiE,UAAU7oD,GAC1BiE,EAA8Etd,KAAKud,gBAAgBC,QAAQnE,GACjH,IAAI8pD,IAAa7lD,EACf,OAGF,IAAI8lD,GAAU,IACTD,EAAS7uC,SAAqC,QAA1B,EAAChX,EAAmBze,cAAM,eAAEwkE,eACnDD,GAAU,GAGZ,MAAM,MAACnwC,GAAS3V,EAChB,GAAG2V,EAAO,CACR,MAAMqwC,EAA2B,mBAAZrwC,EAAM30B,GAGzBglE,OAF0BH,EAASI,YAAwC,eAA1BJ,EAASI,WAAWjlE,IAGnEglE,GACArwC,EAAMr0B,YAAgC,QAAnB,EAAAukE,EAASI,kBAAU,eAAEhlE,OAG1C6kE,GAAU,GAIXA,GACDpjE,KAAKwjE,gBAAgBnqD,EAAO5S,UAAS,OAIzCzG,KAAKwc,UAAUhW,iBAAiB,kBAAmB6S,IACjDrZ,KAAKwjE,gBAAgBnqD,EAAO5S,UAAS,OAIvCzG,KAAKwc,UAAUhW,iBAAiB,oBAAqB6S,IACnDrZ,KAAKwc,UAAU7V,cAAc,mBAAoB0S,EAAO5S,UAAS,OAInEzG,KAAKwc,UAAUhW,iBAAiB,oBAAqBgS,IACnDxY,KAAKwc,UAAU7V,cAAc,mBAAoB6R,EAAO/R,UAAS,OAGnEzG,KAAKwc,UAAUhW,iBAAiB,2BAA4B6S,IAC1DrZ,KAAKyjE,8BAA8BpqD,MAGrCrZ,KAAKoiE,cAAgB,GAuBhBsB,WAAWnlE,EAAYwwB,GAC5B,OAAG/uB,KAAKiiE,UAAU1jE,KAAQwwB,EACjB/uB,KAAKiiE,UAAU1jE,GAGjByB,KAAKqU,WAAW6mB,uBAAuB,CAC5CpxB,OAAQ,oBACR4K,OAAQ,CACNnW,GAAIyB,KAAKyc,gBAAgB4Y,aAAa92B,IAExC48B,cAAgBwoC,IACd3jE,KAAKud,gBAAgBiI,aAAam+C,EAAcl+C,OAAO,GACvDzlB,KAAKyc,gBAAgB8I,aAAao+C,EAAc3qD,OAEhD,MAAMkyC,EAAWyY,EAAcC,UACzBxsD,EAAS7Y,EAAGkI,UAAS,GAmB3B,OAlBGykD,EAAS2Y,gBACV3Y,EAAS2Y,cAAgB7jE,KAAK+zC,iBAAiBC,UAAUkX,EAAS2Y,cAAe,CAACpkE,KAAM,eAAgB2X,OAAAA,KAG1GpX,KAAKogB,wBAAwBwH,iBAAiB,CAC5CxQ,OAAAA,EACAtQ,SAAUokD,EAASrjC,kBAGrB7nB,KAAKiiE,UAAU1jE,GAAM2sD,EAQrBlrD,KAAKwc,UAAU7V,cAAc,mBAAoBpI,GAC1C2sD,KAKN4Y,mBAAmB1sD,EAAgB2X,GACxC,OAAG/uB,KAAK4c,gBAAgByH,UAAUjN,GAAgBpX,KAAKuiE,YAAYnrD,EAAOgM,WAAY2L,GAC1E/uB,KAAK0jE,WAAWtsD,EAAO4T,WAAY+D,GAG1C07B,kBAAkBpxC,GACvB,OAAOrZ,KAAKkiE,UAAU7oD,GAGjB8xC,kBAAkB3yC,GACvB,OAAOxY,KAAKiiE,UAAUzpD,GAGjBurD,yBAAyB3sD,GAC9B,OAAOA,EAAOka,SAAWtxB,KAAKmrD,kBAAkB/zC,EAAO4T,YAAchrB,KAAKyqD,kBAAkBrzC,EAAOgM,YAGxF4gD,aAAa5sD,G,0CACxB,MAAM6sD,QAAgBjkE,KAAK8jE,mBAAmB1sD,GAC9C,OAAO6sD,EAAQ3lE,GACb,IAAK,WACH,OAAO2lE,EAAQJ,cACjB,IAAK,cACL,IAAK,WACH,OAAOI,EAAQV,eA4BdhB,YAAYhkE,EAAYwwB,GAC7B,GAAG/uB,KAAKud,gBAAgB4F,UAAU5kB,GAChC,OAAOyB,KAAKkkE,eAAe3lE,EAAIwwB,GAGjC,MAAMo0C,EAAWnjE,KAAKkiE,UAAU3jE,GAChC,GAAG4kE,IAAap0C,EAAU,CACxB,MAAMzR,EAAOtd,KAAKud,gBAAgBC,QAAQjf,GAC1C,GAAG+e,EAAK1hB,UAAaunE,EAASj0B,aAAmDtzC,SAC/E0hB,EAAKze,OAAO8G,KACZ,OAAOw9D,EAIX,OAAOnjE,KAAKqU,WAAW6mB,uBAAuB,CAC5CpxB,OAAQ,uBACR4K,OAAQ,CACN0E,QAAS7a,GAEX48B,cAAgB/4B,IACdpC,KAAKud,gBAAgBiI,aAAapjB,EAAOqjB,OAAO,GAChDzlB,KAAKyc,gBAAgB8I,aAAanjB,EAAO4W,OACzC,MAAM2pD,EAAWvgE,EAAO+hE,UAClB/sD,EAAS7Y,EAAGkI,UAAS,GAkB3B,OAjBGk8D,GAAYA,EAASY,YAAcZ,EAASY,WAAWhlE,KACxDokE,EAASY,WAAavjE,KAAK+zC,iBAAiBC,UAAU2uB,EAASY,WAAY,CAAC9jE,KAAM,eAAgB2X,OAAAA,KAGjGurD,EAASruC,MACVt0B,KAAKgyD,qBAAqB3iB,cAAcszB,EAASruC,KAAM/1B,GAIzDyB,KAAKogB,wBAAwBwH,iBAAiB,CAC5CxQ,OAAAA,EACAtQ,SAAU67D,EAAS96C,kBAGrB7nB,KAAKkiE,UAAU3jE,GAAMokE,EACrB3iE,KAAKwc,UAAU7V,cAAc,mBAAoBpI,GAE1CokE,KAKAyB,kBAAkB7lE,EAAY0tC,G,0CACzC,MAAM02B,QAAiB3iE,KAAKuiE,YAAYhkE,GACxC,OAAI0tC,GACF02B,EAAS0B,iBACqB,sBAA9B1B,EAAS0B,gBAAgB/lE,EAClBqkE,EAAS0B,gBAAgBC,KAG3BtkE,KAAKqU,WAAWC,UAAU,4BAA6B,CAC5DgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBntB,EAAGkI,UAAS,MACvDzB,MAAMu/D,SACmB54D,IAAvB3L,KAAKkiE,UAAU3jE,KAChByB,KAAKkiE,UAAU3jE,GAAI8lE,gBAAkBE,GAG/BA,EAAyDD,WAI9DE,uBAAuBjmE,EAAYE,EAAoC,CAACH,EAAG,6BAA8B6pB,EAAQ,IAAKa,EAAS,GACpI,GAAgB,8BAAbvqB,EAAOH,EAAmC,CAC3C,MAAMgf,EAAOtd,KAAKud,gBAAgBC,QAAQjf,GAC1C,GAAG+e,GACCA,EAAKze,QAEHye,EAAKze,OAAO4lE,YAAcnnD,EAAKze,OAAOq3D,UAAY54C,EAAKuuC,aAE3D,OAAOlqD,QAAQC,SAInB,OAAO5B,KAAKqU,WAAWonB,mBAAmB,2BAA4B,CACpEpY,QAASrjB,KAAKud,gBAAgBwT,gBAAgBxyB,GAC9CE,OAAAA,EACAuqB,OAAAA,EACAb,MAAAA,EACAmT,KAAM,KACL,CAACI,aAAc,KAAK12B,MAAM5C,IAC3BpC,KAAKyc,gBAAgB8I,aAAcnjB,EAAmE4W,OAC/F5W,KA6BJsiE,sBAAsBnmE,EAAY6Y,GACvC,OAAOpX,KAAKqU,WAAWwY,gBAAgB,0BAA2B,CAChExJ,QAASrjB,KAAKud,gBAAgBwT,gBAAgBxyB,GAC9Cm7B,YAAa15B,KAAK4c,gBAAgB8O,iBAAiBtU,KAClDpS,MAAM2/D,IACP3kE,KAAKyc,gBAAgB8I,aAAao/C,EAAmB3rD,OAC9C2rD,EAAmBjrC,eAIvBwqC,eAAe3lE,EAAYwwB,GAChC,YAA0BpjB,IAAvB3L,KAAKkiE,UAAU3jE,IAAsBwwB,EAIjC/uB,KAAKqU,WAAW6mB,uBAAuB,CAC5CpxB,OAAQ,0BACR4K,OAAQ,CACN2O,QAASrjB,KAAKud,gBAAgBwT,gBAAgBxyB,IAEhD48B,cAAgB/4B,IACd,MAAMgV,EAAS7Y,EAAGkI,UAAS,GAC3BzG,KAAKud,gBAAgBiI,aAAapjB,EAAOqjB,OAAO,GAChDzlB,KAAKyc,gBAAgB8I,aAAanjB,EAAO4W,OACzC,MAAM4rD,EAAcxiE,EAAO+hE,UAkB3B,OAjBGS,GAAeA,EAAYrB,WAAWhlE,KACvCqmE,EAAYrB,WAAavjE,KAAK+zC,iBAAiBC,UAAU4wB,EAAYrB,WAAY,CAAC9jE,KAAM,eAAgB2X,OAAAA,KAIvGwtD,EAAYtwC,MACbt0B,KAAKgyD,qBAAqB3iB,cAAcu1B,EAAYtwC,KAAM/1B,GAG5DyB,KAAKogB,wBAAwBwH,iBAAiB,CAC5CxQ,OAAAA,EACAtQ,SAAU89D,EAAY/8C,kBAGxB7nB,KAAKkiE,UAAU3jE,GAAMqmE,EACrB5kE,KAAKwc,UAAU7V,cAAc,mBAAoBpI,GAE1CqmE,GAETC,aAAetlE,IACb,GACO,oBADAA,EAAME,KACX,CACE,MAAM4jB,EAAgDrjB,KAAKud,gBAAgBC,QAAQjf,GACnFyB,KAAK0d,kBAAkBwQ,qBAAqB,CAC1C5vB,EAAG,UACHynB,QAAS,CAAC,CACRznB,EAAG,gBACH6a,WAAY5a,IAEdknB,MAAO,CAAC,CACNnnB,EAAG,mBACHC,GAAAA,EACAo2B,YAAatR,EAAQsR,YACrBkC,MAAOxT,EAAQwT,MACfh4B,OAAQwkB,EAAQxkB,SAElBma,MAAO,KAKb,MAAMzZ,KAtDDS,KAAKkiE,UAAU3jE,GA2DnBumE,YAAYzrD,EAAgBwB,EAAe6wB,GAChD,MAAMq5B,EAAkB3wB,IACmB,MAApBv5B,EAAMrd,OAAO,KACjBqd,EAAQA,EAAMlT,MAAM,IAKrC,MAAMxG,EAAQ,IAAI,KAAoB,CACpC/D,YAAY,IAGR4nE,EAAiC,IAAIx8D,IAC3C4rC,EAASlxC,SAASoY,IAChBna,EAAM2b,YAAYxB,EAAK/c,GAAIyB,KAAKyc,gBAAgB4iD,kBAAkB/jD,EAAK/c,KACvEymE,EAAU78D,IAAImT,EAAK/c,GAAI+c,EAAKi5B,WAG9B,MAAMx8B,EAAUjX,MAAMC,KAAKI,EAAMhF,OAAO0e,IAExC,OADA9C,EAAQ8Q,MAAK,CAACqD,EAAGC,IAAM64C,EAAUtgE,IAAIynB,GAAK64C,EAAUtgE,IAAIwnB,KACjDnU,GAGT,IAAInN,EAiBJ,OAfEA,EADC5K,KAAKud,gBAAgB4F,UAAU9J,GACtBrZ,KAAKwkE,uBAAuBnrD,EAAQ,CAC5C/a,EAAG,8BACH+mC,EAAGxqB,EACH6hC,YAAY,EAAAn+B,GAAA,GAAmBmtB,IAC9B,GAAI,GAAG1mC,MAAMigE,GACPA,EAAG/1B,aAAa9qC,KAAKiwB,IAAM,EAAAsF,GAAA,GAAqBtF,OAEjDhb,EACE1X,QAAQM,QAAQjC,KAAKuiE,YAAYlpD,IAASrU,MAAM29D,GAC/CA,EAA+BzzB,aAAmDA,aAAa9qC,KAAKiwB,GAAMA,EAAEhc,QAAQ5R,eAGrH9E,QAAQM,QAAQ,IAGrBN,QAAQmR,IAAI,CAEjB9S,KAAKyc,gBAAgB03B,YAAY,eAAeprC,OAAM,IAAM,KAC5D6B,IACC5F,MAAMK,IACP,MAAMinB,EAAQjnB,EAAQ,GAAGnB,OAAOmB,EAAQ,GAAGjB,KAAKgT,IAAW,CAAE7Y,GAAI6Y,EAAQm9B,OAAQ,OAEjF,OAAOwwB,EAAez4C,MAIlBm3C,8BAA8BllE,GACpCyB,KAAKqU,WAAW8hB,WAAW,4BAA6BzhB,GAAYA,EAAO2O,QAAsClK,aAAe5a,IAChIyB,KAAKwjE,gBAAgBjlE,EAAGkI,UAAS,IAG3B+8D,gBAAgBpsD,GACtB,GAAGA,EAAOka,SAAU,CAClB,MAAM9Y,EAASpB,EAAO4T,kBACfhrB,KAAKiiE,UAAUzpD,GACtBxY,KAAKwc,UAAU7V,cAAc,mBAAoB6R,OAC5C,CACL,MAAMa,EAASjC,EAAOgM,kBACfpjB,KAAKkiE,UAAU7oD,GACtBrZ,KAAKwc,UAAU7V,cAAc,mBAAoB0S,IAQ9C6rD,cAAc3uB,EAAqBC,EAAoBhd,GAC5D,OAAOx5B,KAAKqU,WAAWC,UAAU,wBAAyB,CACxDiiC,WAAAA,EACAC,UAAAA,EACAhd,MAAAA,IACCx0B,MAAM4Q,IAGP,GAFA5V,KAAKyc,gBAAgB0oD,YAAYvvD,QAEpBjK,IAAV6tB,EAAqB,CACtB,MAAMpiB,EAASxB,EAAKrX,GAAGkI,WACjBykD,EAAWlrD,KAAKiiE,UAAUrsD,EAAKrX,IAClC2sD,IACDA,EAAS1xB,MAAQA,GAGnBx5B,KAAKwc,UAAU7V,cAAc,gBAAiByQ,GAGhD,OAAOpX,KAAK0jE,WAAW1jE,KAAK4c,gBAAgBxF,QAAQ,MAIjDguD,mBAAmBjsC,GACxB,OAAOn5B,KAAKqU,WAAWC,UAAU,4BAA6B,CAC5D+kB,KAAMF,IACLn0B,MAAMqgE,IAEP,MAAMpyC,EAAQoyC,EAAapyC,MAC3B,IAAIoyC,EAAarsD,MAAM5a,OAAQ,CAC7B,MAAMknE,EAAgBryC,EAAM+zB,MAAMzjD,MAAMuQ,GAAoB,sBAAXA,EAAKxV,IACtD+mE,EAAarsD,MAAM1Y,KAAK,OAAD,wBAClBN,KAAKyc,gBAAgBC,WAAS,CACjCuW,MAAO,CACL30B,EAAG,mBACH80B,MAAOH,EAAMG,MACbx0B,SAAUq0B,EAAM10B,GAChBgnE,eAAgBD,MAAAA,OAAa,EAAbA,EAAev3D,MAC/BlP,OAAQ,OAMdmB,KAAKyc,gBAAgB8I,aAAa8/C,EAAarsD,OAE/C,MAAM3S,EAAOrG,KAAK4c,gBAAgBxF,OAClCpX,KAAK+zC,iBAAiBC,UAAUqxB,EAAapyC,MAAO,CAClDxzB,KAAM,eACN2X,OAAQ/Q,IAGV,MAAMmS,EAASnS,EAAK2kB,WACpBhrB,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,kBACH+Z,QAASG,EACT4I,MAAM,EAAAE,GAAA,IAAM,GACZ2R,MAAOjzB,KAAKyc,gBAAgBo4B,QAAQr8B,GAAQya,MAC5CuyC,UAAU,OAKTC,aAAa3F,GAClB,OAAO9/D,KAAKqU,WAAWwY,gBAAgB,sBAAuB,CAC5DtuB,GAAIuhE,EAAS17D,KAAK27D,GAETrtB,GADO1yC,KAAK+zC,iBAAiB4V,SAASoW,QAG9C/6D,MAAM0gE,QAKHC,gCAAgCjsC,GACtC,MAAM9jB,EAAO5V,KAAKyc,gBAAgBo4B,QAAQnb,EAAYrhB,SACtD,SAAUzC,IAAQA,EAAKlP,QAA4B,qBAAlBkP,EAAKlP,OAAOpI,GAGvCsnE,iCAAiC12B,GACvC,OAAOA,EAAaV,QAAO,CAACC,EAAK/U,IACxB+U,IAAOzuC,KAAK2lE,gCAAgCjsC,IAClD,GAGQmsC,WAAWtnE,G,gDAEtB,GAAGyB,KAAKud,gBAAgBsN,YAAYtsB,GAClC,OAFgB,EAKlB,MAAMunE,QAAiB9lE,KAAKuiE,YAAYhkE,GACxC,GAAGyB,KAAKud,gBAAgB8Z,YAAY94B,GAAK,CACvC,GAAIunE,EAAkCpvC,oBAAsB,IAAK,CAC/D,MAAMqvC,QAA4B/lE,KAAKwkE,uBAAuBjmE,EAAI,CAACD,EAAG,6BAA8B,KACpG,OAAO0B,KAAK4lE,iCAAiCG,EAAoB72B,cAGnE,MAAM/c,QAAYnyB,KAAKqU,WAAWonB,mBAAmB,sBAAuB,CAC1EngB,KAAMtb,KAAKud,gBAAgBma,oBAAoBn5B,IAC9C,CAACm9B,aAAc,KAGlB,OAD2B,QAAX,EAAAvJ,EAAI6zC,eAAO,QAhBX,EAoBlB,MAAMnD,EAAiBiD,EAA+B52B,aACtD,OAAG2zB,MAAAA,OAAa,EAAbA,EAAe3zB,cACTlvC,KAAK4lE,iCAAiC/C,EAAc3zB,cAtB3C,KAwHb+2B,eAAe7uD,GACpB,OAAOpX,KAAKoiE,cAAchrD,I,eCpsBf,SAAS8uD,GACtBpvD,EACAlS,GAEA,OAAGkS,EAAO+iD,MAAMt1D,GAAUA,aAAiB5C,UAClCA,QAAQmR,IAAIgE,GAAQ9R,KAAKJ,GAEzBA,EAASkS,G,2SCEpB,MAAMqvD,GAAgB,CACpB,cACA,mBACA,mBACA,qBACA,mBACA,mBACA,eAGIC,GAAsC,CAC1C3mE,KAAM,aAGD,MAAM4mE,WAA4BlzD,EAK7BoJ,QACRvc,KAAKwc,UAAUhW,iBAAiB,mBAAmB,KACjDxG,KAAKsmE,wBAAqB36D,EAC1B3L,KAAKumE,2BAGPvmE,KAAKwmE,qBAAuB,IAAIh+D,IAChCxI,KAAKymE,iBAAmB,IAAIj+D,IAE5BxI,KAAKwc,UAAUhW,iBAAiB,aAAa,KAC3CzE,YAAW,KACTJ,QAAQM,QAAQjC,KAAKumE,yBAAyBvhE,MAAWshE,GAAuB,mCAC9E,IAAI,MAAMI,KAAqBJ,QACvB3kE,QAAQmR,IAAI,CAChB4zD,EAAkBC,kBAAoB3mE,KAAKszB,eAAesW,cAAc,CAACzxB,MAAOuuD,EAAkBC,mBAClGD,EAAkBE,aAAe5mE,KAAKszB,eAAesW,cAAc,CAACzxB,MAAOuuD,EAAkBE,cAC7FF,EAAkBG,kBAAoB7mE,KAAKszB,eAAesW,cAAc,CAACzxB,MAAOuuD,EAAkBG,mBAClGH,EAAkBI,aAAe9mE,KAAKszB,eAAesW,cAAc,CAACzxB,MAAOuuD,EAAkBI,uBAIlG,SAIAP,wBACL,OAAGvmE,KAAKsmE,mBAA2BtmE,KAAKsmE,mBACjCtmE,KAAKqU,WAAW6mB,uBAAuB,CAC5CpxB,OAAQ,iCACRqxB,cAAgB4rC,KACd,EAAAh6C,GAAA,GAAkEg6C,GAElE,MAAMT,EAAqBtmE,KAAKsmE,mBAAqBS,EAA2BnsC,UAChF,IAAI,MAAMjiB,KAAY2tD,EACpB,IAAI,MAAMj/D,KAAO8+D,GACXxtD,EAAStR,KAIbsR,EAAStR,GAAOrH,KAAK8zC,eAAe1M,QAAQzuB,EAAStR,GAAM++D,KAI/D,OAAOE,GAET5xD,OAAQ,CACN4mB,KAAM,KAKL0rC,8BACL,OAAO,EAAAC,EAAA,GAAYjnE,KAAKumE,yBAA0BD,GACzCA,EAAmB7nE,QAAQioE,IAAuBA,EAAkB7nE,OAAOqoE,aAI/EC,6BAA6B/vD,GAClC,MAAMgwD,EAA2BpnE,KAAKgnE,8BACtC,OAAG5vD,EAAOka,SACDtxB,KAAKqnE,qBAAqBD,GAI5BlB,GAAe,CAACkB,EADNpnE,KAAKwqD,kBAAkB+X,YAAYnrD,EAAOgM,YACApjB,KAAKsnE,qBAAqB,EAAEF,EAA0BzE,EAAU4E,M,MACzH,MAEMC,GAFqD,QAA5B,EAAA7E,EAAS9nC,2BAAmB,QAAI,IAEDz2B,KAAKuU,GAC1DyuD,EAAyB7jE,MAAMmjE,GAAsBA,EAAkB/tD,WAAaA,MAC1Fla,OAAOC,SAEV,OAAOsB,KAAKynE,0BAA0BD,EAAgCD,MAIlEE,0BAA0BnB,EAA2DiB,GAC3F,MAAMb,GAAoB,EAAAgB,GAAA,GAAcpB,GAAoBI,GAAqBA,EAAkB/tD,WAAa4uD,EAAc5uD,WAK9H,OAJG+tD,GACDJ,EAAmB7+C,QAAQi/C,GAGtBJ,EAGDe,qBACNf,EACAiB,EAAqEvnE,KAAKsnE,oBAE1E,OAAOpB,GAAe,CACpBI,EACAiB,IACC,EAAEjB,EAAoBiB,KAChBvnE,KAAKynE,0BAA0BnB,EAAoBiB,KAIvDI,+BAA+B9lE,G,MACpC,IAAIA,EAAS,MAAO,GACpB,MAAMuV,GAA0B,QAAhB,EAAAvV,EAAQ8sB,gBAAQ,eAAE08B,eAAgBrrD,KAAK4c,gBAAgBya,YAAYx1B,EAAQuV,SAAWvV,EAAQqW,WAAcrW,EAAQuV,OACpI,OAAOpX,KAAKmnE,6BAA6B/vD,GAGpCwwD,iBAAiBjvD,GACtB,QAAI3Y,KAAKsmE,sBACAtmE,KAAKsmE,mBAAmB/iE,MAAMmjE,GAAsBA,EAAkB/tD,WAAaA,IAGvF2uD,mBACL,OAAOpB,GAAe,CACpBlmE,KAAKqU,WAAWy+C,eAChB9yD,KAAKumE,0BACJ,EAAE1T,EAAWyT,KACPA,EAAmB/iE,MAAMoV,GAAaA,EAASA,WAAak6C,EAAUgV,sBAI1EC,kBAAkBnvD,GACvB,OAAO3Y,KAAKsmE,mBAAmB/iE,MAAMmjE,GAAsBA,EAAkB/tD,WAAaA,IAGrFovD,YAAYpvD,GACjB,OAAO,EAAAsuD,EAAA,GAAYjnE,KAAKumE,yBAAyB,IACxCvmE,KAAK8nE,kBAAkBnvD,KAI3BqvD,qBAAqB5wD,EAAgB8nC,GAC1C,OAAOl/C,KAAKqU,WAAW6mB,uBAAuB,CAC5CpxB,OAAQ,gCACR4K,OAAQ,CACNnW,GAAI2gD,EAAK96C,KAAK4f,IAAQ,EAAAzF,GAAA,GAAmByF,KACzC1I,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,IAE9C+jB,cAAgBpV,IACd/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAQ3C0zC,wBAAwBriD,EAAgB4M,EAAamE,EAAexP,EAAmBqQ,GAC5F,OAAOhpB,KAAKqU,WAAW6mB,uBAAuB,CAC5CpxB,OAAQ,mCACR4K,OAAQ,CACN4G,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C7Y,IAAI,EAAAggB,GAAA,GAAmByF,GACvBmE,MAAAA,EACAxP,SAAAA,EACAqQ,OAAAA,GAEFmS,cAAgBu+B,IACd15D,KAAKyc,gBAAgB8I,aAAam0C,EAAqB1gD,OAChD0gD,KAKNuO,mBAAmBtvD,GACxB,OAAO3Y,KAAKqU,WAAWC,UAAU,8BAA+B,CAACqE,SAAAA,IAAW3T,MAAWT,GAAU,mCAC/F,GAAGA,EAAO,CACR,MAAMsuD,QAAkB7yD,KAAKqU,WAAWy+C,eACrCD,IACDA,EAAUgV,kBAAoBlvD,GAKhC3Y,KAAKwc,UAAU7V,cAAc,iBAAkBgS,GAGjD,OAAOpU,OAIJ2jE,aAAarmE,EAA0B8W,EAAmB1Q,GAC/D,MAAMkgE,EAAqBtmE,EAAQuV,OAAS,IAAMvV,EAAQmiB,IAE1D,GADwBhkB,KAAKymE,iBAAiB/hE,IAAIyjE,GAEhD,OAEAnoE,KAAKymE,iBAAiBt+D,IAAIggE,EAAoB74D,KAAKvK,OACnDhD,YAAW,KACT/B,KAAKymE,iBAAiB1iE,OAAOokE,KAC5B,KAGL,MAAM,OAAC/wD,EAAM,IAAE4M,GAAOniB,EAChBuwD,EAAWpyD,KAAK4c,gBAAgBxF,OAEtC,IAAIwjB,EAAY3yB,EAAYpG,EAAQ+4B,WAAY,EAAA5Q,GAAA,GAAKnoB,EAAQ+4B,WACzDwtC,EAAoBxtC,EAAYA,EAAUv1B,QAAQya,WAAWyhC,GAAkBA,EAAc1iD,OAAO6iD,UAAW,EAC/G2mB,GAAwC,IAAvBD,GAA4BxtC,EAAUv1B,QAAQ+iE,GAwBnE,GAvBGC,MACCA,EAAevtD,aACVutD,EAAexpE,OAAO6iD,OAE1B/oC,IAAa0vD,EAAe1vD,WAC7BA,OAAWhN,GAGT08D,EAAevtD,OACjB8f,EAAUv1B,QAAQ0F,OAAOq9D,EAAmB,GAK3CxtC,EAAUliB,mBACX,EAAAgvD,GAAA,GAAc9sC,EAAUliB,kBAAmBukC,IAAmB,EAAArkC,GAAA,GAAUqkC,EAAepkC,WAAau5C,IAGlGx3B,EAAUv1B,QAAQjH,SACpBw8B,OAAYjvB,IAIbgN,EAAU,CACPiiB,IACFA,EAAsC,CACpCt8B,EAAG,mBACH+G,QAAS,GACTxG,OAAQ,IAGNmB,KAAK4c,gBAAgBiO,YAAYhpB,EAAQuV,UAC3CwjB,EAAU/7B,OAAOypE,cAAe,IAIpC,IAAIC,EAAmB3tC,EAAUv1B,QAAQya,WAAWyhC,GAAkBA,EAAc5oC,WAAaA,IAC7F4oC,GAAsC,IAAtBgnB,GAA2B3tC,EAAUv1B,QAAQkjE,GAmBjE,GAlBIhnB,IACFA,EAAgB,CACdjjD,EAAG,gBACHwc,MAAO,EACPnC,SAAAA,EACA9Z,OAAQ,IAGV0pE,EAAmB3tC,EAAUv1B,QAAQ/E,KAAKihD,GAAiB,KAG3DA,EAAczmC,MAChBymC,EAAc1iD,OAAO6iD,QAAS,GAE1B9mB,EAAUliB,kBAAoBkiB,EAAU/7B,OAAOypE,eACjD1tC,EAAUliB,iBAAmB,IAG5BkiB,EAAUliB,iBAAkB,CAC7B,MAAM8vD,EAAoC,CACxClqE,EAAG,sBACHqa,SAAAA,EACAE,QAAS7Y,KAAK4c,gBAAgB2J,cAAc6rC,IAG1CpyD,KAAK4c,gBAAgBya,YAAYjgB,IAInCwjB,EAAUliB,iBAAiB+O,QAAQ+gD,GACnC5tC,EAAUliB,iBAAmBkiB,EAAUliB,iBAAiB/Q,MAAM,EAAG,KAJjEizB,EAAUliB,iBAAiBpY,KAAKkoE,GAChC5tC,EAAUliB,iBAAmBkiB,EAAUliB,iBAAiB/Q,OAAO,KAUrE,MAAM2+D,EAAqBtmE,KAAKsmE,mBAChC,GAAG1rC,IAAa0rC,MAAAA,OAAkB,EAAlBA,EAAoBloE,QAAQ,CAC1C,MAAM8C,EAA+B,IAAIsH,IACzC89D,EAAmBpjE,SAAQ,CAACwjE,EAAmBliE,KAC7CtD,EAAQiH,IAAIu+D,EAAkB/tD,SAAUnU,MAG1Co2B,EAAUv1B,QAAQwjB,MAAK,CAACqD,EAAGC,IACjBA,EAAErR,MAAQoR,EAAEpR,OAAW5Z,EAAQwD,IAAIwnB,EAAEvT,UAAYzX,EAAQwD,IAAIynB,EAAExT,YAI3E,GAAG1Q,EAGD,OAFApG,EAAQ+4B,UAAYA,EACpB56B,KAAKwc,UAAU7V,cAAc,qBAAsB,CAAC,CAAC9E,QAAAA,EAASy/C,eAAgB,MACvE3/C,QAAQM,UAGjBjC,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,yBACHgd,KAAMzZ,EAAQgX,QACds8B,OAAQtzC,EAAQtD,GAChBq8B,UAAWA,EACXiD,OAAO,IAGT,MAAM4qC,EAAa,CAACrxD,EAAQ4M,GAAKrlB,KAAK,KAChCuyD,GAAQ,EAAA3yC,GAAA,GAAmByF,GAC3BpZ,EAAU5K,KAAKqU,WAAWC,UAAU,wBAAyB,CACjEgH,KAAMtb,KAAK4c,gBAAgB8O,iBAAiBtU,GAC5C+9B,OAAQ+b,EACRv4C,SAAAA,IACC3T,MAAM+gB,KACP,EAAAgH,GAAA,GAA4BhH,GAE5B,MAAM2iD,EAAuB3iD,EAAQA,QAAQjG,WAAW5E,GAAwB,sBAAbA,EAAO5c,GAA0C,6BAAb4c,EAAO5c,IAC9G,IAA6B,IAA1BoqE,EAA6B,CAC9B,MAAMC,EAAoB5iD,EAAQA,QAAQ2iD,GAC1C3iD,EAAQA,QAAQ2iD,GAAwB,CACtCpqE,EAAG,yBACH62C,OAAQ+b,EACR51C,KAAMtb,KAAK4c,gBAAgB2J,cAAcnP,GACzCwjB,UAAY+tC,EAAkB9mE,QAA4B+4B,UAC1DnX,IAAKklD,EAAkBllD,IACvBqL,UAAW65C,EAAkB75C,WAIjC9uB,KAAK0d,kBAAkBwQ,qBAAqBnI,MAC3Chd,OAAOwB,IACQ,qBAAbA,EAAI9K,MAA+BO,KAAKwmE,qBAAqB9hE,IAAI+jE,KAAgB79D,GAClF5K,KAAKkoE,aAAarmE,EAASwmE,MAAAA,OAAc,EAAdA,EAAgB1vD,UAAU,MAEtD1P,SAAQ,KACNjJ,KAAKwmE,qBAAqB9hE,IAAI+jE,KAAgB79D,GAC/C5K,KAAKwmE,qBAAqBziE,OAAO0kE,MAKrC,OADAzoE,KAAKwmE,qBAAqBr+D,IAAIsgE,EAAY79D,GACnCA,G,2SCzVX,MAEMg+D,GAAqB,QACrBC,GAAgC,kBAChCC,GAAgB,IAAItyD,IAAI,CAC5BoyD,GACAC,KAYK,MAAME,WAA2B51D,EAAxC,c,oBACU,KAAAzP,QAAU,IAAI,IAAsE,IAAgB,eAYlG6Y,QACRvc,KAAKgpE,sBAAwB,GAC7BhpE,KAAKipE,+BAAiC,GACtCjpE,KAAKkpE,OAAS,GAEdlpE,KAAKwc,UAAUhW,iBAAiB,aAAa,KAC3CzE,YAAW,KACT/B,KAAKmpE,+BACJ,KAECnpE,KAAKopE,iCAAkEz9D,IAApC3L,KAAKqpE,6BAC1CrpE,KAAKqpE,2BAA6B15D,EAAA,cAAe,KAC/C3P,KAAKqpE,gCAA6B19D,EAClC3L,KAAKspE,oBAAmB,KACvB,SAIPtpE,KAAK0d,kBAAkBC,2BAA2B,CAChD4rD,oBAAsBruD,IACpB,MAAMsuD,EAAatuD,EAAOnc,WAC1BiB,KAAKypE,eAAeD,EAAYA,EAAWrhE,IAAI5J,IAC/CyB,KAAKwc,UAAU7V,cAAc,qBAAsB6iE,EAAWrhE,QAK7DmhE,mBAAmBI,GAAc,GActC,OAbG1pE,KAAKqpE,6BACNnkE,aAAalF,KAAKqpE,4BAClBrpE,KAAKqpE,gCAA6B19D,GAGhC3L,KAAKopE,6BACPppE,KAAKopE,2BAA6BppE,KAAK2pE,sBAAsB,QAAQ,GAAO3kE,MAAM4hC,IAChF,IAAIA,EAAKxoC,OAAQ,KAAM,cACvB4B,KAAK4pE,iBAAmBhjC,EAAKj/B,QAC7B3H,KAAK4pE,iBAAiB/gD,MAAK,CAACqD,EAAGC,IAAMhN,KAAK0qD,SAAW1qD,KAAK0qD,eAIvD7pE,KAAKopE,2BAA2BpkE,MAAK,KAC1C,IAAI6hC,EAQJ,OAPI6iC,IACF7iC,EAAM7mC,KAAK4pE,iBAAiB36D,QAC5BjP,KAAK4pE,iBAAiBtpE,KAAKumC,IAG7B7mC,KAAKszB,eAAesW,cAAc,CAACzxB,MAAOnY,KAAK4pE,iBAAiB,KAEzD/iC,KAIJijC,aAAaljC,IAClB,EAAAthB,GAAA,GAAeshB,GAAM,CAACC,EAAKriC,MACzBqiC,EAAM7mC,KAAK8zC,eAAe1M,QAAQP,IAG7BD,EAAKpiC,GAAOqiC,EADRD,EAAK77B,OAAOvG,EAAK,MAKjBulE,cAAc5hE,EAAwBuM,EAI9C,I,0CACH,MAAMnW,EAAK4J,EAAI5J,GACf,OAAGyB,KAAKgpE,sBAAsBzqE,GACrByB,KAAKgpE,sBAAsBzqE,GAG7ByB,KAAKgpE,sBAAsBzqE,GAAM,IAAIoD,SAAcM,GAAY,mC,MACpE,IAAIyS,EAAOkY,UAAW,CAEpB,MAAMo9C,QAAkBhqE,KAAK0D,QAAQgB,IAAInG,GACzC,GAAGyrE,IAAgC,QAAnB,EAAAA,EAAUC,iBAAS,eAAE7rE,UAAYkR,KAAKvK,MAAQilE,EAAUE,YA5G7D,MA4G0Fx1D,EAAOy1D,UAK1G,OAJAnqE,KAAK8pE,aAAaE,EAAUC,WAC5BhoE,EAAQ+nE,eACDhqE,KAAKgpE,sBAAsBzqE,GAMtC,IACE,MAAMirE,QAAmBxpE,KAAKqU,WAAWC,UAAU,yBAA0B,CAC3EvV,WAAYiB,KAAKoqE,mBAAmBjiE,GACpCmzB,KAAM,IAGF+uC,EAAW31D,EAAO21D,SAAW9rE,EAAKirE,EAAWrhE,IAAI5J,GACvDyB,KAAKypE,eAAeD,EAAYa,GAEhCpoE,EAAQunE,GACR,MAAMj/D,GACNtI,EAAQ,aAGHjC,KAAKgpE,sBAAsBzqE,WAI/B4qE,6BACL,OAAOxnE,QAAQmR,IAAI,CACjB9S,KAAK+pE,cAAc,CAACxrE,GAAIqqE,IAAqB,CAACyB,UAAU,IACxDrqE,KAAK+pE,cAAc,CAACxrE,GAAIsqE,IAAgC,CAACwB,UAAU,IACnErqE,KAAKuX,2BACJvS,MAAK,EAAE8pC,EAAOw7B,MACR,CAACx7B,MAAAA,EAAOw7B,WAAAA,MAIZ/yD,uBAAuBqV,GAC5B,GAAG5sB,KAAKuqE,gCAAkC39C,EAAW,OAAO5sB,KAAKuqE,8BACjE,MAAM3/D,EAAU5K,KAAKuqE,8BAAgC5oE,QAAQmR,IAAI,CAC/D9S,KAAKqU,WAAWy+C,aAAalmC,GAC7B5sB,KAAKqU,WAAWmX,cACfxmB,MAAK,EAAE6tD,EAAW/F,MACnB,GAAG9sD,KAAKuqE,gCAAkC3/D,EAI1C,IAAI,MAAMkkC,KAAS+jB,EAAU2X,eAAgB,CAC3C,MAAMC,EAAQ5X,EAAU2X,eAAe17B,GACjC47B,EAAWC,KAAqBF,EAAMG,sBC7KrCltE,QAAQ,KAAM,KAAKA,QAAQ,KAAM,MD8KlCqQ,EAAQ,IAAI3D,WAAWsgE,EAAStsE,QACtC,IAAI,IAAIyH,EAAI,EAAGzH,EAAS2P,EAAM3P,OAAQyH,EAAIzH,IAAUyH,EAClDkI,EAAMlI,GAAK6kE,EAAS7kE,GAAGglE,WAAW,GAQpC,MAAMhkC,EAAM7mC,KAAK8zC,eAAe1M,QAAQ,CACtC9oC,EAAG,WACHO,OAAQ,GACRitB,MAAO,EACPvtB,GAAIksE,EAAMlsE,GACVo2B,YAAa81C,EAAM91C,YACnB6S,WAAY,CAAC,CACXlpC,EAAG,yBACHk3B,SAAU,EACV32B,OAAQ,CACN+oC,OAAO,KAGXxmB,KAAM,EACNgS,MAAO05B,EAAOge,QACdxjC,eAAgBv5B,EAChB85B,UAAW,aAEV,CACDpoC,KAAM,kBAGRO,KAAKkpE,OAAOp6B,GAASjI,MAQzB,OAAOj8B,EAGImgE,oB,0CAaX,aAVkB/qE,KAAKqU,WAAWg2B,kBAAkB,CAClDvgC,OAAQ,6BACRqxB,cAAgBhJ,KACd,EAAApF,GAAA,GAA0DoF,GAE1DnyB,KAAK8pE,aAAa33C,EAAI64C,UACf74C,QAOL84C,WAAWn8B,GACjB,OAAOA,EAAMpxC,QAAQ,UAAW,IAAIA,QAAQ,kBAAmB,IAG1DwtE,wBAAwBp8B,EAAeq8B,GAC5C,MAAM5sE,EAAK4sE,EAActC,GAAgCD,GACnDY,EAAaxpE,KAAK0D,QAAQ4yB,aAAa/3B,GAE7C,IAAIirE,IAAeA,EAAWS,UAAW,OAEtCkB,GACE,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAM9gD,SAASykB,KAC3DA,EAAQ,MAIZA,EAAQ9uC,KAAKirE,WAAWn8B,GACxB,MAAMlB,EAAO47B,EAAW4B,MAAM7nE,MAAM8wB,GAAMA,EAAEp1B,WAAa6vC,IACzD,OAAOlB,EAAO5tC,KAAK8zC,eAAevK,OAAOqE,EAAKq8B,UAAU,SAAMt+D,EAGzD0/D,8BAA8Bv8B,GACnC,OAAO9uC,KAAKkpE,OAAOlpE,KAAKirE,WAAWn8B,IAG9Bw8B,4BAA4Bx8B,GACjC,MAAMy8B,EAAsBvrE,KAAKmpE,6BAA6BnkE,MAAK,IAC1DhF,KAAKkrE,wBAAwBp8B,KAGtC,OAAOntC,QAAQmR,IAAI,CACjBy4D,EACAvrE,KAAKwrE,qCAAqC18B,KACzC9pC,MAAK,EAAE6hC,EAAK3a,MACN,CACL2a,IAAKA,EACL4kC,UAAWv/C,MAAAA,OAAC,EAADA,EAAG2a,IACd4jC,MAAOv+C,MAAAA,OAAC,EAADA,EAAGu+C,UAKTe,qCAAqC18B,GAC1C,OAAO9uC,KAAKmpE,6BAA6BnkE,MAAK,IACrChF,KAAKkrE,wBAAwBp8B,GAAO,KAC1C9pC,MAAM6hC,IACP,IAAIA,EACF,OAGF,MAAM4jC,EAAQzqE,KAAKqrE,8BAA8Bv8B,GACjD,OAAOntC,QAAQmR,IAAI,CACjB9S,KAAKszB,eAAesW,cAAc,CAACzxB,MAAO0uB,IAC1C4jC,EAAQzqE,KAAKszB,eAAesW,cAAc,CAACzxB,MAAOsyD,SAAU9+D,IAC3D3G,MAAK,KACC,CAAC6hC,IAAAA,EAAK4jC,MAAAA,SAKZhB,eAAet3C,EAAuD5zB,GAG3E,MAAMmtE,EAA6B,CACjCptE,EAAG,sBACH6J,IAAKgqB,EAAIhqB,IACTijE,MAAOj5C,EAAIi5C,MACXnB,UAAW93C,EAAI83C,WAGjB,IAAIT,EAAaxpE,KAAK0D,QAAQ4yB,aAAa/3B,GACxCirE,EACD3tE,OAAOC,OAAO0tE,EAAYkC,GAE1BlC,EAAaxpE,KAAK0D,QAAQioE,WAAWptE,EAAImtE,GAG3C1rE,KAAK8pE,aAAa33C,EAAI83C,WAGtB,MAAM2B,EAAWpC,EAAWrhE,IAAI0jE,gBAAkB/C,GAAclgD,IAAIrqB,GACpEirE,EAAWU,YAAc56D,KAAKvK,MAC9B/E,KAAK0D,QAAQyE,IAAI,CAAC,CAAC5J,GAAKirE,IAAcoC,GAGjCE,kCAAkCtC,G,MACvC,MAAMpgC,EAAQogC,EAAWphC,OAAO7kC,MAAM6lC,GAAsB,cAAZA,EAAM9qC,IAChDoK,EAAO8gE,EAAWuC,YAElBC,EAA8B,QAAjB,EAAAxC,EAAW3qE,cAAM,eAAE2pC,SAQtC,MAAO,CAAC9/B,KAAAA,EAAMxK,SANwC,CACpDI,EAAG,uBACHS,WAAYiB,KAAKoqE,mBAAmBZ,GACpCtqE,cAAesqE,EAAWtqE,eAGG4U,KAAMs1B,EAAMt1B,KAAMm4D,SAAUD,EAAa,0BAA4B,cAsB/F5B,mBAAmBjiE,GACxB,OAAGA,EAAI5J,KAAOqqE,GACL,CACLtqE,EAAG,gCAEG6J,EAAI5J,KAAOsqE,GACZ,CACLvqE,EAAG,0CAEI6J,EAAIwsB,YAMN,CACLr2B,EAAG,oBACHC,GAAI4J,EAAI5J,GACRo2B,YAAaxsB,EAAIwsB,aARZ,CACLr2B,EAAG,2BACHU,WAAY,GAAKmJ,EAAI5J,IAWd2tE,sB,0CAoBX,aAnBkBlsE,KAAKqU,WAAWg2B,kBAAkB,CAClDvgC,OAAQ,+BACRqxB,cAAgBhJ,KACd,EAAApF,GAAA,GAA8DoF,IAE9D,EAAA7M,GAAA,GAAe6M,EAAIg6C,MAAM,CAACC,EAAS5nE,EAAKuH,KACnCqgE,EAAQjkE,IAAItJ,OAAOwtE,SAAWrmE,IAAiBuiC,mBAChDx8B,EAAIhB,OAAOvG,EAAK,MAIpB2tB,EAAIg6C,KAAKjpE,SAASkpE,IAChBpsE,KAAKypE,eAAe,CAACthE,IAAKikE,EAAQjkE,IAAK8hE,UAAW,GAAImB,MAAO,IAAKgB,EAAQjkE,IAAI5J,OAGzE4zB,MAIAg6C,QAGAG,iBAAiBnkE,G,0CAC5B,GAAGA,EAAI0jE,gBAKL,SAJkB7rE,KAAKqU,WAAWC,UAAU,+BAAgC,CAC1EvV,WAAYiB,KAAKoqE,mBAAmBjiE,KAOpC,cAHOA,EAAI0jE,eACX7rE,KAAKwc,UAAU7V,cAAc,mBAAoBwB,GACjDnI,KAAK0D,QAAQK,OAAOoE,EAAI5J,IAAI,IACrB,OAQT,SALkByB,KAAKqU,WAAWC,UAAU,6BAA8B,CACxEvV,WAAYiB,KAAKoqE,mBAAmBjiE,GACpCokE,UAAU,IAMV,OAFApkE,EAAI0jE,eAAiBv8D,KAAKvK,MAAQ,IAAO,EACzC/E,KAAKwc,UAAU7V,cAAc,qBAAsBwB,IAC5C,EAIX,OAAO,KAGIqkE,kBAAkB3xD,EAAe4xD,GAAkB,G,0CAC9D,MAAM3gD,EAAQ2gD,EAAkB,EAAI,EAC9Bt6C,QAAYnyB,KAAKqU,WAAWg2B,kBAAkB,CAClDvgC,OAAQ,6BACR4K,OAAQ,CACNoX,MAAAA,EACA4gD,iBAAkBD,QAAmB9gE,EACrC05B,EAAGxqB,GAELsgB,cAAgBhJ,KACd,EAAApF,GAAA,GAA8DoF,IAE9D,EAAA7M,GAAA,GAAe6M,EAAIg6C,MAAM,CAACC,EAAS5nE,EAAKuH,KACnCqgE,EAAQjkE,IAAItJ,OAAOwtE,SAAWrmE,IAAiBuiC,mBAChDx8B,EAAIhB,OAAOvG,EAAK,MAIpB2tB,EAAIg6C,KAAKjpE,SAASkpE,IAChBpsE,KAAKypE,eAAe,CAACthE,IAAKikE,EAAQjkE,IAAK8hE,UAAW,GAAImB,MAAO,IAAKgB,EAAQjkE,IAAI5J,OAGzE4zB,KAILw6C,EAAkC,GAClCC,EAAQ5sE,KAAK0D,QAAQua,WAC3B,IAAI,IAAI1f,KAAMquE,EAAO,CACnB,MAAM,IAACzkE,GAAOykE,EAAMruE,GAEjB4J,EAAI0uB,MAAMz6B,cAAciuB,SAASxP,EAAMze,iBAAmB+1B,EAAIg6C,KAAK5oE,MAAM0T,GAAMA,EAAE9O,IAAI5J,KAAO4J,EAAI5J,MACjGouE,EAAWrsE,KAAK,CAAChC,EAAG,oBAAqB6J,IAAAA,EAAK0kE,MAAO,OAIzD,OAAO16C,EAAIg6C,KAAKjoE,OAAOyoE,MAGlBG,iBACL,OAAO9sE,KAAKqU,WAAWg2B,kBAAkB,CACvCvgC,OAAQ,0BACRqxB,cAAgB4xC,KACd,EAAAhgD,GAAA,GAAoDggD,IAEpD,EAAAznD,GAAA,GAAeynD,EAAYZ,MAAM,CAAC3C,EAAYhlE,EAAKuH,KAC9Cy9D,EAAW3qE,OAAOwtE,SAAWrmE,IAAiBuiC,mBAC/Cx8B,EAAIhB,OAAOvG,EAAK,MAIbuoE,KAKNC,qBACL,OAAOhtE,KAAK8sE,iBAAiB9nE,MAAM+nE,GAC1BprE,QAAQmR,IAAKi6D,EAAwDZ,KAAK/nE,KAAK+D,GAAQnI,KAAK+pE,cAAc5hE,EAAK,CAACgiE,UAAU,SAK9HR,sBAAsB1qE,EAAkBguE,GAAqB,GAElE,OADAhuE,GAAW,EAAA8vC,GAAA,GAAS9vC,GACjBe,KAAKipE,+BAA+BhqE,GAAkBe,KAAKipE,+BAA+BhqE,GAEtFe,KAAKipE,+BAA+BhqE,GAAY0C,QAAQmR,IAAI,CACjE9S,KAAKqU,WAAWg2B,kBAAkB,CAChCvgC,OAAQ,uBACR4K,OAAQ,CACNzV,SAAAA,GAEFk8B,cAAgB6vC,GAAaA,IAE/BiC,EAAqBjtE,KAAKgtE,qBAAuB,GACjDC,EAAqBjtE,KAAK+qE,yBAAsBp/D,IAC/C3G,MAAK,EAAEkoE,EAAkBC,EAAeC,MACzC,MAAMC,EAAiBH,EAAuDlC,SAAS5mE,KAAKkkC,GAAYtoC,KAAK8zC,eAAe1M,QAAQkB,KAC9HglC,EAA8C,GAAIC,EAA4C,GAI9FC,EAAgBpC,IACpB,IAAI,MAAMx9B,KAAQw9B,EAEhB,IADqB,EAAAr8B,GAAA,GAASnB,EAAK3uC,UACnBorB,SAASprB,GACvB,IAAI,MAAMuqC,KAASoE,EAAKq8B,UAAW,CACjC,MAAMpjC,EAAM7mC,KAAK8zC,eAAevK,OAAOC,IACtC3C,EAAI2B,SAAW8kC,EAAyBC,GAAsBjtE,KAAKumC,KAM5E,GAAGumC,EAAgB,CACjBI,EAAaJ,EAAehC,OAC5B,MAAMJ,EAAWoC,EAAepC,SAChC,CAACsC,EAAwBC,GAAsBrqE,SAAS+qD,IACtDA,EAAEplC,MAAK,CAACqD,EAAGC,IAAM6+C,EAAS3uE,QAAQ6vB,GAAK8+C,EAAS3uE,QAAQ8vB,QAI5D,IAAI,MAAMhkB,KAAOglE,EACfK,EAAarlE,EAAIijE,OAenB,MAAMJ,EAAW,IAAI,IAAIx0D,IAAI82D,EAAuBppE,OAAOqpE,EAAsBF,KAQjF,OANA,EAAA/nD,GAAA,GAAe0lD,GAAU,CAAC1iC,EAAS9jC,EAAKuH,KACf,IAApBu8B,EAAQA,SAAkBtiC,IAAiBuiC,mBAC5Cx8B,EAAIhB,OAAOvG,EAAK,MAIbwmE,KAIJyC,kBAAkB5mC,GACvB,MAAM6mC,GAAc,EAAA3+B,GAAA,GAASlI,EAAIqB,iBACjC,IAAI,MAAMjpC,KAAYe,KAAKipE,+BACTjpE,KAAKipE,+BAA+BhqE,GAC5C+F,MAAMgmE,IACZ,MAAM2C,GAAO,EAAAjG,GAAA,GAAcsD,GAAU2C,GAAQA,EAAKpvE,KAAOsoC,EAAItoC,KAC1DovE,EACD3C,EAASvjD,QAAQkmD,GACT1uE,EAASorB,SAASqjD,IAC1B1C,EAASvjD,QAAQof,O,cE/iBZ,SAAS+mC,GAAc30C,GACpC,OAAOA,GAAYA,EAAS78B,eAAiB,G,eCqBxC,MAAMyxE,WAAwB16D,EAArC,c,oBA6JS,KAAA9O,MAAQ,CAACkI,GAAO,KACrB,GAAIA,EAgBFvM,KAAKgZ,MAAQ,GACbhZ,KAAK8tE,UAAY,QAhBjB,IAAI,MAAMt1D,KAAUxY,KAAKgZ,MAAO,CAE9B,IAAIR,EAAQ,SACZ,MAAMpB,EAASoB,EAAO/R,WACtB,IAAIzG,KAAKmkB,aAAa6R,aAAa5e,GAAS,CAC1C,MAAMxB,EAAO5V,KAAKgZ,MAAMR,GACrB5C,EAAKqjB,iBACCj5B,KAAK8tE,UAAUF,GAAch4D,EAAKqjB,WAG3Cj5B,KAAK0D,QAAQK,OAAOyU,UACbxY,KAAKgZ,MAAMR,IAQxBxY,KAAK+tE,oBAAsB,GAC3B/tE,KAAKguE,cAAgBhuE,KAAKiuE,oBAC1BjuE,KAAKkuE,yBAAsBviE,EAC3B3L,KAAKmuE,aAAe,IAAI33D,IACxBxW,KAAKouE,qBAAsB,GA6crB,KAAAC,oBAAsB,KAC5B,MAAMC,GAAe,EAAAhtD,GAAA,IAAM,GAC3B,IAAI,MAAMzb,KAAK7F,KAAKgZ,MAAO,CACzB,MAAMpD,EAAO5V,KAAKgZ,MAAMnT,GACxB7F,KAAKuuE,iBAAiB34D,EAAM04D,KA3nBtB/xD,QA6ER,OA5EAvc,KAAKqE,OAAM,GAEXmqE,YAAYxuE,KAAKquE,oBAAqB,KAEtCruE,KAAKwc,UAAUhW,iBAAiB,qBAAsBxG,KAAKquE,qBAE3DruE,KAAK0d,kBAAkBC,2BAA2B,CAChD4wD,iBAAmBrzD,IACjB,MAAM1C,EAAS0C,EAAO7C,QAChBzC,EAAO5V,KAAKgZ,MAAMR,GACrB5C,IACDA,EAAKlP,OAASwU,EAAOxU,OAClBkP,EAAKlP,SACH,YAAakP,EAAKlP,SACnBkP,EAAKlP,OAAO+nE,SAAWzuE,KAAKuhB,YAAYC,uBAGvC,eAAgB5L,EAAKlP,SACtBkP,EAAKlP,OAAOgoE,YAAc1uE,KAAKuhB,YAAYC,wBAK/CxhB,KAAKwc,UAAU7V,cAAc,cAAe6R,GAC5CxY,KAAK2uE,uBAAuB/4D,KAIhCg5D,gBAAkB1zD,I,QAChB,MAAM1C,EAAS0C,EAAO7C,QAChBzC,EAAO5V,KAAKgZ,MAAMR,GACxB,GAAG5C,EAAM,CACP,IAAoD,QAAjD,EAACA,EAAKqd,aAA2C,eAAEr0B,aAAgE,QAAlD,EAAAsc,EAAO+X,aAA2C,eAAEr0B,UACtH,OAGFoB,KAAKy8C,gBAAgBjkC,EAAQ0C,EAAOkG,MAEd,0BAAnBlG,EAAO+X,MAAM30B,SACPsX,EAAKqd,MAEZrd,EAAKqd,MAAQtb,GAAkB/B,EAAKqd,MAAO/X,EAAO+X,OAGpDjzB,KAAK2uE,uBAAuB/4D,GAE5B5V,KAAKwc,UAAU7V,cAAc,cAAe6R,GAC5CxY,KAAKwc,UAAU7V,cAAc,gBAAiB6R,EAAO/R,iBAChDnH,QAAQwD,KAAK,iBAAkB0V,IAGxCq2D,eAAiB3zD,IACf,MAAM1C,EAAS0C,EAAO7C,QAChBzC,EAAO5V,KAAKgZ,MAAMR,GACrB5C,IACD5V,KAAKy8C,gBAAgBjkC,GAErBxY,KAAKmlE,YAAY,OAAD,wBACXvvD,GAAI,CACP2gC,WAAYr7B,EAAOq7B,WACnBC,UAAWt7B,EAAOs7B,UAClBvd,SAAU/d,EAAO+d,YAChB,OASTj5B,KAAKwc,UAAUhW,iBAAiB,mBAAoBjE,IAClD,MAAMiW,EAASxY,KAAK0c,UAAUne,GAC9ByB,KAAKguE,cAAclxD,YAAYtE,EAAQxY,KAAKq/D,kBAAkB7mD,OAGzD7W,QAAQmR,IAAI,CACjB9S,KAAK+d,gBAAgB5W,WACrBnH,KAAKge,mBAAmB7J,YAAY,WACnCnP,MAAK,EAAEiC,GAAQ5B,QAAS2T,EAAOtV,QAAAA,OAGhC,GAFA1D,KAAK0D,QAAUA,EAEZsV,EAAM5a,OACP,IAAI,IAAIyH,EAAI,EAAGzH,EAAS4a,EAAM5a,OAAQyH,EAAIzH,IAAUyH,EAAG,CACrD,MAAM+P,EAAOoD,EAAMnT,GAChB+P,IACD5V,KAAKgZ,MAAMpD,EAAKrX,IAAMqX,EACtB5V,KAAK8uE,mBAAmBl5D,GAErB3O,EAAM8nE,yBAA2Bn5D,EAAK/W,OAAOmwE,SAAWp5D,EAAK/W,OAAOowE,kBACrEjvE,KAAKkvE,YAAYt5D,EAAKrX,IAElByB,KAAKkuE,sBACPluE,KAAKkuE,qBAAsB,SAC3BluE,KAAKkuE,oBAAoBjsE,QAAQjC,KAAKmuE,iBAmBhD,MAAMgB,EAAeloE,EAAMkoE,cAAgB,GAC3C,IAAI,IAAItpE,EAAI,EAAGzH,EAAS+wE,EAAa/wE,OAAQyH,EAAIzH,IAAUyH,EACzD7F,KAAKmkB,aAAaK,YAAY2qD,EAAatpE,GAAI,gBAGjD7F,KAAKmkB,aAAa3d,iBAAiB,cAAe4Q,IAChD,IAAIpX,KAAK4c,gBAAgB0U,OAAOla,GAC9B,OAGF,MAAMoB,EAASpB,EAAO4T,WAClBhrB,KAAK0D,QAAQ4yB,aAAa9d,IAC5BxY,KAAK0D,QAAQyE,IAAI,CACf,CAACqQ,GAASxY,KAAK60C,QAAQr8B,QAK7BxY,KAAKmkB,aAAa3d,iBAAiB,gBAAiB4Q,IAClD,IAAIpX,KAAK4c,gBAAgB0U,OAAOla,GAC9B,OAGF,MAAMoB,EAASpB,EAAO4T,WACnBhrB,KAAK0D,QAAQ4yB,aAAa9d,IAC3BxY,KAAK0D,QAAQK,OAAOyU,SAkCjBA,aACT,OAAOxY,KAAKwc,UAAUnW,KAAK2kB,WAGrBokD,mBAAmBC,GAItBA,GACDrvE,KAAK+d,gBAAgBhW,YAAY,0BAA0B,EAAAuZ,GAAA,IAAM,IAI9DguD,iBAAiBl4D,GACtB,OAAOpX,KAAK+d,gBAAgB5W,WAAWnC,MAAMiC,IAC3C,MAAMkoE,EAAeloE,EAAMkoE,cAAgB,GAC3C,GAAGA,EAAa,KAAO/3D,EAAQ,EAC7B,EAAAlO,EAAA,GAAiBimE,EAAc/3D,GAC/B+3D,EAAa1nD,QAAQrQ,GAClB+3D,EAAa/wE,OAAS,KACvB+wE,EAAa/wE,OAAS,IAGxB4B,KAAK+d,gBAAgBhW,YAAY,eAAgBonE,GACjD,IAAI,MAAM/3D,KAAU+3D,EAClBnvE,KAAKmkB,aAAaK,YAAYpN,EAAQ,oBAMvCm4D,oBACL,OAAOvvE,KAAK+d,gBAAgB5W,WAAWnC,MAAMiC,IAC3C,MAAMkoE,EAAeloE,EAAMkoE,cAAgB,GAC3C,IAAI,MAAM/3D,KAAU+3D,EAClBnvE,KAAKmkB,aAAagB,YAAY/N,EAAQ,gBAGxC+3D,EAAa/wE,OAAS,EACtB4B,KAAK+d,gBAAgBhW,YAAY,eAAgBonE,MAI9C7mD,e,MACL,GAAGtoB,KAAKkuE,qBAAuBluE,KAAKouE,oBAClC,MAAO,CACL7lD,OAAQvoB,KAAKkuE,oBAAoBx7D,YACjC9H,QAAS5K,KAAKkuE,qBAIlBluE,KAAKouE,qBAAsB,EAE3B,MAAMxjE,GAAU,SAqBhB,OApBA5K,KAAKqU,WAAWC,UAAU,wBAAwBtP,MAAM5C,IACtC,sBAAbA,EAAO9D,IACR0B,KAAKmuE,aAAa9pE,QAElBrE,KAAKulB,aAAanjB,EAAO4W,OAEzB5W,EAAOipB,SAASnoB,SAAS8rE,IACvBhvE,KAAKkvE,YAAYF,EAAQ32D,YAG3BrY,KAAKovE,oBAAmB,GAExBpvE,KAAKkuE,oBAAsBtjE,GAG7BA,EAAQ3I,QAAQjC,KAAKmuE,iBACpB,KACDnuE,KAAKouE,qBAAsB,KAGtB,CACL7lD,OAAgC,QAAxB,EAAAvoB,KAAKkuE,2BAAmB,eAAEx7D,YAClC9H,QAAS5K,KAAKkuE,sBAAwBluE,KAAKkuE,oBAAsBtjE,IAI9D4kE,gBAAgBv2C,GACF,MAAhBA,EAAS,KACVA,EAAWA,EAAStxB,MAAM,IAG5BsxB,EAAWA,EAAS78B,cACpB,MAAMoc,EAASxY,KAAK8tE,UAAU70C,GAC9B,OAAGzgB,EACMxY,KAAKgZ,MAAMR,GAGbxY,KAAKqU,WAAWC,UAAU,2BAA4B,CAAC2kB,SAAAA,IAAWj0B,MAAMyqE,GACtEzvE,KAAK0vE,oBAAoBD,KAI5BC,oBAAoBD,GAI1B,OAHAzvE,KAAKulB,aAAakqD,EAAaz2D,OAC/BhZ,KAAKud,gBAAgBiI,aAAaiqD,EAAahqD,OAExCzlB,KAAK4c,gBAAgBitC,SAAQ,EAAAjxC,GAAA,GAAU62D,EAAan0D,OAGtDq0D,aAAalvB,GAClB,OAAOzgD,KAAKqU,WAAWC,UAAU,wBAAyB,CAACmsC,MAAAA,IAAQz7C,MAAMyqE,GAChEzvE,KAAK0vE,oBAAoBD,KAI5BP,YAAY3wE,GAClByB,KAAKmuE,aAAax3D,IAAIpY,GACtByB,KAAKguE,cAAclxD,YAAYve,EAAIyB,KAAKq/D,kBAAkB9gE,IAC1DyB,KAAKmkB,aAAaK,YAAYjmB,EAAGkI,WAAY,WAGvCmpE,WAAWrxE,GACjByB,KAAKmuE,aAAapqE,OAAOxF,GACzByB,KAAKguE,cAAclxD,YAAYve,EAAI,IACnCyB,KAAKmkB,aAAagB,YAAY5mB,EAAGkI,WAAY,WAGxC44D,kBAAkB9gE,GACvB,MAAMqX,EAAO5V,KAAKgZ,MAAMza,GACxB,OAAIqX,EAIkB,CACpBA,EAAK2gC,WACL3gC,EAAK4gC,UACL5gC,EAAK6qC,MACL7qC,EAAKqjB,SAELrjB,EAAK/W,OAAOqwB,KAAO,iBAAmB,IAG7BzwB,OAAOC,SAASC,KAAK,KAZvB,GAeJkxE,YAAYh1D,EAAgBi1D,GAAe,EAAOC,EAAqC,QAC5F,OAAO/vE,KAAKsoB,eAAe1d,QAAQ5F,MAAMgrE,IACvC,IAAI7B,EAAe,IAAI6B,GACvB,GAAGn1D,EAAO,CACR,MAAMxV,EAAUrF,KAAKguE,cAAc7xE,OAAO0e,GAG1CszD,EAF6B,IAAIA,GAAc1vE,QAAQF,GAAO8G,EAAQujB,IAAIrqB,KAK9D,SAAXwxE,EACD5B,EAAatlD,MAAK,CAAConD,EAASC,KAC1B,MAAMC,GAAanwE,KAAKgZ,MAAMi3D,IAAY,IAAIG,UAAY,GACpDC,GAAarwE,KAAKgZ,MAAMk3D,IAAY,IAAIE,UAAY,GAC1D,OAAOD,EAAUG,cAAcD,MAEd,WAAXN,GACR5B,EAAatlD,MAAK,CAAConD,EAASC,KAC1B,MAAMK,EAAUvwE,KAAKwwE,qBAAqBxwE,KAAK60C,QAAQo7B,GAASvpE,QAEhE,OADgB1G,KAAKwwE,qBAAqBxwE,KAAK60C,QAAQq7B,GAASxpE,QAC/C6pE,KAIrB,MAAME,EAAWzwE,KAAKwY,OAQtB,OAPA,EAAAtP,EAAA,GAAiBilE,EAAcsC,GAC5BX,GACE9vE,KAAK0wE,eAAe71D,IACrBszD,EAAa1mD,QAAQgpD,GAIlBtC,KAIJwC,mBACL91D,EACAi1D,EACAC,GAEA,OAAO/vE,KAAK6vE,YAAYh1D,EAAOi1D,EAAcC,GAAQ/qE,MAAM+T,GAClDA,EAAQ3U,KAAKoU,GAAWA,EAAO/R,UAAS,OAI5CmqE,YAAYx5D,EAAgBy5D,GACjC,OAAO7wE,KAAKqU,WAAWwY,gBAAgBgkD,EAAQ,iBAAmB,mBAAoB,CACpFtyE,GAAIyB,KAAK4c,gBAAgB8O,iBAAiBtU,KACzCpS,MAAMT,IACJA,GACDvE,KAAK0d,kBAAkBuS,mBAAmB,CACxC3xB,EAAG,oBACHua,QAAS7Y,KAAK4c,gBAAgB2J,cAAcnP,GAC5CqrD,QAASoO,IAINtsE,KAIJmsE,eAAe71D,GACpB,MAAMjF,EAAO5V,KAAK0c,UACZvb,EAAQnB,KAAKiuE,oBAEnB,OADA9sE,EAAM2b,YAAYlH,EAAKrX,GAAIyB,KAAKq/D,kBAAkBzpD,EAAKrX,KAChD4C,EAAMhF,OAAO0e,GAAO+N,IAAIhT,EAAKrX,IAG9B0vE,oBACN,OAAO,IAAI,KAAoB,CAC7B9wE,eAAe,EACfC,YAAY,EACZH,UAAU,EACVM,YAAY,IAITgoB,aAAaurD,EAAoB/hD,GAClC+hD,EAAiB/9C,QACpB+9C,EAAiB/9C,OAAQ,EAC1B+9C,EAAS5tE,SAAS0S,GAAS5V,KAAKmlE,YAAYvvD,EAAMmZ,MAG5C+/C,mBAAmBl5D,EAAmBm7D,GAC5C,IAAIA,GAAWA,EAAQ93C,WAAarjB,EAAKqjB,SAAU,CACjD,GAAG83C,MAAAA,OAAO,EAAPA,EAAS93C,SAAU,CACpB,MAAM+3C,EAAoBpD,GAAcmD,EAAQ93C,iBACzCj5B,KAAK8tE,UAAUkD,GAGxB,GAAGp7D,EAAKqjB,SAAU,CAChB,MAAMg4C,EAAiBrD,GAAch4D,EAAKqjB,UAC1Cj5B,KAAK8tE,UAAUmD,GAAkBr7D,EAAKrX,KAKrC4mE,YAAYvvD,EAAcmZ,G,QAC/B,GAAc,cAAXnZ,EAAKtX,EAAmB,OAE3B,MAAMka,EAAS5C,EAAKrX,GACdwyE,EAAU/wE,KAAKgZ,MAAMR,GAY3B,QAJmB7M,IAAhBiK,EAAK/W,SACN+W,EAAK/W,OAAS,IAGb+W,EAAK/W,OAAOugB,UAAmBzT,IAAZolE,EACpB,OAQF,GAFA/wE,KAAK8uE,mBAAmBl5D,EAAMm7D,GAE1BA,QACsBplE,IAArBolE,EAAQX,UACRW,EAAQx6B,aAAe3gC,EAAK2gC,YAC5Bw6B,EAAQv6B,YAAc5gC,EAAK4gC,UAK9B5gC,EAAKw6D,SAAWW,EAAQX,aALiB,CACzC,MAAMc,EAAWt7D,EAAK2gC,YAAc3gC,EAAK4gC,UAAY,IAAM5gC,EAAK4gC,UAAY,IAE5E5gC,EAAKw6D,SAAWx6D,EAAK/W,OAAO2nB,QAAU,IAAK,EAAAzpB,GAAA,IAAgBm0E,GAAU,GAKpEt7D,EAAKlP,SACFkP,EAAKlP,OAAuC+nE,UAC7C74D,EAAKlP,OAAuC+nE,SAAWzuE,KAAKuhB,YAAYC,uBAGvE5L,EAAKlP,OAAwCgoE,aAC9C94D,EAAKlP,OAAwCgoE,YAAc1uE,KAAKuhB,YAAYC,wBAMjF,IAAImV,GAAe,EAAOC,GAAe,EACzC,QAAejrB,IAAZolE,EACD/wE,KAAKgZ,MAAMR,GAAU5C,MAChB,CACFA,EAAK2gC,aAAew6B,EAAQx6B,YAC1B3gC,EAAK4gC,YAAcu6B,EAAQv6B,WAC3B5gC,EAAKqjB,WAAa83C,EAAQ93C,WAC7BrC,GAAe,IAGsD,QAAnD,EAAAm6C,EAAQ99C,aAA2C,eAAEr0B,aACL,QAAhD,EAAAgX,EAAKqd,aAA2C,eAAEr0B,YAEpE+3B,GAAe,GAOjB,MAAMw6C,IAAeJ,EAAQlyE,OAAOmwE,QAC9BoC,IAAex7D,EAAK/W,OAAOmwE,QAEjCr3D,GAAkBo5D,EAASn7D,GAC3B5V,KAAKwc,UAAU7V,cAAc,cAAe6R,GAEzC24D,IAAeC,GAChBpxE,KAAKqxE,iBAAiB74D,EAAQ44D,EAAYD,GAI3Cx6C,GACD32B,KAAKwc,UAAU7V,cAAc,gBAAiBiP,EAAKrX,GAAGkI,YAGrDmwB,GACD52B,KAAKwc,UAAU7V,cAAc,kBAAmBiP,EAAKrX,GAAGkI,YAG1DzG,KAAK2uE,uBAAuB/4D,GAGtB+4D,uBAAuB/4D,GAC1B5V,KAAKmkB,aAAa6R,aAAapgB,EAAKrX,GAAGkI,aACxCzG,KAAK0D,QAAQyE,IAAI,CACf,CAACyN,EAAKrX,IAAKqX,IAKV07D,oBAAoB/yE,GACzB,OAAOyB,KAAKwwE,qBAAqBjyE,GAAM,EAGlCiyE,qBAAqB9pE,GAK1B,GAJsB,iBAAb,IACPA,EAAS1G,KAAK60C,QAAQnuC,GAAQA,QAG7BA,EAAQ,CACT,MAAM+nE,EAAuB,qBAAb/nE,EAAOpI,EAA2BoI,EAAO+nE,QAAwB,sBAAb/nE,EAAOpI,EAA4BoI,EAAOgoE,WAAa,EAC3H,GAAGD,EACD,OAAOA,EAYT,OAAO/nE,EAAOpI,GACZ,IAAK,qBACH,OAAO,EACT,IAAK,qBACH,OAAO,EACT,IAAK,sBACH,OAAO,GAIb,OAAO,EAGFu2C,QAAQt2C,GACb,OAAG,EAAA4iB,GAAA,GAAe5iB,GACTA,EAGFyB,KAAKgZ,MAAMza,IAAO,CAACD,EAAG,YAAaC,GAAAA,EAAIM,OAAQ,CAAC2nB,SAAS,GAAOmO,YAAa,IAG/EjY,UACL,OAAO1c,KAAK60C,QAAQ70C,KAAKwY,QAGpByS,MAAM1sB,GACX,OAAOyB,KAAKgZ,MAAMza,MAASyB,KAAKgZ,MAAMza,GAAIM,OAAO20C,IAG5CpoB,UAAU7sB,GACf,OAAOyB,KAAKmuE,aAAavlD,IAAIrqB,OAAUyB,KAAKgZ,MAAMza,KAAOyB,KAAKgZ,MAAMza,GAAIM,OAAOmwE,SAG1EuC,cAAchzE,GACnB,MAAMqX,EAAO5V,KAAKgZ,MAAMza,GACxB,OAAOqX,IAAS5V,KAAKirB,MAAM1sB,KAAQqX,EAAK/W,OAAO2nB,UAAY5Q,EAAK/W,OAAO2yE,QAGlEC,iBAAiBlzE,GACtB,OAAOyB,KAAKuxE,cAAchzE,KAAQyB,KAAKorB,UAAU7sB,IAAOA,IAAOyB,KAAKwY,OAG/D2Y,QAAQ5yB,EAAYq5B,GACzB,MAAMhiB,EAAO5V,KAAKgZ,MAAMza,GACxB,OAAO,EAAA4iB,GAAA,GAASvL,KAAUgiB,IAAahiB,EAAK/W,OAAOugB,KAG9C2/C,aAAaxgE,GAClB,MAAMqX,EAAO5V,KAAK60C,QAAQt2C,GAE1B,OAAOqX,GAAQA,EAAKqd,OAAS,CAC3B30B,EAAG,yBAIA0gE,cAAczgE,GACnB,MAAMqX,EAAO5V,KAAK60C,QAAQt2C,GAC1B,MAAO,IAAMA,GAAMqX,EAAK+e,YAAc,IAAM/e,EAAK+e,YAAc,IAG1DU,aAAa92B,GAClB,MAAMqX,EAAO5V,KAAK60C,QAAQt2C,GAC1B,OAAGqX,EAAK/W,QAAU+W,EAAK/W,OAAOqwB,KACrB,CAAC5wB,EAAG,iBAGN,CACLA,EAAG,YACH+Z,QAAS9Z,EACTo2B,YAAa/e,EAAK+e,aAIfyqC,iBAAiB7gE,GACtB,MAAMqX,EAAO5V,KAAK60C,QAAQt2C,GAC1B,OAAGqX,EAAK/W,QAAU+W,EAAK/W,OAAOqwB,KACrB,CAAC5wB,EAAG,iBAGN,CACLA,EAAG,gBACH+Z,QAAS9Z,EACTo2B,YAAa/e,EAAK+e,aAIf20B,qBAAqB/qD,GAC1B,MAAMqX,EAAO5V,KAAK60C,QAAQt2C,GAE1B,MAAO,CACLD,EAAG,oBACHi4C,WAAY3gC,EAAK2gC,WACjBC,UAAW5gC,EAAK4gC,UAChBF,aAAc1gC,EAAK6qC,MACnBhK,MAAO,GACPp+B,QAAS9Z,GAYLgwE,iBAAiB34D,EAAmB04D,GAAe,EAAAhtD,GAAA,IAAM,IAC5D1L,EAAKlP,QACY,qBAAlBkP,EAAKlP,OAAOpI,GACZsX,EAAKlP,OAAO+nE,QAAUH,IACtB14D,EAAKlP,OAAS,CAACpI,EAAG,oBAAqBowE,WAAY94D,EAAKlP,OAAO+nE,SAC/DzuE,KAAKwc,UAAU7V,cAAc,cAAeiP,EAAKrX,IAEjDyB,KAAK2uE,uBAAuB/4D,IAIzB6mC,gBAAgBl+C,EAAYmzE,GACjC,GAAG1xE,KAAKirB,MAAM1sB,GACZ,OAGF,MAAMq7B,GAAY,EAAAtY,GAAA,IAAM,GAExB,GAAGowD,GACD,GAAI93C,EAAY83C,GAFI,GAGlB,YAEG,GAAG1xE,KAAK0d,kBAAkBiQ,aAAaI,YAC5C,OAGF,MAAMnY,EAAO5V,KAAK60C,QAAQt2C,KACvBqX,MAAAA,OAAI,EAAJA,EAAMlP,SACW,qBAAlBkP,EAAKlP,OAAOpI,GACM,oBAAlBsX,EAAKlP,OAAOpI,GACXsX,EAAK/W,OAAO2yE,SACZ57D,EAAK/W,OAAO2nB,UAEb5Q,EAAKlP,OAAS,CACZpI,EAAG,mBACHmwE,QAAS70C,EAlBS,IAsBpB55B,KAAKwc,UAAU7V,cAAc,cAAepI,GAE5CyB,KAAK2uE,uBAAuB/4D,IAIzB+7D,cAAcp7B,EAAoBC,EAAmBiK,GAC1D,OAAOzgD,KAAK4xE,eAAe,CAAC,CAC1Br7B,WAAAA,EACAC,UAAAA,EACAq7B,OAAQ,CAACpxB,MACPz7C,MAAM+T,IACR,IAAIA,EAAQ3a,OAAQ,CAClB,MAAMmB,EAAQ,IAAI0M,MAElB,MADC1M,EAAcE,KAAO,UAChBF,EAGR,OAAOwZ,EAAQ,MAIZ64D,eAAevmD,GACpB,MAAMymD,EAAgC,GAEtC,IAAI,IAAIjsE,EAAI,EAAGA,EAAIwlB,EAASjtB,SAAUyH,EACpC,IAAI,IAAIksE,EAAI,EAAGA,EAAI1mD,EAASxlB,GAAGgsE,OAAOzzE,SAAU2zE,EAC9CD,EAAcxxE,KAAK,CACjBhC,EAAG,oBACH0zE,WAAYnsE,GAAK,GAAKksE,GAAG/jE,SAAS,IAClCyyC,MAAOp1B,EAASxlB,GAAGgsE,OAAOE,GAC1Bx7B,WAAYlrB,EAASxlB,GAAG0wC,WACxBC,UAAWnrB,EAASxlB,GAAG2wC,YAK7B,OAAOx2C,KAAKqU,WAAWC,UAAU,0BAA2B,CAC1D+W,SAAUymD,IACT9sE,MAAMitE,IACPjyE,KAAKulB,aAAa0sD,EAAuBj5D,OAEzBi5D,EAAuBC,SAAS9tE,KAAK+tE,IACnDnyE,KAAKqxE,iBAAiBc,EAAgB95D,SAAS,GACxC85D,EAAgB95D,cAOtB87B,YAAY10C,GACjB,OAAGO,KAAK+tE,oBAAoBtuE,GAAcO,KAAK+tE,oBAAoBtuE,GAE5DO,KAAK+tE,oBAAoBtuE,GAAQO,KAAK+d,gBAAgB5W,WAAWnC,MAAMiC,IAC5E,MAAMshB,EAASthB,EAAMmrE,cAAc3yE,GACnC,OAAG8oB,GAAWA,EAAO8pD,WAAa,MAAW/iE,KAAKvK,OAASwjB,EAAO+D,MACzD/D,EAAO+D,MAGTtsB,KAAKqU,WAAWC,UAAU,uBAAwB,CACvD,CAAC7U,IAAO,EACRupB,OAAQ,EACRb,MAAO,GACPmT,KAAM,MACLt2B,MAAM5C,IACP,IAAIgyC,EAAwB,GAqB5B,MApBgB,sBAAbhyC,EAAO9D,IAER0B,KAAKulB,aAAanjB,EAAO4W,OACzBhZ,KAAKud,gBAAgBiI,aAAapjB,EAAOqjB,OAEtCrjB,EAAOkwE,WAAWl0E,SACnBg2C,EAAWhyC,EAAOkwE,WAAW,GAAGhmD,MAAMloB,KAAKkwC,IACzC,MAAMl9B,GAAS,EAAAwB,GAAA,GAAU07B,EAAQh5B,MAEjC,OADAtb,KAAKmkB,aAAaK,YAAYpN,EAAQ,WAC/B,CAAC7Y,GAAI6Y,EAAQm9B,OAAQD,EAAQC,aAK1CttC,EAAMmrE,cAAc3yE,GAAQ,CAC1B6sB,MAAO8nB,EACPi+B,WAAY/iE,KAAKvK,OAEnB/E,KAAK+d,gBAAgBhW,YAAY,gBAAiBd,EAAMmrE,eAEjDh+B,QAKNm+B,WAAWvpD,EAAS,EAAGb,EAAQ,GACpC,OAAOnoB,KAAKqU,WAAWwY,gBAAgB,sBAAuB,CAAC7D,OAAAA,EAAQb,MAAAA,IAAQnjB,MAAMwtE,IACnFxyE,KAAKulB,aAAaitD,EAAgBx5D,OAClChZ,KAAKud,gBAAgBiI,aAAagtD,EAAgB/sD,OAK3C,CAAC3K,MAJ4B,qBAAtB03D,EAAgBl0E,EAA2Bk0E,EAAgBx5D,MAAM5a,OAASo0E,EAAgB/sD,MAAMrnB,OAASo0E,EAAgB13D,MAIxH/C,QAFWy6D,EAAgBx5D,MAAM5U,KAAK+zB,GAAMA,EAAE55B,GAAGkI,aAAYvC,OAAOsuE,EAAgB/sD,MAAMrhB,KAAK6S,GAAMA,EAAE1Y,GAAGkI,UAAS,UAM/HgsE,WACLt/B,EACAC,EACAC,EACAmV,GAAsB,EACtBkqB,EAAuB,GAEvB,MAAMj/B,EAA2B,CAC/Bn1C,EAAG,gBACH60C,IAAAA,EACAC,KAAAA,EACAC,gBAAAA,GAGF,OAAOrzC,KAAKqU,WAAWC,UAAU,sBAAuB,CACtDm/B,UAAAA,EACA+U,WAAAA,IACCxjD,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,GACrCA,KA4BJ4sD,eAAe93D,EAAesN,EAAQ,IAE3C,MAAM0G,GAAW,EAAA2jC,GAAA,GAAc33C,GAC/B,GAAGgU,EAASzwB,QAAUywB,EAAS,GAAGzwB,SAAWyc,EAAM0qB,OAAOnnC,QAA4B,qBAAlBywB,EAAS,GAAGvwB,EAC9E,IACE,MACM0S,EADM,IAAIwiB,KAAI,EAAAwM,GAAA,GAAQnlB,GAAOxb,KAClBuzE,SAASjrE,MAAM,GAC7BqJ,IACD6J,EAAQ7J,GAEV,MAAMzG,IAGV,OAAOvK,KAAKqU,WAAWonB,mBAAmB,kBAAmB,CAC3D4J,EAAGxqB,EACHsN,MAAAA,GACC,CAACuT,aAAc,KAAK12B,MAAMsnB,IAC3BtsB,KAAKulB,aAAa+G,EAAMtT,OACxBhZ,KAAKud,gBAAgBiI,aAAa8G,EAAM7G,OAE5B,CACVotD,YAAY,EAAApgD,GAAA,GAAanG,EAAMumD,WAAWzuE,KAAKiwB,IAAM,EAAAzb,GAAA,GAAUyb,MAC/DhvB,QAASinB,EAAMjnB,QAAQjB,KAAKiwB,IAAM,EAAAzb,GAAA,GAAUyb,SAO1Cg9C,iBAAiB74D,EAAgB4S,EAAoB0nD,EAAe9yE,KAAKorB,UAAU5S,IACtF4S,IAAc0nD,IACZ1nD,EACDprB,KAAKkvE,YAAY12D,GAEjBxY,KAAK4vE,WAAWp3D,GAGlBxY,KAAKovE,qBAELpvE,KAAKwc,UAAU7V,cAAc,kBAAmB6R,IAI7CwgB,eAAeC,GACpB,OAAOj5B,KAAKqU,WAAWC,UAAU,yBAA0B,CACzD2kB,SAAAA,IACCj0B,MAAM4Q,IACP5V,KAAKmlE,YAAYvvD,MAIdm9D,cAAcv6D,EAAgBw6D,GACnC,GAAGhzE,KAAKirB,MAAMzS,GACZ,OAGF,MAAM5C,EAAO5V,KAAKgZ,MAAMR,GACxB,GAAG5C,EAAM,CACP,MAAMlP,EAAqBssE,EAAU,CACnC10E,EAAG,oBACHowE,YAAY,EAAAptD,GAAA,IAAM,IAChB,CACFhjB,EAAG,mBACHmwE,SAAS,EAAAntD,GAAA,IAAM,GAAQ,IAGzB1L,EAAKlP,OAASA,EAEd1G,KAAKwc,UAAU7V,cAAc,cAAe6R,GAE5CxY,KAAK2uE,uBAAuB/4D,IAIzBq9D,qBAAqBD,GAE1B,OADAhzE,KAAK+yE,cAAc/yE,KAAK0c,UAAUne,GAAIy0E,GAC/BhzE,KAAKqU,WAAWwY,gBAAgB,uBAAwB,CAACmmD,QAAAA,IAG3DE,WAAW16D,EAAgB+9B,EAAoBC,EAAmBiK,EAAe0yB,GAStF,OAAOnzE,KAAKqU,WAAWC,UAAU,sBAAuB,CACtD/V,GAAIyB,KAAKq1B,aAAa7c,GACtB+9B,WAAAA,EACAC,UAAAA,EACAiK,MAAAA,EACA2yB,4BAA6BD,IAC5BnuE,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,EAAS,CAACgJ,UAAU,IAEhE/uB,KAAKqxE,iBAAiB74D,GAAQ,MAI3B66D,eAAet6D,GACpB,OAAO/Y,KAAKqU,WAAWC,UAAU,0BAA2B,CAC1D/V,GAAIwa,EAAQ3U,KAAKoU,GAAWxY,KAAKq1B,aAAa7c,OAC7CxT,MAAM+gB,IACP/lB,KAAK0d,kBAAkBwQ,qBAAqBnI,EAAS,CAACgJ,UAAU,IAEhEhW,EAAQ7V,SAASsV,IACfxY,KAAKqxE,iBAAiB74D,GAAQ,SAK7Bsd,aAAatd,GAClB,MAAM5C,EAAoB5V,KAAK60C,QAAQr8B,GACjCsiB,EAAqBllB,EAAKmlB,mBAEhC,SAAUnlB,EAAK/W,OAAOm8B,YAAcF,GAAsBhF,GAAagF,IAGlES,cAActC,GACnB,OAAOj5B,KAAKqU,WAAWC,UAAU,wBAAyB,CAAC2kB,SAAAA,IAGtDs/B,cAAc//C,GACnB,OAAO,EAAA+/C,GAAA,GAAcv4D,KAAK60C,QAAQr8B,KCv9BtC,MAAM86D,GAAe,IAAI98D,IAAI,CAAC,QAAS,QAAS,MAAO,aAIhD,MAAM+8D,WAA2BpgE,EAAxC,c,oBACU,KAAAqgE,SAEJ,GACI,KAAAC,gBAEJ,GAEMl3D,QACRvc,KAAK0d,kBAAkBC,2BAA2B,CAChD+1D,cAAgBx4D,IACdlb,KAAK2xD,YAAYz2C,EAAOuoC,YAKvBkO,YAAYgiB,EAAqBliB,EAAgCH,G,QACtE,GAAoB,uBAAjBqiB,EAAWr1E,EAA4B,OAC1C,MAAM,GAACC,GAAMo1E,EAEPC,EAAa5zE,KAAKwzE,SAASj1E,GAC3Bs1E,EAAYD,GAChBA,EAAWt1E,IAAMq1E,EAAWr1E,GAC3Bs1E,EAA+Bt4C,MAAUs4C,EAA+Bt4C,KAE3E,GAAoB,YAAjBq4C,EAAWr1E,EAAiB,CACF,WAAR,QAAhB,EAAAq1E,EAAW1gD,aAAK,eAAE30B,GACnBq1E,EAAW1gD,MAAQjzB,KAAK+zC,iBAAiBC,UAAU2/B,EAAW1gD,MAAOq+B,UAE9DqiB,EAAW1gD,MAGU,cAAR,QAAnB,EAAA0gD,EAAW30C,gBAAQ,eAAE1gC,GACtBq1E,EAAW30C,SAAWh/B,KAAK8zC,eAAe1M,QAAQusC,EAAW30C,SAAUsyB,IAEhD,aAApBqiB,EAAWl0E,aACLk0E,EAAWl0E,YAGbk0E,EAAW30C,UAGpB,MAAM80C,EAAWH,EAAWI,UAC5B,IAAIC,EAAaL,EAAW98C,OAAS88C,EAAWM,QAAUH,GAAY,GACnEA,GAAYE,IAAeF,UACrBH,EAAWI,UAKhBT,GAAa1qD,IAAI+qD,EAAWl0E,OAC7Bk0E,EAAWO,cACZP,EAAW1gD,QACX0gD,EAAWl0E,KAAO,SAItB,IAAI00E,EAAan0E,KAAKyzE,gBAAgBl1E,GAYtC,GAXGkzD,IACG0iB,IAAYA,EAAan0E,KAAKyzE,gBAAgBl1E,GAAM,IAAIiY,KAC5D29D,EAAWx9D,IAAI86C,SAGC9lD,IAAfioE,EACD5zE,KAAKwzE,SAASj1E,GAAMo1E,EAEpBh8D,GAAkBi8D,EAAYD,IAG5BliB,QAA6B9lD,IAAfwoE,GAA4BN,EAAW,CACvD,MAAM/zB,EAA8D,GACpEq0B,EAAWjxE,SAASqB,IAClB,MAAO6S,EAAQ4M,EAAKg9B,GAAez8C,EAAMiD,MAAM,KAC/Cs4C,EAAKx/C,KAAK,CACR8W,OAAQA,EAAO3Q,WACfud,KAAMA,EACNg9B,cAAeA,OAInBhhD,KAAKwc,UAAU7V,cAAc,kBAAmB,CAC9CpI,GAAAA,EACAuhD,KAAAA,IAIJ,OAAO6zB,EAGFjiB,+BAA+Bt6C,EAAgB4M,EAAag9B,GACjE,OAAO5pC,EAAS,IAAM4M,GAAOg9B,EAAc,KAAO,IAG7Cwb,yBAAyBvX,EAAkBwM,GAChD,MAAMlzD,EAAM0mD,EAA4B1mD,GACxC,IAAIA,EAAI,OAER,MAAM4J,EAAMnI,KAAKyzE,gBAAgBl1E,GAC9B4J,GAAOA,EAAIygB,IAAI6oC,KAChBtpD,EAAIpE,OAAO0tD,GAEPtpD,EAAI2L,aACC9T,KAAKyzE,gBAAgBl1E,IAK3BolD,iBAAiBplD,GACtB,OAAOyB,KAAKwzE,SAASj1E,GAGhB61E,WAAW/0E,GAChB,OAAOW,KAAKqU,WAAWg2B,kBAAkB,CACvCvgC,OAAQ,sBACRqxB,cAAgB8pB,GACPjlD,KAAK2xD,YAAY1M,GAE1BvwC,OAAQ,CACNrV,IAAAA,M,gVCxDD,MAAMg1E,WAAuBlhE,EAApC,c,oBACU,KAAAmhE,aAAe,IAAI,KAAuB,eAE1C,KAAAC,iBAEJ,GAEI,KAAAC,eAEJ,GAEI,KAAAC,cAWJ,GACI,KAAAC,gBAA4C,GAE7C,KAAAC,yBAKH,GAEI,KAAAx0E,KAAiC,EAAAsJ,EAAA,IAAO,MAAO,WAAiB,KAAAD,KAChE,KAAAoyC,OAAS,EACT,KAAAlS,QAAU,EACV,KAAApgC,MAAQ,UA4KR,KAAAsrE,cAAgB,CAAC7mE,EAAmBg9B,IAGnC/qC,KAAKgV,aAAaC,aAAa,iBAAkBlH,EAAMpG,QAAQsC,QAAQ,GAGxE,KAAA4qE,cAAgB,CAAC9mE,EAAmBg9B,KAG1C,MAAM9gC,EAAS8D,EAAMpG,QAAQsC,OAC7B,OAAGjE,IAAiBrJ,WACXqD,KAAKgV,aAAaC,aAAa,iBAAkBhL,GAAQ,GAAMjF,MAAMhI,GCtSnE,SAAuBA,GACpC,MAAM83E,EAAW93E,EAAKX,QAAQ,QACd,IAAby4E,IACD93E,EAAOA,EAAK2K,MAAMmtE,IAGpB,MAAOx2E,EAAGy2E,EAAI/qC,EAAOC,GAAUjtC,EAAKN,MAAM,mBAAmB,GAAG8K,MAAM,KAEtE,OADOxK,EAAKU,QAAQ,IAAK,WAAWssC,cAAkBC,OAAYvsC,QAAQ,gBAAiB,IDgS9Es3E,CAAch4E,KACpBgI,MAAMhI,IACa,IAAIi4E,aACL1nE,OAAOvQ,KAIvBgD,KAAKgV,aAAaC,aAAa,iBAAkBhL,GAAQ,IAG1D,KAAAirE,YAAc,CAACnnE,EAAmBg9B,IACvB,kBACD+d,OAAO,cAAe,CAAC/d,SAAAA,EAAUh9B,MAAAA,IAG3C,KAAAonE,YAAc,CAACpnE,EAAmBg9B,IACvB,kBACD+d,OAAO,cAAe,CAAC/d,SAAAA,EAAUh9B,MAAAA,IAvMzCwO,QACRiyD,aAAY,KACV,IAAI,MAAMh3D,KAAOxX,KAAK20E,yBAA0B,CAC9C,MAAM,SAACv5E,GAAY4E,KAAK20E,yBAAyBn9D,IAC9Cpc,EAASsX,aAAetX,EAASuX,oBAC3B3S,KAAK20E,yBAAyBn9D,MAGxC,MAKG49D,gBAAgB1sE,EAAuBnK,EAAYy6C,EAAwCq8B,EAAqB3rC,EAAkB,QACxG/9B,IAA7B3L,KAAKy0E,cAAc/rE,KACpB1I,KAAKy0E,cAAc/rE,GAAQ,GAC3B1I,KAAK00E,gBAAgBhsE,GAAQ,GAG/B,MAAM4sE,EAAet1E,KAAKy0E,cAAc/rE,GAElCkC,EAAU,IAAIjJ,SAA6B,CAACM,EAASL,KACzD0zE,EAAah1E,KAAK,CAAC/B,GAAAA,EAAImrC,QAAAA,EAASsP,GAAAA,EAAI59C,SAAU,CAAC6G,QAAAA,EAASL,OAAAA,GAASyzE,YAAAA,OAOnE,OAJAtzE,YAAW,KACT/B,KAAKu1E,cAAc7sE,KAClB,GAEIkC,EAGD2qE,cAAc7sE,GACpB,MAAM4sE,EAAet1E,KAAKy0E,cAAc/rE,GAClC8sE,EAAyB,WAAT9sE,EAAoB,GAAM1I,KAAKwc,UAAUjW,QAzEpC,GADA,GA6E3B,GAAGvG,KAAK00E,gBAAgBhsE,IAAS8sE,IAAkBF,IAAiBA,EAAal3E,OAC/E,OAAO,EAIT,MAAMmN,GAAO,EAAAm8D,GAAA,GAAc4N,GAAch5D,GAAmB,IAAdA,EAAEotB,YAAkB,EAAAg+B,GAAA,GAAc4N,GAAch5D,GAAKA,EAAEotB,UAAY1pC,KAAK0pC,WAAY4rC,EAAarmE,QACzIomE,EAAc9pE,EAAK8pE,aAAe,EAExCr1E,KAAK00E,gBAAgBhsE,IAAS2sE,EAE9B,MAAMzqE,EAAUW,EAAKytC,KACfy8B,EAAiB,eAA0B/sE,EAA4B,KAAd2sE,EAAqB,KACpF1zE,QAAQ+zE,KAAK,CACX9qE,EACA6qE,IACCzwE,MAAK,KACNhF,KAAK00E,gBAAgBhsE,IAAS2sE,EAC9Br1E,KAAKu1E,cAAc7sE,GAEnB+sE,EAAexzE,aACb1C,IAEEA,GAAUA,EAAME,OAAwB,sBAAfF,EAAME,MAA+C,oBAAfF,EAAME,OACvEO,KAAKG,IAAIZ,MAAM,uBAAwBA,GAGzCS,KAAK00E,gBAAgBhsE,IAAS2sE,EAC9Br1E,KAAKu1E,cAAc7sE,GAEnB+sE,EAAe7zE,OAAOrC,MACrB0J,SAAQ,KACT2B,EAAQ5F,KAAKuG,EAAKnQ,SAAS6G,QAASsJ,EAAKnQ,SAASwG,WAI/C+zE,WAAWjsC,GAEhB1pC,KAAK0pC,QAAUA,EAGTksC,iBACN,OAAO51E,KAAKs0E,aAGPuB,eAAe9qC,GACpB,MAAM3iB,EAAW,CAACpoB,KAAKu0E,iBAAiBxpC,GAAW/qC,KAAKw0E,eAAezpC,IAAWtsC,OAAOC,SACzF,IAAIo3E,GAAW,EACf,IAAI,IAAIjwE,EAAI,EAAGzH,EAASgqB,EAAShqB,OAAQyH,EAAIzH,IAAUyH,EAAG,CACxD,MAAM+E,EAAUwd,EAASviB,IACtB+E,GAAYA,EAAQ+H,YAAe/H,EAAQ8H,cAC5C9H,EAAQmrE,SACRD,GAAW,GAIf,OAAOA,EAGFE,mBAAmBttE,EAAYxK,EAAgC8qB,EAAgBb,EAAe5pB,EAAK,EAAGmrC,EAAU,EAAGusC,GACxH,OAAOj2E,KAAKo1E,gBAAgB1sE,EAAMnK,GAAI,IAAW,mCAG/C,OAFA03E,GAAeA,IAERj2E,KAAKqU,WAAWC,UAAU,oBAAqB,CACpDpW,SAAAA,EACA8qB,OAAAA,EACAb,MAAAA,GACC,CACDzf,KAAAA,EACAwtE,cAAc,QAEfl2E,KAAKm2E,SAAShuD,GAAQuhB,GAGpB0B,gBAAgB1iC,EAAYxK,EAA6B8qB,EAAgBb,EAAe5pB,EAAK,EAAGmrC,EAAU,EAAGusC,GAClH,OAAOj2E,KAAKo1E,gBAAgB1sE,EAAMnK,GAAI,IAAW,mCAC/C03E,GAAeA,IAEf,MAAMntB,EAAS,IAAkC,mCAY/C,OAXAmtB,GAAeA,IAECj2E,KAAKqU,WAAWC,UAAU,iBAAkB,CAC1DpW,SAAAA,EACA8qB,OAAAA,EACAb,MAAAA,GACC,CACDzf,KAAAA,EACAwtE,cAAc,IAGDntE,OAAOwB,IACpB,GAAgB,2BAAbA,EAAI9K,KACL,OAAOO,KAAKgX,iBAAiB9Y,GAAU8G,KAAK8jD,GAG9C,MAAMv+C,SAIV,EAAAwiB,GAAA,GAAwD7uB,GACxD,MAAMmY,EAAYnY,EAASopC,eAC3B,GAAGjxB,IAAcnY,EAASk4E,iBAAkB,CAC1Cl4E,EAASk4E,kBAAmB,EAC5B,MAAM5+D,EAAM1J,EAAWuI,GACvB,GAAGrW,KAAK20E,yBAAyBn9D,GAC/B,OAAOxX,KAAKgX,iBAAiB9Y,GAAU8G,KAAK8jD,GAIhD,OAAOA,QACN9oD,KAAKm2E,SAAShuD,GAAQuhB,GAOnBysC,SAASpoE,GACf,OAAOA,EAAQ,KAAO,IAGhBsoE,aAAaviE,GACnB,IAAI/F,EAAQ,OAEZ,KAAO+F,EAAO/F,EAAS,KACrBA,GAAS,EAMX,OAAOA,EAmCDiJ,iBAAiBs/D,GACvB,MAAMjgE,EAAaigE,EAAkEhvC,eAC/E9vB,EAAM1J,EAAWuI,GAEvB,IAAI9Q,EAAIvF,KAAK20E,yBAAyBn9D,GACtC,IAAIjS,EAAG,CACL,MAAMnK,GAAW,SAEjBmK,EAAIvF,KAAK20E,yBAAyBn9D,GAAO,CACvCpc,SAAAA,EACA+J,QAASwK,EAAA,cAAe,KACtB3P,KAAKG,IAAIZ,MAAM,gCAAkC+2E,GACjDl7E,EAASwG,OAAO,gCACf,MAGLxG,EAAS2N,MAAMC,EAAA,GAAMC,SAAQ,KAC3B/D,aAAaK,EAAEJ,YAGjBnF,KAAKunC,kBAAkBvwB,iBAAiBX,GAAWrR,KAAK5J,EAAS6G,QAAS7G,EAASwG,QAMrF,OAAO2D,EAAEnK,SAAS4J,MAAMqR,IACtB,GAAGmB,IAAQ1J,EAAWuI,GACpB,KAAM,6BAGPigE,EAAkEhvC,eAAiBjxB,KAIjFkgE,cAAcxrC,GACnB,QAAS/qC,KAAKu0E,iBAAiBxpC,GAG1ByrC,YAAYzrC,GACjB,OAAO/qC,KAAKu0E,iBAAiBxpC,GAGxB0rC,UAAU1rC,GACf,OAAO/qC,KAAKw0E,eAAezpC,GAGtBr5B,SAASrU,G,MACd,IAAIq5E,GAAA,gBACF,OAAO/0E,QAAQC,OAAO,CAACnC,KAAM,+BAG/B,MAAMqU,EAAmB,QAAZ,EAAAzW,EAAQyW,YAAI,QAAI,GACvB,KAACpL,EAAI,SAAExK,GAAYb,EAEzB,IAAI+P,EAEoB,gCAArB/P,EAAQ4uE,UACT7+D,EAAUpN,KAAK60E,cACfx3E,EAAQ4uE,SAAW,iBACU,eAArB5uE,EAAQ4uE,UAA8BjmE,IAAiBqiC,kBAGlC,4BAArBhrC,EAAQ4uE,UAChB7+D,EAAUpN,KAAK40E,cACfv3E,EAAQ4uE,SAAW,oBACU,cAArB5uE,EAAQ4uE,UAA6BjmE,IAAiB2wE,oBAC9DvpE,EAAUpN,KAAKm1E,YACf93E,EAAQ4uE,SAAW,cAPnB7+D,EAAUpN,KAAKk1E,YACf73E,EAAQ4uE,SAAW,aASrB,MAAMlhC,GAAW,QAAsB7sC,EAAU,CAAC6sC,SAAU1tC,EAAQ0tC,WAC9D6rC,EAAgB52E,KAAKu0E,iBAAiBxpC,GACtC8rC,EAAc72E,KAAK41E,iBAQzB,GANA51E,KAAKsJ,OAAStJ,KAAKG,IAAI,eAAgB4qC,EAAUj3B,EAAM5V,EAAUb,EAAQ4uE,UAMtE2K,EAGD,OAAG9iE,EACM8iE,EAAc5xE,MAAMuuB,GACtBA,aAAgBizB,MAAQjzB,EAAKzf,KAAOA,GACrC9T,KAAKsJ,OAAStJ,KAAKG,IAAI,+CAAgDozB,EAAKzf,KAAMA,GAE3E9T,KAAK+D,OAAOgnC,GAAU/lC,MAAK,IACzBhF,KAAK0R,SAASrU,KACpB0L,OAAM,IACA/I,KAAK0R,SAASrU,MAGhBk2B,IAIJqjD,EAIX,MAAMx7E,GAA4B,SAC5B6wE,EAAW5uE,EAAQ4uE,UAAY,aAErC,IAAI1sE,EAEAu3E,EADAC,GAAW,EAEXC,EAAgBC,IAClB13E,EAAQ03E,SACDj3E,KAAKu0E,iBAAiBxpC,GAC7B3vC,EAASwG,OAAOrC,GAChBy3E,EAAe,QAEZF,GAAqBv3E,GAAwB,sBAAfA,EAAME,MACrCq3E,EAAgBI,YAIpB,MAAM34E,EAAKyB,KAAK47C,SAEhBi7B,EAAYM,QAAQpsC,GAAU/lC,MAAWuuB,GAAe,mCAItD,GAAGA,EAAKzf,KAAOA,EAMb,MAJIzW,EAAQssC,kBACJ3pC,KAAK+D,OAAOgnC,KAGd,EAGR3vC,EAAS6G,QAAQsxB,QAChBxqB,OAAOwB,IACR,GAAGlN,EAAQssC,UAET,YADAqtC,EAAazsE,GAKf,MAAM4d,EAAQ9qB,EAAQg2B,WAAarzB,KAAKq2E,aAAaviE,GAC3B+iE,EAAYO,cAAcrsC,EAAUj3B,GAAQqU,EAAO8jD,GAE3DjnE,MAAMqyE,IAEtB,IAAIruD,EADJ8tD,EAAkBO,EAElB,IAEEC,EADEC,EAA6C51E,QAAQM,UAGzD,MAIMu1E,EAA0BzpE,GAAsB,mCACpD,OAAGX,QAEuBA,EAAQW,EAAOg9B,GAKlCh9B,KAGHxI,EAAmB,yBAAfrH,EAASI,EAA+B0B,KAAKg2E,mBAAmB73D,KAAKne,MAAQA,KAAKorC,gBAAgBjtB,KAAKne,MAE3Gy3E,EAAqB,GAC3BzuD,EAtBkB,EAuBlB,GAEEsuD,GAAoB,SACpBG,EAAQn3E,KAAK,CAAC0oB,OAAAA,EAAQuuD,iBAAAA,EAAkBD,kBAAAA,IACxCC,EAAmBD,EACnBtuD,GAAUb,QACJa,EAASlV,GAEjB,IAAIs0C,EAAO,EACX,MAAMsvB,EAAa,IAAW,mCAG5B,MAAM,OAAC1uD,EAAM,iBAAEuuD,EAAgB,kBAAED,GAAqBG,EAAQxoE,QAC9D,IACEgnE,IAGA,MAAM7zE,QAAemD,EAAEmD,EAAMxK,EAAiB8qB,EAAQb,EAAO5pB,EAAIlB,EAAQqsC,QAASusC,GAE5EloE,EAAQ3L,EAAO2L,MAElB0pE,EAAQr5E,QACTs5E,IAGF13E,KAAKsJ,OAAStJ,KAAKG,IAAI,uCAAwC4qC,EAAU3oC,GACzE,MAAMu1E,EAAW3uD,EAASb,GAAUrU,IAAS/F,EAAMzD,WACnD,GAAGyD,EAAMzD,WAAY,CAEnB89C,GAAQr6C,EAAMzD,WAIZ,MAAMqsC,EAAqB,CAACyR,KAAAA,EAAMp/B,OAAAA,EAAQ6tB,MAAO/iC,EAAMi3B,SAAAA,GACvD3vC,EAASuwC,OAAOgL,SAGZ4gC,EACNtB,UAEMoB,EAAWO,MAAM7pE,EAAOib,GAGhC,GAAG2uD,GAAWvqE,EAAS,CACrB,MAAMW,EAAQspE,EAAWQ,WACnBC,QAAwBN,EAAkBzpE,GAChDkoE,IAEAoB,EAAWU,aAAaD,GAK1B,GAFAR,EAAkBr1E,UAEf01E,EAAS,CACVZ,GAAW,EAEX,MAAMiB,EAAWlkE,GAAQ/F,EAAMzD,WAC3BwJ,GACFujE,EAAW9xC,KAAKyyC,GAGlB58E,EAAS6G,QAAQo1E,EAAW7yB,SAASwzB,EA7dxB,YA+df,MAAMztE,GACNysE,EAAazsE,OAIjB,IAAI,IAAI1E,EAAI,EAAGzH,EAAS+gB,KAAKC,IAvFT64D,EAAAA,EAuF0BR,EAAQr5E,QAASyH,EAAIzH,IAAUyH,EAC3E6xE,OAED3uE,OAAOwB,IACJ,CAAC,mBAAmB8f,SAAS9f,IAC/BvK,KAAKG,IAAIZ,MAAM,kBAAmBgL,SAKxC,MAAM0rE,EAAc,KAClB,GAAG12E,EACD,MAAMA,GAsBV,OAlBAnE,EAAS26E,OAAS,KAChB,IAAIx2E,IAAUw3E,EAAU,CACtB,MAAMx3E,EAAQ,IAAI0M,MAAM,YACxB1M,EAAME,KAAO,oBACbu3E,EAAaz3E,KAIjBnE,EAASuwC,OAAUgL,IACjB32C,KAAKwc,UAAU7V,cAAc,oBAAqBgwC,IAGpD32C,KAAKu0E,iBAAiBxpC,GAAY3vC,EAElCA,EAAS2N,MAAMC,EAAA,GAAMC,SAAQ,YACpBjJ,KAAKu0E,iBAAiBxpC,MAGxB3vC,EAGFwuC,cAAcvsC,GACnB,IAAI,MAAC8a,EAAK,MAAEixB,GAAS/rC,EACrB,MAAMopD,EAAsB,UAAZtuC,EAAM7Z,EACtB,GAAe,eAAZ6Z,EAAM7Z,GAAuBmoD,IAAYrd,EAC1C,OAAOznC,QAAQC,OAAO,4BAIxB,MAAM2kD,EAAyB,aAAZpuC,EAAM7Z,EACtBioD,EAAYpuC,EAAQnY,KAAK8zC,eAAevK,OAAOpxB,EAAM5Z,IAChDkoD,IAAStuC,EAAQnY,KAAK+zC,iBAAiB4V,SAASxxC,EAAM5Z,KAE9D,MAAM,SAACwsC,EAAQ,gBAAE5X,IAAmB,EAAA+kD,GAAA,GAAwB76E,GAE5D,IAAIuN,EAAU5K,KAAKw2E,YAAYzrC,GAY/B,OAXIngC,IACFA,EAAU5K,KAAK0R,SAASyhB,GAErBozB,IAAend,IAChBppC,KAAKwc,UAAU7V,cAAc,uBAAwBwR,EAAM5Z,IAC3DqM,EAAQ7B,MAAMC,EAAA,GAAMC,SAAQ,KAC1BjJ,KAAKwc,UAAU7V,cAAc,sBAAuBwR,EAAM5Z,SAKzDqM,EAGFutE,iBAAiB96E,GACtB,MAAM,MAAC8a,EAAK,MAAEixB,GAAS/rC,EAEvB,IAAIstC,EAAe3qC,KAAK+mC,cAAcmC,gBAAgB/wB,EAAcixB,MAAAA,OAAK,EAALA,EAAO3pC,MAC3E,QAAI2pC,GAASuB,EAAaK,aAAe,SAAU5B,EAAQA,EAAMt1B,KAAO,KAAe62B,EAAatrC,IAC3FsC,QAAQM,QAAQ0oC,EAAatrC,KAG/BW,KAAK4pC,cAAcvsC,GAAS2H,MAAMuuB,IACvC,IAAIoX,EAAaK,YAAcL,EAAaK,WAAazX,EAAKzf,KAAM,CAClE,MAAMzU,EAAMm0B,IAAIC,gBAAgBF,GAChCoX,EAAe3qC,KAAK+mC,cAAcoC,mBAAmBhxB,EAAcwyB,EAAalrC,KAAMJ,EAAKk0B,EAAKzf,MAGlG,OAAO62B,EAAatrC,OAIjB+4E,kBAAkB/6E,GACvB,OAAO2C,KAAK4pC,cAAcvsC,GAAS2H,KAAKgE,EAAA,GAGlCjF,OAAOgnC,GAGb,cADO/qC,KAAKu0E,iBAAiBxpC,GACtB/qC,KAAK41E,iBAAiB7xE,OAAOgnC,GAG/Bp5B,QAAO,KAAC0nB,EAAI,SAAE0R,IACnB,MAAMstC,EAAWh/C,EAAKvlB,KACpBwkE,EAAYD,GAAY,SAE1B,IAAIvC,GAAW,EACbiB,GAAW,EACXwB,EAAY,EACZC,EAAW,OAKAH,EAAW,SACtBG,EAAW,OACHH,EAAW,SACnBG,EAAW,OAGbztC,IAAAA,GAAa,EAAA2c,GAAA,GAAqBruB,IAElC,MAAMg8C,EAAcr1E,KAAKm2E,SAASqC,GAE5BC,EAAat5D,KAAKokB,KAAK80C,EAAWG,GAClCE,GAAS,UAEf,IAAIC,EAAQ,EAEZ,MAAMC,EAA6B,CACjCt6E,EAAGg6E,EAAY,eAAiB,YAChC/5E,GAAIm6E,EACJG,MAAOJ,EACPx4E,KAAM8qC,EACN+tC,aAAc,IAGV19E,GAAW,SACjB,GAAGq9E,EAAa,IAEd,OADAr9E,EAASwG,OAAO,CAACnC,KAAM,iBAChBrE,EAGT,IAAI47E,EAAgBz3E,IACC,qBAAhBA,MAAAA,OAAK,EAALA,EAAOE,OACRO,KAAKG,IAAIZ,MAAM,WAAYA,GAG7BnE,EAASwG,OAAOrC,GAChBu2E,GAAW,EACXkB,EAAe,QAGjB,MAAMltE,EAASwuE,EAAY,yBAA2B,sBAEhD/5E,EAAKyB,KAAK47C,SAMV1sB,EAAOlvB,KAiEP+4E,EAhEN,YACE,IAAI,IAAI/vD,EAAS,EAAGA,EAASqvD,EAAUrvD,GAAUwvD,EAAU,CACzD,MAAMngC,EAAOsgC,UACPzpD,EAAKkmD,gBAAgB,SAAU72E,GAAI,KAGvC,OEzsBoCg1B,EFusBvB8F,EAAK1xB,MAAMqhB,EAAQA,EAASwvD,GGnsBpC,SAAoBjlD,EAAYzpB,GAE7C,OAAO,IAAInI,SAAcM,IACvB,MAAM+2E,EAAS,IAAIC,WACnBD,EAAOxyE,iBAAiB,WAAYjE,IAElCN,EAAQM,EAAEG,OAAON,WAEnB42E,EAAa,kBAAEzlD,MDXV2lD,CAAW3lD,IFwsByBvuB,MAAMiF,IACvC,GAAG6rE,EACD,KAAM,CAACr2E,KAAM,mBA6Bf,OA1BAyvB,EAAK5lB,OAAS4lB,EAAK/uB,IAAI,2BAA4Bm4E,EAAWjgC,EAAMpuC,EAAOK,WAAY,IAAIF,WAAWH,GAAQ7L,OAAQ,IAAIgM,WAAWH,GAAQtC,QAAQvJ,QA0B9I8wB,EAAK7a,WAAWC,UAAUxK,EAAQ,CACvCqvE,QAAST,EACTU,UAAW/gC,EACXghC,iBAAkBZ,EAClB1qE,MAAO9D,GACC,CAERqvE,YAAY,IACXt0E,MAAK,KACN,GAAG8wE,EACD,SAGAyC,EACF,MAAM5hC,EAAqB,CAACyR,KAAMmwB,EAAYC,EAAUxvD,OAAAA,EAAQ6tB,MAAOwhC,EAAUttC,SAAAA,GACjF3vC,EAASuwC,OAAOgL,GAEb4hC,GAAaE,IACdr9E,EAAS6G,QAAQ22E,GACjB7B,GAAW,KAEZC,ME7vBA,IAA+BzjD,IF+vBnC8hD,GAAatsE,MAAMiuE,IAIfuC,GACLnsE,EAAU,KACd,GAAG0oE,EAAU,OACb,MAAMvwE,EAAIwzE,EAAGt9E,OACV8J,EAAE6iD,MAAQ0tB,GACZvwE,EAAEhB,MAAwBS,KAAKoI,IAQlC,IAAI,IAAIvH,EAAI,EAAGzH,EAAS+gB,KAAKC,IALT64D,EAAAA,EAK0BQ,GAAa5yE,EAAIzH,IAAUyH,EACvEuH,IAmBF,OAhBAhS,EAAS26E,OAAS,KAEZD,GAAaiB,IACfjB,GAAW,EACXkB,EAAa,CAACv3E,KAAM,sBAIxBrE,EAASuwC,OAAUgL,IACjB32C,KAAKwc,UAAU7V,cAAc,oBAAqBgwC,IAGpDv7C,EAAS6N,SAAQ,YACRjJ,KAAKw0E,eAAezpC,MAGtB/qC,KAAKw0E,eAAezpC,GAAY3vC,G,0BInxB5B,MAAeo+E,WAA0BrmE,EAwBtDrT,cACEsG,QAvBM,KAAAkP,OAA0C,GAC1C,KAAAmkE,yBAEJ,GACI,KAAAC,kBAEJ,GACI,KAAAC,qBAUJ,GAOF35E,KAAK45E,mBAAqB,EAKrBjkE,QAAQC,GAEb,OAAO5V,KAAK65E,YAAYjkE,EAAKrX,IAKxBonD,eAA8C77C,EAAW4K,EAAkC,GAAIrX,EAA4B,IAChI,IAAIoK,EAAIpK,EAOR,OANAoK,EAAEqyE,qBAAuB,MAAO95E,KAAK45E,mBAErCnyE,EAAI,OAAH,UAAOpK,GACPA,EAAsB0R,UAAYtH,EAAEqyE,qBAG9B95E,KAAKsU,UAAUxK,EAAQ4K,EAAQjN,GAGjC4iC,kBAAoD5iC,G,QAQjD,QAAR,EAAAA,EAAEiN,cAAM,QAARjN,EAAEiN,OAAW,IACJ,QAAT,EAAAjN,EAAEpK,eAAO,QAAToK,EAAEpK,QAAY,IAGd,MAAM,OAACqX,EAAM,QAAErX,EAAO,OAAEyM,GAAUrC,EAE5BsyE,EAAYp6E,KAAKC,UAAU8U,GACjC,IAAI6T,EAQJ,OAPGvoB,KAAKsV,OAAOxL,KACbye,EAASvoB,KAAKsV,OAAOxL,GAAQiwE,GAC1BxxD,IACA7T,EAAe4mB,KAAO/S,EAAO+S,OAI3Bt7B,KAAKk7B,uBAA6B,CACvCpxB,OAAAA,EACAqxB,cAAgB/4B,IACd,GAAGA,EAAO9D,EAAE+rB,SAAS,eAEnB,OAAO9B,EAAOnmB,OAGhB,GAAGA,EAAOk5B,KAA+B,CACvC,MAAMA,EAAOl5B,EAAOk5B,KAEhBt7B,KAAKsV,OAAOxL,KAAS9J,KAAKsV,OAAOxL,GAAU,IAC/C9J,KAAKsV,OAAOxL,GAAQiwE,GAAa,CAC/Bz+C,KAAAA,EACAl5B,OAAAA,GAIJ,OAAGqF,EAAE0zB,cACI1zB,EAAE0zB,cAAc/4B,GAGlBA,GAETsS,OAAAA,EACArX,QAAAA,IAIGwvB,gBAA+C/iB,EAAW4K,EAAkC,GAAWrX,EAA4B,IACxI,MAAMgoC,EAAIv7B,EAAS,IAAMnK,KAAKC,UAAU8U,GAClCk4D,EAAQ5sE,KAAK05E,kBACnB,OAAG9M,EAAMvnC,GACAunC,EAAMvnC,GAGRunC,EAAMvnC,GAAKrlC,KAAKsU,UAAUxK,EAAQ4K,EAAQrX,GAAS4L,SAAQ,YACzD2jE,EAAMvnC,MAIVnK,uBAAyDzzB,G,UAOtD,QAAR,EAAAA,EAAEiN,cAAM,QAARjN,EAAEiN,OAAW,IACJ,QAAT,EAAAjN,EAAEpK,eAAO,QAAToK,EAAEpK,QAAY,IAEd,MAAM,OAACyM,EAAM,cAAEqxB,EAAa,aAAE0pC,EAAY,OAAEnwD,EAAM,QAAErX,GAAWoK,EACzDmlE,EAAQ5sE,KAAKy5E,yBACbO,EAAW38E,EAAQ28E,UAAYr6E,KAAKC,UAAU8U,GAC9CtQ,EAAmB,QAAb,EAAAwoE,EAAM9iE,UAAO,QAAK8iE,EAAM9iE,GAAU,IAAItB,IAC5CyxE,EAAa71E,EAAIM,IAAIs1E,GAC3B,GAAGC,EACD,OAAOA,EAGT,MAGM5lD,EAHkBr0B,KAAKsU,UAAUxK,EAAQ4K,EAAQrX,GACC2H,KAAKm2B,EAAe0pC,GAEvD57D,SAAQ,KAC3B7E,EAAIL,OAAOi2E,GACP51E,EAAI0P,aACC84D,EAAM9iE,MAKjB,OADA1F,EAAI+D,IAAI6xE,EAAU3lD,GACXA,EAGFoH,mBAAkD3xB,EAAW4K,EAAkC,GAAWrX,EAAiF,I,MAChM,MAAMuvE,EAAyC,QAAjC,EAAA5sE,KAAK25E,qBAAqB7vE,UAAO,QAAK9J,KAAK25E,qBAAqB7vE,GAAU,GAClFiwE,EAAYp6E,KAAKC,UAAU8U,GAC3B+rB,EAAOmsC,EAAMmN,GACnB,GAAGt5C,KAAUpjC,EAAQ0xB,WAAa0R,EAAK26B,WACrC,OAAO36B,EAAK71B,QAYd,IAAIzF,EATD9H,EAAQ0xB,WACN0R,GAAQA,EAAKt7B,UACdD,aAAau7B,EAAKt7B,gBACXs7B,EAAKt7B,gBAGP9H,EAAQ0xB,UAId1xB,EAAQq+B,eACTv2B,EAAUwK,EAAA,cAAe,YAChBi9D,EAAMmN,KACW,IAAvB18E,EAAQq+B,qBACJr+B,EAAQq+B,cAGjB,MAAM9wB,EAAU5K,KAAKsU,UAAUxK,EAAQ4K,EAAQrX,GAU/C,OARAuvE,EAAMmN,GAAa,CACjBngD,UAAWtqB,KAAKvK,MAChBq2D,WAAW,EACXj2D,QAAAA,EACAyF,QAAAA,EACA8J,OAAAA,GAGK9J,EAGFurB,WAA0CrsB,EAAW8mD,GAC1D,MAAMgc,EAAQ5sE,KAAK25E,qBAAqB7vE,GACxC,GAAG8iE,EACD,IAAI,MAAMmN,KAAanN,EAAO,CAC5B,MAAMnsC,EAAOmsC,EAAMmN,GACnB,IACKnpB,EAAOnwB,EAAK/rB,UACV+rB,EAAKt7B,SACND,aAAau7B,EAAKt7B,gBAGbynE,EAAMmN,IAEf,MAAMxvE,MAOPihB,YACL,OAAOxrB,KAAKy7B,mBAAmB,kBAG1Bq3B,aAAalmC,GAClB,GAAG5sB,KAAK6yD,YAAcjmC,EAAW,OAAO5sB,KAAK6yD,UAC7C,GAAG7yD,KAAKk6E,sBAAwBttD,EAAW,OAAO5sB,KAAKk6E,oBACvD,MAAMtvE,EAAgC5K,KAAKk6E,oBAAsBl6E,KAAKsU,UAAU,qBAAqBtP,MAAM8nD,I,MtCzNtEj3B,EsC0NnC,OAAG71B,KAAKk6E,sBAAwBtvE,EACvB5K,KAAKk6E,qBAGdl6E,KAAK6yD,UAAY/F,EtC9NkBj3B,EsC+NuB,QAAjC,EAAAi3B,EAAOqtB,kCAA0B,QAAI,GtC9NlExkD,GAAOtxB,QACPwxB,EAAQ3yB,SAASguB,IACfyE,GAAOhf,IAAIua,MsC6NF47B,MAGT,OAAOliD,G,sTCnKJ,MAAMwvE,WAAmBZ,GA8B9B15E,cACEsG,QACApG,KAAKG,KAAM,EAAAsJ,EAAA,IAAO,OAElBzJ,KAAKq6E,iBAAmB,GACxBr6E,KAAKs6E,oBAAsB,GAC3Bt6E,KAAKu6E,kBAAoB,GACzBv6E,KAAKw6E,SAAW,EAChBx6E,KAAKy6E,oBAAsB,GAE3Bz6E,KAAKsR,cAAgB,cAGrB,mBAAqC,aAAcA,IACjDtR,KAAK06E,oBAAoBppE,MAwBrBqpE,iBAAiB7pE,GAUvB,OAHqC9Q,KAAKsR,cAMpCspE,kBAAkBh2E,GACxB,IAAI,MAAM0M,KAAiBtR,KAAKq6E,iBAAkB,CAChD,MAAMQ,EAAc76E,KAAKq6E,iBAAiB/oE,GAC1C,IAAI,MAAMR,KAAkB+pE,EAAa,CACvC,MAAMC,EAAMD,EAAY/pE,GACxB,IAAI,MAAMpI,KAAQoyE,EACGA,EAAIpyE,GACZxF,SAAQ,CAACyH,EAAWnG,EAAKuH,KAClCnH,EAAS,CACP+F,UAAAA,EACAjC,MAAOA,EACPoI,eAAgBA,EAChBQ,cAAeA,EACfnQ,MAAOqD,EACPu2E,MAAOhvE,SAQXsF,aAAa3I,EAAYoI,EAAgCQ,GAC/D,OAAOtR,KAAKoS,eAAef,aAAa3I,EAAMoI,EAAgBQ,EAAkC,WAAnBR,EAA6B9Q,KAAKwc,UAAUjW,SAGpHm0E,oBAAoBppE,GACzB,MAAM0pE,EAAmBh7E,KAAKsR,cAC9B,GAAG0pE,IAAqB1pE,EACtB,OAGFtR,KAAKG,IAAI,0BAA2B66E,EAAkB,KAAM1pE,GAE5D,MAAM2pE,EAAYj7E,KAAKq6E,iBAAiBW,GAClCnjE,EAAY7X,KAAKq6E,iBAAiB/oE,GACxCtR,KAAKq6E,iBAAiB/oE,GAAiB2pE,EACvCj7E,KAAKq6E,iBAAiBW,GAAoBnjE,EAE1C7X,KAAKsR,cAAgBA,EAErB,IAAI,MAAM4pE,KAAal7E,KAAKu6E,kBAAmB,CAC7C,MAAM3vE,EAAU5K,KAAKu6E,kBAAkBW,UAChCl7E,KAAKu6E,kBAAkBW,GAE9B,MAAMC,EAAYD,EAAUx9E,QAAQs9E,EAAkB1pE,GACtDtR,KAAKu6E,kBAAkBY,GAAavwE,EAEpC5K,KAAKG,IAAI,gCAAiC+6E,EAAW,KAAMC,GAG7Dn7E,KAAK46E,mBAAmBQ,IACtB,MAAM9pE,EAAgBtR,KAAK26E,iBAAiBS,EAAKtqE,gBAC3CgB,EAAY9R,KAAKqR,aAAa+pE,EAAK1yE,KAAM0yE,EAAKtqE,eAAgBQ,GACpEtR,KAAKq7E,yBAAyBD,EAAKzwE,UAAWmH,MAIrCwpE,c,0CACX,GAAGt7E,KAAKw6E,SACN,OAAOx6E,KAAKw6E,SAGd,MAAMA,QAAiBjjC,GAAA,MAAmB,MAS1C,OARIv3C,KAAKw6E,WACHA,EAGFx6E,KAAKw6E,SAAWA,EAFhBx6E,KAAKu7E,YAAY,eAMdv7E,KAAKw6E,YAGDX,YAAY2B,G,0CAOvB,GANwB,iBAAf,GAAgD,iBAAf,IACxCA,EAAW,CAACC,KAAM,EAAGr6D,KAAM9R,KAAKvK,MAAQ,IAAO,EAAGxG,GAAIi9E,EAAS/0E,UAAS,KAG1EzG,KAAKwc,UAAU7V,cAAc,YAAa60E,IAEtCA,EAASC,KAAM,CACjB,MAAMjB,QAAiBx6E,KAAKs7E,cAC5BE,EAASC,KAAOjB,EAGlBjjC,GAAA,MAAmB,CACjBmkC,UAAWF,OAMRD,YAAY7yE,GACjB,MAAMizE,EAAU37E,KAAKw6E,SAClBmB,GACD37E,KAAK47E,aAAaD,GAAS32E,MAAM2F,IAC/B3K,KAAK67E,mBAAmBlxE,MAI5B3K,KAAKw6E,SAAW9xE,EAEhB6uC,GAAA,MAAmB,CACjBukC,GAAI97E,KAAKw6E,WAIAuB,S,0CACX,GAAG/7E,KAAKg8E,WACN,OAGFh8E,KAAKg8E,YAAa,EAClB,MAAMC,EAAgC,GAGtC,IAAI,IAAIvzE,EAAO,EAAGA,GAAQ,EAAGA,IAC3BuzE,EAAY37E,KAFC,KAEaoI,EAAO,aAInC,MAAMwzE,QAAsBv6E,QAAQmR,IAAImpE,EAAY73E,KAAKiD,GAAQkwC,GAAA,MAAmBlwC,MAE9E80E,EAAiC,GACvC,IAAI,IAAIt2E,EAAI,EAAGA,EAAIq2E,EAAc99E,OAAQyH,IACpCq2E,EAAcr2E,IACfs2E,EAAe77E,KAAKN,KAAKsU,UAAU,cAAe,GAAI,CAAC5L,KAAO7C,EAAI,EAAYu2E,cAAc,KAIhG,MAAM/3E,EAAQ,IAAW,mCACvBrE,KAAKw6E,cAAW7uE,QAEV,EAAA0wE,GAAA,IAAe,GAAO,GAC5B,sBACAr8E,KAAKwc,UAAU7V,cAAc,kBAO/B,OAJA5E,WAAWsC,EAAO,KAIX1C,QAAQmR,IAAIqpE,GAAgBpzE,OAAOxJ,IACxCA,EAAMslD,SAAU,KACf57C,QAAQ5E,MAKLi4E,wBAAwB5zE,EAAY4I,EAA8BR,GACxE,MAAO,CAACpI,EAAM4I,EAAeR,GAAgBnS,KAAK,KAG7Ci9E,aAAalzE,EAAYrL,EAA4B,IAC1D,MAAMyT,EAAiCzT,EAAQ64E,aAAe,WAAc74E,EAAQi8E,WAAa,SAAW,SAGtGhoE,EAAgBtR,KAAK26E,iBAAiB7pE,GACxC9Q,KAAKq6E,iBAAiB/oE,KACxBtR,KAAKq6E,iBAAiB/oE,GAAiB,CACrCG,OAAQ,GACRC,SAAU,GACVC,OAAQ,KAIZ,MAAMi7D,EAAQ5sE,KAAKq6E,iBAAiB/oE,GAAeR,GAC9CpI,KAAQkkE,IACXA,EAAMlkE,GAAQ,IAGhB,MAAM6zE,EAAa3P,EAAMlkE,GAEnB8zE,EAAmC,WAAnB1rE,GAAiD,UAAlBQ,EAA4B,EAAKtR,KAAKwc,UAAUjW,QAnQnE,EACA,EAmQlC,GAAGg2E,EAAWn+E,QAAUo+E,EAAe,CACrC,IAAI32E,EAAI02E,EAAWn+E,OAAS,EAAGq+E,GAAQ,EACvC,KAAM52E,GAAK,IAAKA,EACd,GAAG02E,EAAW12E,GAAG62E,SAAU,CACzBD,GAAQ,EACR,MAIJ,MAAM9xE,EAAY8xE,EAAQF,EAAWxxE,OAAOlF,EAAG,GAAG,GAAK02E,EAAW30E,MAElE,OADA20E,EAAW90D,QAAQ9c,GACZhJ,QAAQM,QAAQ0I,GAGzB,IAAIihC,EAAS5rC,KAAKs8E,wBAAwB5zE,EAAM4I,EAAeR,GAC/D,GAAG9Q,KAAKu6E,kBAAkB3uC,GACxB,OAAO5rC,KAAKu6E,kBAAkB3uC,GAGhC,MAAM+wC,EAAgB,KAAKj0E,aACrB8mD,EAAmB,KAAK9mD,gBAE9B,IAAIoJ,EAAY9R,KAAKqR,aAAa3I,EAAMoI,EAAgBQ,GACxD,OAAOtR,KAAKu6E,kBAAkB3uC,GAAUjqC,QAAQmR,IAAI,CAAC6pE,EAAIntB,GAAIprD,KAAKiD,GAAQkwC,GAAA,MAAmBlwC,MAC5FrC,MAAK,EAAO43E,EAAYC,KAAmB,mCAC1C,IAAIlyE,EAAyBpL,EAC7B,GAAGq9E,GAAoC,MAAtBA,EAAWx+E,OAAgB,CACtCy+E,GAA0C,KAAzBA,EAAcz+E,SACjCy+E,EAAgB,oBAGlB,MAAMC,GAAU,EAAAC,GAAA,GAAaH,GACvBI,SAAmB,iBAA0B,OAAQF,IAAUn1E,OAAO,GACtEs1E,GAAa,EAAAF,GAAA,GAAaF,GAEhClyE,EAAY3K,KAAKk9E,iBAAiBtB,aAAalzE,EAAMo0E,EAASE,EAAWC,EAAY5/E,QAErF,IACE,MAAMqY,QAAa1V,KAAKm9E,WAAWznE,KAAKhN,GAExC6uC,GAAA,MAAmB,CACjB,CAAColC,GAAK7uE,EAAW4H,EAAKonE,SACtB,CAACttB,GAAK1hD,EAAW4H,EAAKunE,cAGxBtyE,EAAY3K,KAAKk9E,iBAAiBtB,aAAalzE,EAAMgN,EAAKonE,QAASpnE,EAAKsnE,UAAWtnE,EAAKunE,WAAY5/E,GACpG,MAAM45E,GACN13E,EAAQ03E,EAKZ,MAAMmG,EAAmBp9E,KAAK26E,iBAAiB7pE,GAmB/C,GAlBGssE,IAAqB9rE,IACtBs6B,EAAS5rC,KAAKs8E,wBAAwB5zE,EAAM00E,EAAkBtsE,GAC9DgB,EAAUrH,UACV8F,EAAe8sE,gBAAgBr9E,KAAKoS,eAAexB,cAAekB,GAE/DnH,IACDmH,EAAY9R,KAAKqR,aAAa3I,EAAMoI,EAAgBssE,IAGtDp9E,KAAKG,IAAI,uDAAwDmR,EAAe,KAAM8rE,WAOjFp9E,KAAKu6E,kBAAkB3uC,GAE3BrsC,EAED,MADAS,KAAKG,IAAI,sBAAuBZ,EAAQA,EAAgB+9E,OAClD/9E,EAMR,OAHAS,KAAKq7E,yBAAyB1wE,EAAWmH,GACzCyqE,EAAW90D,QAAQ9c,GACnB3K,KAAK67E,mBAAmBlxE,GACjBA,OAIJ4yE,iBAAiB70E,GACtB,OAAO1I,KAAK47E,aAAalzE,GAAM1D,KAAKgE,EAAA,EAAMA,EAAA,GAGpCqyE,yBAAyB1wE,EAAyBmH,GACxD,MAAM0rE,EAAe7yE,EAAUmH,UAC5B0rE,GACDjtE,EAAe8sE,gBAAgBr9E,KAAKoS,eAAexB,cAAe4sE,GAGpE7yE,EAAU8yE,gBAAgB3rE,GAGrB+pE,mBAAmBlxE,GACrBA,EAAU+yE,UAI0B/yE,EAAUgzE,gBAC/Ch8E,QAAQM,SAAQ,GAChBjC,KAAKs7E,cAAct2E,MAAMw1E,GAAa7vE,EAAUjC,OAAS8xE,KAC9Cx1E,MAAM44E,IACdjzE,EAAU+yE,SAIVE,IACDjzE,EAAU+yE,QAAU,KAClB19E,KAAKG,IAAI,kBAAmBwK,EAAUjC,MAEtCiC,EAAU+yE,aAAU/xE,EACpB3L,KAAKq7E,yBAAyB1wE,GAC9BA,EAAUF,UACVzK,KAAKk9E,iBAAiBW,gBAAgBlzE,GACtC4F,EAAe8sE,gBAAgBr9E,KAAKq6E,iBAAkB1vE,IAGxDA,EAAUmzE,sBAKTjsD,oBAAoBjtB,GACzB5E,KAAK+9E,iBAAmBn5E,EACxB5E,KAAKk9E,iBAAiBrrD,oBAAoBjtB,GAGrC0P,UAAyCxK,EAAW4K,EAAkC,GAAIrX,EAA4B,IAQ3H,MAAMjC,GAAW,SAEjB,IAAI,eAACmqD,EAAc,qBAAEu0B,GAAwBz8E,EAO7C,GANGy8E,GACD1+E,EAAS4J,MAAK,YACLhF,KAAKy6E,oBAAoBX,MAIjC,KAAgB,CACjB,MAAMkE,EAAY1uE,KAAKvK,MACjBk5E,EAAWtuE,EAAA,eAAgB,KAC3BuuE,GAAoBA,EAAgBC,aACtCn+E,KAAKG,IAAIZ,MAAM,+BAAgCuK,EAAQ4K,EAAQrX,EAAS,SAAUiS,KAAKvK,MAAQi5E,GAAa,OAG7G,KAEH5iF,EAAS2N,MAAMC,EAAA,GAAMC,SAAQ,KAC3Bm1E,cAAcH,MA2ClB,IAAIv1E,EAEAw1E,EACAZ,GAAQ,IAAKrxE,OAASqxE,OAAS,cACnC,MAAMe,EAAiB,KACrB,GAAG94B,EAAgB,CACjB,MAAMhpC,EAAQvc,KAAKy6E,oBAAoBl1B,GACpChpC,IACDlf,EAAQkoD,eAAiBhpC,EAAMxN,WAInC,MAAMnE,EAAUszE,EAAgBI,YAAYx0E,EAAQ4K,EAAQrX,GAS5D,OAPGy8E,IACD95E,KAAKy6E,oBAAoBX,GAAwB,CAC/C/qE,UAAY1R,EAAsB0R,UAClCnE,QAASxP,IAINwP,EAAQ7B,OAAOxJ,IAMpB,GAJkB,2BAAfA,EAAME,MACPO,KAAKG,IAAIZ,MAAM,QAASA,EAAMuW,KAAMvW,EAAME,KAAMO,KAAKw6E,SAAU9xE,EAAMoB,EAAQ4K,GAG7D,MAAfnV,EAAMuW,MAAgB9V,KAAKw6E,WAAa9xE,EAOzC,KANkB,4BAAfnJ,EAAME,OACP83C,GAAA,SAAsB,MACtBA,GAAA,SAAsB,cAIlBh4C,EACD,GAAkB,MAAfA,EAAMuW,MAAgB9V,KAAKw6E,UAAY9xE,IAAS1I,KAAKw6E,SAAU,CACvE,QAAsC7uE,IAAnC3L,KAAKs6E,oBAAoB5xE,GAAqB,CAC/C,MAAMkC,EAAU,IAAIjJ,SAAQ,CAAC48E,EAAeC,KAC1Cx+E,KAAKsU,UAAU,2BAA4B,CAAC8e,MAAO1qB,GAAO,CAACipB,YAAY,IAAO3sB,MAAMy5E,IAClFz+E,KAAKsU,UAAU,2BAA4B,CACzC/V,GAAIkgF,EAAalgF,GACjBwP,MAAO0wE,EAAa1wE,OACnB,CAACrF,KAAAA,EAAMipB,YAAY,IAAO3sB,KAAKu5E,EAAeC,KAChDA,MAGLx+E,KAAKs6E,oBAAoB5xE,GAAQkC,EAGnC,OAAO5K,KAAKs6E,oBAAoB5xE,GAAM1D,MAAK,IAAMq5E,MAC5C,GAAkB,MAAf9+E,EAAMuW,KAWT,IAAkB,MAAfvW,EAAMuW,MAAuD,IAAvCvW,EAAME,KAAKpD,QAAQ,gBAAuB,CACxE,MAAMqiF,GAAWn/E,EAAME,KAAK/C,MAAM,yBAAyB,GAC3D,GAAGgiF,IAAYh2E,EAEb,OADArL,EAAQqL,KAAOg2E,EACR1+E,KAAKsU,UAAUxK,EAAQ4K,EAAQrX,GAEtC,MAAMkC,EAEH,GAAkB,MAAfA,EAAMuW,MAA+B,0BAAfvW,EAAME,KAEpC,OADAO,KAAKk9E,iBAAiByB,wBACfN,IACF,GAAIhhF,EAAQuhF,UAA2B,MAAfr/E,EAAMuW,KAQ9B,KAAIzY,EAAQuhF,UAAY,CAAC,kBAAmB,oBAAoBv0D,SAAS9qB,EAAME,MAAO,CAC3F,MAAM8c,EAAQvc,KAAKy6E,oBAAoBl1B,GAKvC,OAHAA,OAAiB55C,SACVtO,EAAQkoD,eAEZhpC,EAAcA,EAAM3R,QAAQ5F,MAAK,IAAMq5E,MAC9BA,IACP,GAAIhhF,EAAQuhF,UAA2B,MAAfr/E,EAAMuW,KAU9B,IAAkB,YAAfvW,EAAME,KACd,OAAO,EAAAuL,EAAA,GAAM,KAAMhG,MAAK,IAAMq5E,MAE9B,MAAM9+E,EAb2C,CACjD,MAAMwF,EAAMuK,KAAKvK,MACjB,GAAG1H,EAAQq2C,UACN3uC,GAAO1H,EAAQq2C,SAChB,MAAMn0C,EAKV,OADAlC,EAAQwhF,SAAWxhF,EAAQwhF,SAAW1/D,KAAKC,IAAI,GAAuB,IAAnB/hB,EAAQwhF,UAAkB,GACtE,EAAA7zE,EAAA,GAAyB,IAAnB3N,EAAQwhF,UAAiB75E,MAAK,IAAMq5E,OAzBA,CACjD,MAAMQ,GAAYt/E,EAAME,KAAK/C,MAAM,qBAAqB,IAAM,EAE9D,GAAGmiF,QAAwClzE,IAA5BtO,EAAQyhF,gBAAgCzhF,EAAQyhF,gBAAkB,MAAQzhF,EAAQy8E,qBAC/F,MAAMv6E,EAGR,OAAO,EAAAyL,EAAA,GAAqC,IAA/B6zE,GAAqC75E,MAAK,IAAMq5E,OA7BjC,CAC5B,MAAMK,GAAWn/E,EAAME,KAAK/C,MAAM,yDAAyD,GAC3F,GAAGgiF,IAAYh2E,EAOb,OANGrL,EAAQqL,KACTrL,EAAQqL,KAAOg2E,EAEf1+E,KAAKu7E,YAAYmD,GAGZ1+E,KAAKsU,UAAUxK,EAAQ4K,EAAQrX,QA+C9C,IAAIg3B,EAiBJ,OAfEA,GADC3rB,EAAQrL,EAAQqL,MAAQ1I,KAAKw6E,UAC1Bx6E,KAAK47E,aAAalzE,EAAMrL,GAExB2C,KAAKs7E,cAAct2E,MAAMw1E,GAAax6E,KAAK47E,aAAalzE,EAAO8xE,EAAUn9E,KAG/Eg3B,EAAErvB,MAAM2F,IACNuzE,EAAkBvzE,EAClB,MAAMC,EAAUyzE,IAEhB,OADAH,EAAgBa,cAAc3jF,EAAUiC,GACjCuN,KAER5F,KAAK5J,EAAS6G,SACd8G,OA/J2BxJ,GAAoB,mCAY9C,GAXIA,GAEO,EAAA4hB,GAAA,GAAS5hB,KAClBA,EAAQ,CAACsC,QAAStC,IAFlBA,EAAQ,CAACE,KAAM,gBAKE,MAAfF,EAAMuW,MAA+B,oBAAfvW,EAAME,MACd,MAAfF,EAAMuW,MAA+B,wBAAfvW,EAAME,OAC7BO,KAAK+7E,SAGJ1+E,EAAQ++E,aACT,MAAM78E,EAuBR,MApBkB,MAAfA,EAAMuW,OACPvW,EAAMslD,SAAU,GAGdxnD,EAAQs0B,aACVpyB,EAAM04B,MAAQnuB,EACdvK,EAAM+9E,MAAQA,GAAU/9E,EAAMy/E,eAAiBz/E,EAAMy/E,cAAc1B,OAAU/9E,EAAM+9E,QAAS,IAAKrxE,OAASqxE,MAC1Gv7E,YAAW,KACLxC,EAAMslD,UACU,MAAftlD,EAAMuW,MACP9V,KAAK+7E,SAKPx8E,EAAMslD,SAAU,KAEjB,MAGCtlD,OA4HPwJ,MAAM3N,EAASwG,QAETxG,GCzoBX,MAAM6jF,GAIJn/E,cAHQ,KAAAo/E,YAAiD,IAAI12E,IACrD,KAAA22E,cAAmD,IAAI32E,IAG7DxI,KAAKgvB,cAAa,GAGVzS,QACRvc,KAAKwc,UAAUhW,iBAAiB,aAAa,KAC3CxG,KAAKwkB,YAAYxkB,KAAK4c,gBAAgBxF,OAAQ,WAI3CoN,YAAYpN,EAAgB/P,GACjC,IAAIc,EAAMnI,KAAKk/E,YAAYx6E,IAAI0S,GAC5BjP,GAAOA,EAAIygB,IAAIvhB,KAIdc,IACFA,EAAM,IAAIqO,IACVxW,KAAKk/E,YAAY/2E,IAAIiP,EAAQjP,IAG/BA,EAAIwO,IAAItP,GAERrH,KAAK2G,cAAc,aAAcyQ,IAG5B+N,YAAY/N,EAAgB/P,GACjC,MAAMc,EAAMnI,KAAKk/E,YAAYx6E,IAAI0S,GAC7BjP,IAIJA,EAAIpE,OAAOsD,GAEPc,EAAI2L,OACN9T,KAAKk/E,YAAYn7E,OAAOqT,GACxBpX,KAAK2G,cAAc,eAAgByQ,KAIhCgN,mBAAmBrM,EAAiC1Q,GACtDvG,MAAMmD,QAAQ8T,KACfA,EAAU,IAAIvB,IAAIuB,IAGpB,IAAI5P,EAAMnI,KAAKm/E,cAAcz6E,IAAI2C,GACjC,GAAGc,EAAK,CACN,IAAI,MAAMiP,KAAUjP,EACf4P,EAAQ6Q,IAAIxR,KAIfpX,KAAKmlB,YAAY/N,EAAQ/P,GACzBc,EAAIpE,OAAOqT,IAGb,IAAIjP,EAAI2L,OAASiE,EAAQjE,KAEvB,YADA9T,KAAKm/E,cAAcp7E,OAAOsD,GAK9B,GAAG0Q,EAAQjE,KAAM,CACX3L,IACFA,EAAM,IAAIqO,IACVxW,KAAKm/E,cAAch3E,IAAId,EAAKc,IAG9B,IAAI,MAAMiP,KAAUW,EACf5P,EAAIygB,IAAIxR,KAIXpX,KAAKwkB,YAAYpN,EAAQ/P,GACzBc,EAAIwO,IAAIS,KAKP4e,aAAa5e,GAClB,OAAOpX,KAAKk/E,YAAYt2D,IAAIxR,IAQhC8V,GAAY+xD,GAAc,CAAC,IAAmB9rE,IAE9C,YCrFe,MAAMisE,GAArB,cACU,KAAAC,YAA2B,GAE5Bn2C,gBAAgB/wB,EAA6B4gD,EAAoBumB,Q,UAKtE,MAAMj4E,EAAM8Q,EAAM7Z,EAAI6Z,EAAM5Z,GACtBquE,EAA4B,QAAvB,KAAG5sE,KAAKq/E,aAAYh4E,UAAG,UAAHA,GAAS,GACxC,OAAsB,QAAtB,EAAOulE,EAAM7T,UAAS,QAAf6T,EAAM7T,GAAe,CAAC/tB,WAAY,EAAG3rC,IAAK,GAAII,KAAMs5D,GAGtD5vB,mBAAmBhxB,EAA6B4gD,EAAoBumB,OAAejgF,EAAa2rC,EAAqB,GAC1H,MAAML,EAAe3qC,KAAKkpC,gBAAgB/wB,EAAO4gD,GAGjD,OAFApuB,EAAatrC,IAAMA,EACnBsrC,EAAaK,WAAaA,EACnBL,EAGF3D,mBAAmB7uB,EAA6B4gD,EAAoBumB,QACzE,MAAMj4E,EAAM8Q,EAAM7Z,EAAI6Z,EAAM5Z,GACtBquE,EAAQ5sE,KAAKq/E,YAAYh4E,GAC5BulE,UACMA,EAAM7T,ICrBnB,UAAgB,QAAU,CAAC,aAAe,CAAC,CAAC,GAAK,UAAU,UAAY,SAAS,OAAS,GAAG,KAAO,YAAY,CAAC,GAAK,SAAS,UAAY,QAAQ,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,KAAK,KAAO,SAAS,CAAC,KAAO,iCAAiC,KAAO,iBAAiB,KAAO,SAAS,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,mBAAmB,KAAO,UAAU,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,SAAS,CAAC,KAAO,MAAM,KAAO,SAAS,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,UAAU,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,+BAA+B,CAAC,GAAK,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,+BAA+B,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,+BAA+B,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,QAAQ,CAAC,KAAO,kBAAkB,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,wBAAwB,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,qBAAqB,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,YAAY,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,UAAU,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,SAAS,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,GAAK,SAAS,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,GAAG,KAAO,sBAAsB,QAAU,CAAC,CAAC,IAAM,WAAW,OAAS,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,SAAS,CAAC,IAAM,UAAU,OAAS,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,yBAAyB,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,UAAU,KAAO,oBAAoB,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,UAAU,KAAO,+BAA+B,CAAC,GAAK,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,WAAW,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,eAAe,CAAC,GAAK,WAAW,OAAS,OAAO,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,QAAQ,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,YAAY,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,YAAY,CAAC,IAAM,UAAU,OAAS,mBAAmB,OAAS,GAAG,KAAO,uBAAuB,IAAM,CAAC,aAAe,CAAC,CAAC,IAAM,WAAW,UAAY,YAAY,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,WAAW,UAAY,WAAW,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,OAAO,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,UAAU,UAAY,SAAS,OAAS,GAAG,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,QAAQ,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,SAAS,CAAC,GAAK,WAAW,UAAY,OAAO,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,WAAW,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,cAAc,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,kBAAkB,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,eAAe,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,UAAU,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,UAAU,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,QAAQ,UAAY,mBAAmB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,cAAc,CAAC,GAAK,QAAQ,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,aAAa,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,wBAAwB,CAAC,KAAO,eAAe,KAAO,4BAA4B,CAAC,KAAO,wBAAwB,KAAO,8BAA8B,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,oBAAoB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,KAAO,kBAAkB,KAAO,+BAA+B,CAAC,KAAO,WAAW,KAAO,2BAA2B,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,2BAA2B,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,4BAA4B,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,yBAAyB,CAAC,KAAO,sBAAsB,KAAO,4BAA4B,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,4BAA4B,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,2BAA2B,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,UAAU,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,4BAA4B,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,8BAA8B,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,wBAAwB,CAAC,KAAO,eAAe,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,2BAA2B,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,mBAAmB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,6BAA6B,CAAC,KAAO,qBAAqB,KAAO,sCAAsC,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,8BAA8B,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,aAAa,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,SAAS,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,wBAAwB,KAAO,OAAO,CAAC,KAAO,yBAAyB,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,KAAO,MAAM,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,wBAAwB,CAAC,KAAO,YAAY,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,SAAS,CAAC,IAAM,SAAS,UAAY,QAAQ,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,cAAc,KAAO,6BAA6B,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,SAAS,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,aAAa,CAAC,GAAK,SAAS,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,GAAG,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,yBAAyB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,yBAAyB,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,8BAA8B,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,6BAA6B,CAAC,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,KAAO,cAAc,KAAO,8BAA8B,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,yBAAyB,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,qBAAqB,KAAO,kBAAkB,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,YAAY,CAAC,KAAO,WAAW,KAAO,8BAA8B,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,KAAO,wBAAwB,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,KAAO,uBAAuB,KAAO,mBAAmB,CAAC,KAAO,yBAAyB,KAAO,4BAA4B,CAAC,KAAO,6BAA6B,KAAO,6BAA6B,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,eAAe,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,2BAA2B,CAAC,KAAO,kBAAkB,KAAO,0BAA0B,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,uBAAuB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,uBAAuB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,mBAAmB,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,4BAA4B,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,QAAQ,UAAY,yBAAyB,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,qBAAqB,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,eAAe,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,oBAAoB,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,SAAS,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,yBAAyB,KAAO,4BAA4B,CAAC,KAAO,gBAAgB,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,yBAAyB,KAAO,4BAA4B,CAAC,KAAO,gBAAgB,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,GAAG,KAAO,WAAW,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,4BAA4B,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,8BAA8B,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,4BAA4B,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,8BAA8B,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,oBAAoB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,mBAAmB,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,SAAS,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,4BAA4B,KAAO,gBAAgB,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,oBAAoB,CAAC,KAAO,qBAAqB,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,sBAAsB,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,wBAAwB,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,sBAAsB,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,OAAO,CAAC,KAAO,uBAAuB,KAAO,OAAO,CAAC,KAAO,iBAAiB,KAAO,OAAO,CAAC,KAAO,wBAAwB,KAAO,OAAO,CAAC,KAAO,uBAAuB,KAAO,OAAO,CAAC,KAAO,6BAA6B,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,2BAA2B,KAAO,OAAO,CAAC,KAAO,4BAA4B,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,uBAAuB,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,OAAO,CAAC,KAAO,yBAAyB,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,UAAU,CAAC,KAAO,wBAAwB,KAAO,kBAAkB,CAAC,KAAO,sBAAsB,KAAO,kBAAkB,CAAC,KAAO,wBAAwB,KAAO,mBAAmB,CAAC,KAAO,sBAAsB,KAAO,mBAAmB,CAAC,KAAO,uBAAuB,KAAO,mBAAmB,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,sBAAsB,KAAO,kBAAkB,CAAC,KAAO,oBAAoB,KAAO,eAAe,CAAC,KAAO,yBAAyB,KAAO,gBAAgB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,qBAAqB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,oBAAoB,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,UAAU,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,SAAS,CAAC,KAAO,kBAAkB,KAAO,SAAS,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,kBAAkB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,iCAAiC,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,kBAAkB,KAAO,iCAAiC,CAAC,IAAM,SAAS,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,qBAAqB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,6BAA6B,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,UAAU,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,6BAA6B,CAAC,KAAO,eAAe,KAAO,6BAA6B,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,8BAA8B,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,uBAAuB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,SAAS,UAAY,0BAA0B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,CAAC,KAAO,QAAQ,KAAO,wBAAwB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,iCAAiC,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,oCAAoC,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,oBAAoB,CAAC,IAAM,OAAO,UAAY,4BAA4B,OAAS,GAAG,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,kBAAkB,CAAC,GAAK,SAAS,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,cAAc,KAAO,uBAAuB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,kBAAkB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,qBAAqB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,iBAAiB,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,kCAAkC,OAAS,GAAG,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,uBAAuB,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,6BAA6B,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,WAAW,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,UAAU,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,sCAAsC,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,8BAA8B,KAAO,gBAAgB,CAAC,KAAO,yBAAyB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,yBAAyB,KAAO,OAAO,CAAC,KAAO,iBAAiB,KAAO,0BAA0B,KAAO,0BAA0B,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,2BAA2B,CAAC,KAAO,QAAQ,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,4BAA4B,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,kBAAkB,KAAO,yBAAyB,CAAC,KAAO,gBAAgB,KAAO,SAAS,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,kBAAkB,KAAO,iCAAiC,KAAO,4BAA4B,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,2BAA2B,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,sBAAsB,KAAO,iCAAiC,KAAO,iCAAiC,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,WAAW,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,yBAAyB,KAAO,cAAc,CAAC,GAAK,SAAS,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,QAAQ,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,eAAe,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,6BAA6B,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,YAAY,KAAO,qBAAqB,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,MAAM,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,MAAM,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,4BAA4B,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,sCAAsC,CAAC,KAAO,yBAAyB,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,oBAAoB,KAAO,QAAQ,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,sBAAsB,CAAC,KAAO,cAAc,KAAO,kBAAkB,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,2BAA2B,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,iBAAiB,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,6BAA6B,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,wBAAwB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,MAAM,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,qCAAqC,CAAC,KAAO,eAAe,KAAO,4BAA4B,CAAC,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,KAAO,wBAAwB,KAAO,6BAA6B,CAAC,KAAO,qBAAqB,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,KAAK,CAAC,KAAO,qBAAqB,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,qBAAqB,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,kBAAkB,KAAO,sBAAsB,CAAC,KAAO,kBAAkB,KAAO,+BAA+B,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,eAAe,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,aAAa,KAAO,sBAAsB,CAAC,KAAO,mBAAmB,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,4BAA4B,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,2BAA2B,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,2BAA2B,CAAC,KAAO,4BAA4B,KAAO,iBAAiB,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,yBAAyB,CAAC,KAAO,kBAAkB,KAAO,iBAAiB,CAAC,KAAO,sBAAsB,KAAO,4BAA4B,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,gBAAgB,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,GAAG,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,yBAAyB,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,WAAW,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,8BAA8B,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,gCAAgC,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,sBAAsB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,+BAA+B,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,6BAA6B,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,YAAY,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,wBAAwB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,gCAAgC,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,qBAAqB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,4BAA4B,CAAC,KAAO,UAAU,KAAO,4BAA4B,CAAC,KAAO,eAAe,KAAO,0BAA0B,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,UAAU,KAAO,uBAAuB,CAAC,KAAO,eAAe,KAAO,qBAAqB,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,6BAA6B,CAAC,KAAO,UAAU,KAAO,2BAA2B,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,oBAAoB,CAAC,KAAO,YAAY,KAAO,+BAA+B,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,oBAAoB,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,oCAAoC,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,mBAAmB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,SAAS,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,SAAS,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,8BAA8B,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,4BAA4B,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,gCAAgC,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,GAAK,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,GAAK,SAAS,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,gCAAgC,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,eAAe,KAAO,0BAA0B,KAAO,wBAAwB,CAAC,IAAM,OAAO,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,0BAA0B,KAAO,wBAAwB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,eAAe,KAAO,qBAAqB,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,2BAA2B,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,2BAA2B,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,SAAS,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,oBAAoB,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,gCAAgC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,IAAM,SAAS,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,uCAAuC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,6BAA6B,CAAC,KAAO,SAAS,KAAO,iBAAiB,KAAO,6BAA6B,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,qCAAqC,OAAS,GAAG,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,8BAA8B,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,0CAA0C,OAAS,GAAG,KAAO,oCAAoC,CAAC,GAAK,UAAU,UAAY,0CAA0C,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,8BAA8B,KAAO,oCAAoC,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,CAAC,KAAO,QAAQ,KAAO,aAAa,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,cAAc,CAAC,IAAM,SAAS,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,CAAC,KAAO,SAAS,KAAO,qBAAqB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,eAAe,KAAO,uBAAuB,CAAC,GAAK,SAAS,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,kBAAkB,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,qBAAqB,KAAO,QAAQ,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,0BAA0B,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,IAAM,SAAS,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,cAAc,KAAO,cAAc,CAAC,GAAK,SAAS,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,GAAG,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,qBAAqB,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,YAAY,CAAC,KAAO,iBAAiB,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,yBAAyB,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,aAAa,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,aAAa,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,cAAc,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,IAAI,KAAO,eAAe,CAAC,KAAO,IAAI,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,kBAAkB,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,qBAAqB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,SAAS,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,KAAO,WAAW,CAAC,IAAM,SAAS,UAAY,2BAA2B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,0BAA0B,CAAC,IAAM,UAAU,UAAY,mCAAmC,OAAS,GAAG,KAAO,0BAA0B,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,0BAA0B,CAAC,IAAM,SAAS,UAAY,6BAA6B,OAAS,GAAG,KAAO,0BAA0B,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,eAAe,KAAO,UAAU,CAAC,IAAM,SAAS,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,+BAA+B,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,UAAU,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,6BAA6B,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,wBAAwB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,wBAAwB,KAAO,yBAAyB,KAAO,WAAW,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,4BAA4B,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,YAAY,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,qBAAqB,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,gCAAgC,CAAC,KAAO,qBAAqB,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,kBAAkB,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,6BAA6B,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,iBAAiB,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,mBAAmB,KAAO,wBAAwB,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,2BAA2B,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,8BAA8B,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,8BAA8B,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,wBAAwB,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,oBAAoB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,KAAO,gBAAgB,KAAO,oBAAoB,CAAC,KAAO,aAAa,KAAO,gCAAgC,CAAC,KAAO,oBAAoB,KAAO,mCAAmC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,kBAAkB,CAAC,KAAO,mBAAmB,KAAO,mCAAmC,KAAO,mCAAmC,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,0BAA0B,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,OAAO,KAAO,gCAAgC,CAAC,KAAO,WAAW,KAAO,0BAA0B,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,oBAAoB,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,2BAA2B,CAAC,IAAM,SAAS,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,iCAAiC,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,KAAO,2BAA2B,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,2BAA2B,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,SAAS,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,yBAAyB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,gCAAgC,CAAC,KAAO,qBAAqB,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,SAAS,KAAO,UAAU,CAAC,IAAM,QAAQ,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,uBAAuB,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,cAAc,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,qBAAqB,CAAC,KAAO,eAAe,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,SAAS,CAAC,KAAO,kBAAkB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,qBAAqB,CAAC,KAAO,cAAc,KAAO,2BAA2B,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,kCAAkC,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,KAAO,mBAAmB,CAAC,IAAM,SAAS,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,kCAAkC,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,gBAAgB,KAAO,SAAS,CAAC,KAAO,cAAc,KAAO,qBAAqB,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,UAAU,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,yBAAyB,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,2BAA2B,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,uBAAuB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,qBAAqB,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,WAAW,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,WAAW,KAAO,6BAA6B,CAAC,IAAM,UAAU,UAAY,wCAAwC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,wCAAwC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,2CAA2C,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,wCAAwC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,YAAY,KAAO,UAAU,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,0CAA0C,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,yCAAyC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,wCAAwC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,WAAW,CAAC,KAAO,cAAc,KAAO,YAAY,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,0CAA0C,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,4CAA4C,OAAS,GAAG,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,6CAA6C,OAAS,GAAG,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,8CAA8C,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,iDAAiD,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,KAAO,kBAAkB,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,mDAAmD,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,KAAO,kBAAkB,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,+BAA+B,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,gCAAgC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,4BAA4B,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,kBAAkB,KAAO,+BAA+B,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,oCAAoC,OAAS,GAAG,KAAO,0BAA0B,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,qBAAqB,KAAO,0BAA0B,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,CAAC,KAAO,iBAAiB,KAAO,oBAAoB,KAAO,8BAA8B,CAAC,IAAM,SAAS,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,aAAa,KAAO,2BAA2B,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,mDAAmD,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,gCAAgC,KAAO,gBAAgB,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,gCAAgC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,eAAe,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,sBAAsB,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,uBAAuB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,0CAA0C,OAAS,GAAG,KAAO,gCAAgC,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,iBAAiB,KAAO,4BAA4B,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,SAAS,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,uCAAuC,OAAS,GAAG,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,8BAA8B,KAAO,6BAA6B,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,8BAA8B,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,wBAAwB,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,kCAAkC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,SAAS,UAAY,6BAA6B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,sCAAsC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,uCAAuC,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,aAAa,KAAO,sBAAsB,CAAC,KAAO,eAAe,KAAO,sBAAsB,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,cAAc,KAAO,8BAA8B,CAAC,KAAO,QAAQ,KAAO,8BAA8B,CAAC,KAAO,aAAa,KAAO,2BAA2B,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,eAAe,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,aAAa,KAAO,2BAA2B,CAAC,KAAO,eAAe,KAAO,2BAA2B,CAAC,KAAO,SAAS,KAAO,2BAA2B,CAAC,KAAO,cAAc,KAAO,mCAAmC,CAAC,KAAO,QAAQ,KAAO,mCAAmC,CAAC,KAAO,aAAa,KAAO,4BAA4B,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,SAAS,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,8BAA8B,CAAC,KAAO,SAAS,KAAO,uBAAuB,CAAC,KAAO,SAAS,KAAO,4BAA4B,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,mBAAmB,KAAO,6BAA6B,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,uBAAuB,CAAC,KAAO,cAAc,KAAO,+BAA+B,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,eAAe,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,QAAQ,UAAY,+BAA+B,OAAS,GAAG,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,kDAAkD,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,yBAAyB,CAAC,KAAO,gBAAgB,KAAO,SAAS,CAAC,KAAO,mBAAmB,KAAO,SAAS,KAAO,wBAAwB,CAAC,GAAK,UAAU,UAAY,oEAAoE,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,UAAU,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,IAAI,KAAO,SAAS,CAAC,KAAO,KAAK,KAAO,UAAU,KAAO,yBAAyB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,oBAAoB,KAAO,sBAAsB,CAAC,GAAK,SAAS,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,+BAA+B,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,aAAa,KAAO,uBAAuB,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,cAAc,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,SAAS,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,GAAK,SAAS,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,QAAQ,KAAO,YAAY,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,oBAAoB,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,YAAY,CAAC,KAAO,OAAO,KAAO,yBAAyB,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,SAAS,KAAO,aAAa,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gCAAgC,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,aAAa,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,YAAY,CAAC,KAAO,WAAW,KAAO,+BAA+B,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,YAAY,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,oBAAoB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,KAAO,QAAQ,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,SAAS,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,UAAU,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,OAAO,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,sBAAsB,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,aAAa,KAAO,gBAAgB,KAAO,QAAQ,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,oCAAoC,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,gBAAgB,KAAO,wBAAwB,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,oBAAoB,KAAO,kCAAkC,KAAO,eAAe,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,kBAAkB,KAAO,yBAAyB,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,oBAAoB,KAAO,kCAAkC,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,YAAY,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,WAAW,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,gDAAgD,OAAS,CAAC,CAAC,KAAO,qBAAqB,KAAO,oBAAoB,CAAC,KAAO,oBAAoB,KAAO,qBAAqB,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,qCAAqC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,sBAAsB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,eAAe,CAAC,KAAO,0BAA0B,KAAO,eAAe,CAAC,KAAO,yBAAyB,KAAO,eAAe,CAAC,KAAO,0BAA0B,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,OAAO,CAAC,KAAO,iBAAiB,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,0BAA0B,KAAO,QAAQ,KAAO,wBAAwB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,wBAAwB,CAAC,KAAO,SAAS,KAAO,wBAAwB,CAAC,KAAO,OAAO,KAAO,yBAAyB,KAAO,gCAAgC,CAAC,IAAM,UAAU,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,yBAAyB,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,WAAW,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,YAAY,CAAC,IAAM,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,GAAG,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,iBAAiB,KAAO,SAAS,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,gBAAgB,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,SAAS,UAAY,SAAS,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,yBAAyB,KAAO,gBAAgB,CAAC,KAAO,8BAA8B,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,2BAA2B,KAAO,OAAO,CAAC,KAAO,6BAA6B,KAAO,OAAO,CAAC,KAAO,8BAA8B,KAAO,OAAO,CAAC,KAAO,gCAAgC,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,cAAc,CAAC,IAAM,SAAS,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,cAAc,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,sBAAsB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,aAAa,CAAC,GAAK,SAAS,UAAY,6BAA6B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,SAAS,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,SAAS,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,0BAA0B,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,cAAc,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,yCAAyC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,IAAM,UAAU,UAAY,4CAA4C,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,uCAAuC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,SAAS,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,YAAY,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,wBAAwB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,2CAA2C,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,oBAAoB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,2CAA2C,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,mBAAmB,KAAO,gCAAgC,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,qCAAqC,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,0BAA0B,CAAC,GAAK,SAAS,UAAY,+BAA+B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,cAAc,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,QAAQ,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,oBAAoB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,KAAO,SAAS,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,GAAG,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,uBAAuB,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,uBAAuB,KAAO,iBAAiB,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,0BAA0B,CAAC,IAAM,WAAW,UAAY,mBAAmB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,SAAS,UAAY,eAAe,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,8BAA8B,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,sBAAsB,KAAO,eAAe,CAAC,KAAO,iBAAiB,KAAO,uBAAuB,CAAC,KAAO,YAAY,KAAO,0BAA0B,CAAC,KAAO,qBAAqB,KAAO,8BAA8B,KAAO,sBAAsB,CAAC,IAAM,SAAS,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,sBAAsB,KAAO,eAAe,CAAC,KAAO,iBAAiB,KAAO,uBAAuB,CAAC,KAAO,YAAY,KAAO,sBAAsB,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,4BAA4B,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,2BAA2B,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,4BAA4B,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,eAAe,CAAC,GAAK,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,eAAe,KAAO,qBAAqB,CAAC,KAAO,gBAAgB,KAAO,qBAAqB,CAAC,KAAO,gBAAgB,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,yBAAyB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,aAAa,KAAO,mBAAmB,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,YAAY,KAAO,wBAAwB,CAAC,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,KAAO,kBAAkB,KAAO,wBAAwB,CAAC,KAAO,wBAAwB,KAAO,qBAAqB,CAAC,KAAO,eAAe,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,cAAc,CAAC,KAAO,aAAa,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,cAAc,CAAC,KAAO,qBAAqB,KAAO,cAAc,CAAC,KAAO,wBAAwB,KAAO,cAAc,CAAC,KAAO,wBAAwB,KAAO,cAAc,CAAC,KAAO,gCAAgC,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,cAAc,CAAC,KAAO,8BAA8B,KAAO,uCAAuC,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,cAAc,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,kBAAkB,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,KAAO,aAAa,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,cAAc,CAAC,IAAM,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,uBAAuB,CAAC,IAAM,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,UAAU,KAAO,wBAAwB,CAAC,KAAO,WAAW,KAAO,wBAAwB,CAAC,KAAO,UAAU,KAAO,wBAAwB,CAAC,KAAO,UAAU,KAAO,wBAAwB,CAAC,KAAO,eAAe,KAAO,cAAc,CAAC,KAAO,gBAAgB,KAAO,cAAc,CAAC,KAAO,8BAA8B,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,cAAc,CAAC,KAAO,iBAAiB,KAAO,cAAc,CAAC,KAAO,gBAAgB,KAAO,cAAc,CAAC,KAAO,kBAAkB,KAAO,cAAc,CAAC,KAAO,iBAAiB,KAAO,cAAc,CAAC,KAAO,cAAc,KAAO,+BAA+B,CAAC,KAAO,aAAa,KAAO,8BAA8B,CAAC,KAAO,eAAe,KAAO,gCAAgC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,wCAAwC,KAAO,iBAAiB,KAAO,yBAAyB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,0BAA0B,CAAC,KAAO,WAAW,KAAO,2BAA2B,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,gBAAgB,KAAO,6BAA6B,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,gCAAgC,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,wBAAwB,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,UAAY,eAAe,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,2BAA2B,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,SAAS,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,IAAI,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,gBAAgB,KAAO,aAAa,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,wBAAwB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,yBAAyB,CAAC,IAAM,UAAU,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,oBAAoB,KAAO,eAAe,CAAC,KAAO,qBAAqB,KAAO,eAAe,CAAC,KAAO,eAAe,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,wBAAwB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,gBAAgB,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,cAAc,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,eAAe,CAAC,IAAM,WAAW,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,IAAI,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,eAAe,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,YAAY,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,wBAAwB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,4BAA4B,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,iBAAiB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,qBAAqB,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,oBAAoB,KAAO,eAAe,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,aAAa,CAAC,IAAM,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,mBAAmB,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,qCAAqC,CAAC,KAAO,eAAe,KAAO,uCAAuC,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,aAAa,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,eAAe,KAAO,gCAAgC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,gCAAgC,CAAC,KAAO,2BAA2B,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,gCAAgC,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,2BAA2B,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,GAAG,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,uBAAuB,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,uBAAuB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,GAAG,KAAO,uBAAuB,CAAC,GAAK,UAAU,UAAY,2CAA2C,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,4CAA4C,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,yBAAyB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,8CAA8C,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,yBAAyB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,mDAAmD,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,mCAAmC,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,aAAa,KAAO,2BAA2B,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,0BAA0B,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,gCAAgC,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,kCAAkC,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,gBAAgB,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,2BAA2B,CAAC,KAAO,kBAAkB,KAAO,2BAA2B,CAAC,KAAO,SAAS,KAAO,8BAA8B,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,8BAA8B,CAAC,KAAO,kBAAkB,KAAO,8BAA8B,CAAC,KAAO,SAAS,KAAO,8BAA8B,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,iBAAiB,KAAO,sBAAsB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,8BAA8B,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,gCAAgC,CAAC,GAAK,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,+BAA+B,CAAC,GAAK,UAAU,UAAY,sCAAsC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,aAAa,KAAO,sBAAsB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,+BAA+B,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,8BAA8B,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,gCAAgC,CAAC,IAAM,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,gBAAgB,KAAO,OAAO,CAAC,KAAO,wBAAwB,KAAO,QAAQ,KAAO,wBAAwB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,gCAAgC,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kCAAkC,CAAC,GAAK,WAAW,UAAY,oDAAoD,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,iDAAiD,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,iDAAiD,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,+CAA+C,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,sBAAsB,CAAC,KAAO,aAAa,KAAO,uBAAuB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,8CAA8C,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,yBAAyB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,8BAA8B,CAAC,IAAM,WAAW,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,WAAW,KAAO,qCAAqC,CAAC,GAAK,SAAS,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,eAAe,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,iCAAiC,CAAC,IAAM,UAAU,UAAY,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,4BAA4B,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,UAAU,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,YAAY,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,6BAA6B,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,wBAAwB,KAAO,oBAAoB,CAAC,IAAM,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,gBAAgB,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,uCAAuC,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,wCAAwC,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,gDAAgD,CAAC,KAAO,eAAe,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,aAAa,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,+BAA+B,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,mBAAmB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,mBAAmB,CAAC,IAAM,UAAU,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,+BAA+B,CAAC,IAAM,UAAU,UAAY,qCAAqC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,+BAA+B,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,+BAA+B,CAAC,GAAK,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,uBAAuB,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,iCAAiC,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,SAAS,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,sBAAsB,CAAC,KAAO,mBAAmB,KAAO,kBAAkB,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,oBAAoB,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,4BAA4B,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,8BAA8B,CAAC,GAAK,UAAU,UAAY,yCAAyC,OAAS,GAAG,KAAO,mBAAmB,CAAC,GAAK,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,aAAa,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,2BAA2B,CAAC,IAAM,UAAU,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,+BAA+B,CAAC,GAAK,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,uCAAuC,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kCAAkC,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,yBAAyB,CAAC,GAAK,WAAW,UAAY,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,kCAAkC,KAAO,mCAAmC,CAAC,IAAM,UAAU,UAAY,mCAAmC,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,mBAAmB,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,qDAAqD,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,sBAAsB,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,IAAM,UAAU,UAAY,6CAA6C,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,iCAAiC,OAAS,GAAG,KAAO,uBAAuB,CAAC,GAAK,UAAU,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,wCAAwC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,YAAY,KAAO,8BAA8B,CAAC,IAAM,UAAU,UAAY,0BAA0B,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,GAAK,UAAU,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,qBAAqB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,yBAAyB,CAAC,KAAO,mBAAmB,KAAO,wCAAwC,KAAO,oBAAoB,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,+BAA+B,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,mBAAmB,KAAO,iCAAiC,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,YAAY,CAAC,KAAO,mBAAmB,KAAO,YAAY,CAAC,KAAO,mBAAmB,KAAO,YAAY,CAAC,KAAO,qBAAqB,KAAO,YAAY,CAAC,KAAO,mBAAmB,KAAO,YAAY,CAAC,KAAO,mBAAmB,KAAO,oBAAoB,CAAC,KAAO,cAAc,KAAO,qBAAqB,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,yCAAyC,OAAS,GAAG,KAAO,+BAA+B,CAAC,GAAK,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,8BAA8B,KAAO,+BAA+B,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,qDAAqD,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,mBAAmB,KAAO,8BAA8B,CAAC,GAAK,WAAW,UAAY,6BAA6B,OAAS,GAAG,KAAO,2BAA2B,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,2BAA2B,CAAC,GAAK,WAAW,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,uBAAuB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,SAAS,KAAO,0BAA0B,CAAC,IAAM,UAAU,UAAY,gCAAgC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,mCAAmC,KAAO,iCAAiC,CAAC,GAAK,UAAU,UAAY,gCAAgC,OAAS,GAAG,KAAO,gBAAgB,CAAC,IAAM,WAAW,UAAY,mCAAmC,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,UAAU,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,gCAAgC,CAAC,GAAK,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,0BAA0B,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,YAAY,CAAC,KAAO,SAAS,KAAO,2CAA2C,KAAO,qBAAqB,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,8BAA8B,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,4BAA4B,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,iBAAiB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,yBAAyB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,oBAAoB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,iBAAiB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,UAAU,UAAY,uBAAuB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,mBAAmB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,uBAAuB,CAAC,GAAK,UAAU,UAAY,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,oCAAoC,KAAO,sBAAsB,CAAC,GAAK,UAAU,UAAY,0BAA0B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,UAAU,CAAC,GAAK,UAAU,UAAY,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,kBAAkB,CAAC,IAAM,WAAW,UAAY,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,WAAW,UAAY,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,UAAU,UAAY,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,kBAAkB,KAAO,UAAU,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,iBAAiB,CAAC,IAAM,UAAU,UAAY,gBAAgB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,MAAM,KAAO,WAAW,KAAO,iBAAiB,CAAC,IAAM,SAAS,UAAY,oCAAoC,OAAS,GAAG,KAAO,0BAA0B,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,qBAAqB,KAAO,0BAA0B,CAAC,GAAK,WAAW,UAAY,uBAAuB,OAAS,GAAG,KAAO,UAAU,CAAC,IAAM,WAAW,UAAY,2BAA2B,OAAS,GAAG,KAAO,qBAAqB,CAAC,GAAK,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,QAAQ,UAAY,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,UAAY,wBAAwB,OAAS,GAAG,KAAO,yBAAyB,CAAC,GAAK,UAAU,UAAY,iCAAiC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,aAAa,KAAO,0BAA0B,QAAU,CAAC,CAAC,IAAM,UAAU,OAAS,iBAAiB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,GAAK,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,WAAW,OAAS,gBAAgB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,IAAM,WAAW,OAAS,cAAc,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,cAAc,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,sBAAsB,CAAC,GAAK,WAAW,OAAS,cAAc,OAAS,GAAG,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,8BAA8B,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,UAAU,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,SAAS,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,CAAC,KAAO,WAAW,KAAO,4BAA4B,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,oBAAoB,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,sBAAsB,KAAO,gBAAgB,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,cAAc,KAAO,kBAAkB,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,eAAe,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,GAAG,KAAO,yBAAyB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,yBAAyB,KAAO,6BAA6B,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,sBAAsB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,mBAAmB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,iBAAiB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,oBAAoB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,yBAAyB,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,oBAAoB,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,UAAU,KAAO,qBAAqB,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,6BAA6B,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,eAAe,CAAC,KAAO,WAAW,KAAO,gBAAgB,KAAO,4BAA4B,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,GAAK,SAAS,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,iCAAiC,CAAC,GAAK,WAAW,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,sBAAsB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,eAAe,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,iBAAiB,CAAC,KAAO,sBAAsB,KAAO,iBAAiB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,YAAY,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,yBAAyB,CAAC,IAAM,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,mBAAmB,OAAS,GAAG,KAAO,iBAAiB,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,eAAe,KAAO,gBAAgB,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,iBAAiB,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,uBAAuB,KAAO,gBAAgB,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,eAAe,CAAC,IAAM,UAAU,OAAS,iBAAiB,OAAS,GAAG,KAAO,UAAU,CAAC,GAAK,UAAU,OAAS,oBAAoB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,kBAAkB,CAAC,GAAK,WAAW,OAAS,qBAAqB,OAAS,GAAG,KAAO,mBAAmB,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,iBAAiB,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,OAAO,CAAC,KAAO,gBAAgB,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,MAAM,KAAO,UAAU,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,MAAM,KAAO,SAAS,CAAC,KAAO,kBAAkB,KAAO,SAAS,KAAO,iBAAiB,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,iCAAiC,CAAC,GAAK,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,uBAAuB,KAAO,iCAAiC,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,iCAAiC,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,gBAAgB,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,uBAAuB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,mBAAmB,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,iBAAiB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,mBAAmB,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,4BAA4B,CAAC,KAAO,SAAS,KAAO,qBAAqB,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,WAAW,OAAS,kBAAkB,OAAS,GAAG,KAAO,gBAAgB,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,oBAAoB,KAAO,wBAAwB,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,6BAA6B,KAAO,wBAAwB,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,mBAAmB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,yBAAyB,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,wBAAwB,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,iBAAiB,KAAO,WAAW,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,gBAAgB,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,GAAG,KAAO,0BAA0B,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,GAAG,KAAO,oBAAoB,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,4BAA4B,CAAC,IAAM,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,eAAe,KAAO,kCAAkC,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,GAAG,KAAO,yBAAyB,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,0CAA0C,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,0BAA0B,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,sBAAsB,CAAC,GAAK,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,cAAc,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,uBAAuB,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,oCAAoC,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,oBAAoB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,WAAW,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,yBAAyB,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,6BAA6B,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,yBAAyB,KAAO,qBAAqB,CAAC,GAAK,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,6BAA6B,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,gCAAgC,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,cAAc,KAAO,+BAA+B,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,yBAAyB,KAAO,kBAAkB,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,qBAAqB,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,yBAAyB,CAAC,KAAO,UAAU,KAAO,mBAAmB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,SAAS,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,yBAAyB,CAAC,KAAO,MAAM,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,6BAA6B,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,SAAS,CAAC,KAAO,OAAO,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,sBAAsB,CAAC,GAAK,UAAU,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,yBAAyB,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,uBAAuB,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,gCAAgC,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,8BAA8B,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,KAAK,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,uBAAuB,CAAC,GAAK,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,iBAAiB,CAAC,GAAK,UAAU,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,SAAS,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,4BAA4B,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,eAAe,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,iCAAiC,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,2BAA2B,CAAC,KAAO,UAAU,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,uBAAuB,CAAC,KAAO,eAAe,KAAO,uBAAuB,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,8BAA8B,CAAC,IAAM,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,UAAU,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,QAAQ,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,mBAAmB,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,kCAAkC,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,GAAG,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,6BAA6B,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,2BAA2B,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,6BAA6B,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,GAAK,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,wBAAwB,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,wBAAwB,KAAO,6BAA6B,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,mBAAmB,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,2BAA2B,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,uBAAuB,CAAC,GAAK,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,2BAA2B,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,uBAAuB,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,wBAAwB,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,oBAAoB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,gBAAgB,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,aAAa,KAAO,YAAY,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,aAAa,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,wBAAwB,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,eAAe,KAAO,qBAAqB,KAAO,wBAAwB,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,2BAA2B,CAAC,IAAM,UAAU,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,yBAAyB,KAAO,mCAAmC,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,QAAQ,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,oBAAoB,KAAO,kBAAkB,CAAC,KAAO,qBAAqB,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,2BAA2B,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,0BAA0B,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,uBAAuB,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,mBAAmB,KAAO,mCAAmC,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,yBAAyB,CAAC,KAAO,WAAW,KAAO,+BAA+B,CAAC,KAAO,WAAW,KAAO,mBAAmB,KAAO,uBAAuB,CAAC,IAAM,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,kBAAkB,KAAO,uBAAuB,CAAC,IAAM,QAAQ,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,CAAC,KAAO,WAAW,KAAO,QAAQ,KAAO,uBAAuB,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,UAAU,KAAO,wBAAwB,KAAO,uBAAuB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,eAAe,KAAO,gBAAgB,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,GAAG,KAAO,YAAY,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,mBAAmB,CAAC,GAAK,WAAW,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,SAAS,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,mBAAmB,CAAC,GAAK,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,SAAS,CAAC,KAAO,kBAAkB,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,mBAAmB,CAAC,GAAK,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,0BAA0B,CAAC,KAAO,gBAAgB,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,aAAa,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,gBAAgB,KAAO,UAAU,KAAO,oBAAoB,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,GAAG,KAAO,aAAa,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,0BAA0B,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,4BAA4B,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,gBAAgB,KAAO,qBAAqB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,gBAAgB,KAAO,uCAAuC,CAAC,KAAO,SAAS,KAAO,6BAA6B,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,4BAA4B,CAAC,GAAK,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,SAAS,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,oBAAoB,CAAC,IAAM,UAAU,OAAS,sCAAsC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,oBAAoB,KAAO,QAAQ,CAAC,GAAK,SAAS,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,0BAA0B,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,4BAA4B,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,iBAAiB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,4BAA4B,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,uBAAuB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,sBAAsB,CAAC,KAAO,OAAO,KAAO,uBAAuB,KAAO,iBAAiB,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,GAAG,KAAO,6BAA6B,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,iCAAiC,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,6BAA6B,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,oBAAoB,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,GAAG,KAAO,6BAA6B,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,aAAa,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,GAAG,KAAO,uBAAuB,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,uBAAuB,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,oBAAoB,CAAC,KAAO,mBAAmB,KAAO,SAAS,KAAO,eAAe,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,4BAA4B,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,6BAA6B,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,6BAA6B,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,2BAA2B,CAAC,KAAO,cAAc,KAAO,+BAA+B,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,kBAAkB,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,yBAAyB,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,GAAG,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,kBAAkB,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,qBAAqB,KAAO,gBAAgB,CAAC,KAAO,mBAAmB,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,KAAO,mBAAmB,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,GAAG,KAAO,wBAAwB,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,QAAQ,CAAC,KAAO,QAAQ,KAAO,OAAO,KAAO,KAAK,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,oBAAoB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,GAAG,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,0BAA0B,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,GAAG,KAAO,aAAa,CAAC,GAAK,WAAW,OAAS,kBAAkB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,0BAA0B,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,uBAAuB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,oBAAoB,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,GAAG,KAAO,oBAAoB,CAAC,GAAK,SAAS,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,iBAAiB,CAAC,IAAM,WAAW,OAAS,uCAAuC,OAAS,GAAG,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,uCAAuC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,4BAA4B,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,UAAU,KAAO,kBAAkB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,eAAe,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,uCAAuC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,gBAAgB,KAAO,qBAAqB,KAAO,WAAW,CAAC,IAAM,SAAS,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,mBAAmB,KAAO,aAAa,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,aAAa,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,QAAQ,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,QAAQ,CAAC,IAAM,SAAS,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,sBAAsB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,kCAAkC,OAAS,GAAG,KAAO,gCAAgC,CAAC,GAAK,WAAW,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,WAAW,KAAO,yBAAyB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,2BAA2B,CAAC,GAAK,UAAU,OAAS,sCAAsC,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,QAAQ,KAAO,2BAA2B,CAAC,GAAK,WAAW,OAAS,qCAAqC,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,KAAO,yBAAyB,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,4BAA4B,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,2BAA2B,KAAO,kCAAkC,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,eAAe,CAAC,KAAO,MAAM,KAAO,mBAAmB,KAAO,iBAAiB,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,8BAA8B,KAAO,gBAAgB,CAAC,KAAO,KAAK,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,cAAc,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,eAAe,KAAO,gBAAgB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,iBAAiB,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,qBAAqB,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,WAAW,KAAO,uCAAuC,KAAO,SAAS,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,WAAW,KAAO,yBAAyB,CAAC,KAAO,WAAW,KAAO,uCAAuC,KAAO,SAAS,CAAC,IAAM,UAAU,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,sBAAsB,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,sBAAsB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,mBAAmB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,cAAc,CAAC,KAAO,cAAc,KAAO,SAAS,KAAO,SAAS,CAAC,GAAK,WAAW,OAAS,oBAAoB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,kBAAkB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,UAAU,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,mBAAmB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,mBAAmB,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,UAAU,KAAO,iBAAiB,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,iBAAiB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,GAAG,KAAO,2BAA2B,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,GAAG,KAAO,0BAA0B,CAAC,GAAK,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,2BAA2B,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,4BAA4B,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,WAAW,KAAO,yBAAyB,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,GAAG,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,qCAAqC,OAAS,GAAG,KAAO,iCAAiC,CAAC,GAAK,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,yBAAyB,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,gBAAgB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,UAAU,CAAC,KAAO,IAAI,KAAO,iBAAiB,KAAO,cAAc,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,mBAAmB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,KAAO,uBAAuB,CAAC,GAAK,SAAS,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,WAAW,KAAO,uBAAuB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,6BAA6B,CAAC,IAAM,WAAW,OAAS,oBAAoB,OAAS,GAAG,KAAO,kBAAkB,CAAC,GAAK,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,QAAQ,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,OAAO,KAAO,UAAU,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,wBAAwB,CAAC,IAAM,UAAU,OAAS,mCAAmC,OAAS,GAAG,KAAO,yBAAyB,CAAC,GAAK,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,0BAA0B,KAAO,yBAAyB,CAAC,IAAM,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,sBAAsB,CAAC,GAAK,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,qBAAqB,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,8BAA8B,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,4BAA4B,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,cAAc,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,aAAa,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,sBAAsB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,oBAAoB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,SAAS,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,mBAAmB,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,MAAM,KAAO,qBAAqB,CAAC,KAAO,UAAU,KAAO,eAAe,CAAC,KAAO,SAAS,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,2BAA2B,CAAC,IAAM,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,gBAAgB,KAAO,eAAe,CAAC,GAAK,WAAW,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,iBAAiB,KAAO,kCAAkC,CAAC,GAAK,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,cAAc,KAAO,WAAW,KAAO,gCAAgC,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,0BAA0B,CAAC,GAAK,UAAU,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,QAAQ,KAAO,eAAe,KAAO,gBAAgB,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,SAAS,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,aAAa,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,gCAAgC,CAAC,GAAK,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,+BAA+B,CAAC,IAAM,WAAW,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,UAAU,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,iBAAiB,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,mBAAmB,KAAO,+BAA+B,CAAC,GAAK,WAAW,OAAS,4CAA4C,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,kCAAkC,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,YAAY,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,IAAI,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,gCAAgC,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,WAAW,CAAC,IAAM,SAAS,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,cAAc,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,qCAAqC,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,aAAa,CAAC,KAAO,QAAQ,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,aAAa,KAAO,gBAAgB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,sBAAsB,KAAO,iBAAiB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,qBAAqB,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,iCAAiC,CAAC,GAAK,UAAU,OAAS,yCAAyC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,aAAa,KAAO,SAAS,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,aAAa,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,aAAa,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,+BAA+B,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,sBAAsB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,mBAAmB,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,sBAAsB,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,GAAG,KAAO,+BAA+B,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,GAAG,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,kBAAkB,CAAC,IAAM,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,YAAY,KAAO,UAAU,KAAO,QAAQ,CAAC,IAAM,UAAU,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,iBAAiB,KAAO,8BAA8B,CAAC,GAAK,UAAU,OAAS,sCAAsC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,gBAAgB,CAAC,GAAK,WAAW,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,cAAc,KAAO,QAAQ,KAAO,kCAAkC,CAAC,GAAK,WAAW,OAAS,qCAAqC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,mCAAmC,CAAC,GAAK,WAAW,OAAS,+BAA+B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,WAAW,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,qBAAqB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,wBAAwB,CAAC,IAAM,WAAW,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,yBAAyB,KAAO,QAAQ,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,sCAAsC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,QAAQ,CAAC,KAAO,8BAA8B,KAAO,gBAAgB,CAAC,KAAO,yBAAyB,KAAO,iBAAiB,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,gBAAgB,CAAC,KAAO,cAAc,KAAO,cAAc,KAAO,4BAA4B,CAAC,GAAK,UAAU,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,mBAAmB,KAAO,WAAW,CAAC,IAAM,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,gBAAgB,KAAO,WAAW,CAAC,IAAM,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,KAAK,KAAO,OAAO,CAAC,KAAO,WAAW,KAAO,kBAAkB,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,iCAAiC,CAAC,GAAK,UAAU,OAAS,qCAAqC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,sBAAsB,KAAO,mBAAmB,KAAO,WAAW,CAAC,GAAK,UAAU,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,QAAQ,KAAO,+BAA+B,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,WAAW,KAAO,WAAW,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,OAAO,KAAO,qBAAqB,CAAC,KAAO,SAAS,KAAO,eAAe,CAAC,KAAO,OAAO,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,kBAAkB,CAAC,KAAO,UAAU,KAAO,WAAW,KAAO,2BAA2B,CAAC,IAAM,UAAU,OAAS,8BAA8B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,OAAO,CAAC,KAAO,aAAa,KAAO,OAAO,CAAC,KAAO,QAAQ,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,OAAO,CAAC,KAAO,SAAS,KAAO,QAAQ,KAAO,qBAAqB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,cAAc,KAAO,4BAA4B,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,WAAW,KAAO,yBAAyB,CAAC,GAAK,UAAU,OAAS,mCAAmC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,mBAAmB,KAAO,iCAAiC,CAAC,IAAM,UAAU,OAAS,kCAAkC,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,gCAAgC,CAAC,GAAK,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,IAAI,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,kBAAkB,CAAC,KAAO,QAAQ,KAAO,QAAQ,KAAO,qBAAqB,CAAC,GAAK,UAAU,OAAS,6BAA6B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,kBAAkB,CAAC,GAAK,WAAW,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,cAAc,KAAO,qBAAqB,CAAC,GAAK,UAAU,OAAS,iCAAiC,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,UAAU,KAAO,SAAS,KAAO,QAAQ,CAAC,GAAK,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,MAAM,KAAO,kBAAkB,CAAC,KAAO,cAAc,KAAO,kBAAkB,CAAC,KAAO,eAAe,KAAO,oBAAoB,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,IAAM,UAAU,OAAS,0BAA0B,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,SAAS,KAAO,gBAAgB,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,QAAQ,CAAC,KAAO,kBAAkB,KAAO,gBAAgB,KAAO,QAAQ,CAAC,GAAK,WAAW,OAAS,gCAAgC,OAAS,CAAC,CAAC,KAAO,QAAQ,KAAO,KAAK,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,MAAM,KAAO,UAAU,CAAC,KAAO,eAAe,KAAO,qBAAqB,KAAO,uBAAuB,CAAC,GAAK,UAAU,OAAS,oCAAoC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,UAAU,CAAC,KAAO,SAAS,KAAO,yBAAyB,KAAO,sBAAsB,CAAC,IAAM,UAAU,OAAS,2BAA2B,OAAS,CAAC,CAAC,KAAO,MAAM,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,QAAQ,CAAC,KAAO,cAAc,KAAO,UAAU,CAAC,KAAO,OAAO,KAAO,WAAW,KAAO,WAAW,CAAC,GAAK,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,aAAa,CAAC,KAAO,SAAS,KAAO,kBAAkB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,wBAAwB,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,cAAc,KAAO,iBAAiB,CAAC,IAAM,UAAU,OAAS,4BAA4B,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,SAAS,KAAO,0BAA0B,CAAC,GAAK,WAAW,OAAS,uBAAuB,OAAS,CAAC,CAAC,KAAO,KAAK,KAAO,iBAAiB,CAAC,KAAO,SAAS,KAAO,SAAS,KAAO,yBAAyB,CAAC,IAAM,WAAW,OAAS,yBAAyB,OAAS,CAAC,CAAC,KAAO,OAAO,KAAO,aAAa,CAAC,KAAO,YAAY,KAAO,UAAU,CAAC,KAAO,YAAY,KAAO,WAAW,KAAO,YAAY,CAAC,GAAK,WAAW,OAAS,yCAAyC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,oBAAoB,KAAO,QAAQ,CAAC,IAAM,WAAW,OAAS,qCAAqC,OAAS,CAAC,CAAC,KAAO,eAAe,KAAO,oBAAoB,KAAO,UAAU,MAAQ,K,+CC1Btg0R,SAASwmB,GAAU3yE,GAEhC,OAAOA,IAAQ,ECCF,SAAS4yE,GAAaC,EAAcC,GAEjD,OADAD,EAAOF,GAAUE,GAAOC,EAAMH,GAAUG,GACjC,KAAOD,GAAME,UAAU,IAAIhpE,IAAI,KAAO+oE,IAAM1xE,SAAS,IC0B9D,MAAM4xE,IAAa,0BAA8B3oE,GAAsB,cAAhBA,EAAE4oE,YAA2BthF,GAC9EuhF,IAAY,0BAA8B7oE,GAAsB,aAAhBA,EAAE4oE,YAA0BthF,GAC5EwhF,IAAU,0BAA8B9oE,GAAsB,WAAhBA,EAAE4oE,YAAwBthF,GACxEyhF,IAAc,8BAAkC/oE,GAAsB,gBAAhBA,EAAE4oE,YAA6BthF,GAI3F,MAAM0hF,GAUJngF,YAAYzC,EAA4D,IAThE,KAAA26C,UAAY,KACZ,KAAAhvB,OAAS,EACT,KAAAk3D,SAAU,EACV,KAAA52E,OAAQ,EAOdtJ,KAAKg4C,UAAY36C,EAAQ8iF,gBAAkB,KAC3CngF,KAAKkgF,QAAU7iF,EAAQ6iF,UAAW,EAClClgF,KAAKogF,eAGAA,eACLpgF,KAAKiK,OAAS,IAAIo2E,YAAYrgF,KAAKg4C,WACnCh4C,KAAKsgF,QAAU,IAAIC,WAAWvgF,KAAKiK,QACnCjK,KAAKwgF,SAAW,IAAIp2E,WAAWpK,KAAKiK,QAG/Bw2E,WACL,MAAMC,EAAe,IAAIL,YAAYrgF,KAAKgpB,QAQpC23D,EAAc,IAAIJ,WAAWG,GAQnC,OAPAC,EAAYx4E,IAAInI,KAAKsgF,QAAQM,SAAS,EAAG5gF,KAAKgpB,OAAS,IAOhD23D,EAGFE,YACL,OAAO7gF,KAAKygF,WAAWx2E,OAKlB62E,SAASC,GAAiB,GAC/B,GAAGA,EAAO,CACR,MAAML,EAAe,IAAIL,YAAYrgF,KAAKgpB,QACpCg4D,EAAc,IAAI52E,WAAWs2E,GAInC,OAFAM,EAAY74E,IAAInI,KAAKwgF,SAASI,SAAS,EAAG5gF,KAAKgpB,SAExCg4D,EAGT,MAAMjzE,EAAkB,IAAIjN,MAAMd,KAAKgpB,QACvC,IAAI,IAAInjB,EAAI,EAAGA,EAAI7F,KAAKgpB,OAAQnjB,IAC9BkI,EAAMlI,GAAK7F,KAAKwgF,SAAS36E,GAE3B,OAAOkI,EAGFkzE,YACL,OAAOjhF,KAAKgpB,OAGPk4D,YAAYC,GACjB,GAAGnhF,KAAKgpB,OAASm4D,EAAYnhF,KAAKg4C,UAChC,OAIFh4C,KAAKg4C,UAAwF,EAA5E74B,KAAKokB,KAAKpkB,KAAKyD,IAAqB,EAAjB5iB,KAAKg4C,UAAeh4C,KAAKgpB,OAASm4D,EAAY,IAAM,GACxF,MAAMC,EAAiBphF,KAAKiK,OAEtBo3E,EAAgB,IAAId,WAAWa,GAErCphF,KAAKogF,eAEL,IAAIG,WAAWvgF,KAAKiK,QAAQ9B,IAAIk5E,GAK3BC,SAASz7E,EAAW07E,GACzBvhF,KAAKsJ,OAAShK,QAAQa,IAAI,MAAO0F,EAAEmI,SAAS,IAAKnI,EAAG07E,GAEpD,MAAMv4D,EAAShpB,KAAKgpB,OAAS,EAK7B,OAJAhpB,KAAKkhF,YAAY,GACjBlhF,KAAKsgF,QAAQt3D,GAAUnjB,EACvB7F,KAAKgpB,QAAU,EAERA,EAGFw4D,SAAS37E,EAAW07E,GACzB,OAAOvhF,KAAKshF,SAASz7E,GAAI07E,GAAS,IAAM,QAGnCE,UAAU57E,EAAY07E,GACxB17E,EACD7F,KAAKshF,SAASxB,IAAWyB,GAAS,IAAM,SAExCvhF,KAAKshF,SAAS1B,IAAY2B,GAAS,IAAM,SAItCG,WAAWC,EAAeC,EAAcL,GAC7CvhF,KAAKshF,SAASM,GAAOL,GAAS,IAAM,cACpCvhF,KAAKshF,SAASK,GAAQJ,GAAS,IAAM,eAGhCM,UAAUC,EAAwCP,GACvD,GAAGzgF,MAAMmD,QAAQ69E,GACf,OAAoB,IAAjBA,EAAM1jF,OACA4B,KAAK0hF,WAAWI,EAAM,GAAIA,EAAM,GAAIP,GAEpCvhF,KAAK+hF,cAAcD,EAAO,GAAIP,GAIrB,iBAAVO,IACRA,EAAQA,EAAQA,EAAM9zE,WAAa,KAGrC,MAAM,SAACg0E,EAAQ,UAAEC,GAAa,KAAOH,GAAOI,OAAO,YAC7CzC,EAAOuC,EAASG,aAChBzC,EAAMuC,EAAUE,aAEtBniF,KAAKshF,SAAS5B,GAAM6B,GAAS,IAAM,cACnCvhF,KAAKshF,SAAS7B,GAAO8B,GAAS,IAAM,eAG/Ba,YAAYn2D,EAAQs1D,GACzB,MAAMt3E,EAAS,IAAIo2E,YAAY,GACzBC,EAAU,IAAIC,WAAWt2E,GACZ,IAAIo4E,aAAap4E,GAEzB,GAAKgiB,EAEhBjsB,KAAKshF,SAAShB,EAAQ,IAAKiB,GAAS,IAAM,gBAC1CvhF,KAAKshF,SAAShB,EAAQ,IAAKiB,GAAS,IAAM,iBAGrCe,YAAYr0B,EAAWszB,GAC5BvhF,KAAKsJ,OAAShK,QAAQa,IAAI,MAAO8tD,GAAIszB,GAAS,IAAM,gBAE3C51E,IAANsiD,IACDA,EAAI,IAEN,MAAMs0B,EAAQC,SAAS9iF,mBAAmBuuD,IAE1CjuD,KAAKkhF,YAAYqB,EAAMnkF,OAAS,GAEhC,MAAMuP,EAAM40E,EAAMnkF,OACfuP,GAAO,IACR3N,KAAKwgF,SAASxgF,KAAKgpB,UAAYrb,GAE/B3N,KAAKwgF,SAASxgF,KAAKgpB,UAAY,IAC/BhpB,KAAKwgF,SAASxgF,KAAKgpB,UAAkB,IAANrb,EAC/B3N,KAAKwgF,SAASxgF,KAAKgpB,WAAmB,MAANrb,IAAiB,EACjD3N,KAAKwgF,SAASxgF,KAAKgpB,WAAmB,SAANrb,IAAmB,IAErD,IAAI,IAAI9H,EAAI,EAAGA,EAAI8H,EAAK9H,IACtB7F,KAAKwgF,SAASxgF,KAAKgpB,UAAYu5D,EAAM1X,WAAWhlE,GAIlD,KAAM7F,KAAKgpB,OAAS,GAClBhpB,KAAKwgF,SAASxgF,KAAKgpB,UAAY,EAI5By5D,WAAW10E,EAA4CwzE,GACzDxzE,aAAiBsyE,YAClBtyE,EAAQ,IAAI3D,WAAW2D,QACLpC,IAAVoC,IACRA,EAAQ,IAGV/N,KAAKsJ,OAAShK,QAAQa,IAAI,MAAO2N,EAAWC,IAAqBwzE,GAAS,IAAM,UAGhF,MAAM5zE,EAAOI,EAAqB3P,OAelC,IAdA4B,KAAKkhF,YAAYvzE,EAAM,GACpBA,GAAO,IACR3N,KAAKwgF,SAASxgF,KAAKgpB,UAAYrb,GAE/B3N,KAAKwgF,SAASxgF,KAAKgpB,UAAY,IAC/BhpB,KAAKwgF,SAASxgF,KAAKgpB,UAAkB,IAANrb,EAC/B3N,KAAKwgF,SAASxgF,KAAKgpB,WAAmB,MAANrb,IAAiB,EACjD3N,KAAKwgF,SAASxgF,KAAKgpB,WAAmB,SAANrb,IAAmB,IAGrD3N,KAAKwgF,SAASr4E,IAAI4F,EAAqB/N,KAAKgpB,QAC5ChpB,KAAKgpB,QAAUrb,EAGT3N,KAAKgpB,OAAS,GAClBhpB,KAAKwgF,SAASxgF,KAAKgpB,UAAY,EAI5B+4D,cAAch0E,EAA4C20E,EAAcnB,GAC1ExzE,aAAiBsyE,cAClBtyE,EAAQ,IAAI3D,WAAW2D,IAGzB,MAAMJ,EAAOI,EAAqB3P,OAClC,GAAIskF,EAAO,IAAc,EAAN/0E,IAAa+0E,EAAM,CACpC,MAAMnjF,EAAQ,IAAI0M,MAAM,iBAAmBy2E,EAAO,KAAO/0E,GAEzD,MADArO,QAAQC,MAAMA,EAAOwO,EAAOwzE,GACtBhiF,EAGRS,KAAKsJ,OAAShK,QAAQa,IAAI,MAAO2N,EAAWC,IAAuBwzE,GAAS,IAAM,OAASmB,GAC3F1iF,KAAKkhF,YAAYvzE,GAEjB3N,KAAKwgF,SAASr4E,IAAI4F,EAAqB/N,KAAKgpB,QAC5ChpB,KAAKgpB,QAAUrb,EAGVg1E,cAAc50E,EAA0BwzE,GAC1CxzE,aAAiBsyE,cAClBtyE,EAAQ,IAAI3D,WAAW2D,IAGzB,MAAMJ,EAAMI,EAAM3P,OAElB4B,KAAKsJ,OAAShK,QAAQa,IAAI,MAAO2N,EAAWC,GAASwzE,GAAS,IAC9DvhF,KAAKkhF,YAAYvzE,GAEjB3N,KAAKwgF,SAASr4E,IAAI4F,EAAO/N,KAAKgpB,QAC9BhpB,KAAKgpB,QAAUrb,EAGVi1E,YAAYC,EAAoBnuE,GACrC,MACMouE,GADS9iF,KAAKkgF,QAAU,WAAiB,QACrB6C,QAAQx/E,MAAMgsD,GAAMA,EAAEzlD,SAAW+4E,IAE3D,IAAIC,EACF,MAAM,IAAI72E,MAAM,aAAe42E,EAAa,UAG9C7iF,KAAKwhF,SAASsB,EAAWvkF,GAAIskF,EAAa,QAE1C,MAAMhkF,EAAS6V,EAAO7V,QAAU6V,EAC1BsuE,EAA8C,GAEpD,IAAI,MAAMC,KAASH,EAAWpuE,OAAQ,CACpC,IAAIjV,EAAOwjF,EAAMxjF,KAEjB,IAA0B,IAAvBA,EAAKpD,QAAQ,KAAa,CAC3B,MAAM6mF,EAAWzjF,EAAK+H,MAAM,KACtB27E,EAAWD,EAAS,GAAG17E,MAAM,KAEnC,KAAKkN,EAAOyuE,EAAS,IAAO,IAAMA,EAAS,IAAM,CAC/C,KAAmB,SAAhBD,EAAS,GAAgBrkF,EAAOokF,EAAMhjF,WAA+B0L,IAAvB+I,EAAOuuE,EAAMhjF,OAI5D,SAFAyU,EAAOyuE,EAAS,KAAO,IAAMA,EAAS,GAO1C1jF,EAAOyjF,EAAS,GAIlB,MAAM9gF,EAASpC,KAAKojF,YAAY1uE,EAAOuuE,EAAMhjF,MAAOR,EAAMojF,EAAa,IAAMI,EAAMhjF,KAAO,KAE9E,MAATR,IACDiV,EAAOuuE,EAAMhjF,MAAQyU,EAAOuuE,EAAMhjF,OAAS,EAC3C+iF,EAAaC,EAAMhjF,MAAQmC,GAI/B,IAAI,IAAIihF,KAAaL,EACnBhjF,KAAKsgF,QAAQ0C,EAAaK,IAAc3uE,EAAO2uE,GAGjD,OAAOP,EAAWrjF,KAGb2jF,YAAYrxE,EAAUtS,EAAc8hF,GAEzC,OAAO9hF,GACL,IAAK,IACHsS,EAAMA,GAAO,EACf,IAAK,MACH,OAAO/R,KAAKwhF,SAASzvE,EAAKwvE,GAC5B,IAAK,OACH,OAAOvhF,KAAK6hF,UAAU9vE,EAAKwvE,GAC7B,IAAK,SACH,OAAOvhF,KAAK+hF,cAAchwE,EAAK,IAAKwvE,GACtC,IAAK,SACH,OAAOvhF,KAAK+hF,cAAchwE,EAAK,IAAKwvE,GACtC,IAAK,SACH,OAAOvhF,KAAK+hF,cAAchwE,EAAK,IAAKwvE,GACtC,IAAK,SACH,OAAOvhF,KAAKsiF,YAAYvwE,EAAKwvE,GAC/B,IAAK,QACH,OAAOvhF,KAAKyiF,WAAW1wE,EAAKwvE,GAC9B,IAAK,SACH,OAAOvhF,KAAKoiF,YAAYrwE,EAAKwvE,GAC/B,IAAK,OACH,OAAOvhF,KAAKyhF,UAAU1vE,EAAKwvE,GAC7B,IAAK,OACH,OAGJ,GAAGzgF,MAAMmD,QAAQ8N,GAAM,CACrB,GAAyB,WAAtBtS,EAAK6jF,OAAO,EAAG,GAChBtjF,KAAKshF,SAASvB,GAAQwB,EAAQ,aACzB,GAA0B,WAAtB9hF,EAAK6jF,OAAO,EAAG,GACxB,MAAM,IAAIr3E,MAAM,uBAAyBxM,GAG3C,MAAM8jF,EAAW9jF,EAAK6jF,OAAO,EAAG7jF,EAAKrB,OAAS,GAC9C4B,KAAKshF,SAASvvE,EAAI3T,OAAQmjF,EAAQ,WAClC,IAAI,IAAI17E,EAAI,EAAGA,EAAIkM,EAAI3T,OAAQyH,IAC7B7F,KAAKojF,YAAYrxE,EAAIlM,GAAI09E,EAAUhC,EAAQ,IAAM17E,EAAI,KAGvD,OAAO,EACF,GAAwC,WAApCpG,EAAK6jF,OAAO,EAAG,GAAGlnF,cAC3B,MAAM,IAAI6P,MAAM,yBAGlB,KAAI,EAAAkV,GAAA,GAASpP,GACX,MAAM,IAAI9F,MAAM,2BAA6BxM,GAG/C,MAAM+jF,EAASxjF,KAAKkgF,QAAU,WAAiB,OACzCL,EAAY9tE,EAAO,EACzB,IAAI0xE,GAAS,EACb,MAAMC,EAAsCF,EAAOp2D,aAAa7pB,MAAM0T,GAAMA,EAAE4oE,YAAcA,IAM5F,IAJG4D,EAA6B,MAAnBhkF,EAAKjC,OAAO,MACvBiC,EAAOA,EAAK6jF,OAAO,KAGjBI,EACF,MAAM,IAAIz3E,MAAM,gBAAkB4zE,EAAY,UAG7CA,IAAcpgF,IACfgkF,GAAS,GAGPA,GACFzjF,KAAKshF,SAASoC,EAAgBnlF,GAAIgjF,EAAQ,IAAM1B,EAAY,SAG9D,MAAMhhF,EAASkT,EAAIlT,OACbmkF,EAA8C,GAEpD,IAAI,MAAMC,KAASS,EAAgBhvE,OAAQ,CACzC,IAAIjV,EAAOwjF,EAAMxjF,KAGjB,IAA0B,IAAvBA,EAAKpD,QAAQ,KAAa,CAC3B,MAAM6mF,EAAWzjF,EAAK+H,MAAM,KACtB27E,EAAWD,EAAS,GAAG17E,MAAM,KAInC,KAAKuK,EAAIoxE,EAAS,IAAO,IAAMA,EAAS,IAAM,CAC5C,KAAmB,SAAhBD,EAAS,GAAgBrkF,GAAUA,EAAOokF,EAAMhjF,WAA4B0L,IAApBoG,EAAIkxE,EAAMhjF,OAInE,SAFA8R,EAAIoxE,EAAS,KAAO,IAAMA,EAAS,GAMvC1jF,EAAOyjF,EAAS,GAIlB,MAAM9gF,EAASpC,KAAKojF,YAAYrxE,EAAIkxE,EAAMhjF,MAAOR,EAAM8hF,EAAQ,IAAM1B,EAAY,KAAOoD,EAAMhjF,KAAO,KAEzF,MAATR,IACDsS,EAAIkxE,EAAMhjF,MAAQ8R,EAAIkxE,EAAMhjF,OAAS,EACrC+iF,EAAaC,EAAMhjF,MAAQmC,GAI/B,IAAI,IAAIihF,KAAaL,EACnBhjF,KAAKsgF,QAAQ0C,EAAaK,IAActxE,EAAIsxE,GAG9C,OAAOK,EAAgBjkF,MAI3B,MAAMkkF,GAYJ7jF,YAAYmK,EAAkC5M,EAAgE,IAXtG,KAAA2rB,OAAS,EAQT,KAAAk3D,SAAmB,EAKtBj2E,aAAkBo2E,aACnBrgF,KAAKiK,OAASA,EACdjK,KAAKsgF,QAAU,IAAIC,WAAWt2E,GAC9BjK,KAAKwgF,SAAW,IAAIp2E,WAAWpK,KAAKiK,UAEpCjK,KAAKiK,OAASA,EAAOA,OACrBjK,KAAKsgF,QAAU,IAAIC,WAAWt2E,EAAOA,QACrCjK,KAAKwgF,SAAWv2E,GAKlBjK,KAAK+uB,SAAW1xB,EAAQ0xB,UAAY,GACpC/uB,KAAKkgF,UAAY7iF,EAAQ6iF,QACzBlgF,KAAKsJ,WAA0BqC,IAAlBtO,EAAQiM,OAAsBjM,EAAQiM,MAO7Cs6E,QAAQrC,GAEd,GAAIvhF,KAAKwgF,SAASpiF,OAAS4B,KAAKgpB,OAAU,EAExC,MADA1pB,QAAQC,MAAMS,KAAKwgF,SAAUxgF,KAAKgpB,QAC5B,IAAI/c,MAAM,qBAAuBs1E,GAGzC,MAAM17E,EAAI7F,KAAKsgF,QAAQtgF,KAAKgpB,OAAS,GAUrC,OAPAhpB,KAAKsJ,OACAhK,QAAQa,IAAI,MAAO0F,EAAEmI,SAAS,IAAKnI,EAAG07E,EACzCvhF,KAAKwgF,SAAS74E,MAAM3H,KAAKgpB,OAAS,GAAIhpB,KAAKgpB,OAAS,IACpDlb,EAAW9N,KAAKwgF,SAAS74E,MAAM3H,KAAKgpB,OAAS,GAAIhpB,KAAKgpB,OAAS,MAEjEhpB,KAAKgpB,QAAU,EAERnjB,EAGFg+E,SAAStC,GACd,OAAOvhF,KAAK4jF,SAASrC,GAAS,IAAM,QAG/BuC,YAAYvC,GACjB,MAAMt3E,EAAS,IAAIo2E,YAAY,GACzBC,EAAU,IAAIC,WAAWt2E,GACzB85E,EAAa,IAAI1B,aAAap4E,GAKpC,OAHAq2E,EAAQ,GAAKtgF,KAAK4jF,SAASrC,GAAS,IAAM,gBAC1CjB,EAAQ,GAAKtgF,KAAK4jF,SAASrC,GAAS,IAAM,iBAEnCwC,EAAW,GAGbC,UAAUzC,GACf,MAAMK,EAAO5hF,KAAK4jF,SAASrC,GAAS,IAAM,cAIpC0C,EAAUzE,GAHFx/E,KAAK4jF,SAASrC,GAAS,IAAM,eAGPK,GAEpC,IAAI5hF,KAAKkgF,QAAS,CAChB,MAAMjpC,GAAOgtC,EACb,GAAGx4B,OAAOy4B,cAAcjtC,GAEtB,OAAOA,EAKX,OAAOgtC,EAGFE,UAAU5C,GACf,MAAM17E,EAAI7F,KAAK4jF,SAASrC,GAAS,IAAM,SACvC,OAAG17E,IAAMi6E,IAECj6E,IAAM+5E,KAIhB5/E,KAAKgpB,QAAU,EACRhpB,KAAKokF,YAAY,SAAU7C,IAG7B8C,YAAY9C,GACjB,IAAI5zE,EAAM3N,KAAKwgF,SAASxgF,KAAKgpB,UAElB,MAARrb,IACDA,EAAM3N,KAAKwgF,SAASxgF,KAAKgpB,UACtBhpB,KAAKwgF,SAASxgF,KAAKgpB,WAAa,EAChChpB,KAAKwgF,SAASxgF,KAAKgpB,WAAa,IAGrC,IAUIilC,EAVAs0B,EAAQ,GACZ,IAAI,IAAI18E,EAAI,EAAGA,EAAI8H,EAAK9H,IACtB08E,GAAS+B,OAAOC,aAAavkF,KAAKwgF,SAASxgF,KAAKgpB,WAIlD,KAAMhpB,KAAKgpB,OAAS,GAClBhpB,KAAKgpB,SAIP,IACEilC,EAAIu2B,mBAAmBC,OAAOlC,IAC9B,MAAOhgF,GACP0rD,EAAIs0B,EAKN,OAFAviF,KAAKsJ,OAAShK,QAAQa,IAAI,MAAO8tD,GAAIszB,GAAS,IAAM,WAE7CtzB,EAGFy2B,WAAWnD,GAChB,IAAI5zE,EAAM3N,KAAKwgF,SAASxgF,KAAKgpB,UAElB,MAARrb,IACDA,EAAM3N,KAAKwgF,SAASxgF,KAAKgpB,UACtBhpB,KAAKwgF,SAASxgF,KAAKgpB,WAAa,EAChChpB,KAAKwgF,SAASxgF,KAAKgpB,WAAa,IAGrC,MAAMjb,EAAQ/N,KAAKwgF,SAASI,SAAS5gF,KAAKgpB,OAAQhpB,KAAKgpB,OAASrb,GAIhE,IAHA3N,KAAKgpB,QAAUrb,EAGT3N,KAAKgpB,OAAS,GAClBhpB,KAAKgpB,SAKP,OAFAhpB,KAAKsJ,OAAShK,QAAQa,IAAI,MAAO2N,EAAWC,IAASwzE,GAAS,IAAM,UAE7DxzE,EAKF42E,cAAcjC,EAAc3B,GAAiB,EAAMQ,GACxD,GAAGmB,EAAO,GACR,MAAM,IAAIz2E,MAAM,iBAAmBy2E,GAGrC,MAAM/0E,EAAM+0E,EAAO,EACnB,GAAG3B,EAAO,CACR,MAAM3+E,EAASpC,KAAKwgF,SAASI,SAAS5gF,KAAKgpB,OAAQhpB,KAAKgpB,OAASrb,GAEjE,OADA3N,KAAKgpB,QAAUrb,EACRvL,EAGT,MAAM2L,EAAkB,IAAIjN,MAAM6M,GAClC,IAAI,IAAI9H,EAAI,EAAGA,EAAI8H,EAAK9H,IACtBkI,EAAMlI,GAAK7F,KAAKwgF,SAASxgF,KAAKgpB,UAKhC,OAFAhpB,KAAKsJ,OAAShK,QAAQa,IAAI,MAAO2N,EAAWC,IAASwzE,GAAS,IAAM,OAASmB,GAEtE30E,EAKF62E,cAAcj3E,EAAqBozE,GAAiB,EAAMQ,GAC/D,IAAW,IAAR5zE,IACDA,EAAM3N,KAAK4jF,SAASrC,GAAS,IAAM,YAC1BvhF,KAAKwgF,SAASl2E,WACrB,MAAM,IAAI2B,MAAM,6BAA+B0B,EAAM,iBAAmB3N,KAAKwgF,SAASl2E,YAI1F,GAAGy2E,EAAO,CACR,MAAMhzE,EAAQ,IAAI3D,WAAWuD,GAG7B,OAFAI,EAAM5F,IAAInI,KAAKwgF,SAASI,SAAS5gF,KAAKgpB,OAAQhpB,KAAKgpB,OAASrb,IAC5D3N,KAAKgpB,QAAUrb,EACRI,EAGT,MAAMA,EAAkB,IAAIjN,MAAM6M,GAClC,IAAI,IAAI9H,EAAI,EAAGA,EAAI8H,EAAK9H,IACtBkI,EAAMlI,GAAK7F,KAAKwgF,SAASxgF,KAAKgpB,UAKhC,OAFAhpB,KAAKsJ,OAAShK,QAAQa,IAAI,MAAO2N,EAAWC,GAASwzE,GAAS,IAEvDxzE,EAGD82E,YAAYplF,EAAc8hF,GAChC,MAAM5zE,EAAM3N,KAAK4jF,QAAQrC,EAAQ,WAC3Bn/E,EAAgB,IAAItB,MAAM6M,GAChC,GAAGA,EAAM,EAAG,CACV,MAAM41E,EAAW9jF,EAAK6jF,OAAO,EAAG7jF,EAAKrB,OAAS,GAC9C,IAAI,IAAIyH,EAAI,EAAGA,EAAI8H,IAAO9H,EACxBzD,EAAOyD,GAAK7F,KAAKokF,YAAYb,EAAUhC,EAAQ,IAAM17E,EAAI,KAI7D,OAAOzD,EAGFgiF,YAAY3kF,EAAc8hF,GAC/B,OAAO9hF,GACL,IAAK,IACL,IAAK,MACH,OAAOO,KAAK6jF,SAAStC,GACvB,IAAK,OACH,OAAOvhF,KAAKgkF,UAAUzC,GACxB,IAAK,SACH,OAAOvhF,KAAK2kF,cAAc,KAAK,EAAMpD,GACvC,IAAK,SACH,OAAOvhF,KAAK2kF,cAAc,KAAK,EAAMpD,GACvC,IAAK,SACH,OAAOvhF,KAAK2kF,cAAc,KAAK,EAAMpD,GACvC,IAAK,SACH,OAAOvhF,KAAKqkF,YAAY9C,GAC1B,IAAK,QACH,OAAOvhF,KAAK0kF,WAAWnD,GACzB,IAAK,SACH,OAAOvhF,KAAK8jF,YAAYvC,GAC1B,IAAK,OACH,OAAOvhF,KAAKmkF,UAAU5C,GACxB,IAAK,OACH,OAAO,EAKX,GAFAA,EAAQA,GAAS9hF,GAAQ,SAEH,MAAnBA,EAAKjC,OAAO,IAAoC,UAAtBiC,EAAK6jF,OAAO,EAAG,GAC1C,OAAOtjF,KAAK6kF,YAAYplF,EAAM8hF,GAGhC,MAAMiC,EAASxjF,KAAKkgF,QAAU,WAAiB,OAC/C,IAAIwD,EAAsC,KACtCoB,GAAW,EAEf,GAAsB,MAAnBrlF,EAAKjC,OAAO,GAAY,CACzB,MAAMunF,EAAYtlF,EAAK6jF,OAAO,GAE9B,GADAI,EAAkBF,EAAOp2D,aAAa7pB,MAAM0T,GAAMA,EAAExX,OAASslF,KACzDrB,EACF,MAAM,IAAIz3E,MAAM,mCAAqCxM,OAO/C,CACR,MAAMulF,EAAiBhlF,KAAK4jF,QAAQrC,EAAQ,QAE5C,GAAGyD,IAAmBhF,GAAY,CAChC,MACMiF,GC5rByBl3E,ED2rBZ/N,KAAK0kF,WAAWnD,EAAQ,mBCzrBlC,aAAaxzE,OAAmCpC,ID6rBzD,OAFwB,IAAIg4E,GAAkBsB,GAEvBb,YAAY3kF,EAAM8hF,GAG3C,GAAGyD,IAAmBjF,GACpB,OAAO//E,KAAK6kF,YAAYplF,EAAM8hF,GAGhC,IAAIpgF,EAAQqiF,EAAO0B,kBACnB,IAAI/jF,EAAO,CACTqiF,EAAO0B,kBAAoB/jF,EAAQ,GACnC,IAAI,IAAI0E,EAAI,EAAG8H,EAAM61E,EAAOp2D,aAAahvB,OAAQyH,EAAI8H,EAAK9H,IACxD1E,EAAMqiF,EAAOp2D,aAAavnB,GAAGtH,IAAMsH,EAIvC,MAAMA,EAAI1E,EAAM6jF,GAKhB,QAJSr5E,IAAN9F,IACD69E,EAAkBF,EAAOp2D,aAAavnB,KAGpC69E,GAAmB1jF,KAAKkgF,QAAS,CACnC,MAAMiF,EAAiB,OACvB,IAAI,IAAIt/E,EAAI,EAAG8H,EAAMw3E,EAAe/3D,aAAahvB,OAAQyH,EAAI8H,EAAK9H,IAChE,IAAIs/E,EAAe/3D,aAAavnB,GAAGtH,KAAOymF,EAAgB,CACxDtB,EAAkByB,EAAe/3D,aAAavnB,UAEvC7F,KAAKkgF,QACZ4E,GAAW,EACX,OAKN,IAAIpB,EAAiB,CAGnB,IAAI0B,EAAcC,EAFlB/lF,QAAQC,MAAM,yBAA0BylF,GAGxC,IACEI,EAAOplF,KAAK6jF,SAAStC,GACrB8D,EAAOrlF,KAAK6jF,SAAStC,GACrB,MAAMh3E,IAIR,MAAM,IAAI0B,MAAM,0BAA4B+4E,EAAiB,IAAMI,EAAO,IAAMC,EAAO,IAAM9D,IC3uBtF,IAAwBxzE,ED+uBnC,MAAM8xE,EAAY6D,EAAgB7D,UAE5Bz9E,EAAc,CAAC,EAAKy9E,GACpByF,GAAetlF,KAAKkgF,QAAU,MAAQ,IAAML,EAClD,GAAG7/E,KAAK+uB,SAASu2D,GACftlF,KAAK+uB,SAASu2D,GAAaljF,EAAQm/E,EAAQ,IAAM1B,EAAY,UAE7D,IAAI,IAAIh6E,EAAI,EAAG8H,EAAM+1E,EAAgBhvE,OAAOtW,OAAQyH,EAAI8H,EAAK9H,IAAK,CAChE,MAAMo9E,EAAQS,EAAgBhvE,OAAO7O,GACrC,IAAIpG,EAAOwjF,EAAMxjF,KAEL,MAATA,QAAkCkM,IAAlBvJ,EAAOvD,SACxBuD,EAAOvD,OAAS,IAGlB,MAAM0mF,GAAiC,IAAvB9lF,EAAKpD,QAAQ,KAC7B,GAAGkpF,EAAQ,CACT,MAAMrC,EAAWzjF,EAAK+H,MAAM,KACtB27E,EAAWD,EAAS,GAAG17E,MAAM,KAEnC,KAAKpF,EAAO+gF,EAAS,IAAO,IAAMA,EAAS,IAEzC,SAKF1jF,EAAOyjF,EAAS,GAGlB,MAAM3+E,EAAQvE,KAAKokF,YAAY3kF,EAAM8hF,EAAQ,IAAM1B,EAAY,KAAOoD,EAAMhjF,KAAO,KAEhFslF,GAAmB,SAAT9lF,EACX2C,EAAOvD,OAAOokF,EAAMhjF,MAAQsE,EAM5BnC,EAAO6gF,EAAMhjF,MAAQsE,EAS3B,OAJGugF,IACD9kF,KAAKkgF,SAAU,GAGL,cAATzgF,EACMO,KAAKwlF,gBAAgBpjF,GAGvBA,EAGDojF,gBAAgBC,GACtB,IAAIA,EAAUnnF,EAAG,OAAOmnF,EACxB,OAAOA,EAAUnnF,GACf,IAAK,WACH,OAAO,KACT,IAAK,aAAc,CACjB,MAAMub,EAAW,GACX6rE,EAAeD,EAAUlhF,MAC/B,IAAI,IAAIsB,EAAI,EAAGzH,EAASsnF,EAAatnF,OAAQyH,EAAIzH,IAAUyH,EAAG,CAC5D,MAAM8/E,EAAcD,EAAa7/E,GACjCgU,EAAI8rE,EAAYt+E,KAAOrH,KAAKwlF,gBAAgBG,EAAYphF,OAE1D,OAAOsV,EAET,QACE,OAAO4rE,EAAUlhF,OAIhB08E,YACL,OAAOjhF,KAAKgpB,OAGP48D,UAAU58D,GACfhpB,KAAKgpB,OAASA,GAYlB,uBAAmC26D,GACnC,qBAAiC1D,G,eE/0BlB,SAAS4F,GACtB93E,EACA+3E,EAAoB,GACpBC,EACAC,GAAyB,EACzBp6D,GAAU,GAEV,MAAMje,EAAOI,EAAsBzD,YAAeyD,EAAqB3P,OACjE6nF,EAAcD,EAAyBF,EAAYn4E,EAAMm4E,EAAan4E,EAAMm4E,EAClF,GAAGG,EAAc,GAAKA,EAAcH,EAAW,CAE7C,MAAMI,EAAU,IAAI97E,WAAW67E,GAC/B,GAAGF,EACD,IAAI,IAAIlgF,EAAI,EAAGA,EAAIogF,IAAepgF,EAChCqgF,EAAQrgF,GAAK,OAGfiG,EAAUo6E,GAGZ,OAAGn4E,aAAiBsyE,aACVz0D,GAAU,EAAAu6D,GAAA,GAAcD,EAASn4E,IAAS,EAAAo4E,GAAA,GAAcp4E,EAAOm4E,IAAUj8E,OACzE8D,aAAiB3D,WACjBwhB,GAAU,EAAAu6D,GAAA,GAAcD,EAASn4E,IAAS,EAAAo4E,GAAA,GAAcp4E,EAAOm4E,GAG/Dt6D,EAAU,IAAIs6D,GAAShiF,OAAO6J,GAASA,EAAM7J,OAAO,IAAIgiF,IAIpE,OAAOn4E,EC/BF,SAASq4E,GAAgBr4E,EAA8Bs4E,EAAO,KACnE,OAAO,eAAiBt4E,aAAiB3D,WAAa,IAAI2D,GAASA,EAAOs4E,G,iUCiF5E,MACMC,GAQF,CACF70E,OAAQ,CACN80E,mBAAoB,EACpBC,mBAAoB,GACpBC,aAAc,IACdC,YAAa,EACbC,kBAAmB,KAErBttD,KAAM,CACJktD,mBAAoB,GACpBC,mBAAoB,GACpBC,aAAc,IACdC,YAAa,EACbC,kBAAmB,OAGjBC,GAAmC,CACvCC,YAAY,EACZC,mBAAmB,GAErB,IAAIC,GAEW,MAAMC,GA0EnBlnF,YACUo9E,EACA37D,EACD7Y,EACCo0E,EACAE,EACRC,EACA5/E,EAA4B,IANpB,KAAA6/E,iBAAAA,EACA,KAAA37D,YAAAA,EACD,KAAA7Y,KAAAA,EACC,KAAAo0E,QAAAA,EACA,KAAAE,UAAAA,EAxEF,KAAAiK,mBAAoC,GAEpC,KAAAC,aAEJ,GAEI,KAAAC,gBAA6C,GAC7C,KAAAC,YAA6B,GAC7B,KAAAC,iBAA6B,GAK7B,KAAAC,QAAkB,EAOlB,KAAAC,sBAAwB,EAExB,KAAAvU,SAAU,EAkBX,KAAA0J,UAAW,EACV,KAAAh2E,OAA2B,WAC3B,KAAA8gF,iBAAmB,EAEnB,KAAAl+E,MAAQ,MAAwB,UAEjC,KAAAm+E,eAAiB,EA0XhB,KAAAC,wBAA0B,K,MAGhC,GAAG1nF,KAAK2nF,8BAAgC3nF,KAAK8R,YAAc9R,KAAK8R,UAAUpI,UAAW,OAUrF,MAAMtO,EAAW4E,KAAK2nF,6BAA8B,SAC9CrB,EAAStmF,KAAKsmF,OACdI,EAAc1mF,KAAKsmF,OAAOI,YAC1BkB,EAAezoE,KAAKC,IAAqB,QAAjB,EAAApf,KAAK4nF,oBAAY,QAAI,EAAGlB,GAChDmB,EAAkB1oE,KAAK2oE,MAAMxB,EAAOC,mBAAqBqB,EAAelB,GAAeJ,EAAOE,mBAAqBF,EAAOC,qBAC1HwB,EAAgC,IAAlBF,EACd7J,EAAY1uE,KAAKvK,MACjBijF,EAAShoF,KAAKioF,2BAA4B,UAC1C5qF,EAA4B,CAACypF,mBAAmB,GACtD9mF,KAAKkoF,YAAY,wBAAyB,CACxCC,QAASH,EACTI,iBAAkBP,GACjBxqF,GAEH2C,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,0CAA0Cy+E,mBAA6B/nF,KAAK4nF,uBAAuBvqF,EAAQ0R,aACxI,MAAMs5E,EAAgB14E,EAAA,aAAevU,EAASwG,OAAQmmF,GAkCtD3sF,EACC4J,MAjCmBksB,IAClBhsB,aAAamjF,GACb,MAAMC,EAAch5E,KAAKvK,MAAQi5E,EAGjC,GAFAh+E,KAAK4nF,aAAeU,EAAc,IAClCtoF,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,0CAA0C4nB,YAAiB02D,YAAuBvqF,EAAQ0R,aACpHu5E,EAAcP,EACf,WAAMp8E,EAEN,OAAO,EAAAX,EAAA,GAAMmU,KAAKyD,IAAI,EAAG5iB,KAAKsmF,OAAOG,aAAe6B,OA0BvDv/E,OAtBiB,KAChB7D,aAAamjF,GACb,MAAMv2E,EAAY9R,KAAK8R,UACpB9R,KAAK2nF,8BAAgCvsF,IAAa0W,MAAAA,OAAS,EAATA,EAAWtD,cAIhExO,KAAKG,IAAIZ,MAAM,qDAAsDS,KAAK4nF,aAAcvqF,EAAQ0R,WAChG+C,EAAUtD,WAAW7L,YAetBsG,SAZiB,KACbjJ,KAAK2nF,8BAAgCvsF,IAIxC4E,KAAK2nF,iCAA8Bh8E,EACnC3L,KAAK0nF,+BAUD,KAAAa,cAAgB,KACtB,MAAMC,EAAUxoF,KAAK0O,cAErB,GAAI1O,KAAKyoF,iBAAmBn5E,KAAKvK,MAAQ/E,KAAKyoF,iBAC5CzoF,KAAKgzE,SACLhzE,KAAKm+E,aACLn+E,KAAK29E,gBAEL,OAAO,EAGTpmC,GAAA,MAAmB,MAAMvyC,MAAMw1E,IAC1BgO,IACChO,IAAax6E,KAAK0I,MACjB1I,KAAK0oF,YAAcp5E,KAAKvK,MAAQ/E,KAAK0oF,aAM1C1oF,KAAK2oF,mBA8BD,KAAAC,gBAAmBzmF,IAIzB,GAHAnC,KAAKsJ,OAAStJ,KAAKG,IAAI,mBAAoBgC,GAC3CnC,KAAK6oF,+BAED7oF,KAAK8R,UAEP,YADA9R,KAAKG,IAAI2C,KAAK,oCAIhB,MAAMgmF,EAAa,IAAI7I,GAAgB,CAACC,SAAS,IAC3C8H,GAAS,UAEfc,EAAWlG,YAAY,OAAQ,CAC7BuF,QAASH,IAGX,MAAMe,EAAc,CAClB5zC,OAAQn1C,KAAKuhB,YAAYynE,aACzBC,OAAQjpF,KAAKkpF,eAAc,GAC3Bt/E,KAAMk/E,EAAWhI,UAAS,IAGzB9gF,KAAKgzE,SACNhzE,KAAKyO,oBAAoB,gBAG3BzO,KAAKmpF,qBAAqBJ,GAAa/jF,MAAK,KAC1ChF,KAAKopF,eAAc,MAClB,KACDppF,KAAKsJ,OAAStJ,KAAKG,IAAI,QAAsC,IAA7BH,KAAKunF,uBACrCvnF,KAAKqpF,uBAAyB15E,EAAA,cAAe,IAAM3P,KAAK4oF,gBAAgB,wCAAqE,IAA7B5oF,KAAKunF,sBAA+B,GACpJvnF,KAAKunF,sBAAwBpoE,KAAKC,IAAI,GAAiC,IAA7Bpf,KAAKunF,2BAlfjDvnF,KAAKspF,cAAe,EAAAC,GAAA,GAAoBvpF,KAAK88E,SAC7C98E,KAAKi9E,YAAa,EAAAsM,GAAA,GAAoBtM,GAEtCj9E,KAAKwpF,eAAiBnsF,EAAQi8E,WAC9Bt5E,KAAKypF,iBAAmBpsF,EAAQ64E,aAChCl2E,KAAK29E,gBAAkB39E,KAAKwpF,cAAgBxpF,KAAKypF,eACjDzpF,KAAKsmF,OAAStmF,KAAK29E,gBAAkB2I,GAAOjtD,KAAOitD,GAAO70E,OAE1D,MAAMV,EAAS/Q,KAAKwpF,aAAe,KAAOxpF,KAAKypF,eAAiB,KAAO,GACvEzpF,KAAKC,KAAO,OAASyI,EAAOqI,EAE5B/Q,KAAKG,KAAM,EAAAsJ,EAAA,IAAOzJ,KAAKC,KAAM,KAAAuJ,IAAe,WAAiB,WAAiB,eAAemC,GAC7F3L,KAAKG,IAAI,eAQTH,KAAK0pF,gBASCA,gBACN1pF,KAAK2pF,MAAQ,EACb3pF,KAAK4pF,cAAgB5pF,KAAKgP,UAC1BhP,KAAKgP,UAAYlD,EAAU,IAAI1B,WAAW,IAYpCy/E,kBAAkBC,GACxB,MAAMC,EAAc/pF,KAAKknF,aAAa4C,GACtC,QAAIC,IAIDA,EAAYC,YACb,EAAA1kE,GAAA,GAAeykE,EAAYE,OAAO,CAACC,EAAoB1lF,KACrD,MAAM2lF,EAAmBnqF,KAAK6pF,kBAAkBK,GAC5CC,EAGFJ,EAAYE,MAAMzlF,GAAO2lF,EAAiBh1C,OAF1C40C,EAAYE,MAAMl/E,OAAOvG,EAAK,MAOpCulF,EAAY50C,OAASn1C,KAAKuhB,YAAYynE,aACtCe,EAAYd,OAASjpF,KAAKkpF,cAAca,EAAYjD,mBAAqBiD,EAAYC,WAElFhqF,KAAKsJ,OACNtJ,KAAKG,IAAI,0BAA0B2pF,UAAsBC,EAAY50C,UAGvEn1C,KAAKknF,aAAa6C,EAAY50C,QAAU40C,SACjC/pF,KAAKknF,aAAa4C,GAElBC,GAGDb,cAAcpC,GACpB,IAAI6C,EAAqB,EAAb3pF,KAAK2pF,MAOjB,OALI7C,IACF6C,IACA3pF,KAAK2pF,SAGAA,EAGFzB,YAAYp+E,EAAgB4K,EAAarX,GAC9C,MAAMyrF,EAAa,IAAI7I,GAAgB,CAACC,SAAS,IAEjD4I,EAAWlG,YAAY94E,EAAQ4K,GAE/B,MAAM3F,EAAY/O,KAAKuhB,YAAYynE,aAC7BW,EAAQ3pF,KAAKkpF,gBACbrnF,EAAU,CACdszC,OAAQpmC,EACRk6E,OAAQU,EACR//E,KAAMk/E,EAAWhI,UAAS,IAO5B,OAJG,WACD9gF,KAAKG,IAAI,UAAW2J,EAAQ4K,EAAQ3F,EAAW46E,GAG1C3pF,KAAKoqF,YAAYvoF,EAASxE,GAG5BgtF,eAAe/iF,EAAajK,GACjC,MAAMyrF,EAAa,IAAI7I,GAAgB,CAACC,SAAS,IACjD4I,EAAW1F,YAAY97E,EAAQ,UAE/B,MAAMyH,EAAY/O,KAAKuhB,YAAYynE,aAC7BW,EAAQ3pF,KAAKkpF,cAAc7rF,EAAQypF,mBACnCjlF,EAAU,CACdszC,OAAQpmC,EACRk6E,OAAQU,EACR//E,KAAMk/E,EAAWhI,UAAS,IAO5B,OAJG,WACD9gF,KAAKG,IAAI,aAAcmH,EAAQyH,EAAW46E,GAGrC3pF,KAAKoqF,YAAYvoF,EAASxE,GAG5BihF,YAAYx0E,EAAgB4K,EAAc,GAAIrX,EAA4B,IAC/E,MAAMyrF,EAAa,IAAI7I,GAAgB5iF,GAEvC,IAAI2C,KAAKsqF,iBAAkB,CAGzB,MAAMC,EAAkB,qBAAyBh7B,GAAmB,oBAAbA,EAAEzlD,SACzD,IAAIygF,EAAiB,MAAM,IAAIt+E,MAAM,uBACrC68E,EAAWtH,UAAU+I,EAAgBhsF,GAAI,mBAGzCuqF,EAAWtH,SAAS,SAAc,SAElC,MAAMgJ,EAAiB,qBAAyBj7B,GAAmB,mBAAbA,EAAEzlD,SACxD,IAAI0gF,EAAgB,MAAM,IAAIv+E,MAAM,sBAEpC68E,EAAWtH,UAAUgJ,EAAejsF,GAAI,kBACxCuqF,EAAWtH,SAAS,EAAK,SACzBsH,EAAWtH,SAAS,OAAQ,UAC5BsH,EAAWxG,YAAYt8E,IAAiBjK,YAAc,oBAAqB,gBAC3E+sF,EAAWxG,YAAYtmF,UAAUQ,UAAY,mBAAoB,kBACjEssF,EAAWxG,YAAY,aAAe,iBAAmB,IAAM,WAAa,IAAK,eACjFwG,EAAWxG,YAAYtmF,UAAU02B,UAAY,KAAM,oBACnDo2D,EAAWxG,YAAY,aAAc,aACrCwG,EAAWxG,YAAYtiF,KAAKk9E,iBAAiBxqD,SAAU,aAczD,GAAGr1B,EAAQkoD,eAAgB,CACzB,QAAiC55C,IAA9Bo7E,GAAyC,CAC1C,MAAMx3B,EAAI,qBAAyBA,GAAmB,mBAAbA,EAAEzlD,SAC3Ci9E,GAA4Bx3B,GAAKA,EAAEhxD,GAAK,EAGvCwoF,IAKD+B,EAAWtH,SAASuF,GAA2B,kBAC/C+B,EAAWjH,UAAUxkF,EAAQkoD,eAAgB,WAE7CvlD,KAAKG,IAAIZ,MAAM,sBAInBlC,EAAQotF,WAAa3B,EAAWlG,YAAY94E,EAAQ4K,GAMpD,MAEM7S,EAAU,CACdszC,OAHgBn1C,KAAKuhB,YAAYynE,aAIjCC,OAHYjpF,KAAKkpF,gBAIjBt/E,KAAMk/E,EAAWhI,UAAS,GAC1B4J,OAAO,GAST,OANG,UACD1qF,KAAKG,IAAI,WAAY2J,EAAQjI,EAAS6S,EAAQrX,GACtC2C,KAAKsJ,OACbtJ,KAAKG,IAAI,WAAY2J,EAAQ4K,EAAQrX,GAGhC2C,KAAKoqF,YAAYvoF,EAASxE,GAG5BogF,gBAAgB3rE,GACrB,MAAM0rE,EAAex9E,KAAK8R,UACvB0rE,IACDA,EAAa/yE,UAEVzK,KAAK2qF,iBACNzlF,aAAalF,KAAK2qF,gBAClB3qF,KAAK2qF,eAAiB,EACtB3qF,KAAKsnF,QAAU,GAGjBtnF,KAAKsqF,kBAAmB,OAGK3+E,IAA1B3L,KAAK4qF,mBACNxM,cAAcp+E,KAAK4qF,kBACnB5qF,KAAK4qF,sBAAmBj/E,GAG1B3L,KAAK6oF,+BAIP7oF,KAAKG,IAAI,mBAAoB2R,EAAW0rE,GAGxCx9E,KAAK6qF,2BAUL7qF,KAAK8R,UAAYA,EACbA,IAIJA,EAAUnH,UAAY3K,KAInB8R,aAAqB3I,IAEtBnJ,KAAK4qF,iBAAmBj7E,EAAA,cAAgB3P,KAAKuoF,cAAe,KAC5DvoF,KAAKuoF,gBACLvoF,KAAK4oF,gBAAgB,sBAQnB92E,EAA4BtD,YAG3BsD,EAAUpI,WACX1J,KAAKyO,oBAAoB,eAQ7BzO,KAAK2O,UAGAlE,UACLzK,KAAKG,IAAI,WAGJ2qF,wBACD9qF,KAAK8R,UAA4BlC,UAClC5P,KAAK8R,UAA4BlC,YAElC5P,KAAK2O,SAIFmB,iBACD9P,KAAK8R,UAA4BhC,eAClC9P,KAAK8R,UAA4BhC,iBAElC9P,KAAK4oF,gBAAgB,mBA8CjBiC,2BACN,MAAMzvF,EAAW4E,KAAK2nF,4BACtB3nF,KAAK2nF,iCAA8Bh8E,EACnC3L,KAAKioF,+BAA4Bt8E,EAE9BvQ,GACDA,EAASwG,SAiGL+mF,eACH3oF,KAAK+qF,kBACR/qF,KAAK+qF,iBAAkB,EAGvB/qF,KAAKyoF,gBAAkBn5E,KAAKvK,MAFZ,KAGhB/E,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,eAAgBtJ,KAAKyoF,iBAElDzoF,KAAKkoF,YAAY,YAAa,CAC5B8C,UAAW,IACXC,WAAY,IACZC,SARc,MASb,CACDC,YAAY,EAEZC,UAAU,IACTpmF,MAAK,KACNhF,KAAKyoF,qBAAkB98E,EACvB5J,WAAW/B,KAAKuoF,cAAe,MAC7BhpF,IACFS,KAAKG,IAAI,mBAAoBZ,MAC5B0J,SAAQ,KACTjJ,KAAK+qF,qBAAkBp/E,MAuCnBk9E,mCAC6Bl9E,IAAhC3L,KAAKqpF,yBACNnkF,aAAalF,KAAKqpF,wBAClBrpF,KAAKqpF,4BAAyB19E,GAI1By9E,cAAcpW,GACpB,GAAGhzE,KAAKgzE,UAAYA,EAIlB,GAHAhzE,KAAKgzE,QAAUA,EAEfhzE,KAAK6oF,8BACF7V,EAAS,CACV9tE,aAAalF,KAAK2qF,gBAClB3qF,KAAK2qF,eAAiB,EACtB3qF,KAAKsnF,QAAU,EAEZtnF,KAAKunF,sBAAwB,MAC9BvnF,KAAKunF,sBAAwB,GAG/B,MAAM8D,EAAqC,IAA7BrrF,KAAKunF,sBAA+B,EAClDvnF,KAAKsrF,uBAAyBh8E,KAAKvK,MAAQsmF,EAC3CrrF,KAAKyO,oBAAoB,WAAyBzO,KAAKsrF,wBACvDtrF,KAAKqpF,uBAAyB15E,EAAA,cAAe,IAAM3P,KAAK4oF,gBAAgB,sBAAsByC,GAC9FrrF,KAAKunF,sBAAwBpoE,KAAKC,IAAI,GAAuC,KAAlC,EAAIpf,KAAKunF,6BAOpDvnF,KAAKyO,oBAAoB,eACzBzO,KAAKuoF,gBAELvoF,KAAKurF,kBASTvrF,KAAKyO,oBAAoBukE,EAAU,WAA0B,cAA4BA,EAAUhzE,KAAKsrF,4BAAyB3/E,GAG3H6/E,+BAA+B5gF,EAA2D/I,EAAoB4pF,GAKpH7gF,EAAQ5F,MAAM5C,IACZpC,KAAKopF,eAAc,GAEZppF,KAAK6O,cAAczM,GAAQ4C,MAAM+E,IACtC/J,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,kBAAmBS,GAEhD/J,KAAK8O,eAAe/E,EAASA,SAAUA,EAASgF,UAAWhF,EAASiF,WAEpEhP,KAAKuoF,gBACLvoF,KAAKunF,sBAAwBpoE,KAAKyD,IAAI,IAAKzD,KAAKusE,KAAK1rF,KAAKunF,yBAEnD,QAEPhoF,IACFS,KAAKG,IAAIZ,MAAM,2BAA4BA,EAAOsC,GAElD7B,KAAK2rF,WAAW9pF,EAAQszC,QACxBn1C,KAAKopF,eAAc,IAEZ,KACNpkF,MAAM4mF,IAEP,MAAM1E,EAAelnF,KAAKknF,aAC1BuE,EAAevoF,SAASguD,IACtB,MAAM64B,EAAc7C,EAAah2B,GACjC,GAAG64B,EAAa,CACd,MAAM3uF,EAAW2uF,EAAY3uF,gBACtB8rF,EAAah2B,UACblxD,KAAKmnF,gBAAgBj2B,GAC5B06B,EAAgBxwF,EAAS6G,UAAY7G,EAASwG,gBAQ9CwoF,YAAYvoF,EAKjBxE,GACD,IAAIuN,EAuBJ,OAtBIvN,EAAQypF,oBAAqBzpF,EAAQ8tF,aACvCvgF,GAAU,UAGZ5K,KAAKknF,aAAarlF,EAAQszC,QAAUt5C,OAAOC,OACzC+F,EACAxE,EACAuN,EAAU,CAACxP,SAAUwP,QAAWe,GAKlC3L,KAAKmnF,gBAAgBtlF,EAAQszC,QAAU,EAEnC93C,EAAQwpF,YACV7mF,KAAKurF,mBAGJ,EAAApqE,GAAA,GAAS9jB,KACVA,EAAQ0R,UAAYlN,EAAQszC,QAGvBvqC,EAGFm0E,cAAcn0E,EAAuB/I,GAC1C,MACMsD,EAAUpD,YAAW,KACtB/B,KAAKwnF,kBAAqBl4E,KAAKvK,MAAQ/E,KAAKwnF,iBAAoBxnF,KAAKsmF,OAAOK,oBAI/E3mF,KAAKG,IAAIZ,MAAM,UAAWsC,GACvB7B,KAAK08E,UACN18E,KAAKyO,oBAAoB,iBAM1BzO,KAAKsmF,OAAOK,mBAEf/7E,EAAQ7B,MAAMC,EAAA,GAAMC,SAAQ,KAC1B/D,aAAaC,GACbnF,KAAKyO,oBAAoB,iBAGrBzO,KAAKynF,eACPznF,KAAK89E,uBAKL99E,KAAKynF,oBACoB97E,IAAxB3L,KAAK6rF,iBACN3mF,aAAalF,KAAK6rF,gBAClB7rF,KAAK6rF,oBAAiBlgF,GAKrBmyE,mBACD99E,KAAKynF,gBAAkBznF,KAAK09E,cAAmC/xE,IAAxB3L,KAAK6rF,iBAC9C7rF,KAAK6rF,eAAiBl8E,EAAA,cAAe,KACnC3P,KAAK6rF,oBAAiBlgF,EACtB3L,KAAKG,IAAI,SACTH,KAAK09E,YA1wBS,MA+wBbjvE,oBAAoB/H,EAA0B0I,G,MACnD,MAAMstE,EAAWh2E,IAAW,cACtBolF,EAAa9rF,KAAK0G,SAAWA,EACnC1G,KAAK08E,SAAWA,EAChB18E,KAAK0G,OAASA,EAEXolF,IACE9rF,KAAKk9E,iBAAiB6O,0BACvB/rF,KAAKk9E,iBAAiB6O,yBAAyB,CAC7CztF,EAAG,kBACHoI,OAAAA,EACAgC,KAAM1I,KAAK0I,KACXzI,KAAMD,KAAKC,KACX09E,gBAAiB39E,KAAK29E,gBACtB8L,eAAgBzpF,KAAKypF,eACrBD,aAAcxpF,KAAKwpF,aACnBp6E,QAAAA,IAIDpP,KAAK08E,UACN18E,KAAKurF,mBAG6B,QAAhC,EAAAvrF,KAAK8R,iBAA2B,eAAEtD,cACpCxO,KAAK6qF,2BACL7qF,KAAK0nF,4BAUHiE,WAAW58E,EAAmBs8E,EAAQ,KAC5C,MAAM9mF,EAAQ8mF,EAAQ/7E,KAAKvK,MAAQsmF,EAAQ,EACrCtB,EAAc/pF,KAAKknF,aAAan4E,GACtC,GAAGg7E,EAAYC,UACb,IAAI,MAAMgC,KAAcjC,EAAYE,MAClCjqF,KAAKmnF,gBAAgB6E,GAAcznF,OAGrCvE,KAAKmnF,gBAAgBp4E,GAAaxK,EAGjCwlF,EAAYkC,OACbjsF,KAAKG,IAAIZ,MAAM,6BAA8BwqF,GAG5C/pF,KAAKsJ,OACNtJ,KAAKG,IAAImJ,MAAM,cAAeyF,EAAWg7E,EAAa/pF,KAAKmnF,gBAAiBkE,GAG9ErrF,KAAKurF,gBAAgBF,GAITa,UAAUC,EAA6BjlE,G,0CACnD,MAAMklE,EAAIllE,EAAQ,EAAI,EAChBmlE,GAAmB,EAAAlG,GAAA,GAAcnmF,KAAKspF,aAAa1I,SAAS,GAAKwL,EAAG,GAAKA,EAAI,IAAKD,GAElFG,QAAoB,iBAA0B,SAAUD,GAE9D,OADe,IAAIjiF,WAAWkiF,GAAa1L,SAAS,EAAG,OAKjD2L,YAAYC,EAAoBtlE,GACtC,MAAMklE,EAAIllE,EAAQ,EAAI,EAChBulE,EAAY,IAAIriF,WAAW,IAC3BsiF,EAAY,IAAItiF,WAAW,IAC3Bge,EAAuC,GAU7C,OARAqkE,EAAUtkF,IAAIqkF,EAAQ,GACtBC,EAAUtkF,IAAInI,KAAKspF,aAAa1I,SAASwL,EAAGA,EAAI,IAAK,IACrDhkE,EAAS9nB,KAAK,iBAA0B,SAAUmsF,IAElDC,EAAUvkF,IAAInI,KAAKspF,aAAa1I,SAAS,GAAKwL,EAAG,GAAKA,EAAI,IAAK,GAC/DM,EAAUvkF,IAAIqkF,EAAQ,IACtBpkE,EAAS9nB,KAAK,iBAA0B,SAAUosF,IAE3C/qF,QAAQmR,IAAIsV,GAAUpjB,MAAMK,IACjC,MAAMsnF,EAAS,IAAIviF,WAAW,IACxBwiF,EAAQ,IAAIxiF,WAAW,IACvByiF,EAAQ,IAAIziF,WAAW/E,EAAQ,IAC/BynF,EAAQ,IAAI1iF,WAAW/E,EAAQ,IAUrC,OARAsnF,EAAOxkF,IAAI0kF,EAAMjM,SAAS,EAAG,IAC7B+L,EAAOxkF,IAAI2kF,EAAMlM,SAAS,EAAG,IAAK,GAClC+L,EAAOxkF,IAAI0kF,EAAMjM,SAAS,GAAI,IAAK,IAEnCgM,EAAMzkF,IAAI2kF,EAAMlM,SAAS,EAAG,IAC5BgM,EAAMzkF,IAAI0kF,EAAMjM,SAAS,EAAG,IAAK,GACjCgM,EAAMzkF,IAAI2kF,EAAMlM,SAAS,GAAI,IAAK,IAE3B,CAAC+L,EAAQC,MAIbzO,YACL,OAAOn+E,KAAKk9E,iBAAiB6P,YAAc/sF,KAAK29E,gBAG1CqP,0BACN,GAAGhtF,KAAKm+E,YACN,OAAO,EAGT,GAAGn+E,KAAKonF,YAAYhpF,OAAQ,CAC1B,MAAM6uF,EAAYjtF,KAAKonF,YAAYz/E,QAGnC3H,KAAKqqF,eAAe,CAClB/rF,EAAG,WACH4uF,QAASD,GACR,CACDnG,mBAAmB,EACnBD,YAAY,IAIhB,MAAMsG,EAAyBntF,KAAKqnF,iBAAiBjpF,OACrD,GAAG+uF,EAAwB,CACzB,MAAM9vF,EAAO,iBAAyBupF,IAChCvvB,EAASr3D,KAAKqnF,iBAAiBt8E,OAAO,EAAGoiF,GAC/CntF,KAAKqqF,eAAe,CAClB/rF,EAAG,iBACH4uF,QAAS71B,GACRh6D,GAEH2C,KAAKG,IAAI,6BAA8B9C,EAAQ0R,UAAWsoD,GA0B5D,IAAI+1B,EACJ,MAAM1nE,EAAgC,GAGtC,IAAI2nE,EAAkB,EAGlBC,GAAa,EACbC,GAAc,EAGdC,GAAiB,EAGrB,MAAM95E,EAAsB7X,OAAO6X,KAAK1T,KAAKmnF,iBC5gCpC/iF,KAAKgvC,GACP,KAAOA,KACbvqB,MAAK,CAACqD,EAAGC,IACHD,EAAEuhE,QAAQthE,KAChB/nB,KAAKspF,GACCA,EAAO1/E,SAAS,MDwgCvB,IAAI,MAAMe,KAAa2E,EAAM,CAIzB,MAAM7R,EAAU7B,KAAKknF,aAAan4E,GAClC,GAAGlN,GAAWA,EAAQ+H,KAAM,CAK1B,MAAM+jF,EAAoB9rF,EAAQ+H,KAAKxL,OAAS,GAEhD,GAAIivF,EAAkBM,EAAqB,SACzC3tF,KAAKG,IAAI2C,KAAK,iBAAkBjB,EAAS6jB,GACzC8nE,GAAiB,EAEdJ,GACD,MAIJ1nE,EAASplB,KAAKuB,GACdwrF,GAAmBM,EAGhB9rF,EAAQ6oF,MACT4C,GAAa,EACLzrF,EAAQupF,WAChBmC,GAAc,GAIhBH,EAAavrF,SAKR7B,KAAKmnF,gBAAgBp4E,GAMhC,GAAG/O,KAAK8R,qBAAqB3I,GAE1BmkF,IAAeC,EAAa,CAC7B,MAAMzE,EAAa,IAAI7I,GAAgB,CAACC,SAAS,IACjD4I,EAAWlG,YAAY,YAAa,CAClCoI,UAAW,IACXC,WAAY,IACZC,SAAU,MAGZxlE,EAASplB,KAAK,CACZ60C,OAAQn1C,KAAKuhB,YAAYynE,aACzBC,OAAQjpF,KAAKkpF,gBACbt/E,KAAMk/E,EAAWhI,UAAS,KAK9B,IAAIp7D,EAAStnB,OAEX,OAIF,MAAMqtF,EAAgC/lE,EAASjnB,QAAQoD,GAAYA,EAAQspF,aAAY/mF,KAAKvC,GAAYA,EAAQszC,SAGhH,GAAGzvB,EAAStnB,OAAS,EAAG,CACtB,MAAM4rF,EAAYhqF,KAAK4tF,yBAAyBP,EAAiB3nE,GACjE0nE,EAAapD,EAAU6D,gBAEvB7tF,KAAKknF,aAAakG,EAAWj4C,QAAU60C,EAAUnoF,aAEjD7B,KAAKknF,aAAakG,EAAWj4C,QAAUi4C,EAGzCptF,KAAKonF,YAAc,GAEnB,MAAMx8E,EAAU5K,KAAKmpF,qBAAqBiE,GAIvCptF,KAAK8R,qBAAqB3I,GAE7BnJ,KAAKwrF,+BAA+B5gF,EAASwiF,EAAY3B,GAKpDzrF,KAAK8R,qBAAqB3I,GAE/BnJ,KAAK0O,cAGF8+E,GACDxtF,KAAKurF,kBAIDqC,yBAAyBP,EAAyB3nE,GACxD,MAAMskE,EAAY,IAAI/J,GAAgB,CACpCC,SAAS,EACTC,eAAgBkN,EAAkB,KAGpCrD,EAAUxI,SAAS,WAAY,iBAC/BwI,EAAUxI,SAAS97D,EAAStnB,OAAQ,oBAEpC,MAAM0vF,EAA0B,GAChCpoE,EAASxiB,SAAQ,CAACrB,EAASgE,KACzBioF,EAAcxtF,KAAKuB,EAAQszC,QAE3B60C,EAAUnI,UAAUhgF,EAAQszC,OAAQ,aAAetvC,EAAI,aACvDmkF,EAAUxI,SAAS3/E,EAAQonF,OAAQ,aAAepjF,EAAI,aACtDmkF,EAAUxI,SAAS3/E,EAAQ+H,KAAKxL,OAAQ,aAAeyH,EAAI,YAC3DmkF,EAAUrH,cAAc9gF,EAAQ+H,KAAM,aAAe/D,EAAI,cAG3D,MAAMhE,EAAqB,CACzBszC,OAAQn1C,KAAKuhB,YAAYynE,aACzBC,OAAQjpF,KAAKkpF,eAAc,GAC3Bc,WAAW,EACXC,MAAO6D,GAOT,OAJG,WACD9tF,KAAKG,IAAI2C,KAAK,YAAagrF,EAAejsF,EAAQszC,OAAQtzC,EAAQonF,QAG7D,CACLpnF,QAAAA,EACAgsF,gBAAiBhyF,OAAOC,OAAO,CAAC8N,KAAMogF,EAAUlJ,UAAS,IAAQj/E,IAIvDksF,oBAAoB5B,G,0CAChC,MAAMK,QAAexsF,KAAKksF,UAAUC,GAAiB,GAC/C6B,QAAchuF,KAAKusF,YAAYC,GAAQ,GAM7C,MAAO,CACLz+E,YAJ2B,iBAA0B,cAAeo+E,EAAiB6B,EAAM,GAAIA,EAAM,IAKrGxB,OAAAA,MAIIyB,oBAAoBzB,EAAoB0B,GAE9C,OAAOluF,KAAKusF,YAAYC,GAAQ,GAAOxnF,MAAMgpF,GAEpC,iBAA0B,cAAeE,EAAeF,EAAM,GAAIA,EAAM,MAI3EG,mBAAmBtsF,GASzB,MAAM0J,EAAO,IAAI00E,GAAgB,CAC/BE,eAAgBt+E,EAAQ+H,KAAKxL,OAAS,OAGxCmN,EAAKw2E,cAAc/hF,KAAKi9E,WAAY,GAAI,QACxC1xE,EAAKw2E,cAAc/hF,KAAKgP,UAAW,GAAI,cAEvCzD,EAAKs2E,UAAUhgF,EAAQszC,OAAQ,cAC/B5pC,EAAKi2E,SAAS3/E,EAAQonF,OAAQ,UAE9B19E,EAAKi2E,SAAS3/E,EAAQ+H,KAAKxL,OAAQ,uBACnCmN,EAAKo3E,cAAc9gF,EAAQ+H,KAAM,gBAmBjC,MAAMwkF,EAAa7iF,EAAKs1E,YAMlBwN,EAAiB,GAAM9iF,EAAK01E,YAAc,GAAO,IAAM,GAAI,QAAe,GAAK,GAC/EiF,EAA4Cp6E,EAAU,IAAI1B,WAAWikF,IASrElC,GAAkB,EAAAhG,GAAA,GAAciI,EAAYlI,GAalD,OAAOlmF,KAAK+tF,oBAAoB5B,GAAiBnnF,MAAMspF,IAKrD,MAAM9sF,EAAU,IAAIy+E,GAAgB,CAClCE,eAAgBmO,EAAgBvgF,MAAM3P,OAAS,MAejD,OAbAoD,EAAQugF,cAAc/hF,KAAKg9E,UAAW,GAAI,eAC1Cx7E,EAAQugF,cAAcuM,EAAgB9B,OAAQ,IAAK,WACnDhrF,EAAQmhF,cAAc2L,EAAgBvgF,MAAO,kBAEzBvM,EAAQs/E,UAAS,MAa3BqI,qBAAqBtnF,G,0CACjC,MAAM0sF,QAAoBvuF,KAAKmuF,mBAAmBtsF,GAE9C7B,KAAK8R,WACP9R,KAAKG,IAAIZ,MAAM,wCAAyCS,KAAK8R,UAAW9R,MAG1EA,KAAKsJ,OAAStJ,KAAKG,IAAImJ,MAAM,WAAYzH,EAAS,CAACA,EAAQszC,QAAQjxC,OAAOrC,EAAQooF,OAAS,IAAKsE,EAAYnwF,QAC5G,MAAMwM,EAA+B5K,KAAK8R,UAAY9R,KAAK8R,UAAUpH,KAAK6jF,GAAsB5sF,QAAQC,OAAO,IAQ/G,KAAK5B,KAAK8R,qBAAqB3I,GAAO,OAAOyB,EAG7C,MAAM4jF,EAAY,CAChB14E,KAAM,IACNrW,KAAM,uBACNqS,UAAW9R,KAAK8R,WAGlB,OAAOlH,EAAQ5F,MAAM5C,IACnB,KAAIA,MAAAA,OAAM,EAANA,EAAQkI,YACV,MAAMkkF,EAIR,OAAOpsF,KACL7C,IAQF,MAPIA,EAAMsC,SAAYtC,EAAME,OAC1BF,EAAQ1D,OAAOC,OAAO0yF,EAAW,CAC/B/uF,KAAM,sBACNu/E,cAAez/E,KAIbA,QAKHsP,cAAc4/E,GAMnBzuF,KAAKwnF,iBAAmBl4E,KAAKvK,MAE7B,MAAM2pF,EAAe,IAAI/K,GAAkB8K,GAErCzR,EAAY0R,EAAa/J,cAAc,IAAI,EAAM,eACvD,KAAI,EAAAgK,GAAA,GAAS3R,EAAWh9E,KAAKg9E,WAC3B,MAAM,IAAI/wE,MAAM,oCAAsC6B,EAAWkvE,IAGnE,MAAMwP,EAASkC,EAAa/J,cAAc,KAAK,EAAM,WAC/CuJ,EAAgBQ,EAAa9J,cAAc6J,EAAenkF,WAAaokF,EAAazN,aAAa,EAAM,kBAE7G,OAAOjhF,KAAKiuF,oBAAoBzB,EAAQ0B,GAAelpF,MAAMmnF,GAEpDnsF,KAAKksF,UAAUC,GAAiB,GAAOnnF,MAAM4pF,IAClD,KAAI,EAAAD,GAAA,GAASnC,EAAQoC,GAGnB,MAFA5uF,KAAKG,IAAI2C,KAAK,gBAAiB0pF,EAAQoC,GACvC5uF,KAAK0pF,gBACC,IAAIz9E,MAAM,iDAIlB,IAAIyiF,EAAe,IAAI/K,GAA0BwI,EAAiB,CAACjM,SAAS,IAEzDwO,EAAa/J,cAAc,IAAI,EAAM,QACxD,MAAM31E,EAAY0/E,EAAa/J,cAAc,IAAI,EAAM,cACjD51E,EAAY2/E,EAAa1K,UAAU,cAEzC,MAAI,EAAA2K,GAAA,GAAS3/E,EAAWhP,KAAKgP,YACzBhP,KAAK4pF,gBAAkB,EAAA+E,GAAA,GAAS3/E,EAAWhP,KAAK4pF,gBAIlD,MAHA5pF,KAAKG,IAAI2C,KAAK,WAAYkM,EAAWhP,KAAKgP,UAAWhP,KAAK4pF,cAAeuC,GAGnE,IAAIlgF,MAAM,mCAAqC6B,EAAWkB,IAGlE,MAAM26E,EAAQ+E,EAAa7K,SAAS,UAE9BgL,EAAc1C,EAAgB7hF,WAE9BwkF,EAAoBJ,EAAa7K,SAAS,wBAChD,IAAI76D,EAAS0lE,EAAazN,YAE1B,GAAI6N,EAAoB,GACtBA,EAAoBD,EAAc7lE,EAClC,MAAM,IAAI/c,MAAM,6BAA+B6iF,GAEjD,MAAMC,EAAcL,EAAa9J,cAAckK,GAAmB,EAAM,gBAExE9lE,EAAS0lE,EAAazN,YACtB,MAAMoN,EAAgBQ,EAAc7lE,EACpC,GAAGqlE,EAAgB,IAAMA,EAAgB,KACvC,MAAM,IAAIpiF,MAAM,gCAAkCoiF,GAsDpD,OAlDAK,EAAe,IAAI/K,GAAsCoL,EAAa,CACpE7O,SAAS,EACTnxD,SAAU,CACRigE,WAAY,CAAC5sF,EAAam/E,KACxBn/E,EAAO+yC,OAASu5C,EAAa1K,UAAUzC,EAAQ,YAC/Cn/E,EAAO6sF,MAAQP,EAAa7K,SAAStC,EAAQ,WAC7Cn/E,EAAO2L,MAAQ2gF,EAAa7K,SAAStC,EAAQ,WAE7C,MAAMv4D,EAAS0lE,EAAazN,YAI5B,IACE7+E,EAAOwH,KAAO8kF,EAAatK,YAAY,SAAU7C,EAAQ,UACzD,MAAMh/E,GACNvC,KAAKG,IAAIZ,MAAM,cAAgBgD,EAAYV,QAAUU,EAAY+6E,OACjEl7E,EAAOwH,KAAO,CACZtL,EAAG,cACHiB,MAAOgD,GAIRmsF,EAAazN,cAAgBj4D,EAAS5mB,EAAO2L,OAG9C2gF,EAAa9I,UAAU58D,EAAS5mB,EAAO2L,QAI3CmhF,cAAe,CAAC9sF,EAAam/E,KAC3Bn/E,EAAO+sF,WAAaT,EAAa1K,UAAUzC,EAAQ,gBAEnD,MAAMwI,EAAc/pF,KAAKknF,aAAa9kF,EAAO+sF,YACvC1vF,EAAOsqF,GAAeA,EAAYU,YAAc,SAEnDroF,EAAO+sF,aAAepF,IAMzB3nF,EAAOA,OAASssF,EAAatK,YAAY3kF,EAAM8hF,EAAQ,iBAStD,CACLx3E,SAHe2kF,EAAatK,YAAY,GAAI,SAI5Cr1E,UAAAA,EACAC,UAAAA,EACA26E,MAAAA,QAMAyF,gBAAgBC,GACtB,MAAMpS,GEj7C0B6E,EFi7CDuN,EE/6CnBxJ,IHAc6H,EGDM,KAAO5L,GHElC,IAAI13E,WAAWsjF,EAAO4B,QAAQ,KAAK/qF,QGFOwI,UACX,GAAG,GAAM,GAAO,IAFzC,IAAqB+0E,EHEN4L,ECi7C1Bn2C,GAAA,MAAmB,CACjB,CAAC,KAAOv3C,KAAK0I,KAAO,gBAAiBoF,EAAWmvE,KAGlDj9E,KAAKi9E,WAAa,IAAI7yE,WAAW6yE,GAI5BsO,gBAAgBF,GAOlBrrF,KAAK8R,qBAAqB3I,IAExBnJ,KAAKgzE,SACNhzE,KAAK4oF,gBAAgB,mBAGvByC,IAAAA,EAAU,IAMZ,MAAM/D,EAAUh4E,KAAKvK,OAASsmF,GAAS,GACvC,GAAGrrF,KAAKsnF,eAAsB37E,IAAV0/E,GAAuBrrF,KAAKsnF,SAAWA,GAEzD,OAUCtnF,KAAK2qF,gBACNzlF,aAAalF,KAAK2qF,gBAGpB,MAAM3xC,EAAK,KAGTh5C,KAAK2qF,eAAiB,EACtB3qF,KAAKsnF,QAAU,EAIZtnF,KAAK8R,qBAAqB3I,GAE1BnJ,KAAKgzE,SAMRhzE,KAAKgtF,2BAGPhtF,KAAKsnF,QAAUA,OAEF37E,IAAV0/E,EACDrrF,KAAK2qF,eAAiBh7E,EAAA,aAAeqpC,EAAIqyC,GAEzCryC,IAIIu2C,WAAWr+B,GAIjB,IAAIm6B,EAFJrrF,KAAKonF,YAAY9mF,KAAK4wD,GAMnBlxD,KAAK8R,qBAAqB3I,IAE7BkiF,EAAQ,KAGRrrF,KAAKurF,gBAAgBF,GAGfmE,UAAUt+B,GACblxD,KAAKsJ,OACNtJ,KAAKG,IAAImJ,MAAM,aAAc4nD,GAI/BlxD,KAAKqnF,iBAAiB/mF,KAAK4wD,GAC3BlxD,KAAKurF,gBAAgB,KAGhB78E,cACL,IAAI+gF,GAAW,EACf,MAAMvI,EAAelnF,KAAKknF,aAwB1B,OAtBArrF,OAAO6X,KAAKwzE,GAAchkF,SAASguD,IACjC,MAAMrvD,EAAUqlF,EAAah2B,GAG7B,GAAGrvD,EAAQilF,wBAAqDn7E,IAAhC3L,KAAKmnF,gBAAgBj2B,UAE5Cg2B,EAAah2B,QACf,GAAGrvD,EAAQmoF,UAAW,CAC3B,IAAI,MAAMgC,KAAcnqF,EAAQooF,MAC9B,QAAgCt+E,IAA7Bu7E,EAAa8E,GAGd,YADAyD,GAAW,UAKRvI,EAAah2B,QAEpBu+B,GAAW,MAIPA,EAGFC,kBAAkB3gF,GACxB,MAAMg7E,EAAc/pF,KAAKknF,aAAan4E,GACnCg7E,IAAgBA,EAAYkC,QAE7BlC,EAAYkC,OAAQ,GAIhBpnB,aAAa+Z,GACnB,MAAM/4C,GAAW+4C,EAAS+Q,eAAiB,IAAIjzF,MAAM,6BAA+B,GAGpF,OAFAkiF,EAASgR,WAAahR,EAASgR,WAExB,CACL95E,MAAO8oE,EAASgR,YAAchR,EAASgR,YAAc,EAAI,IAAMhR,EAASgR,WACxEnwF,KAAMomC,EAAQ,IAAM,UACpBquC,YAAaruC,EAAQ,IAAO,QAAU+4C,EAASgR,WAAa,IAAMhR,EAAS+Q,cAC3E3Q,cAAeJ,GAQZjwE,SACL,MAAMu4E,EAAelnF,KAAKknF,aAC1B,IAAI,MAAM3oF,KAAM2oF,EAAc,CAC5B,MAAM2I,EAAM3I,EAAa3oF,IACtBsxF,EAAIjmF,MAAQimF,EAAI7F,YACjBhqF,KAAK2rF,WAAWptF,GAIhByB,KAAK8R,UAA4BtD,aACnCxO,KAAK6qF,2BACL7qF,KAAK0nF,2BAuBDoI,gBAAgB/gF,GACtB,MAAMghF,EAAa,KAAOhhF,GAAWihF,WAAW,IAAI7N,aAEpD,OADAniF,KAAKG,IAAI,uBAAwB4vF,GAC1B/vF,KAAKuhB,YAAYuuE,gBAAgBC,GAInCjhF,eAAejN,EAAckN,EAAmBC,GACrD,GAAiB,iBAAdnN,EAAQvD,EAQX,GADiB6nC,SAASp3B,EAAUu0E,OAAO,GAAI,IAAK,IACtC,EACZtjF,KAAKG,IAAI2C,KAAK,2BAA4BiM,EAAWlN,QAkBvD,OAdG7B,KAAKsJ,OACNtJ,KAAKG,IAAImJ,MAAM,kBAAmBzH,EAASkN,GAG1C/O,KAAK2nF,6BACN3nF,KAAK2nF,4BAA4B1lF,QAAQ,eASpCJ,EAAQvD,GACb,IAAK,gBACH,IAAI,MAAM2xF,KAAgBpuF,EAAQ6jB,SAChC1lB,KAAK8O,eAAemhF,EAAcA,EAAa96C,OAAQnmC,GAGzD,MAGF,IAAK,kBACHhP,KAAKG,IAAI,kBAAmB0B,GAE5B7B,KAAKovF,gBAAgBvtF,EAAQquF,iBAE1BlwF,KAAKknF,aAAarlF,EAAQsuF,aAC3BnwF,KAAK2rF,WAAW9pF,EAAQsuF,YAG1BnwF,KAAKuvF,WAAWxgF,GAWhB,MAGF,IAAK,uBAGH,OAFA/O,KAAKG,IAAIZ,MAAM,uBAAwBsC,GAEhCA,EAAQ+tF,YACb,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAAI,CAKP,MAAMQ,EAAoBpwF,KAAK8vF,gBAAgB/gF,IACrB,KAAvBlN,EAAQ+tF,YAAqBQ,KAC9BpwF,KAAKG,IAAI,kBACTH,KAAK0pF,iBAGP,MAAM2G,EAAarwF,KAAK6pF,kBAAkBhoF,EAAQsuF,YAC/CE,GAAYrwF,KAAK2rF,WAAW0E,EAAWl7C,SAkB9C,MAGF,IAAK,UACH,IAAmD,IAAhDn1C,KAAKinF,mBAAmB5qF,QAAQ0S,GAGjC,YADA/O,KAAKuvF,WAAWxgF,GAIlB/O,KAAKinF,mBAAmB3mF,KAAKyO,GAC1B/O,KAAKinF,mBAAmB7oF,OAAS,KAClC4B,KAAKinF,mBAAmBh4E,QAG1BjP,KAAK8O,eAAejN,EAAQ+H,KAAM/H,EAAQszC,OAAQnmC,GAClD,MAGF,IAAK,sBACHhP,KAAKuvF,WAAWxgF,GAEb/O,KAAKsJ,OACNtJ,KAAKG,IAAImJ,MAAM,sBAAuBzH,GAIxC7B,KAAK0vF,kBAAkB7tF,EAAQyuF,cAC/BtwF,KAAKovF,gBAAgBvtF,EAAQ0uF,aAE7Bh5C,GAAA,MAAmB,MAAMvyC,MAAMw1E,IAC1BA,IAAax6E,KAAK0I,OAAS1I,KAAK29E,iBAAmB39E,KAAKk9E,iBAAiBa,kBAC1E/9E,KAAKk9E,iBAAiBa,iBAAiBl8E,MAG3C,MAGF,IAAK,WACH,IAAI,MAAMqvD,KAASrvD,EAAQqrF,QACzBltF,KAAK0vF,kBAAkBx+B,GAGzB,MAGF,IAAK,oBAEH,IADoBlxD,KAAKknF,aAAarlF,EAAQszC,QAC7B,CACfn1C,KAAKuvF,WAAW1tF,EAAQ2uF,eACxB,MAQJ,IAAK,wBACH,IAAwD,IAArDxwF,KAAKonF,YAAY/qF,QAAQwF,EAAQ2uF,eAClC,MAGFxwF,KAAKwvF,UAAU3tF,EAAQ2uF,eACvB,MAGF,IAAK,kBAAmB,CACtBxwF,KAAKuvF,WAAW1tF,EAAQ2uF,eACxB,MAAMzkF,EAAM,CACV,CAAC/L,KAAKywF,cAAezwF,KAAKqnF,mBAI5B,IAAI,MAAOqJ,EAAYC,KAAkB5kF,EACvC,IAAG2kF,MAAAA,OAAU,EAAVA,EAAYE,YAAa/uF,EAAQstF,YAAcwB,EAAcvyF,OAC9D,IAAI,MAAMyyF,KAAYH,EAAWr5B,OAAQ,CACvC,MAAM1yC,EAAMgsE,EAAct0F,QAAQw0F,IACtB,IAATlsE,GACDgsE,EAAc5lF,OAAO4Z,EAAK,GAMlC,MAGF,IAAK,aAAc,CACjB3kB,KAAKuvF,WAAWxgF,GAEhB,MAAM+6E,EAAgBjoF,EAAQstF,WACxBpF,EAAc/pF,KAAKknF,aAAa4C,GAOtC,GADA9pF,KAAK0vF,kBAAkB5F,GACpBC,EAAa,CACd,MAAM3uF,EAAW2uF,EAAY3uF,SAC7B,GAAwB,cAArByG,EAAQO,OAAO9D,EAAmB,CACnC,MAAMiB,EAAQS,KAAK6kE,aAAahjE,EAAQO,QACxCpC,KAAKG,IAAI,YAAaZ,GACnBnE,GACDA,EAASwG,OAAOrC,QAGfnE,GACDA,EAAS6G,QAAQJ,EAAQO,QAGxB2nF,EAAYW,QAAU1qF,KAAKsqF,mBAC5BtqF,KAAKsqF,kBAAmB,UAIrBtqF,KAAKknF,aAAa4C,QAEtB9pF,KAAKsJ,OACNtJ,KAAKG,IAAI,kCAAmC2pF,EAAejoF,GAI/D,MAGF,IAAK,OAAQ,CAQX,MAAMmmF,EAASnmF,EAAQsmF,QACpBnoF,KAAKioF,4BAA8BD,GACpChoF,KAAK2nF,4BAA4B1lF,QAAQ,QAG3C,MAGF,QACEjC,KAAKuvF,WAAWxgF,GAM8B,OAA3C/O,KAAKk9E,iBAAiBa,kBACvB/9E,KAAKk9E,iBAAiBa,iBAAiBl8E,QAvP3C7B,KAAKG,IAAI2C,KAAK,+BAAgCjB,EAASkN,IGvmDtD,MAAM+hF,WAAyB39E,EAAtC,c,oBACU,KAAAopE,WAA6B,GAC9B,KAAA7pD,SAAW12B,UAAU02B,UAAY,iBACjC,KAAAqrD,iBAAuC,KAEvC,KAAAgP,WAAY,EAEZhB,yBAAyBrlF,GAC9B1G,KAAKwc,UAAU7V,cAAc,2BAA4BD,GAIpDm3E,gBAAgBlzE,IACrB,EAAAzB,EAAA,GAAiBlJ,KAAKu8E,WAAY5xE,GAG7BknB,oBAAoBjtB,GACzB5E,KAAK+9E,iBAAmBn5E,EAGnBg3E,aAAalzE,EAAco0E,EAAqBE,EAAuBC,EAAwB5/E,GAEpG,MAAMsN,EAAY,IAAIq8E,GAAahnF,KAAMA,KAAKuhB,YAAa7Y,EAAMo0E,EAASE,EAAWC,EAAY5/E,GAEjG,OADA2C,KAAKu8E,WAAWj8E,KAAKqK,GACdA,EAGFomF,WACL,GAAG/wF,KAAK+sF,UAAW,CACjB,MAAMiE,EAAoBhxF,KAAKu8E,WAAW99E,QAAQkM,GAAcA,EAAUwzE,cAE1En+E,KAAK+sF,WAAY,EACjB/sF,KAAK+9E,kBAAoB/9E,KAAK+9E,iBAAiB,CAACz/E,EAAG,wBAEnD,IAAI,MAAMqM,KAAaqmF,EACrBrmF,EAAU4gF,mBAKT0F,UACLjxF,KAAK+sF,WAAY,EAGZmE,YAAYx/D,GACjB1xB,KAAK0yB,SAAWhB,EAChB,IAAI,MAAM/mB,KAAa3K,KAAKu8E,WACtB5xE,EAAUgzE,kBACZhzE,EAAU2/E,kBAAmB,GAK5B3L,wBACL,IAAI,MAAMh0E,KAAa3K,KAAKu8E,WAC1B5xE,EAAU2/E,kBAAmB,EAI1BQ,wBACL,IAAI,MAAMngF,KAAa3K,KAAKu8E,WAC1B5xE,EAAUmgF,wBAIPh7E,iBACL,IAAI,MAAMnF,KAAa3K,KAAKu8E,WAC1B,IAAI5xE,EAAUgzE,gBAAiB,CAC7BhzE,EAAUmF,iBACV,QCwDR,aAxHO,MA+DLhQ,cAjBQ,KAAAqxF,kBAAuC,CAAC,CAC9CC,QAAS,mgBACTC,SAAU,WAGJ,KAAAC,cAAmC,CAAC,CAE1CF,QAAS,mgBACTC,SAAU,WAGJ,KAAAE,iBAEJ,GACI,KAAAC,UAAW,EACX,KAAAC,eAAgC,KAGnC,WACDzxF,KAAKsxF,cAAgBtxF,KAAKmxF,mBAIvBO,UACL,OAAG1xF,KAAKyxF,eAAuBzxF,KAAKyxF,eAC5BzxF,KAAKwxF,SACJ7vF,QAAQM,UAGVjC,KAAKyxF,eAAiB9vF,QAAQmR,IAAI9S,KAAKsxF,cAAcltF,KAAKutF,IAC/D,MAAMC,EAAe,IAAI3R,GACzB2R,EAAanP,YAAW,EAAA1F,GAAA,GAAa4U,EAAUP,SAAU,KACzDQ,EAAanP,YAAW,EAAA1F,GAAA,GAAa4U,EAAUN,UAAW,KAE1D,MAAMpnF,EAAS2nF,EAAa/Q,YAE5B,OAAO,iBAA0B,OAAQ52E,GAAQjF,MAAM+I,IACrD,MAAM8jF,EAAmB9jF,EAAMpG,OAAO,GACtCkqF,EAAiB9kF,UAEjB/M,KAAKuxF,iBAAiBzjF,EAAW+jF,GAAkBz1F,eAAiB,CAClEg1F,QAASO,EAAUP,QACnBC,SAAUM,EAAUN,iBAGtBrsF,MAAK,KACPhF,KAAKwxF,UAAW,EAGhBxxF,KAAKyxF,eAAiB,QAIbjxD,OAAOsxD,G,2CACZ9xF,KAAK0xF,UAEX,IAAI,IAAI7rF,EAAI,EAAGA,EAAIisF,EAAa1zF,SAAUyH,EAAG,CAC3C,IAAIksF,EAAiB,KAAOD,EAAajsF,IAAImI,SAAS,IAAI5R,cAEvD21F,EAAe3zF,OAAS,KACzB2zF,EAAiB,IAAIjxF,MAAM,GAAKixF,EAAe3zF,QAAQ4zF,KAAK,KAAKrzF,KAAK,IAAMozF,GAI9E,MAAME,EAAWjyF,KAAKuxF,iBAAiBQ,GACvC,GAAGE,EACD,OAAOp2F,OAAOC,OAAO,CACnBo2F,YAAaJ,EAAajsF,IACzBosF,K,iSCzII,SAASE,GAASC,EAAoBC,GACnD,MAAM1kF,EAAMykF,EAAOh0F,OACb2P,EAAQ,IAAI3D,WAAWuD,GAE7B,IAAI,IAAI9H,EAAI,EAAGA,EAAI8H,IAAO9H,EACxBkI,EAAMlI,GAAKusF,EAAOvsF,GAAKwsF,EAAOxsF,GAGhC,OAAOkI,E,2SCoGF,MAAMukF,WAAmBn/E,EAapBoJ,QACRvc,KAAKuoB,OAAS,GACdvoB,KAAKG,KAAM,EAAAsJ,EAAA,IAAO,aAAc,WAAiB,KAAAD,KAG3C+oF,iBAAiB7pF,EAAY8pF,GACnC,MAAMC,EAAgBD,EAAaloF,WAE7BsD,EAAS,IAAIqyE,GACnBryE,EAAO8zE,WAAW,EAAG,EAAG,eACxB9zE,EAAOi0E,UAAU7hF,KAAKuhB,YAAYynE,aAAc,UAChDp7E,EAAO4zE,SAASiR,EAAe,kBAE/B,MAAMC,EAAc9kF,EAAOkzE,UAAS,GAC9BE,EAAc,IAAI52E,WAAWsoF,EAAYpoF,WAAamoF,GAC5DzR,EAAY74E,IAAIuqF,GAChB1R,EAAY74E,IAAIqqF,EAAcE,EAAYt0F,QAE1C,MAAM0T,EAAY9R,KAAKoS,eAAef,aAAa3I,EAAM,SAAU1I,KAAKsR,eAClEk9E,EAAY,CAChB14E,KAAM,IACNrW,KAAM,wBAQR,OALG,MACDO,KAAKG,IAAI,gDAGK2R,EAAUpH,KAAKs2E,GAChBh8E,MAAM5C,IAKnB,GAJG,MACDpC,KAAKG,IAAI,sCAAuCiC,IAG9CA,IAAWA,EAAOkI,WACpB,MAAMkkF,EAGR,IAIE,MAAME,EAAe,IAAI/K,GAA0BvhF,EAAQ,CAAC89E,SAAS,IAErE,GAAqB,IAAlB99E,EAAOhE,OAAc,CACtB,MAAMu0F,EAAYjE,EAAa7K,WAE/B,MADA7jF,KAAKG,IAAIZ,MAAM,mDAAoDozF,GAC7DA,EAGR,MAAMC,EAAclE,EAAa1K,UAAU,eACxB,MAAhB4O,GAAqB5yF,KAAKG,IAAIZ,MAAM,oBAAqBqzF,GAE5D,MAAMz9C,EAASu5C,EAAa1K,UAAU,UACxB,MAAX7uC,GAAgBn1C,KAAKG,IAAIZ,MAAM,eAAgB41C,GAElD,MAAM09C,EAAUnE,EAAa7K,SAAS,WAGtC,OAFIgP,GAAS7yF,KAAKG,IAAIZ,MAAM,aAAcszF,GAEnCnE,EACP,MAAMnsF,GAGN,MAFAvC,KAAKG,IAAIZ,MAAM,gDAAiDgD,GAClD1G,OAAOC,OAAO0yF,EAAW,CAACxP,cAAez8E,QAGvDhD,IAOF,MANIA,EAAMsC,SAAYtC,EAAME,OAC1BF,EAAQ1D,OAAOC,OAAO0yF,EAAW,CAC/BxP,cAAez/E,KAIbA,KAIIuzF,UAAUp9E,G,0CACtB,MAAMlU,EAAU,IAAIy+E,GAAgB,CAACC,SAAS,IAQ9C,IAAIwO,EANJltF,EAAQohF,YAAY,eAAgB,CAACmQ,MAAOr9E,EAAKq9E,QAE9C,MACD/yF,KAAKG,IAAI,cAAe2N,EAAW4H,EAAKq9E,QAI1C,IACE,MAAMnoF,EAAU5K,KAAKuyF,iBAAiB78E,EAAKhN,KAAMlH,EAAQs/E,UAAS,IAClEkS,GAAetB,UACfhD,QAAqB9jF,EACrB,MAAMrL,GAEN,MADAS,KAAKG,IAAIZ,MAAM,eAAiBA,EAAgBsC,SAC1CtC,EAGR,MAAMwK,EAAkB2kF,EAAatK,YAAY,SAEjD,GAAkB,UAAfr6E,EAASzL,EACV,MAAM,IAAI2N,MAAM,gCAAkClC,EAASzL,GAG7D,KAAI,EAAAqwF,GAAA,GAASj5E,EAAKq9E,MAAOhpF,EAASgpF,OAEhC,MADA/yF,KAAKG,IAAIZ,MAAMmW,EAAKq9E,MAAOhpF,EAASgpF,OAC9B,IAAI9mF,MAAM,6BAGlByJ,EAAKu9E,YAAclpF,EAASmpF,aAC5Bx9E,EAAKy9E,GAAKppF,EAASopF,GACnBz9E,EAAKo8E,aAAe/nF,EAASqpF,+BAE1B,MACDpzF,KAAKG,IAAI,YAAa2N,EAAW4H,EAAKu9E,aAAcnlF,EAAW4H,EAAKy9E,IAAKz9E,EAAKo8E,cAGhF,MAAMuB,QAAkBL,GAAexyD,OAAO9qB,EAAKo8E,cACnD,IAAIuB,EACF,MAAM,IAAIpnF,MAAM,4BAGlByJ,EAAK29E,UAAYA,EAEd,MACDrzF,KAAKG,IAAI,yBAA0BuV,EAAKy9E,IAI1C,IACE,IAAIG,QAAc,iBAA0B,YAAa59E,EAAKy9E,IAC9D,MAAM5zF,GAEN,MADAS,KAAKG,IAAIZ,MAAM,yBAA0BA,GACnCA,EAUR,OAPAmW,EAAK2e,EAAIi/D,EAAM,GACf59E,EAAK2vB,EAAIiuD,EAAM,GAEZ,MACDtzF,KAAKG,IAAI,wBAAyBmzF,GAG7BtzF,KAAKuzF,gBAAgB79E,MAGhB69E,gBAAgB79E,G,0CAC5BA,EAAK89E,SAAW1nF,EAAU,IAAI1B,WAAW,KAEzC,MAAMqpF,EAAoC,CACxCn1F,EAAG,oBACH60F,GAAIz9E,EAAKy9E,GACT9+D,EAAG3e,EAAK2e,EACRgR,EAAG3vB,EAAK2vB,EACR0tD,MAAOr9E,EAAKq9E,MACZG,aAAcx9E,EAAKu9E,YACnBS,UAAWh+E,EAAK89E,SAChB1X,GAAI,GAGA6X,EAA2B,IAAI1T,GAAgB,CAACC,SAAS,IAC/DyT,EAAyBvQ,YAAYqQ,EAAmB,iBAAkB,kBAE1E,MAAMloF,EAAOooF,EAAyB7S,UAAS,GAC/C,GAAGv1E,EAAKnN,OAAS,IACf,KAAM,0CAGR,MAAM+tF,EAAkBtG,GAAWt6E,EAAM,KAAK,GAAO,GAAM,GACrDqoF,EAAkBzH,EAAgBxkF,QAAQoF,UAuB1C8mF,OArBqB,KAAW,mCACpC,OAAQ,CACN,MAAMC,EAAUhoF,EAAU,IAAI1B,WAAW,KACnC2pF,EAAeH,EAAgB1vF,aAAa,iBAA0B,SAAU4vF,EAAQ5vF,OAAOioF,KACrG,GAA2B,MAAxB4H,EAAa31F,OACd,KAAM,yCAGR,MAAM41F,QAAqB,iBAA0B,cAAeD,EAAcD,EAAS,IAAI1pF,WAAW,CAAC,KAErGypF,EADa1B,GAAS2B,QAAe,iBAA0B,SAAUE,IAC5C9vF,OAAO8vF,GAEpCC,EAAwB7N,GAAgByN,GACxCK,EAAyB,KAAOx+E,EAAK29E,UAAUjC,QAAS,IAE9D,IAA8D,IAA3D6C,EAAsBxG,QAAQyG,GAC/B,OAAOL,MAKiBM,GACxBjG,EAAgBrI,SAAiB,iBAA0B,cAAegO,EAAiBn+E,EAAK29E,WAAY,KAAK,GAAM,GAAM,GAE7He,EAA+B,CACnCrB,MAAOr9E,EAAKq9E,MACZG,aAAcx9E,EAAKu9E,YACnB5+D,EAAG3e,EAAK2e,EACRgR,EAAG3vB,EAAK2vB,EACRgvD,uBAAwB3+E,EAAK29E,UAAUnB,YACvCoC,eAAgBpG,GAGZ1sF,EAAU,IAAIy+E,GAAgB,CAACC,SAAS,IAC9C1+E,EAAQohF,YAAY,gBAAiBwR,GAErC,MAAMG,EAAe/yF,EAAQs/E,UAAS,GAMtC,IAAI4N,EAJD,MACD1uF,KAAKG,IAAI,qBAAsBi0F,GAIjC,IACE1F,QAAqB1uF,KAAKuyF,iBAAiB78E,EAAKhN,KAAM6rF,GACtD,MAAMh1F,GAEN,MADAS,KAAKG,IAAIZ,MAAM,2BAA4BA,GACrCA,EAGR,MAAMwK,EAAW2kF,EAAatK,YAAY,mBAAoB,YAM9D,GAJG,MACDpkF,KAAKG,IAAI,gCAAiC4J,GAG1B,0BAAfA,EAASzL,GAAgD,wBAAfyL,EAASzL,EACpD,MAAM,IAAI2N,MAAM,2CAA6ClC,EAASzL,GAGxE,KAAI,EAAAqwF,GAAA,GAASj5E,EAAKq9E,MAAOhpF,EAASgpF,OAChC,MAAM,IAAI9mF,MAAM,wCAGlB,KAAI,EAAA0iF,GAAA,GAASj5E,EAAKu9E,YAAalpF,EAASmpF,cACtC,MAAM,IAAIjnF,MAAM,+CAGlB,GAAkB,0BAAflC,EAASzL,EAA+B,CACzC,MAAMk2F,SAAsB,iBAA0B,OAAQ9+E,EAAK89E,WAAW7rF,OAAO,IACrF,KAAI,EAAAgnF,GAAA,GAAS6F,EAAczqF,EAAS0qF,gBAClC,MAAM,IAAIxoF,MAAM,sDAGlB,MAAM,IAAIA,MAAM,8BAIlB,UACQjM,KAAK00F,0BAA0Bh/E,EAAM3L,EAAS4qF,kBACpD,MAAMpyF,GAEN,MADAvC,KAAKG,IAAIZ,MAAM,uCAAwCgD,GACjDA,EAKR,OAAOvC,KAAK40F,sBAAsBl/E,MAGtBg/E,0BAA0Bh/E,EAAmBm/E,G,0CACzDn/E,EAAKo/E,UAAYxlF,KAAKvK,MAGtB2Q,EAAKq/E,iBAAmB,iBAA0B,OAAQr/E,EAAK89E,SAAStvF,OAAOwR,EAAKu9E,eACnF/uF,cAAc,iBAA0B,OAAQwR,EAAKu9E,YAAY/uF,OAAOwR,EAAK89E,YAAY7rF,MAAM,EAAG,KAEnG+N,EAAKs/E,gBAAkB,iBAA0B,OAAQt/E,EAAKu9E,YAAY/uF,OAAOwR,EAAK89E,YAAY7rF,MAAM,IACvGzD,aAAa,iBAA0B,OAAQwR,EAAK89E,SAAStvF,OAAOwR,EAAK89E,WAAY99E,EAAK89E,SAAS7rF,MAAM,EAAG,IAE7G,MAAMstF,EAAiB,IAAI7qF,iBAAiB,iBAA0B,cAAeyqF,EAAiBn/E,EAAKq/E,UAAWr/E,EAAKs/E,WAErH15D,EAAO25D,EAAettF,MAAM,EAAG,IAC/ButF,EAAoBD,EAAettF,MAAM,IAEzC+mF,EAAe,IAAI/K,GAA0BuR,EAAmB,CAAChV,SAAS,IAC1En2E,EAAW2kF,EAAatK,YAAY,wBAE1C,GAAkB,yBAAfr6E,EAASzL,EACV,MAAM,IAAI2N,MAAM,+CAAiDlC,GAGnE,KAAI,EAAA4kF,GAAA,GAASj5E,EAAKq9E,MAAOhpF,EAASgpF,OAChC,MAAM,IAAI9mF,MAAM,4CAGlB,KAAI,EAAA0iF,GAAA,GAASj5E,EAAKu9E,YAAalpF,EAASmpF,cACtC,MAAM,IAAIjnF,MAAM,kDAGf,MACDjM,KAAKG,IAAI,0BAEXuV,EAAKy/E,EAAIprF,EAASorF,EAClBz/E,EAAK0/E,QAAUrrF,EAASsrF,SACxB3/E,EAAK4/E,GAAKvrF,EAASwrF,IACnB7/E,EAAKq6E,WAAahmF,EAASyrF,YAC3B9/E,EAAK+/E,MAAQ,EAEbz1F,KAAK01F,eAAehgF,EAAKy/E,EAAGz/E,EAAK0/E,QAAS1/E,EAAK4/E,IAE/C,MAAMtsE,EAAS0lE,EAAazN,YAE5B,KAAI,EAAA0N,GAAA,GAASrzD,QAAY,iBAA0B,OAAQ45D,EAAkBvtF,MAAM,EAAGqhB,KACpF,MAAM,IAAI/c,MAAM,2CAGlBjM,KAAKuhB,YAAYuuE,gBAAgBp6E,EAAKq6E,WAAYr6E,EAAKo/E,cAGjDY,eAAeP,EAAWC,EAAqBE,GAClD,MACDt1F,KAAKG,IAAI,sBAAuBg1F,EAAGC,EAASE,GAG9C,MAAMK,EAAa7nF,EAAWsnF,GAC9B,GAAS,IAAND,GAA0B,qgBAAfQ,EAEZ,MAAM,IAAI1pF,MAAM,oDAGf,MACDjM,KAAKG,IAAI,kBAGX,MAAMy1F,EAAWxP,GAAgBkP,GAC3BO,EAAgB,KAAOF,EAAY,IAEzC,GAAGC,EAASnI,QAAQ,WAAe,EACjC,MAAM,IAAIxhF,MAAM,4CAGlB,GAAG2pF,EAASnI,QAAQoI,EAAcC,SAAS,YAAgB,EACzD,MAAM,IAAI7pF,MAAM,sDAGf,MACDjM,KAAKG,IAAI,yBAGX,MAAM41F,EAAS,KAAO,GAAGC,IAAI,MAE7B,GAAGJ,EAASnI,QAAQsI,GAAU,EAC5B,MAAM,IAAI9pF,MAAM,qDAElB,GAAG2pF,EAASnI,QAAQoI,EAAcC,SAASC,KAAY,EACrD,MAAM,IAAI9pF,MAAM,+DAOlB,OAJG,MACDjM,KAAKG,IAAI,8CAGJ,EAGKy0F,sBAAsBl/E,G,0CAClC,MAAMugF,GAAS,EAAAlZ,GAAA,GAAarnE,EAAKy/E,EAAEnnF,SAAS,KAE5C0H,EAAKyW,EAAIrgB,EAAU,IAAI1B,WAAW,MAIlC,IACE,IAAI8rF,QAAW,iBAA0B,UAAWD,EAAQvgF,EAAKyW,EAAGzW,EAAK0/E,SACzE,MAAM71F,GACN,MAAMA,EAGR,MAAMgM,EAAO,IAAI00E,GAAgB,CAACC,SAAS,IAC3C30E,EAAK63E,YAAY,CACf9kF,EAAG,uBACHy0F,MAAOr9E,EAAKq9E,MACZG,aAAcx9E,EAAKu9E,YACnBkD,SAAU,CAAC,EAAGzgF,EAAK+/E,SACnBrhE,IAAK8hE,GACJ,wBAEH,MAAMnC,SAAsB,iBAA0B,OAAQxoF,EAAKs1E,cAAc38E,OAAOqH,EAAKu1E,UAAS,IAChGoN,QAAsB,iBAA0B,cAAe6F,EAAcr+E,EAAKq/E,UAAWr/E,EAAKs/E,UAElGxzF,EAAU,IAAIy+E,GAAgB,CAACC,SAAS,IAW9C,IAAIwO,EAVJltF,EAAQohF,YAAY,uBAAwB,CAC1CmQ,MAAOr9E,EAAKq9E,MACZG,aAAcx9E,EAAKu9E,YACnBqB,eAAgBpG,IAGf,MACDluF,KAAKG,IAAI,6BAIX,IACEuuF,QAAqB1uF,KAAKuyF,iBAAiB78E,EAAKhN,KAAMlH,EAAQs/E,UAAS,IACvE,MAAMv2E,GACN,MAAMA,EAGR,MAAMR,EAAW2kF,EAAatK,YAAY,+BAE1C,GAAkB,cAAfr6E,EAASzL,GAAoC,iBAAfyL,EAASzL,GAAuC,gBAAfyL,EAASzL,EACzE,MAAM,IAAI2N,MAAM,sDAAwDlC,EAASzL,GAGnF,KAAI,EAAAqwF,GAAA,GAASj5E,EAAKq9E,MAAOhpF,EAASgpF,OAChC,MAAM,IAAI9mF,MAAM,mDAGlB,KAAI,EAAA0iF,GAAA,GAASj5E,EAAKu9E,YAAalpF,EAASmpF,cACtC,MAAM,IAAIjnF,MAAM,0DAIlB,IACE,IAAI6wE,QAAgB,iBAA0B,UAAWpnE,EAAK4/E,GAAI5/E,EAAKyW,EAAGzW,EAAK0/E,SAC/E,MAAM7qF,GACN,MAAMuyE,EAGR,MAAMsZ,QAAoB,iBAA0B,OAAQtZ,GAC5DuZ,EAAaD,EAAYzuF,MAAM,EAAG,GAClCq1E,EAAYoZ,EAAYzuF,OAAO,GAK/B,OAHG,MACD3H,KAAKG,IAAI,kCAAmC4J,EAASzL,EAAGw+E,GAEnD/yE,EAASzL,GACd,IAAK,YAAa,CAChB,MAAMg4F,SAAuB,iBAA0B,OAAQ5gF,EAAK89E,SAAStvF,OAAO,CAAC,GAAImyF,KAAc1uF,OAAO,IAE9G,KAAI,EAAAgnF,GAAA,GAAS2H,EAAevsF,EAASwsF,iBAEnC,MADAv2F,KAAKG,IAAIZ,MAAM,uDAAwD+2F,EAAevsF,GAChF,IAAIkC,MAAM,4BAGlB,MAAMgxE,EAAakV,GAASz8E,EAAK89E,SAAS7rF,MAAM,EAAG,GAAI+N,EAAKu9E,YAAYtrF,MAAM,EAAG,IASjF,OARG,MACD3H,KAAKG,IAAI,oBAAqB68E,EAAWF,EAASG,GAGpDvnE,EAAKsnE,UAAYA,EACjBtnE,EAAKonE,QAAUA,EACfpnE,EAAKunE,WAAaA,EAEXvnE,EAGT,IAAK,eAAgB,CACnB,MAAM8gF,SAAuB,iBAA0B,OAAQ9gF,EAAK89E,SAAStvF,OAAO,CAAC,GAAImyF,KAAc1uF,OAAO,IAC9G,KAAI,EAAAgnF,GAAA,GAAS6H,EAAezsF,EAAS0sF,iBACnC,MAAM,IAAIxqF,MAAM,6DAGlB,OAAOjM,KAAK40F,sBAAsBl/E,GAGpC,IAAK,cAAe,CAClB,MAAMghF,SAAuB,iBAA0B,OAAQhhF,EAAK89E,SAAStvF,OAAO,CAAC,GAAImyF,KAAc1uF,OAAO,IAC9G,KAAI,EAAAgnF,GAAA,GAAS+H,EAAe3sF,EAAS4sF,iBACnC,MAAM,IAAI1qF,MAAM,6DAGlB,MAAM,IAAIA,MAAM,8CAMd0uE,mBACN,OAAG36E,KAAK42F,wBAAgC52F,KAAK42F,wBACtC52F,KAAK42F,wBAA0B,mBAAqC5xF,MAAK,EAAEsN,UAAAA,MAChFtS,KAAKsR,cAAgBgB,EAAY,YAAc,QAC/CtS,KAAKG,IAAI,sBAAuBH,KAAKsR,kBAKlCoE,KAAKhN,GACV,IAAIkC,EAAU5K,KAAKuoB,OAAO7f,GAC1B,OAAGkC,IAIHA,EAAU,IAAIjJ,SAAQ,CAAMM,EAASL,IAAW,mCAK9C,IAAIrC,QAHES,KAAK26E,mBAIX,IAAIkc,EAAO,EACX,KAAMA,KAAU,GACd,IACE,MAAMnhF,EAAoB,CACxBhN,KAAAA,EACAqqF,MAAOjnF,EAAU,IAAI1B,WAAW,MAG5BQ,EAAU5K,KAAK8yF,UAAUp9E,GAE/B,YADAzT,QAAc2I,GAEd,MAAML,GACNhL,EAAQgL,EAIZ3I,EAAOrC,QAGFS,KAAKuoB,OAAO7f,GAAQkC,ICvlBxB,MAAMksF,WAAoB3jF,EAcrBoJ,QACRvc,KAAK+2F,cAAgB,CAAC,EAAG,GACzB/2F,KAAKg3F,WAAa,EAElBz/C,GAAA,MAAmB,sBAAsBvyC,MAAMgoB,IAC1CA,IACDhtB,KAAKg3F,WAAahqE,MAoBjBxL,sBACL,OAAOxhB,KAAKg3F,WAGPhO,aACL,MAAMiO,EAAY3nF,KAAKvK,MAKvB,IAAIgK,EAA0C,CAJlCoQ,KAAKgpC,MAAM8uC,EAAY,KAAQj3F,KAAKg3F,WACnCC,EAAY,KAG4C,IAF1D,QAAe,KAE4D,EAAK,GAiB3F,OAhBGj3F,KAAK+2F,cAAc,GAAKhoF,EAAU,IACnC/O,KAAK+2F,cAAc,KAAOhoF,EAAU,IAAM/O,KAAK+2F,cAAc,IAAMhoF,EAAU,MAC7EA,EAAY,CAAC/O,KAAK+2F,cAAc,GAAI/2F,KAAK+2F,cAAc,GAAK,IAG9D/2F,KAAK+2F,cAAgBhoF,EAETywE,GAAazwE,EAAU,GAAIA,EAAU,IAY5C+gF,gBAAgBC,EAAoB+E,GAEzC,MAAMoC,EAAgBnH,GADtB+E,GAAaA,GAAaxlF,KAAKvK,OAAS,IAAO,GAEzCoyF,EAAUh4E,KAAKi4E,IAAIp3F,KAAKg3F,WAAaE,GAAiB,GAa5D,OAZAl3F,KAAK+2F,cAAgB,CAAC,EAAG,GAEtB/2F,KAAKg3F,aAAeE,IACrB3/C,GAAA,MAAmB,CACjB8/C,mBAAoBH,IAGtBl3F,KAAKg3F,WAAaE,GAKbC,GC9CX,MAAMG,GAAqB,IArDpB,MAKLx3F,cACEE,KAAKu3F,mBAAoB,SACzBv3F,KAAKu3F,kBAAkBvyF,MAAK,KAC1BhF,KAAKu3F,uBAAoB5rF,KAItB+sC,QACL,MAAM/nC,EAAO,kBAEbA,EAAKnK,iBAAiB,WAAW,EAAEvG,KAAAA,EAAM6J,OAAAA,EAAQlD,KAAAA,MACxC,EAAAqgE,EAAA,GAAYjnE,KAAKw3F,eAAgBnkF,IAEtC,MAAMokF,EAAUpkF,EAASpT,GACzB,OAAOw3F,EAAQ3tF,GAAQ4tF,MAAMD,EAAS7wF,QAI1C+J,EAAKnK,iBAAiB,cAAc,CAACgH,EAAS4kC,EAAQjwC,KACpD,GAAGnC,KAAK23F,mBACN,OAGF33F,KAAK23F,oBAAqB,EAC1B,MAAMhnF,EAAOxO,EAAMy1F,MAAM,GACzBtrF,EAAA,aAA6BqE,GAC7B3Q,KAAKu3F,kBAAkBt1F,aAId41F,iB,qCACX,MAAM75E,EAAqB,IAAIhK,QAEzBrS,QAAQmR,IAAI,CAEhBkL,EAAmB1K,eACnBtT,KAAKu3F,oBAGP,MAAMlkF,QCdK,SAAwB2K,EAAwCxF,GAC7E,MAAMnF,EAAW,CACfuJ,gBAAiB,IAAIgiD,GACrBrhD,gBAAiB,IAAIwY,GACrB+d,eAAgB,IAAIpN,GACpBqN,iBAAkB,IAAIyrB,GACtB1b,gBAAiB,IAAIkc,GACrBvjD,gBAAiB,IAAIoxD,GACrBnqB,mBAAoB,IAAI6vB,GACxBn1D,iBAAkB,IAAIktB,GACtBkf,kBAAmB,IAAIwX,GACvB5hD,wBAAyB,IAAIm9C,GAC7B7/C,kBAAmB,IAAIgQ,GACvBoqE,kBAAmB,IAAInlE,GACvBq/B,qBAAsB,IAAIhjB,GAC1B+oD,gBAAiB,IAAIrkE,GACrB8lC,oBAAqB,IAAI6M,GACzBnvD,mBAAoB,IAAI+hC,GACxB4X,sBAAuB,IAAI9Z,GAC3BihD,kBAAmB,IAAI12B,GACvB22B,qBAAsB,IAAInlD,GAC1Bx7B,mBAAoB,IAAIyxD,GACxBxhC,kBAAmB,IAAItxB,EACvBiiF,gBAAiB,IAAI5qD,GACrBttB,eAAgB,IAAIsJ,GACpBtB,eAAgB,IAAI7N,GACpB9F,WAAY,IAAI+lE,GAChBplE,aAAc1I,EAAA,EACd6rF,gBAAiB,IAAI/jF,EACrBkf,eAAgB,IAAI+gD,GACpBlwD,aAAc,IAAI,GAClB4iB,cAAe,IAAIq4C,GACnBlC,iBAAkB,IAAI4T,GACtBt0E,UAAW,IAAIrW,EACfg3E,WAAY,IAAImV,GAChBlgF,eAAgB,IAAI7B,EACpBgR,YAAa,IAAIu1E,GACjB94E,mBAAoBA,EACpBD,gBAAiB,GAKnB,IAAI,MAAM9d,KAAQoT,EAAU,CAC1B,MAAMokF,EAAUpkF,EAASpT,GACrBw3F,IAIAA,EAA+BrkF,cAChCqkF,EAA+BrkF,YAAYC,UACpCokF,EAA+BrkF,aAIzCzD,EAAA,EAAI1P,GAAQw3F,GAGd,MAAMrvE,EAAyD,GAC/D,IAAInU,EAAQpY,OAAO6X,KAAKL,GACxBY,EAAMwT,QAAQ,kBAAmB,kBAAmB,0BAA2B,qBAAsB,kBACrGxT,GAAQ,EAAAwe,GAAA,GAAaxe,GACrB,IAAI,MAAMhU,KAAQgU,EAAO,CACvB,MAAMwjF,EAAUpkF,EAASpT,GACzB,GAAIw3F,MAAAA,OAAO,EAAPA,EAAiBl7E,MAAO,CAE1B,MAAMna,EAAUq1F,EAAgBl7E,QAChC6L,EAAS9nB,KAAK8B,IAclB,OAJGoW,GACDnF,EAASgB,WAAWwlE,YAAYrhE,GAG3B7W,QAAQmR,IAAIsV,GAAUpjB,MAAK,IAAMqO,IDnEfwkF,CAAe75E,EAAoB,UAC1D,OAAOhe,KAAKqT,SAAWA,G,+RAGlBmkF,c,MACL,OAAoB,QAApB,EAAOx3F,KAAKqT,gBAAQ,QAAbrT,KAAKqT,SAAarT,KAAK63F,mBAKlC,ME/CA,IAAIO,IAAyB,EACtB,SAASnvD,KACd,OAAOmvD,GAGT,MAAMj4F,IAAM,EAAAsJ,EAAA,IAAO,WAGbkH,GAAO,IAAI,IACjBA,GAAKgN,2BAA2B,CAC9B5X,YAAcA,IACZE,EAAeF,GAEf,sBAGFiG,OAAQ,EAAElC,OAAAA,EAAQlD,KAAAA,KACT,iBAA0BkD,KAAkBlD,GAGrDK,MAAO,EAAEA,MAAAA,EAAO4M,cAAAA,EAAewkF,WAAAA,EAAYr1F,WAAAA,EAAYD,WAAAA,EAAYyV,OAAAA,MAKjErY,GAAI,YAAa8G,EAAOoxF,GAExB,SAAyB7/E,EACzB,aAA6BxV,EAC7B,aAA6BD,EAE5BlH,OAAO6X,KAAKzM,GAAkC/D,SAASmE,IACtD,cAA4BA,EAAKJ,EAAMI,IAAM,GAAOgxF,EAAWhuE,SAAShjB,OAG1E,UAA+BwM,IAIjCwoE,eAAgB,EAAE7hD,QAAAA,EAAS89D,WAAAA,MAClB,EAAAjc,GAAA,GAAe7hD,EAAS89D,GAGjCn2F,MAAO,CAACqL,EAAS4kC,KACfjyC,GAAI,sBAAuBqN,EAAS4kC,GACpCzhC,GAAK4nF,mBAAmB,QAAS/qF,EAAS4kC,IAG5ComD,oBAAsBrxD,IACpBixD,GAAyBjxD,GAG3B1T,gBAAkBF,GACTC,IAAIC,gBAAgBF,KAmB/BpzB,GAAI,iBAEJ,WACA,iBACA,WC1Fe,SACbs4F,EACAC,EACAC,GAEA,MAAMC,EAAc3qC,IAClBwqC,EAAYG,WAAW3qC,GACvByqC,GAAaA,EAAUzqC,IAGzB0qC,GAAgBF,EAAYI,oBAAoBF,GAET,oBAA9B,wBACNhpF,EAAA,mBAAwD,WAAYpN,GAAMq2F,EAAWr2F,EAAE6vC,UAExFwmD,EAAWjpF,EAAA,GD6EfmpF,CAAkBnoF,IAAOyhC,IACvB,UAAsBA,MACpBA,IACF,aAAyBA,O,qEE5FpB,MAAM2mD,EAAuB,EACvBC,EAA0B,WAC1BC,EAAoC,IACpCC,EAA0B,MAC1BC,EAAa,Y,gCCR1B,MAAMC,EAAgD,IAAI5iF,IAAI,CAC5D,oBACA,sBACA,oBACA,mBACA,yBACA,sBACA,0BACA,yBAEa,SAAS6iF,EAAoBxqE,GAE1C,IAAI,IAAIhpB,EAAI,EAAGA,EAAIgpB,EAASzwB,SAAUyH,EAAG,CACvC,MAAMw+C,EAASx1B,EAAShpB,GAExB,IAAIyzF,GAAiB,EACrB,GAKE,GAJAA,EAAgBzqE,EAAS/O,WAAU,CAACvd,EAAGg3F,IAC9BH,EAAqBxwE,IAAIrmB,EAAEjE,IAAMi7F,IAAO1zF,GAAKtD,EAAEjE,IAAM+lD,EAAO/lD,GAAMiE,EAAEymB,OAASq7B,EAAOjmD,SAAYimD,EAAOr7B,UAG1F,IAAnBswE,EAAsB,CACvB,MAAME,EAAa3qE,EAASyqE,GAC5Bj1C,EAAOjmD,QAAUo7F,EAAWp7F,OAC5BywB,EAAS9jB,OAAOuuF,EAAe,WAER,IAAnBA,M,8CCzBZ,MAAMG,EAA2C,IAAIjjF,IAAI,CAAC,mBAAoB,sBAE/D,SAASkjF,EAAsBC,EAAkCC,GAC9E,IAAIC,GAAa,EACjB,OAAOF,EAAgBp2F,MAAMu2F,IACxBL,EAAgB7wE,IAAIkxE,EAAcx7F,KACnCu7F,EAAYC,EAAc9wE,OAAS8wE,EAAc17F,QAGhDw7F,EAAU5wE,OAAS6wE,IAAc,SAA8BD,EAAUt7F,KAIjDs7F,EAAUt7F,IAAMw7F,EAAcx7F,IACvD,SAA8Bs7F,EAAUt7F,KAAO,SAA8Bw7F,EAAcx7F,MAMjEs7F,EAAU5wE,QAAU8wE,EAAc9wE,QAC3D4wE,EAAUx7F,OAASw7F,EAAU5wE,QAAY8wE,EAAc17F,OAAS07F,EAAc9wE,a,6GChBrF,MAMa+wE,EAAsB,w3BA4BtBC,EAAgC,IAAMD,EAAsB,OAC5DE,EAA4B,+BAC5BC,EAAcD,EAEzB,MAAQD,EAAgC,aAAeA,EAF9BC,oIAQzBD,EAAgC,IAAMD,EARbE,qBAUdD,EAAgC,IAAMD,EAVxBE,iDAYOF,EAZPE,uEAmBdE,GADuB,IAAIn2D,OAAO,IAAMi2D,EAA0BtyF,MAAM,GAAI,GAAI,KACrD,+BAG3ByyF,EAAe,IAAIp2D,OAAO,iCAAyCk2D,EAAc,YAAc,IAArE,w9BAA8K,KACxMG,EAAgB,4JAEhBC,EAAmB,+JAenBC,EAA8D,CACzE,IAAK,oBACL,KAAM,mBACN,KAAM,oBACN,GAAM,sBACN,KAAM,sBACN,MAAO,yBACP,KAAM,wBAGKC,EAAqD,IAAIhkF,IAAI,CACxE,qBACA,yBACA,uBAEF,IAAI,IAAI3Q,KAAK00F,EACXC,EAA0B7jF,IAAI4jF,EAAkB10F,IAG3C,MAAM40F,EAAuB,W,wDCnGrB,SAAShoC,EAAcknC,EAAkCe,GACtE,MAAMC,EAAWD,EAAYj8F,QAAQ8D,KAC3B,OAAsBo3F,EAAiBp3F,KAGjDo3F,EAAgBr5F,QAAQq6F,IACxB,OAAahB,GAOX,IAAI,IAAI9zF,EAAI,EAAGA,EAAI8zF,EAAgBv7F,SAAUyH,EAAG,CAC9C,MAAMw+C,EAASs1C,EAAgB9zF,GAC/B,GAAgB,uBAAbw+C,EAAO/lD,EAA4B,CACpC,MAAMk7F,EAAaG,EAAgB9zF,EAAI,GACpC2zF,GAA6DA,EAAWxwE,OAAUq7B,EAAOr7B,OAASq7B,EAAOjmD,SAC1GimD,EAAOjmD,OAASo7F,EAAWxwE,OAASq7B,EAAOr7B,SAMnD,OAAO2wE,I,eChCM,SAASiB,EAAa/rE,GACnCA,EAAShG,MAAK,CAACqD,EAAGC,IACRD,EAAElD,OAASmD,EAAEnD,QAAYmD,EAAE/tB,OAAS8tB,EAAE9tB,S,gCCF3C,SAASy8F,EAAYC,GAE1B,OASK,SAAsBC,GAC3B,MAAMC,EAAS,GACf,IAAIC,EAAO,EACPz1B,EAAW,EACX3/D,EAAI,EACR,KAAMA,EAAIk1F,EAAkB38F,QAC1B68F,EAAOF,EAAkBlwB,WAAWhlE,KACjC2/D,GACDw1B,EAAO16F,MAAM,OAAYklE,EAAW,OAAW,KAAOy1B,EAAO,QAASjtF,SAAS,KAC/Ew3D,EAAW,GACFy1B,EAAO,OAAUA,GAAQ,MAClCz1B,EAAWy1B,EAEXD,EAAO16F,KAAK26F,EAAKjtF,SAAS,KAQ9B,OAJGgtF,EAAO58F,QAA+B,IAArB48F,EAAO,GAAG58F,SAC5B48F,EAAO,GAAK,KAAOA,EAAO,IAGrBA,EA/BYE,CAAaC,EAAYL,IAAYn8F,KAAK,K,kBAI/D,MAAMy8F,EAAa,UAEbC,EAAkB/W,OAAOC,aAAa,MAEtC4W,EAAeG,GAAsBA,EAASj/F,QAAQg/F,GAAmB,EAAIC,EAAS59F,QAAQ09F,EAAY,IAAME,ICVlHC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB9vF,IAAjB+vF,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CACjDl9F,GAAIk9F,EACJ38E,QAAQ,EACR68E,QAAS,IAUV,OANAE,EAAoBJ,GAAUnnE,KAAKsnE,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG3EI,EAAO98E,QAAS,EAGT88E,EAAOD,QAIfH,EAAoBjsC,EAAIssC,EAGxBL,EAAoBpP,EAAI,KAGvB,IAAI0P,EAAsBN,EAAoBO,OAAEpwF,EAAW,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,MAAM,IAAO6vF,EAAoB,QAEhH,OADsBA,EAAoBO,EAAED,I5GnCzC1gG,EAAW,GACfogG,EAAoBO,EAAI,CAAC35F,EAAQ45F,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAelkB,EAAAA,EACnB,IAASpyE,EAAI,EAAGA,EAAIzK,EAASgD,OAAQyH,IAAK,CAGzC,IAFA,IAAKm2F,EAAUC,EAAIC,GAAY9gG,EAASyK,GACpCu1D,GAAY,EACP2W,EAAI,EAAGA,EAAIiqB,EAAS59F,OAAQ2zE,MACpB,EAAXmqB,GAAsBC,GAAgBD,IAAargG,OAAO6X,KAAK8nF,EAAoBO,GAAGK,OAAO/0F,GAASm0F,EAAoBO,EAAE10F,GAAK20F,EAASjqB,MAC9IiqB,EAASjxF,OAAOgnE,IAAK,IAErB3W,GAAY,EACT8gC,EAAWC,IAAcA,EAAeD,IAG7C,GAAG9gC,EAAW,CACbhgE,EAAS2P,OAAOlF,IAAK,GACrB,IAAIN,EAAI02F,SACEtwF,IAANpG,IAAiBnD,EAASmD,IAGhC,OAAOnD,EAvBN85F,EAAWA,GAAY,EACvB,IAAI,IAAIr2F,EAAIzK,EAASgD,OAAQyH,EAAI,GAAKzK,EAASyK,EAAI,GAAG,GAAKq2F,EAAUr2F,IAAKzK,EAASyK,GAAKzK,EAASyK,EAAI,GACrGzK,EAASyK,GAAK,CAACm2F,EAAUC,EAAIC,I6GJ/BV,EAAoB98B,EAAKk9B,IACxB,IAAIS,EAAST,GAAUA,EAAOU,WAC7B,IAAOV,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBl/E,EAAE+/E,EAAQ,CAAEnwE,EAAGmwE,IAC5BA,GCLRb,EAAoBl/E,EAAI,CAACq/E,EAASY,KACjC,IAAI,IAAIl1F,KAAOk1F,EACXf,EAAoB/zF,EAAE80F,EAAYl1F,KAASm0F,EAAoB/zF,EAAEk0F,EAASt0F,IAC5ExL,OAAO4xB,eAAekuE,EAASt0F,EAAK,CAAEm1F,YAAY,EAAM93F,IAAK63F,EAAWl1F,MCJ3Em0F,EAAoBvvE,EAAI,GAGxBuvE,EAAoBj5F,EAAKk6F,GACjB96F,QAAQmR,IAAIjX,OAAO6X,KAAK8nF,EAAoBvvE,GAAGuiB,QAAO,CAACpmB,EAAU/gB,KACvEm0F,EAAoBvvE,EAAE5kB,GAAKo1F,EAASr0E,GAC7BA,IACL,KCNJozE,EAAoBrjE,EAAKskE,GAER,MAAZA,EAAwB,qCACZ,MAAZA,EAAwB,sCAEf,CAAC,IAAM,kBAAkB,IAAM,YAAYA,IAAYA,GAAW,IAAM,CAAC,EAAI,uBAAuB,GAAK,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,uBAAuB,IAAM,wBAAwBA,GAAW,YCLxUjB,EAAoBkB,SAAYD,MCDhCjB,EAAoBrG,EAAI,WACvB,GAA0B,iBAAfwH,WAAyB,OAAOA,WAC3C,IACC,OAAO38F,MAAQ,IAAI48F,SAAS,cAAb,GACd,MAAOr6F,GACR,GAAsB,iBAAXg/B,OAAqB,OAAOA,QALjB,GCAxBi6D,EAAoB/zF,EAAI,CAACsK,EAAK8qF,IAAUhhG,OAAO0xB,UAAU/b,eAAe8iB,KAAKviB,EAAK8qF,GCClFrB,EAAoBj2F,EAAKo2F,IACH,oBAAXmB,QAA0BA,OAAOC,aAC1ClhG,OAAO4xB,eAAekuE,EAASmB,OAAOC,YAAa,CAAEx4F,MAAO,WAE7D1I,OAAO4xB,eAAekuE,EAAS,aAAc,CAAEp3F,OAAO,KCLvDi3F,EAAoBwB,IAAOpB,IAC1BA,EAAOqB,MAAQ,GACVrB,EAAOsB,WAAUtB,EAAOsB,SAAW,IACjCtB,G,MCHR,IAAIuB,EACA3B,EAAoBrG,EAAEiI,gBAAeD,EAAY3B,EAAoBrG,EAAEj3F,SAAW,IACtF,IAAI8gC,EAAWw8D,EAAoBrG,EAAEn2D,SACrC,IAAKm+D,GAAan+D,IACbA,EAASq+D,gBACZF,EAAYn+D,EAASq+D,cAAcxlD,MAC/BslD,GAAW,CACf,IAAIG,EAAUt+D,EAASu+D,qBAAqB,UACzCD,EAAQl/F,SAAQ++F,EAAYG,EAAQA,EAAQl/F,OAAS,GAAGy5C,KAK7D,IAAKslD,EAAW,MAAM,IAAIlxF,MAAM,yDAChCkxF,EAAYA,EAAUz/F,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF89F,EAAoBnnE,EAAI8oE,G,GrHbhB9hG,EAAemgG,EAAoBrjE,EACnC78B,EAAgBkgG,EAAoBj5F,EACpChH,EAAW,IAAIiN,IACfhN,EAAW,IAAIgN,IACnBgzF,EAAoBrjE,EAAI,SAAUskE,GAEhC,OADaphG,EAAaohG,IAEdlhG,EAASqtB,IAAI6zE,GAAW,IAAMlhG,EAASmJ,IAAI+3F,GAAW,KAGpEjB,EAAoBj5F,EAAI,SAAUk6F,GAEhC,OADanhG,EAAcmhG,GACb1zF,OAAM,SAAUxJ,GAC5B,IAAIi+F,EAAUhiG,EAASotB,IAAI6zE,GAAWjhG,EAASkJ,IAAI+3F,GAAW,OAC9D,GAAIe,EAAU,EAAG,CACf,IAAIC,EAAUpiG,EAAaohG,GAQ3B,MAPAl9F,EAAMsC,QACJ,iBACA46F,EACA,mCACAgB,EACA,IACFl+F,EAAMiC,QAAUi8F,EACVl+F,EAER,OAAO,IAAIoC,SAAQ,SAAUM,GAC3BF,YAAW,WACT,IAEI27F,EACKpuF,KAAKvK,MAGdxJ,EAAS4M,IAAIs0F,EAASiB,GACtBliG,EAAS2M,IAAIs0F,EAASe,EAAU,GAChCv7F,EAAQu5F,EAAoBj5F,EAAEk6F,MAC7B,Y,MsHlCb,IAAIkB,EAAkB,CACrB,IAAK,GAgBNnC,EAAoBvvE,EAAEpmB,EAAI,CAAC42F,EAASr0E,KAE/Bu1E,EAAgBlB,IAElBW,cAAc5B,EAAoBnnE,EAAImnE,EAAoBrjE,EAAEskE,KAK/D,IAAImB,EAAqB59F,KAAuB,iBAAIA,KAAuB,kBAAK,GAC5E69F,EAA6BD,EAAmBt9F,KAAK6d,KAAKy/E,GAC9DA,EAAmBt9F,KAvBCiL,IACnB,IAAKywF,EAAU8B,EAAaC,GAAWxyF,EACvC,IAAI,IAAIkwF,KAAYqC,EAChBtC,EAAoB/zF,EAAEq2F,EAAarC,KACrCD,EAAoBjsC,EAAEksC,GAAYqC,EAAYrC,IAIhD,IADGsC,GAASA,EAAQvC,GACdQ,EAAS59F,QACdu/F,EAAgB3B,EAASp0F,OAAS,EACnCi2F,EAA2BtyF,K,GrHnBxB9P,EAAO+/F,EAAoBpP,EAC/BoP,EAAoBpP,EAAI,IAChBzqF,QAAQmR,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,KAAK1O,IAAIo3F,EAAoBj5F,EAAGi5F,IAAsBx2F,KAAKvJ,GsHDzE+/F,EAAoBpP,K","sources":["webpack://tweb/webpack/runtime/chunk loaded","webpack://tweb/webpack/runtime/compat","webpack://tweb/webpack/runtime/startup chunk dependencies","webpack://tweb/./src/config/emoji.ts","webpack://tweb/./src/environment/userAgent.ts","webpack://tweb/./src/helpers/cleanSearchText.ts","webpack://tweb/./src/helpers/fileName.ts","webpack://tweb/./src/lib/idb.ts","webpack://tweb/./src/environment/utils.ts","webpack://tweb/./src/lib/rootScope.ts","webpack://tweb/./src/lib/appManagers/appStateManager.ts","webpack://tweb/./src/helpers/object/setDeepProperty.ts","webpack://tweb/./src/helpers/object/getDeepProperty.ts","webpack://tweb/./src/lib/mtproto/networkStats.ts","webpack://tweb/./src/lib/mtproto/transports/http.ts","webpack://tweb/./src/lib/mtproto/transports/websocket.ts","webpack://tweb/./src/helpers/array/randomize.ts","webpack://tweb/./src/lib/mtproto/transports/obfuscation.ts","webpack://tweb/./src/lib/mtproto/transports/abridged.ts","webpack://tweb/./src/helpers/bytes/bytesToHex.ts","webpack://tweb/./src/lib/mtproto/transports/tcpObfuscated.ts","webpack://tweb/./src/lib/mtproto/dcConfigurator.ts","webpack://tweb/./src/lib/mtproto/transports/controller.ts","webpack://tweb/./src/lib/appManagers/utils/storages/resetStoragesPromise.ts","webpack://tweb/./src/lib/appManagers/manager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/loadStorages.ts","webpack://tweb/./src/lib/appManagers/appStoragesManager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/createStorages.ts","webpack://tweb/./src/lib/mtproto/passwordManager.ts","webpack://tweb/./src/lib/mtproto/referenceDatabase.ts","webpack://tweb/./src/helpers/object/safeReplaceObject.ts","webpack://tweb/./src/lib/appManagers/utils/messages/getPeerIdsFromMessage.ts","webpack://tweb/./src/helpers/object/defineNotNumerableProperties.ts","webpack://tweb/./src/lib/appManagers/utils/dialogs/setDialogIndex.ts","webpack://tweb/./src/lib/storages/dialogs.ts","webpack://tweb/./src/lib/storages/filters.ts","webpack://tweb/./src/helpers/applyMixins.ts","webpack://tweb/./src/lib/appManagers/apiUpdatesManager.ts","webpack://tweb/./src/lib/appManagers/appAvatarsManager.ts","webpack://tweb/./src/lib/appManagers/appCallsManager.ts","webpack://tweb/./src/helpers/restrictions.ts","webpack://tweb/./src/lib/appManagers/appChatsManager.ts","webpack://tweb/./src/lib/langPack.ts","webpack://tweb/./src/helpers/date.ts","webpack://tweb/./src/helpers/object/safeReplaceArrayInObject.ts","webpack://tweb/./src/lib/appManagers/appDocsManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentURL.ts","webpack://tweb/./src/lib/appManagers/appDraftsManager.ts","webpack://tweb/./src/lib/appManagers/appEmojiManager.ts","webpack://tweb/./src/lib/appManagers/appGroupCallsManager.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoInput.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoMediaInput.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentMediaInput.ts","webpack://tweb/./src/lib/appManagers/appInlineBotsManager.ts","webpack://tweb/./src/lib/appManagers/appMessagesIdsManager.ts","webpack://tweb/./src/lib/mtproto/telegramMeWebManager.ts","webpack://tweb/./src/helpers/string/splitStringByLength.ts","webpack://tweb/./src/lib/appManagers/appTabsManager.ts","webpack://tweb/./src/lib/appManagers/appMessagesManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentInputFileName.ts","webpack://tweb/./src/helpers/string/convertInputKeyToKey.ts","webpack://tweb/./src/lib/appManagers/appNotificationsManager.ts","webpack://tweb/./src/lib/appManagers/appPeersManager.ts","webpack://tweb/./src/lib/appManagers/appPhotosManager.ts","webpack://tweb/./src/lib/appManagers/appPollsManager.ts","webpack://tweb/./src/lib/appManagers/appPrivacyManager.ts","webpack://tweb/./src/lib/appManagers/appProfileManager.ts","webpack://tweb/./src/helpers/callbackifyAll.ts","webpack://tweb/./src/lib/appManagers/appReactionsManager.ts","webpack://tweb/./src/lib/appManagers/appStickersManager.ts","webpack://tweb/./src/helpers/fixBase64String.ts","webpack://tweb/./src/helpers/cleanUsername.ts","webpack://tweb/./src/lib/appManagers/appUsersManager.ts","webpack://tweb/./src/lib/appManagers/appWebPagesManager.ts","webpack://tweb/./src/lib/mtproto/apiFileManager.ts","webpack://tweb/./src/helpers/fixFirefoxSvg.ts","webpack://tweb/./src/helpers/blob/readBlobAsArrayBuffer.ts","webpack://tweb/./src/helpers/blob/readBlobAs.ts","webpack://tweb/./src/lib/mtproto/api_methods.ts","webpack://tweb/./src/lib/mtproto/apiManager.ts","webpack://tweb/./src/lib/storages/peers.ts","webpack://tweb/./src/lib/storages/thumbs.ts","webpack://tweb/./src/lib/mtproto/schema.ts","webpack://tweb/./src/helpers/number/intToUint.ts","webpack://tweb/./src/helpers/long/longFromInts.ts","webpack://tweb/./src/lib/mtproto/tl_utils.ts","webpack://tweb/./src/helpers/gzipUncompress.ts","webpack://tweb/./src/helpers/bytes/addPadding.ts","webpack://tweb/./src/helpers/bigInt/bigIntConversion.ts","webpack://tweb/./src/lib/mtproto/networker.ts","webpack://tweb/./src/helpers/long/sortLongsArray.ts","webpack://tweb/./src/helpers/long/longToBytes.ts","webpack://tweb/./src/lib/mtproto/networkerFactory.ts","webpack://tweb/./src/lib/mtproto/rsaKeysManager.ts","webpack://tweb/./src/helpers/bytes/bytesXor.ts","webpack://tweb/./src/lib/mtproto/authorizer.ts","webpack://tweb/./src/lib/mtproto/timeManager.ts","webpack://tweb/./src/lib/appManagers/appManagersManager.ts","webpack://tweb/./src/lib/appManagers/createManagers.ts","webpack://tweb/./src/lib/mtproto/mtproto.worker.ts","webpack://tweb/./src/helpers/listenMessagePort.ts","webpack://tweb/./src/lib/mtproto/mtproto_config.ts","webpack://tweb/./src/lib/richTextProcessor/combineSameEntities.ts","webpack://tweb/./src/lib/richTextProcessor/findConflictingEntity.ts","webpack://tweb/./src/lib/richTextProcessor/index.ts","webpack://tweb/./src/lib/richTextProcessor/mergeEntities.ts","webpack://tweb/./src/lib/richTextProcessor/sortEntities.ts","webpack://tweb/./src/vendor/emoji/index.ts","webpack://tweb/webpack/bootstrap","webpack://tweb/webpack/runtime/compat get default export","webpack://tweb/webpack/runtime/define property getters","webpack://tweb/webpack/runtime/ensure chunk","webpack://tweb/webpack/runtime/get javascript chunk filename","webpack://tweb/webpack/runtime/get mini-css chunk filename","webpack://tweb/webpack/runtime/global","webpack://tweb/webpack/runtime/hasOwnProperty shorthand","webpack://tweb/webpack/runtime/make namespace object","webpack://tweb/webpack/runtime/node module decorator","webpack://tweb/webpack/runtime/publicPath","webpack://tweb/webpack/runtime/importScripts chunk loading","webpack://tweb/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","(() => {\n  if (typeof __webpack_require__ !== 'undefined') {\n    var oldGetScript = __webpack_require__.u;\n    var oldLoadScript = __webpack_require__.e;\n    var queryMap = new Map();\n    var countMap = new Map();\n    __webpack_require__.u = function (chunkId) {\n      var result = oldGetScript(chunkId);\n      return (\n        result + (queryMap.has(chunkId) ? '?' + queryMap.get(chunkId) : '')\n      );\n    };\n    __webpack_require__.e = function (chunkId) {\n      var result = oldLoadScript(chunkId);\n      return result.catch(function (error) {\n        var retries = countMap.has(chunkId) ? countMap.get(chunkId) : 999999;\n        if (retries < 1) {\n          var realSrc = oldGetScript(chunkId);\n          error.message =\n            'Loading chunk ' +\n            chunkId +\n            ' failed after 999999 retries.\\n(' +\n            realSrc +\n            ')';\n          error.request = realSrc;\n          throw error;\n        }\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            var retryAttempt = 999999 - retries + 1;\n            var retryAttemptString = '&retry-attempt=' + retryAttempt;\n            var cacheBust = (function () {\n              return Date.now();\n            })();\n            +retryAttemptString;\n            queryMap.set(chunkId, cacheBust);\n            countMap.set(chunkId, retries - 1);\n            resolve(__webpack_require__.e(chunkId));\n          }, 3000);\n        });\n      });\n    };\n  }\n})();\n","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([699,211,216,960,27,434].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { EMOJI_VERSION } from \"../environment/emojiVersionsSupport\";\n\nexport const EmojiVersions: {[version in EMOJI_VERSION]: {[emoji: string]: number}} = {\"14\":{\"1f6dd\":4867,\"1f6de\":4916,\"1f6df\":4923,\"1f7f0\":62832,\"1f979\":183,\"1f9cc\":1557,\"1fa7b\":61332,\"1fa7c\":61330,\"1faa9\":51093,\"1faaa\":61364,\"1faab\":61189,\"1faac\":51085,\"1fab7\":2651,\"1fab8\":2631,\"1fab9\":2672,\"1faba\":2673,\"1fac3\":1520,\"1fac4\":1521,\"1fac5\":1505,\"1fad7\":3793,\"1fad8\":3707,\"1fad9\":3804,\"1fae0\":111,\"1fae1\":136,\"1fae2\":132,\"1fae3\":133,\"1fae4\":174,\"1fae5\":142,\"1fae6\":1385,\"1fae7\":61353,\"1faf0\":1341,\"1faf1\":1332,\"1faf2\":1333,\"1faf3\":1334,\"1faf4\":1335,\"1faf5\":1351,\"1faf6\":1360,\"1faf1-1f3fb-200d-1faf2-1f3fc\":0,\"1faf1-1f3fb-200d-1faf2-1f3fd\":0,\"1faf1-1f3fb-200d-1faf2-1f3fe\":0,\"1faf1-1f3fb-200d-1faf2-1f3ff\":0,\"1faf1-1f3fc-200d-1faf2-1f3fb\":0,\"1faf1-1f3fc-200d-1faf2-1f3fd\":0,\"1faf1-1f3fc-200d-1faf2-1f3fe\":0,\"1faf1-1f3fc-200d-1faf2-1f3ff\":0,\"1faf1-1f3fd-200d-1faf2-1f3fb\":0,\"1faf1-1f3fd-200d-1faf2-1f3fc\":0,\"1faf1-1f3fd-200d-1faf2-1f3fe\":0,\"1faf1-1f3fd-200d-1faf2-1f3ff\":0,\"1faf1-1f3fe-200d-1faf2-1f3fb\":0,\"1faf1-1f3fe-200d-1faf2-1f3fc\":0,\"1faf1-1f3fe-200d-1faf2-1f3fd\":0,\"1faf1-1f3fe-200d-1faf2-1f3ff\":0,\"1faf1-1f3ff-200d-1faf2-1f3fb\":0,\"1faf1-1f3ff-200d-1faf2-1f3fc\":0,\"1faf1-1f3ff-200d-1faf2-1f3fd\":0,\"1faf1-1f3ff-200d-1faf2-1f3fe\":0,\"1fac3-1f3fb\":0,\"1fac3-1f3fc\":0,\"1fac3-1f3fd\":0,\"1fac3-1f3fe\":0,\"1fac3-1f3ff\":0,\"1fac4-1f3fb\":0,\"1fac4-1f3fc\":0,\"1fac4-1f3fd\":0,\"1fac4-1f3fe\":0,\"1fac4-1f3ff\":0,\"1fac5-1f3fb\":0,\"1fac5-1f3fc\":0,\"1fac5-1f3fd\":0,\"1fac5-1f3fe\":0,\"1fac5-1f3ff\":0,\"1faf0-1f3fb\":0,\"1faf0-1f3fc\":0,\"1faf0-1f3fd\":0,\"1faf0-1f3fe\":0,\"1faf0-1f3ff\":0,\"1faf1-1f3fb\":0,\"1faf1-1f3fc\":0,\"1faf1-1f3fd\":0,\"1faf1-1f3fe\":0,\"1faf1-1f3ff\":0,\"1faf2-1f3fb\":0,\"1faf2-1f3fc\":0,\"1faf2-1f3fd\":0,\"1faf2-1f3fe\":0,\"1faf2-1f3ff\":0,\"1faf3-1f3fb\":0,\"1faf3-1f3fc\":0,\"1faf3-1f3fd\":0,\"1faf3-1f3fe\":0,\"1faf3-1f3ff\":0,\"1faf4-1f3fb\":0,\"1faf4-1f3fc\":0,\"1faf4-1f3fd\":0,\"1faf4-1f3fe\":0,\"1faf4-1f3ff\":0,\"1faf5-1f3fb\":0,\"1faf5-1f3fc\":0,\"1faf5-1f3fd\":0,\"1faf5-1f3fe\":0,\"1faf5-1f3ff\":0,\"1faf6-1f3fb\":0,\"1faf6-1f3fc\":0,\"1faf6-1f3fd\":0,\"1faf6-1f3fe\":0,\"1faf6-1f3ff\":0},\"\":{\"2049\":62835,\"2122\":62863,\"2139\":62888,\"2194\":62764,\"2195\":62763,\"2196\":62762,\"2197\":62756,\"2198\":62758,\"2199\":62760,\"2328\":61194,\"2600\":4990,\"2601\":4998,\"2602\":41013,\"2603\":41018,\"2604\":41020,\"2611\":62851,\"2614\":41014,\"2615\":3781,\"2618\":2667,\"2620\":1106,\"2622\":62753,\"2623\":62754,\"2626\":62783,\"2638\":62780,\"2639\":177,\"2648\":62788,\"2649\":62789,\"2650\":62796,\"2651\":62797,\"2652\":62798,\"2653\":62799,\"2660\":51095,\"2663\":51098,\"2665\":51096,\"2666\":51097,\"2668\":4865,\"2692\":61297,\"2693\":4922,\"2694\":61300,\"2696\":61311,\"2697\":61319,\"2699\":61309,\"2702\":61284,\"2705\":62850,\"2708\":4931,\"2709\":61245,\"2712\":61259,\"2714\":62852,\"2716\":62828,\"2721\":62779,\"2728\":51029,\"2733\":62858,\"2734\":62859,\"2744\":41017,\"2747\":62860,\"2753\":62836,\"2754\":62837,\"2755\":62838,\"2757\":62839,\"2763\":1137,\"2764\":1141,\"2795\":62829,\"2796\":62830,\"2797\":62831,\"2934\":62767,\"2935\":62768,\"3030\":62840,\"3297\":62912,\"3299\":62913,\"0023-20e3\":62864,\"002a-20e3\":62865,\"0030-20e3\":62866,\"0031-20e3\":62867,\"0032-20e3\":62868,\"0033-20e3\":62869,\"0034-20e3\":62870,\"0035-20e3\":62871,\"0036-20e3\":62872,\"0037-20e3\":62873,\"0038-20e3\":62874,\"0039-20e3\":62875,\"00a9\":62861,\"00ae\":62862,\"1f004\":51101,\"1f0cf\":51100,\"1f170\":62882,\"1f171\":62884,\"1f17e\":62893,\"1f17f\":62895,\"1f18e\":62883,\"1f191\":62885,\"1f192\":62886,\"1f193\":62887,\"1f194\":62889,\"1f195\":62891,\"1f196\":62892,\"1f197\":62894,\"1f198\":62896,\"1f199\":62897,\"1f19a\":62898,\"1f1e6-1f1e8\":71594,\"1f1e6-1f1e9\":71595,\"1f1e6-1f1ea\":71596,\"1f1e6-1f1eb\":71597,\"1f1e6-1f1ec\":71598,\"1f1e6-1f1ee\":71599,\"1f1e6-1f1f1\":71600,\"1f1e6-1f1f2\":71601,\"1f1e6-1f1f4\":71602,\"1f1e6-1f1f6\":71603,\"1f1e6-1f1f7\":71604,\"1f1e6-1f1f8\":71605,\"1f1e6-1f1f9\":71606,\"1f1e6-1f1fa\":71607,\"1f1e6-1f1fc\":71608,\"1f1e6-1f1fd\":71609,\"1f1e6-1f1ff\":71610,\"1f1e7-1f1e6\":71611,\"1f1e7-1f1e7\":71612,\"1f1e7-1f1e9\":71613,\"1f1e7-1f1ea\":71614,\"1f1e7-1f1eb\":71615,\"1f1e7-1f1ec\":71616,\"1f1e7-1f1ed\":71617,\"1f1e7-1f1ee\":71618,\"1f1e7-1f1ef\":71619,\"1f1e7-1f1f1\":71620,\"1f1e7-1f1f2\":71621,\"1f1e7-1f1f3\":71622,\"1f1e7-1f1f4\":71623,\"1f1e7-1f1f6\":71624,\"1f1e7-1f1f7\":71625,\"1f1e7-1f1f8\":71626,\"1f1e7-1f1f9\":71627,\"1f1e7-1f1fb\":71628,\"1f1e7-1f1fc\":71629,\"1f1e7-1f1fe\":71630,\"1f1e7-1f1ff\":71631,\"1f1e8-1f1e6\":71632,\"1f1e8-1f1e8\":71633,\"1f1e8-1f1e9\":71634,\"1f1e8-1f1eb\":71635,\"1f1e8-1f1ec\":71636,\"1f1e8-1f1ed\":71637,\"1f1e8-1f1ee\":71638,\"1f1e8-1f1f0\":71639,\"1f1e8-1f1f1\":71640,\"1f1e8-1f1f2\":71641,\"1f1e8-1f1f3\":71642,\"1f1e8-1f1f4\":71643,\"1f1e8-1f1f5\":71644,\"1f1e8-1f1f7\":71645,\"1f1e8-1f1fa\":71646,\"1f1e8-1f1fb\":71647,\"1f1e8-1f1fc\":71648,\"1f1e8-1f1fd\":71649,\"1f1e8-1f1fe\":71650,\"1f1e8-1f1ff\":71651,\"1f1e9-1f1ea\":71652,\"1f1e9-1f1ec\":71653,\"1f1e9-1f1ef\":71654,\"1f1e9-1f1f0\":71655,\"1f1e9-1f1f2\":71656,\"1f1e9-1f1f4\":71657,\"1f1e9-1f1ff\":71658,\"1f1ea-1f1e6\":71659,\"1f1ea-1f1e8\":71660,\"1f1ea-1f1ea\":71661,\"1f1ea-1f1ec\":71662,\"1f1ea-1f1ed\":71663,\"1f1ea-1f1f7\":71664,\"1f1ea-1f1f8\":71665,\"1f1ea-1f1f9\":71666,\"1f1ea-1f1fa\":71667,\"1f1eb-1f1ee\":71668,\"1f1eb-1f1ef\":71669,\"1f1eb-1f1f0\":71670,\"1f1eb-1f1f2\":71671,\"1f1eb-1f1f4\":71672,\"1f1eb-1f1f7\":71673,\"1f1ec-1f1e6\":71674,\"1f1ec-1f1e7\":71675,\"1f1ec-1f1e9\":71676,\"1f1ec-1f1ea\":71677,\"1f1ec-1f1eb\":71678,\"1f1ec-1f1ec\":71679,\"1f1ec-1f1ed\":71680,\"1f1ec-1f1ee\":71681,\"1f1ec-1f1f1\":71682,\"1f1ec-1f1f2\":71683,\"1f1ec-1f1f3\":71684,\"1f1ec-1f1f5\":71685,\"1f1ec-1f1f6\":71686,\"1f1ec-1f1f7\":71687,\"1f1ec-1f1f8\":71688,\"1f1ec-1f1f9\":71689,\"1f1ec-1f1fa\":71690,\"1f1ec-1f1fc\":71691,\"1f1ec-1f1fe\":71692,\"1f1ed-1f1f0\":71693,\"1f1ed-1f1f2\":71694,\"1f1ed-1f1f3\":71695,\"1f1ed-1f1f7\":71696,\"1f1ed-1f1f9\":71697,\"1f1ed-1f1fa\":71698,\"1f1ee-1f1e8\":71699,\"1f1ee-1f1e9\":71700,\"1f1ee-1f1ea\":71701,\"1f1ee-1f1f1\":71702,\"1f1ee-1f1f2\":71703,\"1f1ee-1f1f3\":71704,\"1f1ee-1f1f4\":71705,\"1f1ee-1f1f6\":71706,\"1f1ee-1f1f7\":71707,\"1f1ee-1f1f8\":71708,\"1f1ee-1f1f9\":71709,\"1f1ef-1f1ea\":71710,\"1f1ef-1f1f2\":71711,\"1f1ef-1f1f4\":71712,\"1f1ef-1f1f5\":71713,\"1f1f0-1f1ea\":71714,\"1f1f0-1f1ec\":71715,\"1f1f0-1f1ed\":71716,\"1f1f0-1f1ee\":71717,\"1f1f0-1f1f2\":71718,\"1f1f0-1f1f3\":71719,\"1f1f0-1f1f5\":71720,\"1f1f0-1f1f7\":71721,\"1f1f0-1f1fc\":71722,\"1f1f0-1f1fe\":71723,\"1f1f0-1f1ff\":71724,\"1f1f1-1f1e6\":71725,\"1f1f1-1f1e7\":71726,\"1f1f1-1f1e8\":71727,\"1f1f1-1f1ee\":71728,\"1f1f1-1f1f0\":71729,\"1f1f1-1f1f7\":71730,\"1f1f1-1f1f8\":71731,\"1f1f1-1f1f9\":71732,\"1f1f1-1f1fa\":71733,\"1f1f1-1f1fb\":71734,\"1f1f1-1f1fe\":71735,\"1f1f2-1f1e6\":71736,\"1f1f2-1f1e8\":71737,\"1f1f2-1f1e9\":71738,\"1f1f2-1f1ea\":71739,\"1f1f2-1f1eb\":71740,\"1f1f2-1f1ec\":71741,\"1f1f2-1f1ed\":71742,\"1f1f2-1f1f0\":71743,\"1f1f2-1f1f1\":71744,\"1f1f2-1f1f2\":71745,\"1f1f2-1f1f3\":71746,\"1f1f2-1f1f4\":71747,\"1f1f2-1f1f5\":71748,\"1f1f2-1f1f6\":71749,\"1f1f2-1f1f7\":71750,\"1f1f2-1f1f8\":71751,\"1f1f2-1f1f9\":71752,\"1f1f2-1f1fa\":71753,\"1f1f2-1f1fb\":71754,\"1f1f2-1f1fc\":71755,\"1f1f2-1f1fd\":71756,\"1f1f2-1f1fe\":71757,\"1f1f2-1f1ff\":71758,\"1f1f3-1f1e6\":71759,\"1f1f3-1f1e8\":71760,\"1f1f3-1f1ea\":71761,\"1f1f3-1f1eb\":71762,\"1f1f3-1f1ec\":71763,\"1f1f3-1f1ee\":71764,\"1f1f3-1f1f1\":71765,\"1f1f3-1f1f4\":71766,\"1f1f3-1f1f5\":71767,\"1f1f3-1f1f7\":71768,\"1f1f3-1f1fa\":71769,\"1f1f3-1f1ff\":71770,\"1f1f4-1f1f2\":71771,\"1f1f5-1f1e6\":71772,\"1f1f5-1f1ea\":71773,\"1f1f5-1f1eb\":71774,\"1f1f5-1f1ec\":71775,\"1f1f5-1f1ed\":71776,\"1f1f5-1f1f0\":71777,\"1f1f5-1f1f1\":71778,\"1f1f5-1f1f2\":71779,\"1f1f5-1f1f3\":71780,\"1f1f5-1f1f7\":71781,\"1f1f5-1f1f8\":71782,\"1f1f5-1f1f9\":71783,\"1f1f5-1f1fc\":71784,\"1f1f5-1f1fe\":71785,\"1f1f6-1f1e6\":71786,\"1f1f7-1f1ea\":71787,\"1f1f7-1f1f4\":71788,\"1f1f7-1f1f8\":71789,\"1f1f7-1f1fa\":71790,\"1f1f7-1f1fc\":71791,\"1f1f8-1f1e6\":71792,\"1f1f8-1f1e7\":71793,\"1f1f8-1f1e8\":71794,\"1f1f8-1f1e9\":71795,\"1f1f8-1f1ea\":71796,\"1f1f8-1f1ec\":71797,\"1f1f8-1f1ed\":71798,\"1f1f8-1f1ee\":71799,\"1f1f8-1f1ef\":71800,\"1f1f8-1f1f0\":71801,\"1f1f8-1f1f1\":71802,\"1f1f8-1f1f2\":71803,\"1f1f8-1f1f3\":71804,\"1f1f8-1f1f4\":71805,\"1f1f8-1f1f7\":71806,\"1f1f8-1f1f8\":71807,\"1f1f8-1f1f9\":71808,\"1f1f8-1f1fb\":71809,\"1f1f8-1f1fd\":71810,\"1f1f8-1f1fe\":71811,\"1f1f8-1f1ff\":71812,\"1f1f9-1f1e6\":71813,\"1f1f9-1f1e8\":71814,\"1f1f9-1f1e9\":71815,\"1f1f9-1f1eb\":71816,\"1f1f9-1f1ec\":71817,\"1f1f9-1f1ed\":71818,\"1f1f9-1f1ef\":71819,\"1f1f9-1f1f0\":71820,\"1f1f9-1f1f1\":71821,\"1f1f9-1f1f2\":71822,\"1f1f9-1f1f3\":71823,\"1f1f9-1f1f4\":71824,\"1f1f9-1f1f7\":71825,\"1f1f9-1f1f9\":71826,\"1f1f9-1f1fb\":71827,\"1f1f9-1f1fc\":71828,\"1f1f9-1f1ff\":71829,\"1f1fa-1f1e6\":71830,\"1f1fa-1f1ec\":71831,\"1f1fa-1f1f2\":71832,\"1f1fa-1f1f3\":71833,\"1f1fa-1f1f8\":71834,\"1f1fa-1f1fe\":71835,\"1f1fa-1f1ff\":71836,\"1f1fb-1f1e6\":71837,\"1f1fb-1f1e8\":71838,\"1f1fb-1f1ea\":71839,\"1f1fb-1f1ec\":71840,\"1f1fb-1f1ee\":71841,\"1f1fb-1f1f3\":71842,\"1f1fb-1f1fa\":71843,\"1f1fc-1f1eb\":71844,\"1f1fc-1f1f8\":71845,\"1f1fd-1f1f0\":71846,\"1f1fe-1f1ea\":71847,\"1f1fe-1f1f9\":71848,\"1f1ff-1f1e6\":71849,\"1f1ff-1f1f2\":71850,\"1f1ff-1f1fc\":71851,\"1f201\":62899,\"1f202\":62900,\"1f21a\":62906,\"1f22f\":62903,\"1f232\":62907,\"1f233\":62911,\"1f234\":62910,\"1f235\":62915,\"1f236\":62902,\"1f237\":62901,\"1f238\":62909,\"1f239\":62905,\"1f23a\":62914,\"1f250\":62904,\"1f251\":62908,\"1f300\":41010,\"1f301\":4857,\"1f302\":41012,\"1f303\":4858,\"1f304\":4860,\"1f305\":4861,\"1f306\":4862,\"1f307\":4863,\"1f308\":41011,\"1f309\":4864,\"1f30a\":41023,\"1f30b\":4815,\"1f30c\":4997,\"1f30d\":4806,\"1f30e\":4807,\"1f30f\":4808,\"1f310\":4809,\"1f311\":4977,\"1f312\":4978,\"1f313\":4979,\"1f314\":4980,\"1f315\":4981,\"1f316\":4982,\"1f317\":4983,\"1f318\":4984,\"1f319\":4985,\"1f31a\":4986,\"1f31b\":4987,\"1f31c\":4988,\"1f31d\":4991,\"1f31e\":4992,\"1f31f\":4995,\"1f320\":4996,\"1f321\":4989,\"1f324\":41001,\"1f325\":41002,\"1f326\":41003,\"1f327\":41004,\"1f328\":41005,\"1f329\":41006,\"1f32a\":41007,\"1f32b\":41008,\"1f32c\":41009,\"1f32d\":3725,\"1f32e\":3727,\"1f32f\":3728,\"1f330\":3708,\"1f331\":2659,\"1f332\":2661,\"1f333\":2662,\"1f334\":2663,\"1f335\":2664,\"1f336\":3698,\"1f337\":2658,\"1f338\":2649,\"1f339\":2653,\"1f33a\":2655,\"1f33b\":2656,\"1f33c\":2657,\"1f33d\":3697,\"1f33e\":2665,\"1f33f\":2666,\"1f340\":2668,\"1f341\":2669,\"1f342\":2670,\"1f343\":2671,\"1f344\":3705,\"1f345\":3690,\"1f346\":3694,\"1f347\":3674,\"1f348\":3675,\"1f349\":3676,\"1f34a\":3677,\"1f34b\":3678,\"1f34c\":3679,\"1f34d\":3680,\"1f34e\":3682,\"1f34f\":3683,\"1f350\":3684,\"1f351\":3685,\"1f352\":3686,\"1f353\":3687,\"1f354\":3722,\"1f355\":3724,\"1f356\":3718,\"1f357\":3719,\"1f358\":3744,\"1f359\":3745,\"1f35a\":3746,\"1f35b\":3747,\"1f35c\":3748,\"1f35d\":3749,\"1f35e\":3709,\"1f35f\":3723,\"1f360\":3750,\"1f361\":3756,\"1f362\":3751,\"1f363\":3752,\"1f364\":3753,\"1f365\":3754,\"1f366\":3765,\"1f367\":3766,\"1f368\":3767,\"1f369\":3768,\"1f36a\":3769,\"1f36b\":3774,\"1f36c\":3775,\"1f36d\":3776,\"1f36e\":3777,\"1f36f\":3778,\"1f370\":3771,\"1f371\":3743,\"1f372\":3735,\"1f373\":3733,\"1f374\":3801,\"1f375\":3783,\"1f376\":3784,\"1f377\":3786,\"1f378\":3787,\"1f379\":3788,\"1f37a\":3789,\"1f37b\":3790,\"1f37c\":3779,\"1f37d\":3800,\"1f37e\":3785,\"1f37f\":3739,\"1f380\":51040,\"1f381\":51041,\"1f382\":3770,\"1f383\":51024,\"1f384\":51025,\"1f385\":1527,\"1f386\":51026,\"1f387\":51027,\"1f388\":51030,\"1f389\":51031,\"1f38a\":51032,\"1f38b\":51033,\"1f38c\":71588,\"1f38d\":51034,\"1f38e\":51035,\"1f38f\":51036,\"1f390\":51037,\"1f391\":51038,\"1f392\":61134,\"1f393\":61147,\"1f396\":51045,\"1f397\":51042,\"1f399\":61167,\"1f39a\":61168,\"1f39b\":61169,\"1f39e\":61203,\"1f39f\":51043,\"1f3a0\":4866,\"1f3a1\":4868,\"1f3a2\":4869,\"1f3a3\":51072,\"1f3a4\":61170,\"1f3a5\":61202,\"1f3a6\":62819,\"1f3a7\":61171,\"1f3a8\":51105,\"1f3a9\":61146,\"1f3aa\":4871,\"1f3ab\":51044,\"1f3ac\":61205,\"1f3ad\":51103,\"1f3ae\":51086,\"1f3af\":51078,\"1f3b0\":51088,\"1f3b1\":51081,\"1f3b2\":51089,\"1f3b3\":51060,\"1f3b4\":51102,\"1f3b5\":61165,\"1f3b6\":61166,\"1f3b7\":61173,\"1f3b8\":61175,\"1f3b9\":61176,\"1f3ba\":61177,\"1f3bb\":61178,\"1f3bc\":61164,\"1f3bd\":51074,\"1f3be\":51058,\"1f3bf\":51075,\"1f3c0\":51054,\"1f3c1\":71586,\"1f3c2\":1600,\"1f3c3-200d-2640\":1584,\"1f3c3-200d-2642\":1583,\"1f3c3\":1582,\"1f3c4-200d-2640\":1606,\"1f3c4-200d-2642\":1605,\"1f3c4\":1604,\"1f3c5\":51047,\"1f3c6\":51046,\"1f3c7\":1598,\"1f3c8\":51056,\"1f3c9\":51057,\"1f3ca-200d-2640\":1612,\"1f3ca-200d-2642\":1611,\"1f3ca\":1610,\"1f3cb-200d-2640\":1618,\"1f3cb-200d-2642\":1617,\"1f3cb\":1616,\"1f3cc-200d-2640\":1603,\"1f3cc-200d-2642\":1602,\"1f3cc\":1601,\"1f3cd\":4902,\"1f3ce\":4901,\"1f3cf\":51061,\"1f3d0\":51055,\"1f3d1\":51062,\"1f3d2\":51063,\"1f3d3\":51065,\"1f3d4\":4813,\"1f3d5\":4817,\"1f3d6\":4818,\"1f3d7\":4824,\"1f3d8\":4829,\"1f3d9\":4859,\"1f3da\":4830,\"1f3db\":4823,\"1f3dc\":4819,\"1f3dd\":4820,\"1f3de\":4821,\"1f3df\":4822,\"1f3e0\":4831,\"1f3e1\":4832,\"1f3e2\":4833,\"1f3e3\":4834,\"1f3e4\":4835,\"1f3e5\":4836,\"1f3e6\":4837,\"1f3e7\":62729,\"1f3e8\":4838,\"1f3e9\":4839,\"1f3ea\":4840,\"1f3eb\":4841,\"1f3ec\":4842,\"1f3ed\":4843,\"1f3ee\":61216,\"1f3ef\":4844,\"1f3f0\":4845,\"1f3f3-200d-1f308\":71591,\"1f3f3-200d-26a7\":71592,\"1f3f3\":71590,\"1f3f4-200d-2620\":71593,\"1f3f4-e0067-e0062-e0065-e006e-e0067-e007f\":71852,\"1f3f4-e0067-e0062-e0073-e0063-e0074-e007f\":71853,\"1f3f4-e0067-e0062-e0077-e006c-e0073-e007f\":71854,\"1f3f4\":71589,\"1f3f5\":2652,\"1f3f7\":61234,\"1f3f8\":51066,\"1f3f9\":61303,\"1f3fa\":3805,\"1f3fb\":9525,\"1f3fc\":9526,\"1f3fd\":9527,\"1f3fe\":9528,\"1f3ff\":9529,\"1f400\":2576,\"1f401\":2575,\"1f402\":2556,\"1f403\":2557,\"1f404\":2558,\"1f405\":2547,\"1f406\":2548,\"1f407\":2579,\"1f408-200d-2b1b\":2544,\"1f408\":2543,\"1f409\":2618,\"1f40a\":2613,\"1f40b\":2622,\"1f40c\":2632,\"1f40d\":2616,\"1f40e\":2550,\"1f40f\":2563,\"1f410\":2565,\"1f411\":2564,\"1f412\":2531,\"1f413\":2596,\"1f414\":2595,\"1f415-200d-1f9ba\":2537,\"1f415\":2535,\"1f416\":2560,\"1f417\":2561,\"1f418\":2570,\"1f419\":2629,\"1f41a\":2630,\"1f41b\":2634,\"1f41c\":2635,\"1f41d\":2636,\"1f41e\":2638,\"1f41f\":2625,\"1f420\":2626,\"1f421\":2627,\"1f422\":2614,\"1f423\":2597,\"1f424\":2598,\"1f425\":2599,\"1f426\":2600,\"1f427\":2601,\"1f428\":2586,\"1f429\":2538,\"1f42a\":2566,\"1f42b\":2567,\"1f42c\":2623,\"1f42d\":2574,\"1f42e\":2555,\"1f42f\":2546,\"1f430\":2578,\"1f431\":2542,\"1f432\":2617,\"1f433\":2621,\"1f434\":2549,\"1f435\":2530,\"1f436\":2534,\"1f437\":2559,\"1f438\":2612,\"1f439\":2577,\"1f43a\":2539,\"1f43b-200d-2744\":2585,\"1f43b\":2584,\"1f43c\":2587,\"1f43d\":2562,\"1f43e\":2593,\"1f43f\":2580,\"1f440\":1381,\"1f441-200d-1f5e8\":1159,\"1f441\":1382,\"1f442\":1373,\"1f443\":1375,\"1f444\":1384,\"1f445\":1383,\"1f446\":1347,\"1f447\":1349,\"1f448\":1345,\"1f449\":1346,\"1f44a\":1355,\"1f44b\":1327,\"1f44c\":1336,\"1f44d\":1352,\"1f44e\":1353,\"1f44f\":1358,\"1f450\":1361,\"1f451\":61144,\"1f452\":61145,\"1f453\":61110,\"1f454\":61115,\"1f455\":61116,\"1f456\":61117,\"1f457\":61122,\"1f458\":61123,\"1f459\":61128,\"1f45a\":61129,\"1f45b\":61130,\"1f45c\":61131,\"1f45d\":61132,\"1f45e\":61136,\"1f45f\":61137,\"1f460\":61140,\"1f461\":61141,\"1f462\":61143,\"1f463\":1687,\"1f464\":1684,\"1f465\":1685,\"1f466\":1388,\"1f467\":1389,\"1f468-200d-1f33e\":1457,\"1f468-200d-1f373\":1460,\"1f468-200d-1f37c\":1524,\"1f468-200d-1f393\":1448,\"1f468-200d-1f3a4\":1478,\"1f468-200d-1f3a8\":1481,\"1f468-200d-1f3eb\":1451,\"1f468-200d-1f3ed\":1466,\"1f468-200d-1f466-200d-1f466\":1674,\"1f468-200d-1f466\":1673,\"1f468-200d-1f467-200d-1f466\":1676,\"1f468-200d-1f467-200d-1f467\":1677,\"1f468-200d-1f467\":1675,\"1f468-200d-1f468-200d-1f466\":1663,\"1f468-200d-1f468-200d-1f466-200d-1f466\":1666,\"1f468-200d-1f468-200d-1f467\":1664,\"1f468-200d-1f468-200d-1f467-200d-1f466\":1665,\"1f468-200d-1f468-200d-1f467-200d-1f467\":1667,\"1f468-200d-1f469-200d-1f466\":1658,\"1f468-200d-1f469-200d-1f466-200d-1f466\":1661,\"1f468-200d-1f469-200d-1f467\":1659,\"1f468-200d-1f469-200d-1f467-200d-1f466\":1660,\"1f468-200d-1f469-200d-1f467-200d-1f467\":1662,\"1f468-200d-1f4bb\":1475,\"1f468-200d-1f4bc\":1469,\"1f468-200d-1f527\":1463,\"1f468-200d-1f52c\":1472,\"1f468-200d-1f680\":1487,\"1f468-200d-1f692\":1490,\"1f468-200d-1f9af\":1574,\"1f468-200d-1f9b0\":1396,\"1f468-200d-1f9b1\":1397,\"1f468-200d-1f9b2\":1399,\"1f468-200d-1f9b3\":1398,\"1f468-200d-1f9bc\":1577,\"1f468-200d-1f9bd\":1580,\"1f468-200d-2695\":1445,\"1f468-200d-2696\":1454,\"1f468-200d-2708\":1484,\"1f468-200d-2764-200d-1f468\":1655,\"1f468-200d-2764-200d-1f48b-200d-1f468\":1651,\"1f468\":1392,\"1f469-200d-1f33e\":1458,\"1f469-200d-1f373\":1461,\"1f469-200d-1f37c\":1523,\"1f469-200d-1f393\":1449,\"1f469-200d-1f3a4\":1479,\"1f469-200d-1f3a8\":1482,\"1f469-200d-1f3eb\":1452,\"1f469-200d-1f3ed\":1467,\"1f469-200d-1f466-200d-1f466\":1679,\"1f469-200d-1f466\":1678,\"1f469-200d-1f467-200d-1f466\":1681,\"1f469-200d-1f467-200d-1f467\":1682,\"1f469-200d-1f467\":1680,\"1f469-200d-1f469-200d-1f466\":1668,\"1f469-200d-1f469-200d-1f466-200d-1f466\":1671,\"1f469-200d-1f469-200d-1f467\":1669,\"1f469-200d-1f469-200d-1f467-200d-1f466\":1670,\"1f469-200d-1f469-200d-1f467-200d-1f467\":1672,\"1f469-200d-1f4bb\":1476,\"1f469-200d-1f4bc\":1470,\"1f469-200d-1f527\":1464,\"1f469-200d-1f52c\":1473,\"1f469-200d-1f680\":1488,\"1f469-200d-1f692\":1491,\"1f469-200d-1f9af\":1575,\"1f469-200d-1f9b0\":1401,\"1f469-200d-1f9b1\":1403,\"1f469-200d-1f9b2\":1407,\"1f469-200d-1f9b3\":1405,\"1f469-200d-1f9bc\":1578,\"1f469-200d-1f9bd\":1581,\"1f469-200d-2695\":1446,\"1f469-200d-2696\":1455,\"1f469-200d-2708\":1485,\"1f469-200d-2764-200d-1f468\":1654,\"1f469-200d-2764-200d-1f469\":1656,\"1f469-200d-2764-200d-1f48b-200d-1f468\":1650,\"1f469-200d-2764-200d-1f48b-200d-1f469\":1652,\"1f469\":1400,\"1f46a\":1657,\"1f46b\":1647,\"1f46c\":1648,\"1f46d\":1646,\"1f46e-200d-2640\":1494,\"1f46e-200d-2642\":1493,\"1f46e\":1492,\"1f46f-200d-2640\":1590,\"1f46f-200d-2642\":1589,\"1f46f\":1588,\"1f470-200d-2640\":1518,\"1f470-200d-2642\":1517,\"1f470\":1516,\"1f471-200d-2640\":1409,\"1f471-200d-2642\":1410,\"1f471\":1391,\"1f472\":1511,\"1f473-200d-2640\":1510,\"1f473-200d-2642\":1509,\"1f473\":1508,\"1f474\":1412,\"1f475\":1413,\"1f476\":1386,\"1f477-200d-2640\":1504,\"1f477-200d-2642\":1503,\"1f477\":1502,\"1f478\":1507,\"1f479\":1109,\"1f47a\":1110,\"1f47b\":1111,\"1f47c\":1526,\"1f47d\":1112,\"1f47e\":1113,\"1f47f\":1104,\"1f480\":1105,\"1f481-200d-2640\":1428,\"1f481-200d-2642\":1427,\"1f481\":1426,\"1f482-200d-2640\":1500,\"1f482-200d-2642\":1499,\"1f482\":1498,\"1f483\":1585,\"1f484\":61152,\"1f485\":1366,\"1f486-200d-2640\":1560,\"1f486-200d-2642\":1559,\"1f486\":1558,\"1f487-200d-2640\":1563,\"1f487-200d-2642\":1562,\"1f487\":1561,\"1f488\":4870,\"1f489\":61326,\"1f48a\":61328,\"1f48b\":1127,\"1f48c\":1128,\"1f48d\":61153,\"1f48e\":61154,\"1f48f\":1649,\"1f490\":2648,\"1f491\":1653,\"1f492\":4846,\"1f493\":1133,\"1f494\":1138,\"1f495\":1135,\"1f496\":1131,\"1f497\":1132,\"1f498\":1129,\"1f499\":1145,\"1f49a\":1144,\"1f49b\":1143,\"1f49c\":1146,\"1f49d\":1130,\"1f49e\":1134,\"1f49f\":1136,\"1f4a0\":62946,\"1f4a1\":61214,\"1f4a2\":1151,\"1f4a3\":1157,\"1f4a4\":1163,\"1f4a5\":1152,\"1f4a6\":1154,\"1f4a7\":41022,\"1f4a8\":1155,\"1f4a9\":1107,\"1f4aa\":1368,\"1f4ab\":1153,\"1f4ac\":1158,\"1f4ad\":1162,\"1f4ae\":2650,\"1f4af\":1150,\"1f4b0\":61235,\"1f4b1\":62841,\"1f4b2\":62842,\"1f4b3\":61242,\"1f4b4\":61237,\"1f4b5\":61238,\"1f4b6\":61239,\"1f4b7\":61240,\"1f4b8\":61241,\"1f4b9\":61244,\"1f4ba\":4936,\"1f4bb\":61191,\"1f4bc\":61265,\"1f4bd\":61197,\"1f4be\":61198,\"1f4bf\":61199,\"1f4c0\":61200,\"1f4c1\":61266,\"1f4c2\":61267,\"1f4c3\":61227,\"1f4c4\":61229,\"1f4c5\":61269,\"1f4c6\":61270,\"1f4c7\":61273,\"1f4c8\":61274,\"1f4c9\":61275,\"1f4ca\":61276,\"1f4cb\":61277,\"1f4cc\":61278,\"1f4cd\":61279,\"1f4ce\":61280,\"1f4cf\":61282,\"1f4d0\":61283,\"1f4d1\":61232,\"1f4d2\":61226,\"1f4d3\":61225,\"1f4d4\":61218,\"1f4d5\":61219,\"1f4d6\":61220,\"1f4d7\":61221,\"1f4d8\":61222,\"1f4d9\":61223,\"1f4da\":61224,\"1f4db\":62847,\"1f4dc\":61228,\"1f4dd\":61264,\"1f4de\":61185,\"1f4df\":61186,\"1f4e0\":61187,\"1f4e1\":61325,\"1f4e2\":61159,\"1f4e3\":61160,\"1f4e4\":61249,\"1f4e5\":61250,\"1f4e6\":61251,\"1f4e7\":61246,\"1f4e8\":61247,\"1f4e9\":61248,\"1f4ea\":61253,\"1f4eb\":61252,\"1f4ec\":61254,\"1f4ed\":61255,\"1f4ee\":61256,\"1f4ef\":61161,\"1f4f0\":61230,\"1f4f1\":61182,\"1f4f2\":61183,\"1f4f3\":62823,\"1f4f4\":62824,\"1f4f5\":62751,\"1f4f6\":62822,\"1f4f7\":61207,\"1f4f8\":61208,\"1f4f9\":61209,\"1f4fa\":61206,\"1f4fb\":61172,\"1f4fc\":61210,\"1f4fd\":61204,\"1f4ff\":61151,\"1f500\":62801,\"1f501\":62802,\"1f502\":62803,\"1f503\":62769,\"1f504\":62770,\"1f505\":62820,\"1f506\":62821,\"1f507\":61155,\"1f508\":61156,\"1f509\":61157,\"1f50a\":61158,\"1f50b\":61188,\"1f50c\":61190,\"1f50d\":61211,\"1f50e\":61212,\"1f50f\":61290,\"1f510\":61291,\"1f511\":61292,\"1f512\":61288,\"1f513\":61289,\"1f514\":61162,\"1f515\":61163,\"1f516\":61233,\"1f517\":61313,\"1f518\":62947,\"1f519\":62771,\"1f51a\":62772,\"1f51b\":62773,\"1f51c\":62774,\"1f51d\":62775,\"1f51e\":62752,\"1f51f\":62876,\"1f520\":62877,\"1f521\":62878,\"1f522\":62879,\"1f523\":62880,\"1f524\":62881,\"1f525\":41021,\"1f526\":61215,\"1f527\":61306,\"1f528\":61294,\"1f529\":61308,\"1f52a\":3803,\"1f52b\":61301,\"1f52c\":61323,\"1f52d\":61324,\"1f52e\":51082,\"1f52f\":62787,\"1f530\":62848,\"1f531\":62846,\"1f532\":62949,\"1f533\":62948,\"1f534\":62916,\"1f535\":62920,\"1f536\":62940,\"1f537\":62941,\"1f538\":62942,\"1f539\":62943,\"1f53a\":62944,\"1f53b\":62945,\"1f53c\":62811,\"1f53d\":62813,\"1f549\":62778,\"1f54a\":2602,\"1f54b\":4854,\"1f54c\":4850,\"1f54d\":4852,\"1f54e\":62786,\"1f550\":4955,\"1f551\":4957,\"1f552\":4959,\"1f553\":4961,\"1f554\":4963,\"1f555\":4965,\"1f556\":4967,\"1f557\":4969,\"1f558\":4971,\"1f559\":4973,\"1f55a\":4975,\"1f55b\":4953,\"1f55c\":4956,\"1f55d\":4958,\"1f55e\":4960,\"1f55f\":4962,\"1f560\":4964,\"1f561\":4966,\"1f562\":4968,\"1f563\":4970,\"1f564\":4972,\"1f565\":4974,\"1f566\":4976,\"1f567\":4954,\"1f56f\":61213,\"1f570\":4952,\"1f573\":1156,\"1f574\":1587,\"1f575-200d-2640\":1497,\"1f575-200d-2642\":1496,\"1f575\":1495,\"1f576\":61111,\"1f577\":2641,\"1f578\":2642,\"1f579\":51087,\"1f57a\":1586,\"1f587\":61281,\"1f58a\":61261,\"1f58b\":61260,\"1f58c\":61262,\"1f58d\":61263,\"1f590\":1329,\"1f595\":1348,\"1f596\":1331,\"1f5a4\":1148,\"1f5a5\":61192,\"1f5a8\":61193,\"1f5b1\":61195,\"1f5b2\":61196,\"1f5bc\":51104,\"1f5c2\":61268,\"1f5c3\":61285,\"1f5c4\":61286,\"1f5d1\":61287,\"1f5d2\":61271,\"1f5d3\":61272,\"1f5dc\":61310,\"1f5dd\":61293,\"1f5de\":61231,\"1f5e1\":61299,\"1f5e3\":1683,\"1f5e8\":1160,\"1f5ef\":1161,\"1f5f3\":61257,\"1f5fa\":4810,\"1f5fb\":4816,\"1f5fc\":4847,\"1f5fd\":4848,\"1f5fe\":4811,\"1f5ff\":61362,\"1f600\":11,\"1f601\":14,\"1f602\":18,\"1f603\":12,\"1f604\":13,\"1f605\":16,\"1f606\":15,\"1f607\":114,\"1f608\":1103,\"1f609\":112,\"1f60a\":113,\"1f60b\":124,\"1f60c\":150,\"1f60d\":116,\"1f60e\":170,\"1f60f\":144,\"1f610\":139,\"1f611\":140,\"1f612\":145,\"1f613\":195,\"1f614\":151,\"1f615\":173,\"1f616\":192,\"1f617\":119,\"1f618\":118,\"1f619\":122,\"1f61a\":121,\"1f61b\":125,\"1f61c\":126,\"1f61d\":128,\"1f61e\":194,\"1f61f\":175,\"1f620\":1101,\"1f621\":1100,\"1f622\":189,\"1f623\":193,\"1f624\":199,\"1f625\":188,\"1f626\":184,\"1f627\":185,\"1f628\":186,\"1f629\":196,\"1f62a\":152,\"1f62b\":197,\"1f62c\":147,\"1f62d\":190,\"1f62e-200d-1f4a8\":148,\"1f62e\":178,\"1f62f\":179,\"1f630\":187,\"1f631\":191,\"1f632\":180,\"1f633\":181,\"1f634\":154,\"1f635-200d-1f4ab\":165,\"1f635\":164,\"1f636-200d-1f32b\":143,\"1f636\":141,\"1f637\":155,\"1f638\":1116,\"1f639\":1117,\"1f63a\":1115,\"1f63b\":1118,\"1f63c\":1119,\"1f63d\":1120,\"1f63e\":1123,\"1f63f\":1122,\"1f640\":1121,\"1f641\":176,\"1f642\":19,\"1f643\":110,\"1f644\":146,\"1f645-200d-2640\":1422,\"1f645-200d-2642\":1421,\"1f645\":1420,\"1f646-200d-2640\":1425,\"1f646-200d-2642\":1424,\"1f646\":1423,\"1f647-200d-2640\":1437,\"1f647-200d-2642\":1436,\"1f647\":1435,\"1f648\":1124,\"1f649\":1125,\"1f64a\":1126,\"1f64b-200d-2640\":1431,\"1f64b-200d-2642\":1430,\"1f64b\":1429,\"1f64c\":1359,\"1f64d-200d-2640\":1416,\"1f64d-200d-2642\":1415,\"1f64d\":1414,\"1f64e-200d-2640\":1419,\"1f64e-200d-2642\":1418,\"1f64e\":1417,\"1f64f\":1364,\"1f680\":4942,\"1f681\":4937,\"1f682\":4872,\"1f683\":4873,\"1f684\":4874,\"1f685\":4875,\"1f686\":4876,\"1f687\":4877,\"1f688\":4878,\"1f689\":4879,\"1f68a\":4880,\"1f68b\":4883,\"1f68c\":4884,\"1f68d\":4885,\"1f68e\":4886,\"1f68f\":4911,\"1f690\":4887,\"1f691\":4888,\"1f692\":4889,\"1f693\":4890,\"1f694\":4891,\"1f695\":4892,\"1f696\":4893,\"1f697\":4894,\"1f698\":4895,\"1f699\":4896,\"1f69a\":4898,\"1f69b\":4899,\"1f69c\":4900,\"1f69d\":4881,\"1f69e\":4882,\"1f69f\":4938,\"1f6a0\":4939,\"1f6a1\":4940,\"1f6a2\":4930,\"1f6a3-200d-2640\":1609,\"1f6a3-200d-2642\":1608,\"1f6a3\":1607,\"1f6a4\":4926,\"1f6a5\":4918,\"1f6a6\":4919,\"1f6a7\":4921,\"1f6a8\":4917,\"1f6a9\":71587,\"1f6aa\":61333,\"1f6ab\":62745,\"1f6ac\":61358,\"1f6ad\":62747,\"1f6ae\":62730,\"1f6af\":62748,\"1f6b0\":62731,\"1f6b1\":62749,\"1f6b2\":4907,\"1f6b3\":62746,\"1f6b4-200d-2640\":1621,\"1f6b4-200d-2642\":1620,\"1f6b4\":1619,\"1f6b5-200d-2640\":1624,\"1f6b5-200d-2642\":1623,\"1f6b5\":1622,\"1f6b6-200d-2640\":1566,\"1f6b6-200d-2642\":1565,\"1f6b6\":1564,\"1f6b7\":62750,\"1f6b8\":62743,\"1f6b9\":62733,\"1f6ba\":62734,\"1f6bb\":62735,\"1f6bc\":62736,\"1f6bd\":61340,\"1f6be\":62737,\"1f6bf\":61342,\"1f6c0\":1643,\"1f6c1\":61343,\"1f6c2\":62738,\"1f6c3\":62739,\"1f6c4\":62740,\"1f6c5\":62741,\"1f6cb\":61338,\"1f6cc\":1644,\"1f6cd\":61133,\"1f6ce\":4944,\"1f6cf\":61337,\"1f6d0\":62776,\"1f6d1\":4920,\"1f6d2\":61357,\"1f6d5\":4851,\"1f6d6\":4828,\"1f6d7\":61334,\"1f6e0\":61298,\"1f6e1\":61304,\"1f6e2\":4914,\"1f6e3\":4912,\"1f6e4\":4913,\"1f6e5\":4929,\"1f6e9\":4932,\"1f6eb\":4933,\"1f6ec\":4934,\"1f6f0\":4941,\"1f6f3\":4927,\"1f6f4\":4908,\"1f6f5\":4903,\"1f6f6\":4925,\"1f6f7\":51076,\"1f6f8\":4943,\"1f6f9\":4909,\"1f6fa\":4906,\"1f6fb\":4897,\"1f6fc\":4910,\"1f7e0\":62917,\"1f7e1\":62918,\"1f7e2\":62919,\"1f7e3\":62921,\"1f7e4\":62922,\"1f7e5\":62925,\"1f7e6\":62929,\"1f7e7\":62926,\"1f7e8\":62927,\"1f7e9\":62928,\"1f7ea\":62930,\"1f7eb\":62931,\"1f90c\":1337,\"1f90d\":1149,\"1f90e\":1147,\"1f90f\":1338,\"1f910\":137,\"1f911\":129,\"1f912\":156,\"1f913\":171,\"1f914\":135,\"1f915\":157,\"1f916\":1114,\"1f917\":130,\"1f918\":1343,\"1f919\":1344,\"1f91a\":1328,\"1f91b\":1356,\"1f91c\":1357,\"1f91d\":1363,\"1f91e\":1340,\"1f91f\":1342,\"1f920\":167,\"1f921\":1108,\"1f922\":158,\"1f923\":17,\"1f924\":153,\"1f925\":149,\"1f926-200d-2640\":1440,\"1f926-200d-2642\":1439,\"1f926\":1438,\"1f927\":160,\"1f928\":138,\"1f929\":117,\"1f92a\":127,\"1f92b\":134,\"1f92c\":1102,\"1f92d\":131,\"1f92e\":159,\"1f92f\":166,\"1f930\":1519,\"1f931\":1522,\"1f932\":1362,\"1f933\":1367,\"1f934\":1506,\"1f935-200d-2640\":1515,\"1f935-200d-2642\":1514,\"1f935\":1513,\"1f936\":1528,\"1f937-200d-2640\":1443,\"1f937-200d-2642\":1442,\"1f937\":1441,\"1f938-200d-2640\":1627,\"1f938-200d-2642\":1626,\"1f938\":1625,\"1f939-200d-2640\":1639,\"1f939-200d-2642\":1638,\"1f939\":1637,\"1f93a\":1597,\"1f93c-200d-2640\":1630,\"1f93c-200d-2642\":1629,\"1f93c\":1628,\"1f93d-200d-2640\":1633,\"1f93d-200d-2642\":1632,\"1f93d\":1631,\"1f93e-200d-2640\":1636,\"1f93e-200d-2642\":1635,\"1f93e\":1634,\"1f93f\":51073,\"1f940\":2654,\"1f941\":61180,\"1f942\":3791,\"1f943\":3792,\"1f944\":3802,\"1f945\":51069,\"1f947\":51048,\"1f948\":51049,\"1f949\":51050,\"1f94a\":51067,\"1f94b\":51068,\"1f94c\":51077,\"1f94d\":51064,\"1f94e\":51053,\"1f94f\":51059,\"1f950\":3710,\"1f951\":3693,\"1f952\":3700,\"1f953\":3721,\"1f954\":3695,\"1f955\":3696,\"1f956\":3711,\"1f957\":3738,\"1f958\":3734,\"1f959\":3730,\"1f95a\":3732,\"1f95b\":3780,\"1f95c\":3706,\"1f95d\":3689,\"1f95e\":3715,\"1f95f\":3757,\"1f960\":3758,\"1f961\":3759,\"1f962\":3799,\"1f963\":3737,\"1f964\":3794,\"1f965\":3692,\"1f966\":3702,\"1f967\":3773,\"1f968\":3713,\"1f969\":3720,\"1f96a\":3726,\"1f96b\":3742,\"1f96c\":3701,\"1f96d\":3681,\"1f96e\":3755,\"1f96f\":3714,\"1f970\":115,\"1f971\":198,\"1f972\":123,\"1f973\":168,\"1f974\":163,\"1f975\":161,\"1f976\":162,\"1f977\":1501,\"1f978\":169,\"1f97a\":182,\"1f97b\":61124,\"1f97c\":61113,\"1f97d\":61112,\"1f97e\":61138,\"1f97f\":61139,\"1f980\":3760,\"1f981\":2545,\"1f982\":2643,\"1f983\":2594,\"1f984\":2551,\"1f985\":2603,\"1f986\":2604,\"1f987\":2583,\"1f988\":2628,\"1f989\":2606,\"1f98a\":2540,\"1f98b\":2633,\"1f98c\":2553,\"1f98d\":2532,\"1f98e\":2615,\"1f98f\":2572,\"1f990\":3762,\"1f991\":3763,\"1f992\":2569,\"1f993\":2552,\"1f994\":2582,\"1f995\":2619,\"1f996\":2620,\"1f997\":2639,\"1f998\":2591,\"1f999\":2568,\"1f99a\":2610,\"1f99b\":2573,\"1f99c\":2611,\"1f99d\":2541,\"1f99e\":3761,\"1f99f\":2644,\"1f9a0\":2647,\"1f9a1\":2592,\"1f9a2\":2605,\"1f9a3\":2571,\"1f9a4\":2607,\"1f9a5\":2588,\"1f9a6\":2589,\"1f9a7\":2533,\"1f9a8\":2590,\"1f9a9\":2609,\"1f9aa\":3764,\"1f9ab\":2581,\"1f9ac\":2554,\"1f9ad\":2624,\"1f9ae\":2536,\"1f9af\":61312,\"1f9b4\":1380,\"1f9b5\":1371,\"1f9b6\":1372,\"1f9b7\":1379,\"1f9b8-200d-2640\":1532,\"1f9b8-200d-2642\":1531,\"1f9b8\":1530,\"1f9b9-200d-2640\":1535,\"1f9b9-200d-2642\":1534,\"1f9b9\":1533,\"1f9ba\":61114,\"1f9bb\":1374,\"1f9bc\":4905,\"1f9bd\":4904,\"1f9be\":1369,\"1f9bf\":1370,\"1f9c0\":3717,\"1f9c1\":3772,\"1f9c2\":3741,\"1f9c3\":3796,\"1f9c4\":3703,\"1f9c5\":3704,\"1f9c6\":3731,\"1f9c7\":3716,\"1f9c8\":3740,\"1f9c9\":3797,\"1f9ca\":3798,\"1f9cb\":3795,\"1f9cd-200d-2640\":1569,\"1f9cd-200d-2642\":1568,\"1f9cd\":1567,\"1f9ce-200d-2640\":1572,\"1f9ce-200d-2642\":1571,\"1f9ce\":1570,\"1f9cf-200d-2640\":1434,\"1f9cf-200d-2642\":1433,\"1f9cf\":1432,\"1f9d0\":172,\"1f9d1-200d-1f33e\":1456,\"1f9d1-200d-1f373\":1459,\"1f9d1-200d-1f37c\":1525,\"1f9d1-200d-1f384\":1529,\"1f9d1-200d-1f393\":1447,\"1f9d1-200d-1f3a4\":1477,\"1f9d1-200d-1f3a8\":1480,\"1f9d1-200d-1f3eb\":1450,\"1f9d1-200d-1f3ed\":1465,\"1f9d1-200d-1f4bb\":1474,\"1f9d1-200d-1f4bc\":1468,\"1f9d1-200d-1f527\":1462,\"1f9d1-200d-1f52c\":1471,\"1f9d1-200d-1f680\":1486,\"1f9d1-200d-1f692\":1489,\"1f9d1-200d-1f91d-200d-1f9d1\":1645,\"1f9d1-200d-1f9af\":1573,\"1f9d1-200d-1f9b0\":1402,\"1f9d1-200d-1f9b1\":1404,\"1f9d1-200d-1f9b2\":1408,\"1f9d1-200d-1f9b3\":1406,\"1f9d1-200d-1f9bc\":1576,\"1f9d1-200d-1f9bd\":1579,\"1f9d1-200d-2695\":1444,\"1f9d1-200d-2696\":1453,\"1f9d1-200d-2708\":1483,\"1f9d1\":1390,\"1f9d2\":1387,\"1f9d3\":1411,\"1f9d4-200d-2640\":1395,\"1f9d4-200d-2642\":1394,\"1f9d4\":1393,\"1f9d5\":1512,\"1f9d6-200d-2640\":1593,\"1f9d6-200d-2642\":1592,\"1f9d6\":1591,\"1f9d7-200d-2640\":1596,\"1f9d7-200d-2642\":1595,\"1f9d7\":1594,\"1f9d8-200d-2640\":1642,\"1f9d8-200d-2642\":1641,\"1f9d8\":1640,\"1f9d9-200d-2640\":1538,\"1f9d9-200d-2642\":1537,\"1f9d9\":1536,\"1f9da-200d-2640\":1541,\"1f9da-200d-2642\":1540,\"1f9da\":1539,\"1f9db-200d-2640\":1544,\"1f9db-200d-2642\":1543,\"1f9db\":1542,\"1f9dc-200d-2640\":1547,\"1f9dc-200d-2642\":1546,\"1f9dc\":1545,\"1f9dd-200d-2640\":1550,\"1f9dd-200d-2642\":1549,\"1f9dd\":1548,\"1f9de-200d-2640\":1553,\"1f9de-200d-2642\":1552,\"1f9de\":1551,\"1f9df-200d-2640\":1556,\"1f9df-200d-2642\":1555,\"1f9df\":1554,\"1f9e0\":1376,\"1f9e1\":1142,\"1f9e2\":61148,\"1f9e3\":61118,\"1f9e4\":61119,\"1f9e5\":61120,\"1f9e6\":61121,\"1f9e7\":51039,\"1f9e8\":51028,\"1f9e9\":51090,\"1f9ea\":61320,\"1f9eb\":61321,\"1f9ec\":61322,\"1f9ed\":4812,\"1f9ee\":61201,\"1f9ef\":61356,\"1f9f0\":61316,\"1f9f1\":4825,\"1f9f2\":61317,\"1f9f3\":4945,\"1f9f4\":61346,\"1f9f5\":51106,\"1f9f6\":51108,\"1f9f7\":61347,\"1f9f8\":51091,\"1f9f9\":61348,\"1f9fa\":61349,\"1f9fb\":61350,\"1f9fc\":61352,\"1f9fd\":61355,\"1f9fe\":61243,\"1f9ff\":51084,\"1fa70\":61142,\"1fa71\":61125,\"1fa72\":61126,\"1fa73\":61127,\"1fa74\":61135,\"1fa78\":61327,\"1fa79\":61329,\"1fa7a\":61331,\"1fa80\":51079,\"1fa81\":51080,\"1fa82\":4935,\"1fa83\":61302,\"1fa84\":51083,\"1fa85\":51092,\"1fa86\":51094,\"1fa90\":4993,\"1fa91\":61339,\"1fa92\":61345,\"1fa93\":61295,\"1fa94\":61217,\"1fa95\":61179,\"1fa96\":61149,\"1fa97\":61174,\"1fa98\":61181,\"1fa99\":61236,\"1fa9a\":61305,\"1fa9b\":61307,\"1fa9c\":61318,\"1fa9d\":61315,\"1fa9e\":61335,\"1fa9f\":61336,\"1faa0\":61341,\"1faa1\":51107,\"1faa2\":51109,\"1faa3\":61351,\"1faa4\":61344,\"1faa5\":61354,\"1faa6\":61360,\"1faa7\":61363,\"1faa8\":4826,\"1fab0\":2645,\"1fab1\":2646,\"1fab2\":2637,\"1fab3\":2640,\"1fab4\":2660,\"1fab5\":4827,\"1fab6\":2608,\"1fac0\":1377,\"1fac1\":1378,\"1fac2\":1686,\"1fad0\":3688,\"1fad1\":3699,\"1fad2\":3691,\"1fad3\":3712,\"1fad4\":3729,\"1fad5\":3736,\"1fad6\":3782,\"203c\":62834,\"21a9\":62765,\"21aa\":62766,\"231a\":4948,\"231b\":4946,\"23cf\":62818,\"23e9\":62805,\"23ea\":62809,\"23eb\":62812,\"23ec\":62814,\"23ed\":62806,\"23ee\":62810,\"23ef\":62807,\"23f0\":4949,\"23f1\":4950,\"23f2\":4951,\"23f3\":4947,\"23f8\":62815,\"23f9\":62816,\"23fa\":62817,\"24c2\":62890,\"25aa\":62938,\"25ab\":62939,\"25b6\":62804,\"25c0\":62808,\"25fb\":62935,\"25fc\":62934,\"25fd\":62937,\"25fe\":62936,\"260e\":61184,\"261d\":1350,\"262a\":62784,\"262e\":62785,\"262f\":62781,\"263a\":120,\"264a\":62790,\"264b\":62791,\"264c\":62792,\"264d\":62793,\"264e\":62794,\"264f\":62795,\"265f\":51099,\"267b\":62844,\"267e\":62833,\"267f\":62732,\"269b\":62777,\"269c\":62845,\"26a0\":62742,\"26a1\":41016,\"26a7\":62827,\"26aa\":62924,\"26ab\":62923,\"26b0\":61359,\"26b1\":61361,\"26bd\":51051,\"26be\":51052,\"26c4\":41019,\"26c5\":4999,\"26c8\":41000,\"26ce\":62800,\"26cf\":61296,\"26d1\":61150,\"26d3\":61314,\"26d4\":62744,\"26e9\":4853,\"26ea\":4849,\"26f0\":4814,\"26f1\":41015,\"26f2\":4855,\"26f3\":51070,\"26f4\":4928,\"26f5\":4924,\"26f7\":1599,\"26f8\":51071,\"26f9-200d-2640\":1615,\"26f9-200d-2642\":1614,\"26f9\":1613,\"26fa\":4856,\"26fd\":4915,\"270a\":1354,\"270b\":1330,\"270c\":1339,\"270d\":1365,\"270f\":61258,\"271d\":62782,\"274c\":62853,\"274e\":62854,\"2764-200d-1f525\":1139,\"2764-200d-1fa79\":1140,\"27a1\":62757,\"27b0\":62855,\"27bf\":62856,\"2b05\":62761,\"2b06\":62755,\"2b07\":62759,\"2b1b\":62932,\"2b1c\":62933,\"2b50\":4994,\"2b55\":62849,\"303d\":62857,\"1f385-1f3fb\":0,\"1f385-1f3fc\":0,\"1f385-1f3fd\":0,\"1f385-1f3fe\":0,\"1f385-1f3ff\":0,\"1f3c2-1f3fb\":0,\"1f3c2-1f3fc\":0,\"1f3c2-1f3fd\":0,\"1f3c2-1f3fe\":0,\"1f3c2-1f3ff\":0,\"1f3c3-1f3fb-200d-2640\":0,\"1f3c3-1f3fc-200d-2640\":0,\"1f3c3-1f3fd-200d-2640\":0,\"1f3c3-1f3fe-200d-2640\":0,\"1f3c3-1f3ff-200d-2640\":0,\"1f3c3-1f3fb-200d-2642\":0,\"1f3c3-1f3fc-200d-2642\":0,\"1f3c3-1f3fd-200d-2642\":0,\"1f3c3-1f3fe-200d-2642\":0,\"1f3c3-1f3ff-200d-2642\":0,\"1f3c3-1f3fb\":0,\"1f3c3-1f3fc\":0,\"1f3c3-1f3fd\":0,\"1f3c3-1f3fe\":0,\"1f3c3-1f3ff\":0,\"1f3c4-1f3fb-200d-2640\":0,\"1f3c4-1f3fc-200d-2640\":0,\"1f3c4-1f3fd-200d-2640\":0,\"1f3c4-1f3fe-200d-2640\":0,\"1f3c4-1f3ff-200d-2640\":0,\"1f3c4-1f3fb-200d-2642\":0,\"1f3c4-1f3fc-200d-2642\":0,\"1f3c4-1f3fd-200d-2642\":0,\"1f3c4-1f3fe-200d-2642\":0,\"1f3c4-1f3ff-200d-2642\":0,\"1f3c4-1f3fb\":0,\"1f3c4-1f3fc\":0,\"1f3c4-1f3fd\":0,\"1f3c4-1f3fe\":0,\"1f3c4-1f3ff\":0,\"1f3c7-1f3fb\":0,\"1f3c7-1f3fc\":0,\"1f3c7-1f3fd\":0,\"1f3c7-1f3fe\":0,\"1f3c7-1f3ff\":0,\"1f3ca-1f3fb-200d-2640\":0,\"1f3ca-1f3fc-200d-2640\":0,\"1f3ca-1f3fd-200d-2640\":0,\"1f3ca-1f3fe-200d-2640\":0,\"1f3ca-1f3ff-200d-2640\":0,\"1f3ca-1f3fb-200d-2642\":0,\"1f3ca-1f3fc-200d-2642\":0,\"1f3ca-1f3fd-200d-2642\":0,\"1f3ca-1f3fe-200d-2642\":0,\"1f3ca-1f3ff-200d-2642\":0,\"1f3ca-1f3fb\":0,\"1f3ca-1f3fc\":0,\"1f3ca-1f3fd\":0,\"1f3ca-1f3fe\":0,\"1f3ca-1f3ff\":0,\"1f3cb-1f3fb-200d-2640\":0,\"1f3cb-1f3fc-200d-2640\":0,\"1f3cb-1f3fd-200d-2640\":0,\"1f3cb-1f3fe-200d-2640\":0,\"1f3cb-1f3ff-200d-2640\":0,\"1f3cb-1f3fb-200d-2642\":0,\"1f3cb-1f3fc-200d-2642\":0,\"1f3cb-1f3fd-200d-2642\":0,\"1f3cb-1f3fe-200d-2642\":0,\"1f3cb-1f3ff-200d-2642\":0,\"1f3cb-1f3fb\":0,\"1f3cb-1f3fc\":0,\"1f3cb-1f3fd\":0,\"1f3cb-1f3fe\":0,\"1f3cb-1f3ff\":0,\"1f3cc-1f3fb-200d-2640\":0,\"1f3cc-1f3fc-200d-2640\":0,\"1f3cc-1f3fd-200d-2640\":0,\"1f3cc-1f3fe-200d-2640\":0,\"1f3cc-1f3ff-200d-2640\":0,\"1f3cc-1f3fb-200d-2642\":0,\"1f3cc-1f3fc-200d-2642\":0,\"1f3cc-1f3fd-200d-2642\":0,\"1f3cc-1f3fe-200d-2642\":0,\"1f3cc-1f3ff-200d-2642\":0,\"1f3cc-1f3fb\":0,\"1f3cc-1f3fc\":0,\"1f3cc-1f3fd\":0,\"1f3cc-1f3fe\":0,\"1f3cc-1f3ff\":0,\"1f442-1f3fb\":0,\"1f442-1f3fc\":0,\"1f442-1f3fd\":0,\"1f442-1f3fe\":0,\"1f442-1f3ff\":0,\"1f443-1f3fb\":0,\"1f443-1f3fc\":0,\"1f443-1f3fd\":0,\"1f443-1f3fe\":0,\"1f443-1f3ff\":0,\"1f446-1f3fb\":0,\"1f446-1f3fc\":0,\"1f446-1f3fd\":0,\"1f446-1f3fe\":0,\"1f446-1f3ff\":0,\"1f447-1f3fb\":0,\"1f447-1f3fc\":0,\"1f447-1f3fd\":0,\"1f447-1f3fe\":0,\"1f447-1f3ff\":0,\"1f448-1f3fb\":0,\"1f448-1f3fc\":0,\"1f448-1f3fd\":0,\"1f448-1f3fe\":0,\"1f448-1f3ff\":0,\"1f449-1f3fb\":0,\"1f449-1f3fc\":0,\"1f449-1f3fd\":0,\"1f449-1f3fe\":0,\"1f449-1f3ff\":0,\"1f44a-1f3fb\":0,\"1f44a-1f3fc\":0,\"1f44a-1f3fd\":0,\"1f44a-1f3fe\":0,\"1f44a-1f3ff\":0,\"1f44b-1f3fb\":0,\"1f44b-1f3fc\":0,\"1f44b-1f3fd\":0,\"1f44b-1f3fe\":0,\"1f44b-1f3ff\":0,\"1f44c-1f3fb\":0,\"1f44c-1f3fc\":0,\"1f44c-1f3fd\":0,\"1f44c-1f3fe\":0,\"1f44c-1f3ff\":0,\"1f44d-1f3fb\":0,\"1f44d-1f3fc\":0,\"1f44d-1f3fd\":0,\"1f44d-1f3fe\":0,\"1f44d-1f3ff\":0,\"1f44e-1f3fb\":0,\"1f44e-1f3fc\":0,\"1f44e-1f3fd\":0,\"1f44e-1f3fe\":0,\"1f44e-1f3ff\":0,\"1f44f-1f3fb\":0,\"1f44f-1f3fc\":0,\"1f44f-1f3fd\":0,\"1f44f-1f3fe\":0,\"1f44f-1f3ff\":0,\"1f450-1f3fb\":0,\"1f450-1f3fc\":0,\"1f450-1f3fd\":0,\"1f450-1f3fe\":0,\"1f450-1f3ff\":0,\"1f466-1f3fb\":0,\"1f466-1f3fc\":0,\"1f466-1f3fd\":0,\"1f466-1f3fe\":0,\"1f466-1f3ff\":0,\"1f467-1f3fb\":0,\"1f467-1f3fc\":0,\"1f467-1f3fd\":0,\"1f467-1f3fe\":0,\"1f467-1f3ff\":0,\"1f468-1f3fb-200d-1f33e\":0,\"1f468-1f3fc-200d-1f33e\":0,\"1f468-1f3fd-200d-1f33e\":0,\"1f468-1f3fe-200d-1f33e\":0,\"1f468-1f3ff-200d-1f33e\":0,\"1f468-1f3fb-200d-1f373\":0,\"1f468-1f3fc-200d-1f373\":0,\"1f468-1f3fd-200d-1f373\":0,\"1f468-1f3fe-200d-1f373\":0,\"1f468-1f3ff-200d-1f373\":0,\"1f468-1f3fb-200d-1f37c\":0,\"1f468-1f3fc-200d-1f37c\":0,\"1f468-1f3fd-200d-1f37c\":0,\"1f468-1f3fe-200d-1f37c\":0,\"1f468-1f3ff-200d-1f37c\":0,\"1f468-1f3fb-200d-1f393\":0,\"1f468-1f3fc-200d-1f393\":0,\"1f468-1f3fd-200d-1f393\":0,\"1f468-1f3fe-200d-1f393\":0,\"1f468-1f3ff-200d-1f393\":0,\"1f468-1f3fb-200d-1f3a4\":0,\"1f468-1f3fc-200d-1f3a4\":0,\"1f468-1f3fd-200d-1f3a4\":0,\"1f468-1f3fe-200d-1f3a4\":0,\"1f468-1f3ff-200d-1f3a4\":0,\"1f468-1f3fb-200d-1f3a8\":0,\"1f468-1f3fc-200d-1f3a8\":0,\"1f468-1f3fd-200d-1f3a8\":0,\"1f468-1f3fe-200d-1f3a8\":0,\"1f468-1f3ff-200d-1f3a8\":0,\"1f468-1f3fb-200d-1f3eb\":0,\"1f468-1f3fc-200d-1f3eb\":0,\"1f468-1f3fd-200d-1f3eb\":0,\"1f468-1f3fe-200d-1f3eb\":0,\"1f468-1f3ff-200d-1f3eb\":0,\"1f468-1f3fb-200d-1f3ed\":0,\"1f468-1f3fc-200d-1f3ed\":0,\"1f468-1f3fd-200d-1f3ed\":0,\"1f468-1f3fe-200d-1f3ed\":0,\"1f468-1f3ff-200d-1f3ed\":0,\"1f468-1f3fb-200d-1f4bb\":0,\"1f468-1f3fc-200d-1f4bb\":0,\"1f468-1f3fd-200d-1f4bb\":0,\"1f468-1f3fe-200d-1f4bb\":0,\"1f468-1f3ff-200d-1f4bb\":0,\"1f468-1f3fb-200d-1f4bc\":0,\"1f468-1f3fc-200d-1f4bc\":0,\"1f468-1f3fd-200d-1f4bc\":0,\"1f468-1f3fe-200d-1f4bc\":0,\"1f468-1f3ff-200d-1f4bc\":0,\"1f468-1f3fb-200d-1f527\":0,\"1f468-1f3fc-200d-1f527\":0,\"1f468-1f3fd-200d-1f527\":0,\"1f468-1f3fe-200d-1f527\":0,\"1f468-1f3ff-200d-1f527\":0,\"1f468-1f3fb-200d-1f52c\":0,\"1f468-1f3fc-200d-1f52c\":0,\"1f468-1f3fd-200d-1f52c\":0,\"1f468-1f3fe-200d-1f52c\":0,\"1f468-1f3ff-200d-1f52c\":0,\"1f468-1f3fb-200d-1f680\":0,\"1f468-1f3fc-200d-1f680\":0,\"1f468-1f3fd-200d-1f680\":0,\"1f468-1f3fe-200d-1f680\":0,\"1f468-1f3ff-200d-1f680\":0,\"1f468-1f3fb-200d-1f692\":0,\"1f468-1f3fc-200d-1f692\":0,\"1f468-1f3fd-200d-1f692\":0,\"1f468-1f3fe-200d-1f692\":0,\"1f468-1f3ff-200d-1f692\":0,\"1f468-1f3fb-200d-1f9af\":0,\"1f468-1f3fc-200d-1f9af\":0,\"1f468-1f3fd-200d-1f9af\":0,\"1f468-1f3fe-200d-1f9af\":0,\"1f468-1f3ff-200d-1f9af\":0,\"1f468-1f3fb-200d-1f9b0\":0,\"1f468-1f3fc-200d-1f9b0\":0,\"1f468-1f3fd-200d-1f9b0\":0,\"1f468-1f3fe-200d-1f9b0\":0,\"1f468-1f3ff-200d-1f9b0\":0,\"1f468-1f3fb-200d-1f9b1\":0,\"1f468-1f3fc-200d-1f9b1\":0,\"1f468-1f3fd-200d-1f9b1\":0,\"1f468-1f3fe-200d-1f9b1\":0,\"1f468-1f3ff-200d-1f9b1\":0,\"1f468-1f3fb-200d-1f9b2\":0,\"1f468-1f3fc-200d-1f9b2\":0,\"1f468-1f3fd-200d-1f9b2\":0,\"1f468-1f3fe-200d-1f9b2\":0,\"1f468-1f3ff-200d-1f9b2\":0,\"1f468-1f3fb-200d-1f9b3\":0,\"1f468-1f3fc-200d-1f9b3\":0,\"1f468-1f3fd-200d-1f9b3\":0,\"1f468-1f3fe-200d-1f9b3\":0,\"1f468-1f3ff-200d-1f9b3\":0,\"1f468-1f3fb-200d-1f9bc\":0,\"1f468-1f3fc-200d-1f9bc\":0,\"1f468-1f3fd-200d-1f9bc\":0,\"1f468-1f3fe-200d-1f9bc\":0,\"1f468-1f3ff-200d-1f9bc\":0,\"1f468-1f3fb-200d-1f9bd\":0,\"1f468-1f3fc-200d-1f9bd\":0,\"1f468-1f3fd-200d-1f9bd\":0,\"1f468-1f3fe-200d-1f9bd\":0,\"1f468-1f3ff-200d-1f9bd\":0,\"1f468-1f3fb-200d-2695\":0,\"1f468-1f3fc-200d-2695\":0,\"1f468-1f3fd-200d-2695\":0,\"1f468-1f3fe-200d-2695\":0,\"1f468-1f3ff-200d-2695\":0,\"1f468-1f3fb-200d-2696\":0,\"1f468-1f3fc-200d-2696\":0,\"1f468-1f3fd-200d-2696\":0,\"1f468-1f3fe-200d-2696\":0,\"1f468-1f3ff-200d-2696\":0,\"1f468-1f3fb-200d-2708\":0,\"1f468-1f3fc-200d-2708\":0,\"1f468-1f3fd-200d-2708\":0,\"1f468-1f3fe-200d-2708\":0,\"1f468-1f3ff-200d-2708\":0,\"1f468-1f3fb-200d-2764-200d-1f468-1f3fb\":0,\"1f468-1f3fb-200d-2764-200d-1f468-1f3fc\":0,\"1f468-1f3fb-200d-2764-200d-1f468-1f3fd\":0,\"1f468-1f3fb-200d-2764-200d-1f468-1f3fe\":0,\"1f468-1f3fb-200d-2764-200d-1f468-1f3ff\":0,\"1f468-1f3fc-200d-2764-200d-1f468-1f3fb\":0,\"1f468-1f3fc-200d-2764-200d-1f468-1f3fc\":0,\"1f468-1f3fc-200d-2764-200d-1f468-1f3fd\":0,\"1f468-1f3fc-200d-2764-200d-1f468-1f3fe\":0,\"1f468-1f3fc-200d-2764-200d-1f468-1f3ff\":0,\"1f468-1f3fd-200d-2764-200d-1f468-1f3fb\":0,\"1f468-1f3fd-200d-2764-200d-1f468-1f3fc\":0,\"1f468-1f3fd-200d-2764-200d-1f468-1f3fd\":0,\"1f468-1f3fd-200d-2764-200d-1f468-1f3fe\":0,\"1f468-1f3fd-200d-2764-200d-1f468-1f3ff\":0,\"1f468-1f3fe-200d-2764-200d-1f468-1f3fb\":0,\"1f468-1f3fe-200d-2764-200d-1f468-1f3fc\":0,\"1f468-1f3fe-200d-2764-200d-1f468-1f3fd\":0,\"1f468-1f3fe-200d-2764-200d-1f468-1f3fe\":0,\"1f468-1f3fe-200d-2764-200d-1f468-1f3ff\":0,\"1f468-1f3ff-200d-2764-200d-1f468-1f3fb\":0,\"1f468-1f3ff-200d-2764-200d-1f468-1f3fc\":0,\"1f468-1f3ff-200d-2764-200d-1f468-1f3fd\":0,\"1f468-1f3ff-200d-2764-200d-1f468-1f3fe\":0,\"1f468-1f3ff-200d-2764-200d-1f468-1f3ff\":0,\"1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f468-1f3fb\":0,\"1f468-1f3fc\":0,\"1f468-1f3fd\":0,\"1f468-1f3fe\":0,\"1f468-1f3ff\":0,\"1f469-1f3fb-200d-1f33e\":0,\"1f469-1f3fc-200d-1f33e\":0,\"1f469-1f3fd-200d-1f33e\":0,\"1f469-1f3fe-200d-1f33e\":0,\"1f469-1f3ff-200d-1f33e\":0,\"1f469-1f3fb-200d-1f373\":0,\"1f469-1f3fc-200d-1f373\":0,\"1f469-1f3fd-200d-1f373\":0,\"1f469-1f3fe-200d-1f373\":0,\"1f469-1f3ff-200d-1f373\":0,\"1f469-1f3fb-200d-1f37c\":0,\"1f469-1f3fc-200d-1f37c\":0,\"1f469-1f3fd-200d-1f37c\":0,\"1f469-1f3fe-200d-1f37c\":0,\"1f469-1f3ff-200d-1f37c\":0,\"1f469-1f3fb-200d-1f393\":0,\"1f469-1f3fc-200d-1f393\":0,\"1f469-1f3fd-200d-1f393\":0,\"1f469-1f3fe-200d-1f393\":0,\"1f469-1f3ff-200d-1f393\":0,\"1f469-1f3fb-200d-1f3a4\":0,\"1f469-1f3fc-200d-1f3a4\":0,\"1f469-1f3fd-200d-1f3a4\":0,\"1f469-1f3fe-200d-1f3a4\":0,\"1f469-1f3ff-200d-1f3a4\":0,\"1f469-1f3fb-200d-1f3a8\":0,\"1f469-1f3fc-200d-1f3a8\":0,\"1f469-1f3fd-200d-1f3a8\":0,\"1f469-1f3fe-200d-1f3a8\":0,\"1f469-1f3ff-200d-1f3a8\":0,\"1f469-1f3fb-200d-1f3eb\":0,\"1f469-1f3fc-200d-1f3eb\":0,\"1f469-1f3fd-200d-1f3eb\":0,\"1f469-1f3fe-200d-1f3eb\":0,\"1f469-1f3ff-200d-1f3eb\":0,\"1f469-1f3fb-200d-1f3ed\":0,\"1f469-1f3fc-200d-1f3ed\":0,\"1f469-1f3fd-200d-1f3ed\":0,\"1f469-1f3fe-200d-1f3ed\":0,\"1f469-1f3ff-200d-1f3ed\":0,\"1f469-1f3fb-200d-1f4bb\":0,\"1f469-1f3fc-200d-1f4bb\":0,\"1f469-1f3fd-200d-1f4bb\":0,\"1f469-1f3fe-200d-1f4bb\":0,\"1f469-1f3ff-200d-1f4bb\":0,\"1f469-1f3fb-200d-1f4bc\":0,\"1f469-1f3fc-200d-1f4bc\":0,\"1f469-1f3fd-200d-1f4bc\":0,\"1f469-1f3fe-200d-1f4bc\":0,\"1f469-1f3ff-200d-1f4bc\":0,\"1f469-1f3fb-200d-1f527\":0,\"1f469-1f3fc-200d-1f527\":0,\"1f469-1f3fd-200d-1f527\":0,\"1f469-1f3fe-200d-1f527\":0,\"1f469-1f3ff-200d-1f527\":0,\"1f469-1f3fb-200d-1f52c\":0,\"1f469-1f3fc-200d-1f52c\":0,\"1f469-1f3fd-200d-1f52c\":0,\"1f469-1f3fe-200d-1f52c\":0,\"1f469-1f3ff-200d-1f52c\":0,\"1f469-1f3fb-200d-1f680\":0,\"1f469-1f3fc-200d-1f680\":0,\"1f469-1f3fd-200d-1f680\":0,\"1f469-1f3fe-200d-1f680\":0,\"1f469-1f3ff-200d-1f680\":0,\"1f469-1f3fb-200d-1f692\":0,\"1f469-1f3fc-200d-1f692\":0,\"1f469-1f3fd-200d-1f692\":0,\"1f469-1f3fe-200d-1f692\":0,\"1f469-1f3ff-200d-1f692\":0,\"1f469-1f3fb-200d-1f9af\":0,\"1f469-1f3fc-200d-1f9af\":0,\"1f469-1f3fd-200d-1f9af\":0,\"1f469-1f3fe-200d-1f9af\":0,\"1f469-1f3ff-200d-1f9af\":0,\"1f469-1f3fb-200d-1f9b0\":0,\"1f469-1f3fc-200d-1f9b0\":0,\"1f469-1f3fd-200d-1f9b0\":0,\"1f469-1f3fe-200d-1f9b0\":0,\"1f469-1f3ff-200d-1f9b0\":0,\"1f469-1f3fb-200d-1f9b1\":0,\"1f469-1f3fc-200d-1f9b1\":0,\"1f469-1f3fd-200d-1f9b1\":0,\"1f469-1f3fe-200d-1f9b1\":0,\"1f469-1f3ff-200d-1f9b1\":0,\"1f469-1f3fb-200d-1f9b2\":0,\"1f469-1f3fc-200d-1f9b2\":0,\"1f469-1f3fd-200d-1f9b2\":0,\"1f469-1f3fe-200d-1f9b2\":0,\"1f469-1f3ff-200d-1f9b2\":0,\"1f469-1f3fb-200d-1f9b3\":0,\"1f469-1f3fc-200d-1f9b3\":0,\"1f469-1f3fd-200d-1f9b3\":0,\"1f469-1f3fe-200d-1f9b3\":0,\"1f469-1f3ff-200d-1f9b3\":0,\"1f469-1f3fb-200d-1f9bc\":0,\"1f469-1f3fc-200d-1f9bc\":0,\"1f469-1f3fd-200d-1f9bc\":0,\"1f469-1f3fe-200d-1f9bc\":0,\"1f469-1f3ff-200d-1f9bc\":0,\"1f469-1f3fb-200d-1f9bd\":0,\"1f469-1f3fc-200d-1f9bd\":0,\"1f469-1f3fd-200d-1f9bd\":0,\"1f469-1f3fe-200d-1f9bd\":0,\"1f469-1f3ff-200d-1f9bd\":0,\"1f469-1f3fb-200d-2695\":0,\"1f469-1f3fc-200d-2695\":0,\"1f469-1f3fd-200d-2695\":0,\"1f469-1f3fe-200d-2695\":0,\"1f469-1f3ff-200d-2695\":0,\"1f469-1f3fb-200d-2696\":0,\"1f469-1f3fc-200d-2696\":0,\"1f469-1f3fd-200d-2696\":0,\"1f469-1f3fe-200d-2696\":0,\"1f469-1f3ff-200d-2696\":0,\"1f469-1f3fb-200d-2708\":0,\"1f469-1f3fc-200d-2708\":0,\"1f469-1f3fd-200d-2708\":0,\"1f469-1f3fe-200d-2708\":0,\"1f469-1f3ff-200d-2708\":0,\"1f469-1f3fb-200d-2764-200d-1f468-1f3fb\":0,\"1f469-1f3fb-200d-2764-200d-1f468-1f3fc\":0,\"1f469-1f3fb-200d-2764-200d-1f468-1f3fd\":0,\"1f469-1f3fb-200d-2764-200d-1f468-1f3fe\":0,\"1f469-1f3fb-200d-2764-200d-1f468-1f3ff\":0,\"1f469-1f3fc-200d-2764-200d-1f468-1f3fb\":0,\"1f469-1f3fc-200d-2764-200d-1f468-1f3fc\":0,\"1f469-1f3fc-200d-2764-200d-1f468-1f3fd\":0,\"1f469-1f3fc-200d-2764-200d-1f468-1f3fe\":0,\"1f469-1f3fc-200d-2764-200d-1f468-1f3ff\":0,\"1f469-1f3fd-200d-2764-200d-1f468-1f3fb\":0,\"1f469-1f3fd-200d-2764-200d-1f468-1f3fc\":0,\"1f469-1f3fd-200d-2764-200d-1f468-1f3fd\":0,\"1f469-1f3fd-200d-2764-200d-1f468-1f3fe\":0,\"1f469-1f3fd-200d-2764-200d-1f468-1f3ff\":0,\"1f469-1f3fe-200d-2764-200d-1f468-1f3fb\":0,\"1f469-1f3fe-200d-2764-200d-1f468-1f3fc\":0,\"1f469-1f3fe-200d-2764-200d-1f468-1f3fd\":0,\"1f469-1f3fe-200d-2764-200d-1f468-1f3fe\":0,\"1f469-1f3fe-200d-2764-200d-1f468-1f3ff\":0,\"1f469-1f3ff-200d-2764-200d-1f468-1f3fb\":0,\"1f469-1f3ff-200d-2764-200d-1f468-1f3fc\":0,\"1f469-1f3ff-200d-2764-200d-1f468-1f3fd\":0,\"1f469-1f3ff-200d-2764-200d-1f468-1f3fe\":0,\"1f469-1f3ff-200d-2764-200d-1f468-1f3ff\":0,\"1f469-1f3fb-200d-2764-200d-1f469-1f3fb\":0,\"1f469-1f3fb-200d-2764-200d-1f469-1f3fc\":0,\"1f469-1f3fb-200d-2764-200d-1f469-1f3fd\":0,\"1f469-1f3fb-200d-2764-200d-1f469-1f3fe\":0,\"1f469-1f3fb-200d-2764-200d-1f469-1f3ff\":0,\"1f469-1f3fc-200d-2764-200d-1f469-1f3fb\":0,\"1f469-1f3fc-200d-2764-200d-1f469-1f3fc\":0,\"1f469-1f3fc-200d-2764-200d-1f469-1f3fd\":0,\"1f469-1f3fc-200d-2764-200d-1f469-1f3fe\":0,\"1f469-1f3fc-200d-2764-200d-1f469-1f3ff\":0,\"1f469-1f3fd-200d-2764-200d-1f469-1f3fb\":0,\"1f469-1f3fd-200d-2764-200d-1f469-1f3fc\":0,\"1f469-1f3fd-200d-2764-200d-1f469-1f3fd\":0,\"1f469-1f3fd-200d-2764-200d-1f469-1f3fe\":0,\"1f469-1f3fd-200d-2764-200d-1f469-1f3ff\":0,\"1f469-1f3fe-200d-2764-200d-1f469-1f3fb\":0,\"1f469-1f3fe-200d-2764-200d-1f469-1f3fc\":0,\"1f469-1f3fe-200d-2764-200d-1f469-1f3fd\":0,\"1f469-1f3fe-200d-2764-200d-1f469-1f3fe\":0,\"1f469-1f3fe-200d-2764-200d-1f469-1f3ff\":0,\"1f469-1f3ff-200d-2764-200d-1f469-1f3fb\":0,\"1f469-1f3ff-200d-2764-200d-1f469-1f3fc\":0,\"1f469-1f3ff-200d-2764-200d-1f469-1f3fd\":0,\"1f469-1f3ff-200d-2764-200d-1f469-1f3fe\":0,\"1f469-1f3ff-200d-2764-200d-1f469-1f3ff\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fb\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fc\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fd\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fe\":0,\"1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3ff\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fb\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fc\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fd\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fe\":0,\"1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3ff\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fb\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fc\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fd\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fe\":0,\"1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3ff\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fb\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fc\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fd\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fe\":0,\"1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3ff\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fb\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fc\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fd\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fe\":0,\"1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3ff\":0,\"1f469-1f3fb\":0,\"1f469-1f3fc\":0,\"1f469-1f3fd\":0,\"1f469-1f3fe\":0,\"1f469-1f3ff\":0,\"1f46b-1f3fb\":0,\"1f46b-1f3fc\":0,\"1f46b-1f3fd\":0,\"1f46b-1f3fe\":0,\"1f46b-1f3ff\":0,\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc\":0,\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd\":0,\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe\":0,\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff\":0,\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb\":0,\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd\":0,\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe\":0,\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff\":0,\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb\":0,\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc\":0,\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe\":0,\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff\":0,\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb\":0,\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc\":0,\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd\":0,\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff\":0,\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb\":0,\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc\":0,\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd\":0,\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe\":0,\"1f46c-1f3fb\":0,\"1f46c-1f3fc\":0,\"1f46c-1f3fd\":0,\"1f46c-1f3fe\":0,\"1f46c-1f3ff\":0,\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc\":0,\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd\":0,\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe\":0,\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff\":0,\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb\":0,\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd\":0,\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe\":0,\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff\":0,\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb\":0,\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc\":0,\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe\":0,\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff\":0,\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb\":0,\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc\":0,\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd\":0,\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff\":0,\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb\":0,\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc\":0,\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd\":0,\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe\":0,\"1f46d-1f3fb\":0,\"1f46d-1f3fc\":0,\"1f46d-1f3fd\":0,\"1f46d-1f3fe\":0,\"1f46d-1f3ff\":0,\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc\":0,\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd\":0,\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe\":0,\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff\":0,\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb\":0,\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd\":0,\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe\":0,\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff\":0,\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb\":0,\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc\":0,\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe\":0,\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff\":0,\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb\":0,\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc\":0,\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd\":0,\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff\":0,\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb\":0,\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc\":0,\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd\":0,\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe\":0,\"1f46e-1f3fb-200d-2640\":0,\"1f46e-1f3fc-200d-2640\":0,\"1f46e-1f3fd-200d-2640\":0,\"1f46e-1f3fe-200d-2640\":0,\"1f46e-1f3ff-200d-2640\":0,\"1f46e-1f3fb-200d-2642\":0,\"1f46e-1f3fc-200d-2642\":0,\"1f46e-1f3fd-200d-2642\":0,\"1f46e-1f3fe-200d-2642\":0,\"1f46e-1f3ff-200d-2642\":0,\"1f46e-1f3fb\":0,\"1f46e-1f3fc\":0,\"1f46e-1f3fd\":0,\"1f46e-1f3fe\":0,\"1f46e-1f3ff\":0,\"1f470-1f3fb-200d-2640\":0,\"1f470-1f3fc-200d-2640\":0,\"1f470-1f3fd-200d-2640\":0,\"1f470-1f3fe-200d-2640\":0,\"1f470-1f3ff-200d-2640\":0,\"1f470-1f3fb-200d-2642\":0,\"1f470-1f3fc-200d-2642\":0,\"1f470-1f3fd-200d-2642\":0,\"1f470-1f3fe-200d-2642\":0,\"1f470-1f3ff-200d-2642\":0,\"1f470-1f3fb\":0,\"1f470-1f3fc\":0,\"1f470-1f3fd\":0,\"1f470-1f3fe\":0,\"1f470-1f3ff\":0,\"1f471-1f3fb-200d-2640\":0,\"1f471-1f3fc-200d-2640\":0,\"1f471-1f3fd-200d-2640\":0,\"1f471-1f3fe-200d-2640\":0,\"1f471-1f3ff-200d-2640\":0,\"1f471-1f3fb-200d-2642\":0,\"1f471-1f3fc-200d-2642\":0,\"1f471-1f3fd-200d-2642\":0,\"1f471-1f3fe-200d-2642\":0,\"1f471-1f3ff-200d-2642\":0,\"1f471-1f3fb\":0,\"1f471-1f3fc\":0,\"1f471-1f3fd\":0,\"1f471-1f3fe\":0,\"1f471-1f3ff\":0,\"1f472-1f3fb\":0,\"1f472-1f3fc\":0,\"1f472-1f3fd\":0,\"1f472-1f3fe\":0,\"1f472-1f3ff\":0,\"1f473-1f3fb-200d-2640\":0,\"1f473-1f3fc-200d-2640\":0,\"1f473-1f3fd-200d-2640\":0,\"1f473-1f3fe-200d-2640\":0,\"1f473-1f3ff-200d-2640\":0,\"1f473-1f3fb-200d-2642\":0,\"1f473-1f3fc-200d-2642\":0,\"1f473-1f3fd-200d-2642\":0,\"1f473-1f3fe-200d-2642\":0,\"1f473-1f3ff-200d-2642\":0,\"1f473-1f3fb\":0,\"1f473-1f3fc\":0,\"1f473-1f3fd\":0,\"1f473-1f3fe\":0,\"1f473-1f3ff\":0,\"1f474-1f3fb\":0,\"1f474-1f3fc\":0,\"1f474-1f3fd\":0,\"1f474-1f3fe\":0,\"1f474-1f3ff\":0,\"1f475-1f3fb\":0,\"1f475-1f3fc\":0,\"1f475-1f3fd\":0,\"1f475-1f3fe\":0,\"1f475-1f3ff\":0,\"1f476-1f3fb\":0,\"1f476-1f3fc\":0,\"1f476-1f3fd\":0,\"1f476-1f3fe\":0,\"1f476-1f3ff\":0,\"1f477-1f3fb-200d-2640\":0,\"1f477-1f3fc-200d-2640\":0,\"1f477-1f3fd-200d-2640\":0,\"1f477-1f3fe-200d-2640\":0,\"1f477-1f3ff-200d-2640\":0,\"1f477-1f3fb-200d-2642\":0,\"1f477-1f3fc-200d-2642\":0,\"1f477-1f3fd-200d-2642\":0,\"1f477-1f3fe-200d-2642\":0,\"1f477-1f3ff-200d-2642\":0,\"1f477-1f3fb\":0,\"1f477-1f3fc\":0,\"1f477-1f3fd\":0,\"1f477-1f3fe\":0,\"1f477-1f3ff\":0,\"1f478-1f3fb\":0,\"1f478-1f3fc\":0,\"1f478-1f3fd\":0,\"1f478-1f3fe\":0,\"1f478-1f3ff\":0,\"1f47c-1f3fb\":0,\"1f47c-1f3fc\":0,\"1f47c-1f3fd\":0,\"1f47c-1f3fe\":0,\"1f47c-1f3ff\":0,\"1f481-1f3fb-200d-2640\":0,\"1f481-1f3fc-200d-2640\":0,\"1f481-1f3fd-200d-2640\":0,\"1f481-1f3fe-200d-2640\":0,\"1f481-1f3ff-200d-2640\":0,\"1f481-1f3fb-200d-2642\":0,\"1f481-1f3fc-200d-2642\":0,\"1f481-1f3fd-200d-2642\":0,\"1f481-1f3fe-200d-2642\":0,\"1f481-1f3ff-200d-2642\":0,\"1f481-1f3fb\":0,\"1f481-1f3fc\":0,\"1f481-1f3fd\":0,\"1f481-1f3fe\":0,\"1f481-1f3ff\":0,\"1f482-1f3fb-200d-2640\":0,\"1f482-1f3fc-200d-2640\":0,\"1f482-1f3fd-200d-2640\":0,\"1f482-1f3fe-200d-2640\":0,\"1f482-1f3ff-200d-2640\":0,\"1f482-1f3fb-200d-2642\":0,\"1f482-1f3fc-200d-2642\":0,\"1f482-1f3fd-200d-2642\":0,\"1f482-1f3fe-200d-2642\":0,\"1f482-1f3ff-200d-2642\":0,\"1f482-1f3fb\":0,\"1f482-1f3fc\":0,\"1f482-1f3fd\":0,\"1f482-1f3fe\":0,\"1f482-1f3ff\":0,\"1f483-1f3fb\":0,\"1f483-1f3fc\":0,\"1f483-1f3fd\":0,\"1f483-1f3fe\":0,\"1f483-1f3ff\":0,\"1f485-1f3fb\":0,\"1f485-1f3fc\":0,\"1f485-1f3fd\":0,\"1f485-1f3fe\":0,\"1f485-1f3ff\":0,\"1f486-1f3fb-200d-2640\":0,\"1f486-1f3fc-200d-2640\":0,\"1f486-1f3fd-200d-2640\":0,\"1f486-1f3fe-200d-2640\":0,\"1f486-1f3ff-200d-2640\":0,\"1f486-1f3fb-200d-2642\":0,\"1f486-1f3fc-200d-2642\":0,\"1f486-1f3fd-200d-2642\":0,\"1f486-1f3fe-200d-2642\":0,\"1f486-1f3ff-200d-2642\":0,\"1f486-1f3fb\":0,\"1f486-1f3fc\":0,\"1f486-1f3fd\":0,\"1f486-1f3fe\":0,\"1f486-1f3ff\":0,\"1f487-1f3fb-200d-2640\":0,\"1f487-1f3fc-200d-2640\":0,\"1f487-1f3fd-200d-2640\":0,\"1f487-1f3fe-200d-2640\":0,\"1f487-1f3ff-200d-2640\":0,\"1f487-1f3fb-200d-2642\":0,\"1f487-1f3fc-200d-2642\":0,\"1f487-1f3fd-200d-2642\":0,\"1f487-1f3fe-200d-2642\":0,\"1f487-1f3ff-200d-2642\":0,\"1f487-1f3fb\":0,\"1f487-1f3fc\":0,\"1f487-1f3fd\":0,\"1f487-1f3fe\":0,\"1f487-1f3ff\":0,\"1f48f-1f3fb\":0,\"1f48f-1f3fc\":0,\"1f48f-1f3fd\":0,\"1f48f-1f3fe\":0,\"1f48f-1f3ff\":0,\"1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fe\":0,\"1f491-1f3fb\":0,\"1f491-1f3fc\":0,\"1f491-1f3fd\":0,\"1f491-1f3fe\":0,\"1f491-1f3ff\":0,\"1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fe\":0,\"1f4aa-1f3fb\":0,\"1f4aa-1f3fc\":0,\"1f4aa-1f3fd\":0,\"1f4aa-1f3fe\":0,\"1f4aa-1f3ff\":0,\"1f574-1f3fb\":0,\"1f574-1f3fc\":0,\"1f574-1f3fd\":0,\"1f574-1f3fe\":0,\"1f574-1f3ff\":0,\"1f575-1f3fb-200d-2640\":0,\"1f575-1f3fc-200d-2640\":0,\"1f575-1f3fd-200d-2640\":0,\"1f575-1f3fe-200d-2640\":0,\"1f575-1f3ff-200d-2640\":0,\"1f575-1f3fb-200d-2642\":0,\"1f575-1f3fc-200d-2642\":0,\"1f575-1f3fd-200d-2642\":0,\"1f575-1f3fe-200d-2642\":0,\"1f575-1f3ff-200d-2642\":0,\"1f575-1f3fb\":0,\"1f575-1f3fc\":0,\"1f575-1f3fd\":0,\"1f575-1f3fe\":0,\"1f575-1f3ff\":0,\"1f57a-1f3fb\":0,\"1f57a-1f3fc\":0,\"1f57a-1f3fd\":0,\"1f57a-1f3fe\":0,\"1f57a-1f3ff\":0,\"1f590-1f3fb\":0,\"1f590-1f3fc\":0,\"1f590-1f3fd\":0,\"1f590-1f3fe\":0,\"1f590-1f3ff\":0,\"1f595-1f3fb\":0,\"1f595-1f3fc\":0,\"1f595-1f3fd\":0,\"1f595-1f3fe\":0,\"1f595-1f3ff\":0,\"1f596-1f3fb\":0,\"1f596-1f3fc\":0,\"1f596-1f3fd\":0,\"1f596-1f3fe\":0,\"1f596-1f3ff\":0,\"1f645-1f3fb-200d-2640\":0,\"1f645-1f3fc-200d-2640\":0,\"1f645-1f3fd-200d-2640\":0,\"1f645-1f3fe-200d-2640\":0,\"1f645-1f3ff-200d-2640\":0,\"1f645-1f3fb-200d-2642\":0,\"1f645-1f3fc-200d-2642\":0,\"1f645-1f3fd-200d-2642\":0,\"1f645-1f3fe-200d-2642\":0,\"1f645-1f3ff-200d-2642\":0,\"1f645-1f3fb\":0,\"1f645-1f3fc\":0,\"1f645-1f3fd\":0,\"1f645-1f3fe\":0,\"1f645-1f3ff\":0,\"1f646-1f3fb-200d-2640\":0,\"1f646-1f3fc-200d-2640\":0,\"1f646-1f3fd-200d-2640\":0,\"1f646-1f3fe-200d-2640\":0,\"1f646-1f3ff-200d-2640\":0,\"1f646-1f3fb-200d-2642\":0,\"1f646-1f3fc-200d-2642\":0,\"1f646-1f3fd-200d-2642\":0,\"1f646-1f3fe-200d-2642\":0,\"1f646-1f3ff-200d-2642\":0,\"1f646-1f3fb\":0,\"1f646-1f3fc\":0,\"1f646-1f3fd\":0,\"1f646-1f3fe\":0,\"1f646-1f3ff\":0,\"1f647-1f3fb-200d-2640\":0,\"1f647-1f3fc-200d-2640\":0,\"1f647-1f3fd-200d-2640\":0,\"1f647-1f3fe-200d-2640\":0,\"1f647-1f3ff-200d-2640\":0,\"1f647-1f3fb-200d-2642\":0,\"1f647-1f3fc-200d-2642\":0,\"1f647-1f3fd-200d-2642\":0,\"1f647-1f3fe-200d-2642\":0,\"1f647-1f3ff-200d-2642\":0,\"1f647-1f3fb\":0,\"1f647-1f3fc\":0,\"1f647-1f3fd\":0,\"1f647-1f3fe\":0,\"1f647-1f3ff\":0,\"1f64b-1f3fb-200d-2640\":0,\"1f64b-1f3fc-200d-2640\":0,\"1f64b-1f3fd-200d-2640\":0,\"1f64b-1f3fe-200d-2640\":0,\"1f64b-1f3ff-200d-2640\":0,\"1f64b-1f3fb-200d-2642\":0,\"1f64b-1f3fc-200d-2642\":0,\"1f64b-1f3fd-200d-2642\":0,\"1f64b-1f3fe-200d-2642\":0,\"1f64b-1f3ff-200d-2642\":0,\"1f64b-1f3fb\":0,\"1f64b-1f3fc\":0,\"1f64b-1f3fd\":0,\"1f64b-1f3fe\":0,\"1f64b-1f3ff\":0,\"1f64c-1f3fb\":0,\"1f64c-1f3fc\":0,\"1f64c-1f3fd\":0,\"1f64c-1f3fe\":0,\"1f64c-1f3ff\":0,\"1f64d-1f3fb-200d-2640\":0,\"1f64d-1f3fc-200d-2640\":0,\"1f64d-1f3fd-200d-2640\":0,\"1f64d-1f3fe-200d-2640\":0,\"1f64d-1f3ff-200d-2640\":0,\"1f64d-1f3fb-200d-2642\":0,\"1f64d-1f3fc-200d-2642\":0,\"1f64d-1f3fd-200d-2642\":0,\"1f64d-1f3fe-200d-2642\":0,\"1f64d-1f3ff-200d-2642\":0,\"1f64d-1f3fb\":0,\"1f64d-1f3fc\":0,\"1f64d-1f3fd\":0,\"1f64d-1f3fe\":0,\"1f64d-1f3ff\":0,\"1f64e-1f3fb-200d-2640\":0,\"1f64e-1f3fc-200d-2640\":0,\"1f64e-1f3fd-200d-2640\":0,\"1f64e-1f3fe-200d-2640\":0,\"1f64e-1f3ff-200d-2640\":0,\"1f64e-1f3fb-200d-2642\":0,\"1f64e-1f3fc-200d-2642\":0,\"1f64e-1f3fd-200d-2642\":0,\"1f64e-1f3fe-200d-2642\":0,\"1f64e-1f3ff-200d-2642\":0,\"1f64e-1f3fb\":0,\"1f64e-1f3fc\":0,\"1f64e-1f3fd\":0,\"1f64e-1f3fe\":0,\"1f64e-1f3ff\":0,\"1f64f-1f3fb\":0,\"1f64f-1f3fc\":0,\"1f64f-1f3fd\":0,\"1f64f-1f3fe\":0,\"1f64f-1f3ff\":0,\"1f6a3-1f3fb-200d-2640\":0,\"1f6a3-1f3fc-200d-2640\":0,\"1f6a3-1f3fd-200d-2640\":0,\"1f6a3-1f3fe-200d-2640\":0,\"1f6a3-1f3ff-200d-2640\":0,\"1f6a3-1f3fb-200d-2642\":0,\"1f6a3-1f3fc-200d-2642\":0,\"1f6a3-1f3fd-200d-2642\":0,\"1f6a3-1f3fe-200d-2642\":0,\"1f6a3-1f3ff-200d-2642\":0,\"1f6a3-1f3fb\":0,\"1f6a3-1f3fc\":0,\"1f6a3-1f3fd\":0,\"1f6a3-1f3fe\":0,\"1f6a3-1f3ff\":0,\"1f6b4-1f3fb-200d-2640\":0,\"1f6b4-1f3fc-200d-2640\":0,\"1f6b4-1f3fd-200d-2640\":0,\"1f6b4-1f3fe-200d-2640\":0,\"1f6b4-1f3ff-200d-2640\":0,\"1f6b4-1f3fb-200d-2642\":0,\"1f6b4-1f3fc-200d-2642\":0,\"1f6b4-1f3fd-200d-2642\":0,\"1f6b4-1f3fe-200d-2642\":0,\"1f6b4-1f3ff-200d-2642\":0,\"1f6b4-1f3fb\":0,\"1f6b4-1f3fc\":0,\"1f6b4-1f3fd\":0,\"1f6b4-1f3fe\":0,\"1f6b4-1f3ff\":0,\"1f6b5-1f3fb-200d-2640\":0,\"1f6b5-1f3fc-200d-2640\":0,\"1f6b5-1f3fd-200d-2640\":0,\"1f6b5-1f3fe-200d-2640\":0,\"1f6b5-1f3ff-200d-2640\":0,\"1f6b5-1f3fb-200d-2642\":0,\"1f6b5-1f3fc-200d-2642\":0,\"1f6b5-1f3fd-200d-2642\":0,\"1f6b5-1f3fe-200d-2642\":0,\"1f6b5-1f3ff-200d-2642\":0,\"1f6b5-1f3fb\":0,\"1f6b5-1f3fc\":0,\"1f6b5-1f3fd\":0,\"1f6b5-1f3fe\":0,\"1f6b5-1f3ff\":0,\"1f6b6-1f3fb-200d-2640\":0,\"1f6b6-1f3fc-200d-2640\":0,\"1f6b6-1f3fd-200d-2640\":0,\"1f6b6-1f3fe-200d-2640\":0,\"1f6b6-1f3ff-200d-2640\":0,\"1f6b6-1f3fb-200d-2642\":0,\"1f6b6-1f3fc-200d-2642\":0,\"1f6b6-1f3fd-200d-2642\":0,\"1f6b6-1f3fe-200d-2642\":0,\"1f6b6-1f3ff-200d-2642\":0,\"1f6b6-1f3fb\":0,\"1f6b6-1f3fc\":0,\"1f6b6-1f3fd\":0,\"1f6b6-1f3fe\":0,\"1f6b6-1f3ff\":0,\"1f6c0-1f3fb\":0,\"1f6c0-1f3fc\":0,\"1f6c0-1f3fd\":0,\"1f6c0-1f3fe\":0,\"1f6c0-1f3ff\":0,\"1f6cc-1f3fb\":0,\"1f6cc-1f3fc\":0,\"1f6cc-1f3fd\":0,\"1f6cc-1f3fe\":0,\"1f6cc-1f3ff\":0,\"1f90c-1f3fb\":0,\"1f90c-1f3fc\":0,\"1f90c-1f3fd\":0,\"1f90c-1f3fe\":0,\"1f90c-1f3ff\":0,\"1f90f-1f3fb\":0,\"1f90f-1f3fc\":0,\"1f90f-1f3fd\":0,\"1f90f-1f3fe\":0,\"1f90f-1f3ff\":0,\"1f918-1f3fb\":0,\"1f918-1f3fc\":0,\"1f918-1f3fd\":0,\"1f918-1f3fe\":0,\"1f918-1f3ff\":0,\"1f919-1f3fb\":0,\"1f919-1f3fc\":0,\"1f919-1f3fd\":0,\"1f919-1f3fe\":0,\"1f919-1f3ff\":0,\"1f91a-1f3fb\":0,\"1f91a-1f3fc\":0,\"1f91a-1f3fd\":0,\"1f91a-1f3fe\":0,\"1f91a-1f3ff\":0,\"1f91b-1f3fb\":0,\"1f91b-1f3fc\":0,\"1f91b-1f3fd\":0,\"1f91b-1f3fe\":0,\"1f91b-1f3ff\":0,\"1f91c-1f3fb\":0,\"1f91c-1f3fc\":0,\"1f91c-1f3fd\":0,\"1f91c-1f3fe\":0,\"1f91c-1f3ff\":0,\"1f91d-1f3fb\":0,\"1f91d-1f3fc\":0,\"1f91d-1f3fd\":0,\"1f91d-1f3fe\":0,\"1f91d-1f3ff\":0,\"1f91e-1f3fb\":0,\"1f91e-1f3fc\":0,\"1f91e-1f3fd\":0,\"1f91e-1f3fe\":0,\"1f91e-1f3ff\":0,\"1f91f-1f3fb\":0,\"1f91f-1f3fc\":0,\"1f91f-1f3fd\":0,\"1f91f-1f3fe\":0,\"1f91f-1f3ff\":0,\"1f926-1f3fb-200d-2640\":0,\"1f926-1f3fc-200d-2640\":0,\"1f926-1f3fd-200d-2640\":0,\"1f926-1f3fe-200d-2640\":0,\"1f926-1f3ff-200d-2640\":0,\"1f926-1f3fb-200d-2642\":0,\"1f926-1f3fc-200d-2642\":0,\"1f926-1f3fd-200d-2642\":0,\"1f926-1f3fe-200d-2642\":0,\"1f926-1f3ff-200d-2642\":0,\"1f926-1f3fb\":0,\"1f926-1f3fc\":0,\"1f926-1f3fd\":0,\"1f926-1f3fe\":0,\"1f926-1f3ff\":0,\"1f930-1f3fb\":0,\"1f930-1f3fc\":0,\"1f930-1f3fd\":0,\"1f930-1f3fe\":0,\"1f930-1f3ff\":0,\"1f931-1f3fb\":0,\"1f931-1f3fc\":0,\"1f931-1f3fd\":0,\"1f931-1f3fe\":0,\"1f931-1f3ff\":0,\"1f932-1f3fb\":0,\"1f932-1f3fc\":0,\"1f932-1f3fd\":0,\"1f932-1f3fe\":0,\"1f932-1f3ff\":0,\"1f933-1f3fb\":0,\"1f933-1f3fc\":0,\"1f933-1f3fd\":0,\"1f933-1f3fe\":0,\"1f933-1f3ff\":0,\"1f934-1f3fb\":0,\"1f934-1f3fc\":0,\"1f934-1f3fd\":0,\"1f934-1f3fe\":0,\"1f934-1f3ff\":0,\"1f935-1f3fb-200d-2640\":0,\"1f935-1f3fc-200d-2640\":0,\"1f935-1f3fd-200d-2640\":0,\"1f935-1f3fe-200d-2640\":0,\"1f935-1f3ff-200d-2640\":0,\"1f935-1f3fb-200d-2642\":0,\"1f935-1f3fc-200d-2642\":0,\"1f935-1f3fd-200d-2642\":0,\"1f935-1f3fe-200d-2642\":0,\"1f935-1f3ff-200d-2642\":0,\"1f935-1f3fb\":0,\"1f935-1f3fc\":0,\"1f935-1f3fd\":0,\"1f935-1f3fe\":0,\"1f935-1f3ff\":0,\"1f936-1f3fb\":0,\"1f936-1f3fc\":0,\"1f936-1f3fd\":0,\"1f936-1f3fe\":0,\"1f936-1f3ff\":0,\"1f937-1f3fb-200d-2640\":0,\"1f937-1f3fc-200d-2640\":0,\"1f937-1f3fd-200d-2640\":0,\"1f937-1f3fe-200d-2640\":0,\"1f937-1f3ff-200d-2640\":0,\"1f937-1f3fb-200d-2642\":0,\"1f937-1f3fc-200d-2642\":0,\"1f937-1f3fd-200d-2642\":0,\"1f937-1f3fe-200d-2642\":0,\"1f937-1f3ff-200d-2642\":0,\"1f937-1f3fb\":0,\"1f937-1f3fc\":0,\"1f937-1f3fd\":0,\"1f937-1f3fe\":0,\"1f937-1f3ff\":0,\"1f938-1f3fb-200d-2640\":0,\"1f938-1f3fc-200d-2640\":0,\"1f938-1f3fd-200d-2640\":0,\"1f938-1f3fe-200d-2640\":0,\"1f938-1f3ff-200d-2640\":0,\"1f938-1f3fb-200d-2642\":0,\"1f938-1f3fc-200d-2642\":0,\"1f938-1f3fd-200d-2642\":0,\"1f938-1f3fe-200d-2642\":0,\"1f938-1f3ff-200d-2642\":0,\"1f938-1f3fb\":0,\"1f938-1f3fc\":0,\"1f938-1f3fd\":0,\"1f938-1f3fe\":0,\"1f938-1f3ff\":0,\"1f939-1f3fb-200d-2640\":0,\"1f939-1f3fc-200d-2640\":0,\"1f939-1f3fd-200d-2640\":0,\"1f939-1f3fe-200d-2640\":0,\"1f939-1f3ff-200d-2640\":0,\"1f939-1f3fb-200d-2642\":0,\"1f939-1f3fc-200d-2642\":0,\"1f939-1f3fd-200d-2642\":0,\"1f939-1f3fe-200d-2642\":0,\"1f939-1f3ff-200d-2642\":0,\"1f939-1f3fb\":0,\"1f939-1f3fc\":0,\"1f939-1f3fd\":0,\"1f939-1f3fe\":0,\"1f939-1f3ff\":0,\"1f93d-1f3fb-200d-2640\":0,\"1f93d-1f3fc-200d-2640\":0,\"1f93d-1f3fd-200d-2640\":0,\"1f93d-1f3fe-200d-2640\":0,\"1f93d-1f3ff-200d-2640\":0,\"1f93d-1f3fb-200d-2642\":0,\"1f93d-1f3fc-200d-2642\":0,\"1f93d-1f3fd-200d-2642\":0,\"1f93d-1f3fe-200d-2642\":0,\"1f93d-1f3ff-200d-2642\":0,\"1f93d-1f3fb\":0,\"1f93d-1f3fc\":0,\"1f93d-1f3fd\":0,\"1f93d-1f3fe\":0,\"1f93d-1f3ff\":0,\"1f93e-1f3fb-200d-2640\":0,\"1f93e-1f3fc-200d-2640\":0,\"1f93e-1f3fd-200d-2640\":0,\"1f93e-1f3fe-200d-2640\":0,\"1f93e-1f3ff-200d-2640\":0,\"1f93e-1f3fb-200d-2642\":0,\"1f93e-1f3fc-200d-2642\":0,\"1f93e-1f3fd-200d-2642\":0,\"1f93e-1f3fe-200d-2642\":0,\"1f93e-1f3ff-200d-2642\":0,\"1f93e-1f3fb\":0,\"1f93e-1f3fc\":0,\"1f93e-1f3fd\":0,\"1f93e-1f3fe\":0,\"1f93e-1f3ff\":0,\"1f977-1f3fb\":0,\"1f977-1f3fc\":0,\"1f977-1f3fd\":0,\"1f977-1f3fe\":0,\"1f977-1f3ff\":0,\"1f9b5-1f3fb\":0,\"1f9b5-1f3fc\":0,\"1f9b5-1f3fd\":0,\"1f9b5-1f3fe\":0,\"1f9b5-1f3ff\":0,\"1f9b6-1f3fb\":0,\"1f9b6-1f3fc\":0,\"1f9b6-1f3fd\":0,\"1f9b6-1f3fe\":0,\"1f9b6-1f3ff\":0,\"1f9b8-1f3fb-200d-2640\":0,\"1f9b8-1f3fc-200d-2640\":0,\"1f9b8-1f3fd-200d-2640\":0,\"1f9b8-1f3fe-200d-2640\":0,\"1f9b8-1f3ff-200d-2640\":0,\"1f9b8-1f3fb-200d-2642\":0,\"1f9b8-1f3fc-200d-2642\":0,\"1f9b8-1f3fd-200d-2642\":0,\"1f9b8-1f3fe-200d-2642\":0,\"1f9b8-1f3ff-200d-2642\":0,\"1f9b8-1f3fb\":0,\"1f9b8-1f3fc\":0,\"1f9b8-1f3fd\":0,\"1f9b8-1f3fe\":0,\"1f9b8-1f3ff\":0,\"1f9b9-1f3fb-200d-2640\":0,\"1f9b9-1f3fc-200d-2640\":0,\"1f9b9-1f3fd-200d-2640\":0,\"1f9b9-1f3fe-200d-2640\":0,\"1f9b9-1f3ff-200d-2640\":0,\"1f9b9-1f3fb-200d-2642\":0,\"1f9b9-1f3fc-200d-2642\":0,\"1f9b9-1f3fd-200d-2642\":0,\"1f9b9-1f3fe-200d-2642\":0,\"1f9b9-1f3ff-200d-2642\":0,\"1f9b9-1f3fb\":0,\"1f9b9-1f3fc\":0,\"1f9b9-1f3fd\":0,\"1f9b9-1f3fe\":0,\"1f9b9-1f3ff\":0,\"1f9bb-1f3fb\":0,\"1f9bb-1f3fc\":0,\"1f9bb-1f3fd\":0,\"1f9bb-1f3fe\":0,\"1f9bb-1f3ff\":0,\"1f9cd-1f3fb-200d-2640\":0,\"1f9cd-1f3fc-200d-2640\":0,\"1f9cd-1f3fd-200d-2640\":0,\"1f9cd-1f3fe-200d-2640\":0,\"1f9cd-1f3ff-200d-2640\":0,\"1f9cd-1f3fb-200d-2642\":0,\"1f9cd-1f3fc-200d-2642\":0,\"1f9cd-1f3fd-200d-2642\":0,\"1f9cd-1f3fe-200d-2642\":0,\"1f9cd-1f3ff-200d-2642\":0,\"1f9cd-1f3fb\":0,\"1f9cd-1f3fc\":0,\"1f9cd-1f3fd\":0,\"1f9cd-1f3fe\":0,\"1f9cd-1f3ff\":0,\"1f9ce-1f3fb-200d-2640\":0,\"1f9ce-1f3fc-200d-2640\":0,\"1f9ce-1f3fd-200d-2640\":0,\"1f9ce-1f3fe-200d-2640\":0,\"1f9ce-1f3ff-200d-2640\":0,\"1f9ce-1f3fb-200d-2642\":0,\"1f9ce-1f3fc-200d-2642\":0,\"1f9ce-1f3fd-200d-2642\":0,\"1f9ce-1f3fe-200d-2642\":0,\"1f9ce-1f3ff-200d-2642\":0,\"1f9ce-1f3fb\":0,\"1f9ce-1f3fc\":0,\"1f9ce-1f3fd\":0,\"1f9ce-1f3fe\":0,\"1f9ce-1f3ff\":0,\"1f9cf-1f3fb-200d-2640\":0,\"1f9cf-1f3fc-200d-2640\":0,\"1f9cf-1f3fd-200d-2640\":0,\"1f9cf-1f3fe-200d-2640\":0,\"1f9cf-1f3ff-200d-2640\":0,\"1f9cf-1f3fb-200d-2642\":0,\"1f9cf-1f3fc-200d-2642\":0,\"1f9cf-1f3fd-200d-2642\":0,\"1f9cf-1f3fe-200d-2642\":0,\"1f9cf-1f3ff-200d-2642\":0,\"1f9cf-1f3fb\":0,\"1f9cf-1f3fc\":0,\"1f9cf-1f3fd\":0,\"1f9cf-1f3fe\":0,\"1f9cf-1f3ff\":0,\"1f9d1-1f3fb-200d-1f33e\":0,\"1f9d1-1f3fc-200d-1f33e\":0,\"1f9d1-1f3fd-200d-1f33e\":0,\"1f9d1-1f3fe-200d-1f33e\":0,\"1f9d1-1f3ff-200d-1f33e\":0,\"1f9d1-1f3fb-200d-1f373\":0,\"1f9d1-1f3fc-200d-1f373\":0,\"1f9d1-1f3fd-200d-1f373\":0,\"1f9d1-1f3fe-200d-1f373\":0,\"1f9d1-1f3ff-200d-1f373\":0,\"1f9d1-1f3fb-200d-1f37c\":0,\"1f9d1-1f3fc-200d-1f37c\":0,\"1f9d1-1f3fd-200d-1f37c\":0,\"1f9d1-1f3fe-200d-1f37c\":0,\"1f9d1-1f3ff-200d-1f37c\":0,\"1f9d1-1f3fb-200d-1f384\":0,\"1f9d1-1f3fc-200d-1f384\":0,\"1f9d1-1f3fd-200d-1f384\":0,\"1f9d1-1f3fe-200d-1f384\":0,\"1f9d1-1f3ff-200d-1f384\":0,\"1f9d1-1f3fb-200d-1f393\":0,\"1f9d1-1f3fc-200d-1f393\":0,\"1f9d1-1f3fd-200d-1f393\":0,\"1f9d1-1f3fe-200d-1f393\":0,\"1f9d1-1f3ff-200d-1f393\":0,\"1f9d1-1f3fb-200d-1f3a4\":0,\"1f9d1-1f3fc-200d-1f3a4\":0,\"1f9d1-1f3fd-200d-1f3a4\":0,\"1f9d1-1f3fe-200d-1f3a4\":0,\"1f9d1-1f3ff-200d-1f3a4\":0,\"1f9d1-1f3fb-200d-1f3a8\":0,\"1f9d1-1f3fc-200d-1f3a8\":0,\"1f9d1-1f3fd-200d-1f3a8\":0,\"1f9d1-1f3fe-200d-1f3a8\":0,\"1f9d1-1f3ff-200d-1f3a8\":0,\"1f9d1-1f3fb-200d-1f3eb\":0,\"1f9d1-1f3fc-200d-1f3eb\":0,\"1f9d1-1f3fd-200d-1f3eb\":0,\"1f9d1-1f3fe-200d-1f3eb\":0,\"1f9d1-1f3ff-200d-1f3eb\":0,\"1f9d1-1f3fb-200d-1f3ed\":0,\"1f9d1-1f3fc-200d-1f3ed\":0,\"1f9d1-1f3fd-200d-1f3ed\":0,\"1f9d1-1f3fe-200d-1f3ed\":0,\"1f9d1-1f3ff-200d-1f3ed\":0,\"1f9d1-1f3fb-200d-1f4bb\":0,\"1f9d1-1f3fc-200d-1f4bb\":0,\"1f9d1-1f3fd-200d-1f4bb\":0,\"1f9d1-1f3fe-200d-1f4bb\":0,\"1f9d1-1f3ff-200d-1f4bb\":0,\"1f9d1-1f3fb-200d-1f4bc\":0,\"1f9d1-1f3fc-200d-1f4bc\":0,\"1f9d1-1f3fd-200d-1f4bc\":0,\"1f9d1-1f3fe-200d-1f4bc\":0,\"1f9d1-1f3ff-200d-1f4bc\":0,\"1f9d1-1f3fb-200d-1f527\":0,\"1f9d1-1f3fc-200d-1f527\":0,\"1f9d1-1f3fd-200d-1f527\":0,\"1f9d1-1f3fe-200d-1f527\":0,\"1f9d1-1f3ff-200d-1f527\":0,\"1f9d1-1f3fb-200d-1f52c\":0,\"1f9d1-1f3fc-200d-1f52c\":0,\"1f9d1-1f3fd-200d-1f52c\":0,\"1f9d1-1f3fe-200d-1f52c\":0,\"1f9d1-1f3ff-200d-1f52c\":0,\"1f9d1-1f3fb-200d-1f680\":0,\"1f9d1-1f3fc-200d-1f680\":0,\"1f9d1-1f3fd-200d-1f680\":0,\"1f9d1-1f3fe-200d-1f680\":0,\"1f9d1-1f3ff-200d-1f680\":0,\"1f9d1-1f3fb-200d-1f692\":0,\"1f9d1-1f3fc-200d-1f692\":0,\"1f9d1-1f3fd-200d-1f692\":0,\"1f9d1-1f3fe-200d-1f692\":0,\"1f9d1-1f3ff-200d-1f692\":0,\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb\":0,\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc\":0,\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd\":0,\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe\":0,\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff\":0,\"1f9d1-1f3fb-200d-1f9af\":0,\"1f9d1-1f3fc-200d-1f9af\":0,\"1f9d1-1f3fd-200d-1f9af\":0,\"1f9d1-1f3fe-200d-1f9af\":0,\"1f9d1-1f3ff-200d-1f9af\":0,\"1f9d1-1f3fb-200d-1f9b0\":0,\"1f9d1-1f3fc-200d-1f9b0\":0,\"1f9d1-1f3fd-200d-1f9b0\":0,\"1f9d1-1f3fe-200d-1f9b0\":0,\"1f9d1-1f3ff-200d-1f9b0\":0,\"1f9d1-1f3fb-200d-1f9b1\":0,\"1f9d1-1f3fc-200d-1f9b1\":0,\"1f9d1-1f3fd-200d-1f9b1\":0,\"1f9d1-1f3fe-200d-1f9b1\":0,\"1f9d1-1f3ff-200d-1f9b1\":0,\"1f9d1-1f3fb-200d-1f9b2\":0,\"1f9d1-1f3fc-200d-1f9b2\":0,\"1f9d1-1f3fd-200d-1f9b2\":0,\"1f9d1-1f3fe-200d-1f9b2\":0,\"1f9d1-1f3ff-200d-1f9b2\":0,\"1f9d1-1f3fb-200d-1f9b3\":0,\"1f9d1-1f3fc-200d-1f9b3\":0,\"1f9d1-1f3fd-200d-1f9b3\":0,\"1f9d1-1f3fe-200d-1f9b3\":0,\"1f9d1-1f3ff-200d-1f9b3\":0,\"1f9d1-1f3fb-200d-1f9bc\":0,\"1f9d1-1f3fc-200d-1f9bc\":0,\"1f9d1-1f3fd-200d-1f9bc\":0,\"1f9d1-1f3fe-200d-1f9bc\":0,\"1f9d1-1f3ff-200d-1f9bc\":0,\"1f9d1-1f3fb-200d-1f9bd\":0,\"1f9d1-1f3fc-200d-1f9bd\":0,\"1f9d1-1f3fd-200d-1f9bd\":0,\"1f9d1-1f3fe-200d-1f9bd\":0,\"1f9d1-1f3ff-200d-1f9bd\":0,\"1f9d1-1f3fb-200d-2695\":0,\"1f9d1-1f3fc-200d-2695\":0,\"1f9d1-1f3fd-200d-2695\":0,\"1f9d1-1f3fe-200d-2695\":0,\"1f9d1-1f3ff-200d-2695\":0,\"1f9d1-1f3fb-200d-2696\":0,\"1f9d1-1f3fc-200d-2696\":0,\"1f9d1-1f3fd-200d-2696\":0,\"1f9d1-1f3fe-200d-2696\":0,\"1f9d1-1f3ff-200d-2696\":0,\"1f9d1-1f3fb-200d-2708\":0,\"1f9d1-1f3fc-200d-2708\":0,\"1f9d1-1f3fd-200d-2708\":0,\"1f9d1-1f3fe-200d-2708\":0,\"1f9d1-1f3ff-200d-2708\":0,\"1f9d1-1f3fb\":0,\"1f9d1-1f3fc\":0,\"1f9d1-1f3fd\":0,\"1f9d1-1f3fe\":0,\"1f9d1-1f3ff\":0,\"1f9d2-1f3fb\":0,\"1f9d2-1f3fc\":0,\"1f9d2-1f3fd\":0,\"1f9d2-1f3fe\":0,\"1f9d2-1f3ff\":0,\"1f9d3-1f3fb\":0,\"1f9d3-1f3fc\":0,\"1f9d3-1f3fd\":0,\"1f9d3-1f3fe\":0,\"1f9d3-1f3ff\":0,\"1f9d4-1f3fb-200d-2640\":0,\"1f9d4-1f3fc-200d-2640\":0,\"1f9d4-1f3fd-200d-2640\":0,\"1f9d4-1f3fe-200d-2640\":0,\"1f9d4-1f3ff-200d-2640\":0,\"1f9d4-1f3fb-200d-2642\":0,\"1f9d4-1f3fc-200d-2642\":0,\"1f9d4-1f3fd-200d-2642\":0,\"1f9d4-1f3fe-200d-2642\":0,\"1f9d4-1f3ff-200d-2642\":0,\"1f9d4-1f3fb\":0,\"1f9d4-1f3fc\":0,\"1f9d4-1f3fd\":0,\"1f9d4-1f3fe\":0,\"1f9d4-1f3ff\":0,\"1f9d5-1f3fb\":0,\"1f9d5-1f3fc\":0,\"1f9d5-1f3fd\":0,\"1f9d5-1f3fe\":0,\"1f9d5-1f3ff\":0,\"1f9d6-1f3fb-200d-2640\":0,\"1f9d6-1f3fc-200d-2640\":0,\"1f9d6-1f3fd-200d-2640\":0,\"1f9d6-1f3fe-200d-2640\":0,\"1f9d6-1f3ff-200d-2640\":0,\"1f9d6-1f3fb-200d-2642\":0,\"1f9d6-1f3fc-200d-2642\":0,\"1f9d6-1f3fd-200d-2642\":0,\"1f9d6-1f3fe-200d-2642\":0,\"1f9d6-1f3ff-200d-2642\":0,\"1f9d6-1f3fb\":0,\"1f9d6-1f3fc\":0,\"1f9d6-1f3fd\":0,\"1f9d6-1f3fe\":0,\"1f9d6-1f3ff\":0,\"1f9d7-1f3fb-200d-2640\":0,\"1f9d7-1f3fc-200d-2640\":0,\"1f9d7-1f3fd-200d-2640\":0,\"1f9d7-1f3fe-200d-2640\":0,\"1f9d7-1f3ff-200d-2640\":0,\"1f9d7-1f3fb-200d-2642\":0,\"1f9d7-1f3fc-200d-2642\":0,\"1f9d7-1f3fd-200d-2642\":0,\"1f9d7-1f3fe-200d-2642\":0,\"1f9d7-1f3ff-200d-2642\":0,\"1f9d7-1f3fb\":0,\"1f9d7-1f3fc\":0,\"1f9d7-1f3fd\":0,\"1f9d7-1f3fe\":0,\"1f9d7-1f3ff\":0,\"1f9d8-1f3fb-200d-2640\":0,\"1f9d8-1f3fc-200d-2640\":0,\"1f9d8-1f3fd-200d-2640\":0,\"1f9d8-1f3fe-200d-2640\":0,\"1f9d8-1f3ff-200d-2640\":0,\"1f9d8-1f3fb-200d-2642\":0,\"1f9d8-1f3fc-200d-2642\":0,\"1f9d8-1f3fd-200d-2642\":0,\"1f9d8-1f3fe-200d-2642\":0,\"1f9d8-1f3ff-200d-2642\":0,\"1f9d8-1f3fb\":0,\"1f9d8-1f3fc\":0,\"1f9d8-1f3fd\":0,\"1f9d8-1f3fe\":0,\"1f9d8-1f3ff\":0,\"1f9d9-1f3fb-200d-2640\":0,\"1f9d9-1f3fc-200d-2640\":0,\"1f9d9-1f3fd-200d-2640\":0,\"1f9d9-1f3fe-200d-2640\":0,\"1f9d9-1f3ff-200d-2640\":0,\"1f9d9-1f3fb-200d-2642\":0,\"1f9d9-1f3fc-200d-2642\":0,\"1f9d9-1f3fd-200d-2642\":0,\"1f9d9-1f3fe-200d-2642\":0,\"1f9d9-1f3ff-200d-2642\":0,\"1f9d9-1f3fb\":0,\"1f9d9-1f3fc\":0,\"1f9d9-1f3fd\":0,\"1f9d9-1f3fe\":0,\"1f9d9-1f3ff\":0,\"1f9da-1f3fb-200d-2640\":0,\"1f9da-1f3fc-200d-2640\":0,\"1f9da-1f3fd-200d-2640\":0,\"1f9da-1f3fe-200d-2640\":0,\"1f9da-1f3ff-200d-2640\":0,\"1f9da-1f3fb-200d-2642\":0,\"1f9da-1f3fc-200d-2642\":0,\"1f9da-1f3fd-200d-2642\":0,\"1f9da-1f3fe-200d-2642\":0,\"1f9da-1f3ff-200d-2642\":0,\"1f9da-1f3fb\":0,\"1f9da-1f3fc\":0,\"1f9da-1f3fd\":0,\"1f9da-1f3fe\":0,\"1f9da-1f3ff\":0,\"1f9db-1f3fb-200d-2640\":0,\"1f9db-1f3fc-200d-2640\":0,\"1f9db-1f3fd-200d-2640\":0,\"1f9db-1f3fe-200d-2640\":0,\"1f9db-1f3ff-200d-2640\":0,\"1f9db-1f3fb-200d-2642\":0,\"1f9db-1f3fc-200d-2642\":0,\"1f9db-1f3fd-200d-2642\":0,\"1f9db-1f3fe-200d-2642\":0,\"1f9db-1f3ff-200d-2642\":0,\"1f9db-1f3fb\":0,\"1f9db-1f3fc\":0,\"1f9db-1f3fd\":0,\"1f9db-1f3fe\":0,\"1f9db-1f3ff\":0,\"1f9dc-1f3fb-200d-2640\":0,\"1f9dc-1f3fc-200d-2640\":0,\"1f9dc-1f3fd-200d-2640\":0,\"1f9dc-1f3fe-200d-2640\":0,\"1f9dc-1f3ff-200d-2640\":0,\"1f9dc-1f3fb-200d-2642\":0,\"1f9dc-1f3fc-200d-2642\":0,\"1f9dc-1f3fd-200d-2642\":0,\"1f9dc-1f3fe-200d-2642\":0,\"1f9dc-1f3ff-200d-2642\":0,\"1f9dc-1f3fb\":0,\"1f9dc-1f3fc\":0,\"1f9dc-1f3fd\":0,\"1f9dc-1f3fe\":0,\"1f9dc-1f3ff\":0,\"1f9dd-1f3fb-200d-2640\":0,\"1f9dd-1f3fc-200d-2640\":0,\"1f9dd-1f3fd-200d-2640\":0,\"1f9dd-1f3fe-200d-2640\":0,\"1f9dd-1f3ff-200d-2640\":0,\"1f9dd-1f3fb-200d-2642\":0,\"1f9dd-1f3fc-200d-2642\":0,\"1f9dd-1f3fd-200d-2642\":0,\"1f9dd-1f3fe-200d-2642\":0,\"1f9dd-1f3ff-200d-2642\":0,\"1f9dd-1f3fb\":0,\"1f9dd-1f3fc\":0,\"1f9dd-1f3fd\":0,\"1f9dd-1f3fe\":0,\"1f9dd-1f3ff\":0,\"261d-1f3fb\":0,\"261d-1f3fc\":0,\"261d-1f3fd\":0,\"261d-1f3fe\":0,\"261d-1f3ff\":0,\"26f9-1f3fb-200d-2640\":0,\"26f9-1f3fc-200d-2640\":0,\"26f9-1f3fd-200d-2640\":0,\"26f9-1f3fe-200d-2640\":0,\"26f9-1f3ff-200d-2640\":0,\"26f9-1f3fb-200d-2642\":0,\"26f9-1f3fc-200d-2642\":0,\"26f9-1f3fd-200d-2642\":0,\"26f9-1f3fe-200d-2642\":0,\"26f9-1f3ff-200d-2642\":0,\"26f9-1f3fb\":0,\"26f9-1f3fc\":0,\"26f9-1f3fd\":0,\"26f9-1f3fe\":0,\"26f9-1f3ff\":0,\"270a-1f3fb\":0,\"270a-1f3fc\":0,\"270a-1f3fd\":0,\"270a-1f3fe\":0,\"270a-1f3ff\":0,\"270b-1f3fb\":0,\"270b-1f3fc\":0,\"270b-1f3fd\":0,\"270b-1f3fe\":0,\"270b-1f3ff\":0,\"270c-1f3fb\":0,\"270c-1f3fc\":0,\"270c-1f3fd\":0,\"270c-1f3fe\":0,\"270c-1f3ff\":0,\"270d-1f3fb\":0,\"270d-1f3fc\":0,\"270d-1f3fd\":0,\"270d-1f3fe\":0,\"270d-1f3ff\":0}};\n\nconst Emoji: {[emoji: string]: number} = EmojiVersions[''];\nfor(const version in EmojiVersions) {\n  if(version) {\n    Object.assign(Emoji, EmojiVersions[version as EMOJI_VERSION]);\n  }\n}\n\nexport default Emoji;\n\n/* Emoji[\"00a9-fe0f\"] = 6362;\nEmoji[\"00ae-fe0f\"] = 6363;\nEmoji[\"2122-fe0f\"] = 6364; */\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ctx from './ctx';\r\n\r\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\r\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\r\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\r\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n// https://stackoverflow.com/a/58065241\r\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\r\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\r\n  !(ctx as any).MSStream;\r\n\r\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\r\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n\r\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\r\n\r\nexport const IS_MOBILE = /* screen.width && screen.width < 480 ||  */navigator.maxTouchPoints > 0 && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LatinizeMap from \"../config/latinizeMap\";\n\nexport const badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\nconst trimRe = /^\\s+|\\s$/g;\n\nconst C2L: {[k: string]: string} = {\n  й: 'q',\n  ц: 'w',\n  у: 'e',\n  к: 'r',\n  е: 't',\n  н: 'y',\n  г: 'u',\n  ш: 'i',\n  щ: 'o',\n  з: 'p',\n  х: '[',\n  ъ: ']',\n  ф: 'a',\n  ы: 's',\n  в: 'd',\n  а: 'f',\n  п: 'g',\n  р: 'h',\n  о: 'j',\n  л: 'k',\n  д: 'l',\n  ж: ';',\n  э: '\\'',\n  я: 'z',\n  ч: 'x',\n  с: 'c',\n  м: 'v',\n  и: 'b',\n  т: 'n',\n  ь: 'm',\n  б: ',',\n  ю: '.',\n  '.': '/'\n};\n\nexport function clearBadCharsAndTrim(text: string) {\n  return text.replace(badCharsRe, '').replace(trimRe, '');\n}\n\nexport function fixCyrillic(text: string) {\n  return text.toLowerCase().replace(/[\\wа-я]/g, (ch) => {\n    const latinizeCh = C2L[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport function latinizeString(text: string) {\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\n    const latinizeCh = LatinizeMap[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport default function cleanSearchText(text: string, latinize = true) {\n  return processSearchText(text, {\n    clearBadChars: true,\n    latinize,\n    ignoreCase: true\n  });\n}\n\nexport type ProcessSearchTextOptions = Partial<{\n  clearBadChars: boolean,\n  latinize: boolean,\n  ignoreCase: boolean,\n  includeTag: boolean\n}>;\n\nexport function processSearchText(text: string, options: ProcessSearchTextOptions = {}) {\n  const hasTag = options.includeTag && text.charAt(0) === '%';\n  const originalText = text;\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\n  if(options.latinize) text = latinizeString(text);\n  if(options.ignoreCase) text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n  if(options.latinize) text += '\\x01' + fixCyrillic(originalText);\n  return text;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { InputFileLocation, InputStickerSet, InputWebFileLocation } from \"../layer\";\r\nimport type { DownloadOptions } from \"../lib/mtproto/apiFileManager\";\r\n\r\nconst FILENAME_JOINER = '_';\r\n\r\nexport function getFileNameByLocation(location: InputFileLocation | InputWebFileLocation, options?: Partial<{\r\n  fileName: string\r\n}>) {\r\n  const fileName = '';//(options?.fileName || '').split('.');\r\n  const ext = fileName[fileName.length - 1] || '';\r\n\r\n  let str: string;\r\n  switch(location._) {\r\n    case 'inputPhotoFileLocation': {\r\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputDocumentFileLocation': {\r\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputPeerPhotoFileLocation':\r\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\r\n      break;\r\n    \r\n    case 'inputStickerSetThumb': {\r\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id || \r\n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name || \r\n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon || \r\n        location.stickerset._;\r\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    case 'inputFileLocation': {\r\n      str = location.volume_id + '_' + location.local_id;\r\n      break;\r\n    }\r\n\r\n    case 'inputWebFileLocation': {\r\n      str = ['webFile', location.url].join(FILENAME_JOINER);\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      console.error('Unrecognized location:', location);\r\n      str = '';\r\n      break;\r\n    }\r\n  }\r\n\r\n  return str + (ext ? '.' + ext : ext);\r\n}\r\n\r\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download';\r\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\r\n  //console.log('getFileURL', location);\r\n  //const perf = performance.now();\r\n  const encoded = encodeURIComponent(JSON.stringify(options));\r\n  //console.log('getFileURL encode:', performance.now() - perf, encoded);\r\n\r\n  return '/' + type + '/' + encoded;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { Database } from '../config/databases';\r\nimport Modes from '../config/modes';\r\nimport safeAssign from '../helpers/object/safeAssign';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/createIndex\r\n */\r\nexport type IDBIndex = {\r\n  indexName: string,\r\n  keyPath: string,\r\n  objectParameters: IDBIndexParameters\r\n};\r\n\r\nexport type IDBStore = {\r\n  name: string, \r\n  indexes?: IDBIndex[]\r\n};\r\n\r\nexport type IDBOptions = {\r\n  name?: string,\r\n  storeName: string,\r\n  stores?: IDBStore[],\r\n  version?: number\r\n};\r\n\r\nconst DEBUG = false;\r\n\r\nexport class IDB {\r\n  private static INSTANCES: IDB[] = [];\r\n  private openDbPromise: Promise<IDBDatabase>;\r\n  private db: IDBDatabase;\r\n  private storageIsAvailable: boolean;\r\n  private log: ReturnType<typeof logger>;\r\n  private name: string;\r\n  private version: number;\r\n  private stores: IDBStore[];\r\n\r\n  constructor(db: Database<any>) {\r\n    safeAssign(this, db);\r\n\r\n    if(Modes.test) {\r\n      this.name += '_test';\r\n    }\r\n\r\n    this.storageIsAvailable = true;\r\n    this.log = logger(['IDB', db.name].join('-'));\r\n    this.log('constructor');\r\n\r\n    this.openDatabase(true);\r\n\r\n    IDB.INSTANCES.push(this);\r\n  }\r\n\r\n  public isAvailable() {\r\n    return this.storageIsAvailable;\r\n  }\r\n\r\n  public openDatabase(createNew = false): Promise<IDBDatabase> {\r\n    if(this.openDbPromise && !createNew) {\r\n      return this.openDbPromise;\r\n    }\r\n\r\n    const createIndexes = (os: IDBObjectStore, store: IDBStore) => {\r\n      const indexNames = Array.from(os.indexNames);\r\n      for(const indexName of indexNames) {\r\n        os.deleteIndex(indexName);\r\n      }\r\n\r\n      if(!store.indexes?.length) {\r\n        return;\r\n      }\r\n\r\n      for(const index of store.indexes) {\r\n        if(os.indexNames.contains(index.indexName)) {\r\n          continue;\r\n        }\r\n\r\n        os.createIndex(index.indexName, index.keyPath, index.objectParameters);\r\n      }\r\n    };\r\n\r\n    const createObjectStore = (db: IDBDatabase, store: IDBStore) => {\r\n      const os = db.createObjectStore(store.name);\r\n      createIndexes(os, store);\r\n    };\r\n\r\n    try {\r\n      var request = indexedDB.open(this.name, this.version);\r\n\r\n      if(!request) {\r\n        return Promise.reject();\r\n      }\r\n    } catch(error) {\r\n      this.log.error('error opening db', (error as Error).message);\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    let finished = false;\r\n    setTimeout(() => {\r\n      if(!finished) {\r\n        request.onerror({type: 'IDB_CREATE_TIMEOUT'} as Event);\r\n      }\r\n    }, 3000);\r\n\r\n    return this.openDbPromise = new Promise<IDBDatabase>((resolve, reject) => {\r\n      request.onsuccess = (event) => {\r\n        finished = true;\r\n        const db = request.result;\r\n        let calledNew = false;\r\n\r\n        this.log('Opened');\r\n  \r\n        db.onerror = (error) => {\r\n          this.storageIsAvailable = false;\r\n          this.log.error('Error creating/accessing IndexedDB database', error);\r\n          reject(error);\r\n        };\r\n\r\n        db.onclose = (e) => {\r\n          this.log.error('closed:', e);\r\n          !calledNew && this.openDatabase();\r\n        };\r\n\r\n        db.onabort = (e) => {\r\n          this.log.error('abort:', e);\r\n          const transaction = e.target as IDBTransaction;\r\n          \r\n          this.openDatabase(calledNew = true);\r\n\r\n          if(transaction.onerror) {\r\n            transaction.onerror(e);\r\n          }\r\n\r\n          db.close();\r\n        };\r\n\r\n        db.onversionchange = (e) => {\r\n          this.log.error('onversionchange, lol?');\r\n        };\r\n\r\n        resolve(this.db = db);\r\n      };\r\n  \r\n      request.onerror = (event) => {\r\n        finished = true;\r\n        this.storageIsAvailable = false;\r\n        this.log.error('Error creating/accessing IndexedDB database', event);\r\n        reject(event);\r\n      };\r\n  \r\n      request.onupgradeneeded = (event) => {\r\n        finished = true;\r\n        this.log.warn('performing idb upgrade from', event.oldVersion, 'to', event.newVersion);\r\n\r\n        const target = event.target as IDBOpenDBRequest;\r\n        const db = target.result;\r\n        this.stores.forEach((store) => {\r\n          /* if(db.objectStoreNames.contains(store.name)) {\r\n            //if(event.oldVersion === 1) {\r\n              db.deleteObjectStore(store.name);\r\n            //}\r\n          } */\r\n    \r\n          if(!db.objectStoreNames.contains(store.name)) {\r\n            createObjectStore(db, store);\r\n          } else {\r\n            const txn = target.transaction;\r\n            const os = txn.objectStore(store.name);\r\n            createIndexes(os, store);\r\n          }\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  public static create<T extends Database<any>>(db: T) {\r\n    return this.INSTANCES.find((instance) => instance.name === db.name) ?? new IDB(db);\r\n  }\r\n\r\n  public static closeDatabases(preserve?: IDB) {\r\n    this.INSTANCES.forEach((storage) => {\r\n      if(preserve && preserve === storage) {\r\n        return;\r\n      }\r\n\r\n      const db = storage.db;\r\n      if(db) {\r\n        db.onclose = () => {};\r\n        db.close();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default class IDBStorage<T extends Database<any>, StoreName extends string = T['stores'][0]['name']> {\r\n  private log: ReturnType<typeof logger>;\r\n  private storeName: T['stores'][0]['name'];\r\n  private idb: IDB;\r\n\r\n  constructor(db: T, storeName: typeof db['stores'][0]['name']) {\r\n    this.storeName = storeName;\r\n    this.log = logger(['IDB', db.name, storeName].join('-'));\r\n    this.idb = IDB.create(db);\r\n  }\r\n\r\n  /**\r\n   * ! WARNING ! function requires at least one opened connection\r\n   */\r\n  /* public static clearObjectStores() {\r\n    const storage = this.STORAGES[0];\r\n    this.closeDatabases(storage);\r\n\r\n    const names = Array.from(storage.db.objectStoreNames);\r\n    const promises = names.map((name) => storage.clear(name));\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  /* public static deleteDatabase() {\r\n    this.closeDatabases();\r\n\r\n    const storages = this.STORAGES;\r\n    const dbNames = Array.from(new Set(storages.map((storage) => storage.name)));\r\n    const promises = dbNames.map((dbName) => {\r\n      return new Promise<void>((resolve, reject) => {\r\n        const deleteRequest = indexedDB.deleteDatabase(dbName);\r\n  \r\n        deleteRequest.onerror = () => {\r\n          reject();\r\n        };\r\n  \r\n        deleteRequest.onsuccess = () => {\r\n          resolve();\r\n        };\r\n      });\r\n    });\r\n\r\n    return Promise.all(promises);\r\n  } */\r\n\r\n  public delete(entryName: string | string[], storeName?: StoreName): Promise<void> {\r\n    //return Promise.resolve();\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n    }\r\n\r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      return (entryName as string[]).map((entryName) => objectStore.delete(entryName));\r\n    }, DEBUG ? 'delete: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  public clear(storeName?: StoreName): Promise<void> {\r\n    return this.getObjectStore('readwrite', (objectStore) => objectStore.clear(), DEBUG ? 'clear' : '', storeName);\r\n  }\r\n\r\n  public save(entryName: string | string[], value: any | any[], storeName?: StoreName) {\r\n    // const handleError = (error: Error) => {\r\n    //   this.log.error('save: transaction error:', entryName, value, db, error, error && error.name);\r\n    //   if((!error || error.name === 'InvalidStateError')/*  && false */) {\r\n    //     setTimeout(() => {\r\n    //       this.save(entryName, value);\r\n    //     }, 2e3);\r\n    //   } else {\r\n    //     //console.error('IndexedDB saveFile transaction error:', error, error && error.name);\r\n    //   }\r\n    // };\r\n\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n      value = [].concat(value);\r\n    }\r\n    \r\n    return this.getObjectStore('readwrite', (objectStore) => {\r\n      return (entryName as string[]).map((entryName, idx) => objectStore.put(value[idx], entryName));\r\n    }, DEBUG ? 'save: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  // public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n  //   //return Promise.resolve(blobConstruct([blob]));\r\n  //   if(!(blob instanceof Blob)) {\r\n  //     blob = blobConstruct(blob);\r\n  //   }\r\n\r\n  //   return this.save(fileName, blob);\r\n  // }\r\n\r\n  /* public saveFileBase64(db: IDBDatabase, fileName: string, blob: Blob | any): Promise<Blob> {\r\n    if(this.getBlobSize(blob) > 10 * 1024 * 1024) {\r\n      return Promise.reject();\r\n    }\r\n\r\n    if(!(blob instanceof Blob)) {\r\n      var safeMimeType = blobSafeMimeType(blob.type || 'image/jpeg');\r\n      var address = 'data:' + safeMimeType + ';base64,' + bytesToBase64(blob);\r\n      return this.storagePutB64String(db, fileName, address).then(() => {\r\n        return blob;\r\n      });\r\n    }\r\n\r\n    try {\r\n      var reader = new FileReader();\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    let promise = new Promise<Blob>((resolve, reject) => {\r\n      reader.onloadend = () => {\r\n        this.storagePutB64String(db, fileName, reader.result as string).then(() => {\r\n          resolve(blob);\r\n        }, reject);\r\n      }\r\n  \r\n      reader.onerror = reject;\r\n    });\r\n    \r\n\r\n    try {\r\n      reader.readAsDataURL(blob);\r\n    } catch (e) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject();\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public storagePutB64String(db: IDBDatabase, fileName: string, b64string: string) {\r\n    try {\r\n      var objectStore = db.transaction([this.storeName], 'readwrite')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.put(b64string, fileName);\r\n    } catch(error) {\r\n      this.storageIsAvailable = false;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      request.onsuccess = function(event) {\r\n        resolve();\r\n      };\r\n  \r\n      request.onerror = reject;\r\n    });\r\n  }\r\n\r\n  public getBlobSize(blob: any) {\r\n    return blob.size || blob.byteLength || blob.length;\r\n  } */\r\n\r\n  public get<T>(entryName: string[], storeName?: StoreName): Promise<T[]>;\r\n  public get<T>(entryName: string, storeName?: StoreName): Promise<T>;\r\n  public get<T>(entryName: string | string[], storeName?: StoreName): Promise<T> | Promise<T[]> {\r\n    //return Promise.reject();\r\n\r\n    if(!Array.isArray(entryName)) {\r\n      entryName = [].concat(entryName);\r\n    }\r\n\r\n    if(!entryName.length) {\r\n      return Promise.resolve([]) as any;\r\n    }\r\n\r\n    return this.getObjectStore<T>('readonly', (objectStore) => {\r\n      return (entryName as string[]).map((entryName) => objectStore.get(entryName));\r\n    }, DEBUG ? 'get: ' + entryName.join(', ') : '', storeName);\r\n  }\r\n\r\n  private getObjectStore<T>(\r\n    mode: IDBTransactionMode, \r\n    callback: (objectStore: IDBObjectStore) => IDBRequest | IDBRequest[], \r\n    log?: string, \r\n    storeName = this.storeName\r\n  ) {\r\n    let perf: number;\r\n\r\n    if(log) {\r\n      perf = performance.now();\r\n      this.log(log + ': start');\r\n    }\r\n\r\n    return this.idb.openDatabase().then((db) => {\r\n      return new Promise<T>((resolve, reject) => {\r\n        /* if(mode === 'readwrite') {\r\n          return;\r\n        } */\r\n\r\n        const transaction = db.transaction([storeName], mode);\r\n\r\n        const onError = () => {\r\n          clearTimeout(timeout);\r\n          reject(transaction.error);\r\n        };\r\n\r\n        // let resolved = false;\r\n        const onComplete = (/* what: string */) => {\r\n          clearTimeout(timeout);\r\n\r\n          if(log) {\r\n            this.log(log + ': end', performance.now() - perf/* , what */);\r\n          }\r\n\r\n          // if(resolved) {\r\n          //   return;\r\n          // }\r\n\r\n          // resolved = true;\r\n          const results = requests.map((r) => r.result);\r\n          resolve(isArray ? results : results[0]);\r\n        };\r\n\r\n        transaction.onerror = onError;\r\n\r\n        // * have to wait while clearing or setting something\r\n        const waitForTransactionComplete = mode === 'readwrite';\r\n        if(waitForTransactionComplete) {\r\n          transaction.oncomplete = () => onComplete(/* 'transaction' */);\r\n        }\r\n  \r\n        const timeout = setTimeout(() => {\r\n          this.log.error('transaction not finished', transaction, log);\r\n        }, 10000);\r\n  \r\n        /* transaction.addEventListener('abort', (e) => {\r\n          //handleError();\r\n          this.log.error('IndexedDB: transaction abort!', transaction.error);\r\n        }); */\r\n  \r\n        const callbackResult = callback(transaction.objectStore(storeName));\r\n\r\n        const isArray = Array.isArray(callbackResult);\r\n        const requests: IDBRequest[] = isArray ? callbackResult : [].concat(callbackResult) as any;\r\n\r\n        if(waitForTransactionComplete) {\r\n          return;\r\n        }\r\n\r\n        const length = requests.length;\r\n        let left = length;\r\n\r\n        const onRequestFinished = () => {\r\n          if(transaction.error) {\r\n            return;\r\n          }\r\n\r\n          if(!--left) {\r\n            onComplete(/* 'requests' */);\r\n          }\r\n        };\r\n\r\n        for(let i = 0; i < length; ++i) {\r\n          const request = requests[i];\r\n          request.onerror = onError;\r\n          request.onsuccess = onRequestFinished;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public getAll<T>(storeName?: StoreName): Promise<T[]> {\r\n    return this.getObjectStore<T[]>('readonly', (objectStore) => objectStore.getAll(), DEBUG ? 'getAll' : '', storeName);\r\n  }\r\n\r\n  /* public getAllKeys(): Promise<Array<string>> {\r\n    console.time('getAllEntries');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.getAllKeys();\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var result = event.target.result;\r\n          resolve(result);\r\n          console.timeEnd('getAllEntries');\r\n        }\r\n  \r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public isFileExists(fileName: string): Promise<boolean> {\r\n    console.time('isFileExists');\r\n    return this.openDatabase().then((db) => {\r\n      var objectStore = db.transaction([this.storeName], 'readonly')\r\n        .objectStore(this.storeName);\r\n      var request = objectStore.openCursor(fileName);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        request.onsuccess = function(event) {\r\n          // @ts-ignore\r\n          var cursor = event.target.result;\r\n          resolve(!!cursor);\r\n          console.timeEnd('isFileExists');\r\n        }\r\n  \r\n        request.onerror = reject;\r\n      });\r\n    });\r\n  } */\r\n\r\n  /* public getFileWriter(fileName: string, mimeType: string) {\r\n    var fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  } */\r\n}\r\n","import type ENVIRONMENT from \".\";\n\nlet environment: typeof ENVIRONMENT;\nexport function getEnvironment() {\n  return environment;\n}\n\nexport function setEnvironment(env: typeof environment) {\n  return environment = env;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, PollResults, Poll, WebPage, GroupCall, GroupCallParticipant, ReactionCount, MessagePeerReaction, PhoneCall } from \"../layer\";\nimport type { AppMessagesManager, Dialog, MessagesStorageKey, MyMessage } from \"./appManagers/appMessagesManager\";\nimport type { MyDialogFilter } from \"./storages/filters\";\nimport type { Folder } from \"./storages/dialogs\";\nimport type { UserTyping } from \"./appManagers/appProfileManager\";\nimport type { MyDraftMessage } from \"./appManagers/appDraftsManager\";\nimport type { ConnectionStatusChange } from \"./mtproto/connectionStatus\";\nimport type { GroupCallId } from \"./appManagers/appGroupCallsManager\";\nimport type { AppManagers } from \"./appManagers/managers\";\nimport type { State } from \"../config/state\";\nimport type { Progress } from \"./appManagers/appDownloadManager\";\nimport type { CallId } from \"./appManagers/appCallsManager\";\nimport { NULL_PEER_ID, UserAuth } from \"./mtproto/mtproto_config\";\nimport EventListenerBase from \"../helpers/eventListenerBase\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport MTProtoMessagePort from \"./mtproto/mtprotoMessagePort\";\nimport { IS_WORKER } from \"../helpers/context\";\n\nexport type BroadcastEvents = {\n  'chat_full_update': ChatId,\n  'chat_update': ChatId,\n\n  'channel_update': ChatId,\n  \n  'user_update': UserId,\n  'user_auth': UserAuth,\n  'user_full_update': UserId,\n\n  'peer_pinned_messages': {peerId: PeerId, mids?: number[], pinned?: boolean, unpinAll?: true},\n  'peer_pinned_hidden': {peerId: PeerId, maxId: number},\n  'peer_typings': {peerId: PeerId, typings: UserTyping[]},\n  'peer_block': {peerId: PeerId, blocked: boolean},\n  'peer_title_edit': PeerId,\n  'peer_bio_edit': PeerId,\n  'peer_deleted': PeerId, // left chat, deleted user dialog, left channel\n  'peer_full_update': PeerId,\n\n  'filter_delete': MyDialogFilter,\n  'filter_update': MyDialogFilter,\n  'filter_new': MyDialogFilter,\n  'filter_order': number[],\n\n  'folder_unread': Omit<Folder, 'dialogs' | 'dispatchUnreadTimeout'>,\n  \n  'dialog_draft': {peerId: PeerId, dialog: Dialog, drop: boolean, draft: MyDraftMessage | undefined},\n  'dialog_unread': {peerId: PeerId, dialog: Dialog},\n  'dialog_flush': {peerId: PeerId, dialog: Dialog},\n  'dialog_drop': {peerId: PeerId, dialog?: Dialog},\n  'dialog_migrate': {migrateFrom: PeerId, migrateTo: PeerId},\n  //'dialog_top': Dialog,\n  'dialog_notify_settings': Dialog,\n  // 'dialog_order': {dialog: Dialog, pos: number},\n  'dialogs_multiupdate': {[peerId: PeerId]: Dialog},\n  \n  'history_append': {storageKey: MessagesStorageKey, message: Message.message},\n  'history_update': {storageKey: MessagesStorageKey, message: MyMessage, sequential?: boolean},\n  'history_reply_markup': {peerId: PeerId},\n  'history_multiappend': MyMessage,\n  'history_delete': {peerId: PeerId, msgs: Set<number>},\n  'history_forbidden': PeerId,\n  'history_reload': PeerId,\n  //'history_request': void,\n  \n  'message_edit': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number, message: MyMessage},\n  'message_sent': {storageKey: MessagesStorageKey, tempId: number, tempMessage: any, mid: number, message: MyMessage},\n  'messages_views': {peerId: PeerId, mid: number, views: number}[],\n  'messages_reactions': {message: Message.message, changedResults: ReactionCount[]}[],\n  'messages_pending': void,\n  'messages_read': void,\n  'messages_downloaded': {peerId: PeerId, mids: number[]},\n  'messages_media_read': {peerId: PeerId, mids: number[]},\n\n  'replies_updated': Message.message,\n\n  'scheduled_new': Message.message,\n  'scheduled_delete': {peerId: PeerId, mids: number[]},\n\n  'album_edit': {peerId: PeerId, groupId: string, deletedMids: number[], messages: Message.message[]},\n\n  'stickers_installed': StickerSet.stickerSet,\n  'stickers_deleted': StickerSet.stickerSet,\n\n  'state_cleared': void,\n  'state_synchronized': ChatId | void,\n  'state_synchronizing': ChatId | void,\n  \n  'contacts_update': UserId,\n  'avatar_update': PeerId,\n  'poll_update': {poll: Poll, results: PollResults},\n  'invalidate_participants': ChatId,\n  //'channel_settings': {channelId: number},\n  'webpage_updated': {id: WebPage.webPage['id'], msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[]},\n\n  'connection_status_change': ConnectionStatusChange,\n  'settings_updated': {key: string, value: any, settings: State['settings']},\n  'draft_updated': {peerId: PeerId, threadId: number, draft: MyDraftMessage | undefined, force?: boolean},\n  \n  'background_change': void,\n  \n  'privacy_update': Update.updatePrivacy,\n  \n  'notify_settings': Update.updateNotifySettings,\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\n\n  'notification_reset': string,\n  'notification_cancel': string,\n  \n  'language_change': string,\n  \n  'theme_change': void,\n\n  'media_play': void,\n  \n  'emoji_recent': string,\n  \n  'download_progress': Progress,\n  'document_downloading': DocId,\n  'document_downloaded': DocId,\n\n  'choosing_sticker': boolean\n\n  'group_call_update': GroupCall,\n  'group_call_participant': {groupCallId: GroupCallId, participant: GroupCallParticipant},\n  // 'group_call_video_track_added': {instance: GroupCallInstance}\n\n  'call_update': PhoneCall,\n  'call_signaling': {callId: CallId, data: Uint8Array},\n\n  'quick_reaction': string,\n\n  'service_notification': Update.updateServiceNotification,\n\n  'logging_out': void\n};\n\nexport type BroadcastEventsListeners = {\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\n};\n\nexport class RootScope extends EventListenerBase<BroadcastEventsListeners> {\n  public myId: PeerId = NULL_PEER_ID;\n  private connectionStatus: {[name: string]: ConnectionStatusChange} = {};\n  public settings: State['settings'];\n  public managers: AppManagers;\n  public premium: boolean;\n\n  constructor() {\n    super();\n\n    this.premium = false;\n\n    this.addEventListener('user_auth', ({id}) => {\n      this.myId = id.toPeerId();\n    });\n\n    this.addEventListener('connection_status_change', (status) => {\n      this.connectionStatus[status.name] = status;\n    });\n\n    this.dispatchEvent = (e, ...args) => {\n      super.dispatchEvent(e, ...args);\n      MTProtoMessagePort.getInstance().invokeVoid('event', {name: e as string, args});\n    };\n\n    if(!IS_WORKER) {\n      this.addEventListener('settings_updated', ({settings}) => {\n        this.settings = settings;\n      });\n    }\n  }\n\n  public getConnectionStatus() {\n    return this.connectionStatus;\n  }\n  \n  public dispatchEventSingle(...args: any[]) {\n    // @ts-ignore\n    super.dispatchEvent(...args);\n  }\n}\n\nconst rootScope = new RootScope();\nMOUNT_CLASS_TO.rootScope = rootScope;\nexport default rootScope;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { State } from '../../config/state';\nimport rootScope from '../rootScope';\nimport stateStorage from '../stateStorage';\nimport setDeepProperty from '../../helpers/object/setDeepProperty';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\nexport class AppStateManager {\n  private state: State = {} as any;\n  private storage = stateStorage;\n\n  // ! for mtproto worker use only\n  public newVersion: string;\n  public oldVersion: string;\n  public userId: UserId;\n\n  public getState() {\n    return Promise.resolve(this.state);\n  }\n\n  public setByKey(key: string, value: any) {\n    setDeepProperty(this.state, key, value);\n    \n    const first = key.split('.')[0] as keyof State;\n    if(first === 'settings') {\n      rootScope.dispatchEvent('settings_updated', {key, value, settings: this.state.settings});\n    }\n    \n    this.pushToState(first, this.state[first]);\n  }\n\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true, onlyLocal?: boolean) {\n    if(direct) {\n      this.state[key] = value;\n    }\n\n    this.setKeyValueToStorage(key, value, onlyLocal);\n  }\n\n  public setKeyValueToStorage<T extends keyof State>(key: T, value: State[T] = this.state[key], onlyLocal?: boolean) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {name: 'state', key, value});\n    \n    this.storage.set({\n      [key]: value\n    }, onlyLocal);\n  }\n\n  /* public resetState() {\n    for(let i in this.state) {\n      // @ts-ignore\n      this.state[i] = false;\n    }\n    sessionStorage.set(this.state).then(() => {\n      location.reload();\n    });\n  } */\n}\n\nconst appStateManager = new AppStateManager();\nexport default appStateManager;\n","import getDeepProperty from \"./getDeepProperty\";\n\nexport default function setDeepProperty(object: any, key: string, value: any) {\n  const splitted = key.split('.');\n  getDeepProperty(object, splitted.slice(0, -1).join('.'))[splitted.pop()] = value;\n}\n","export default function getDeepProperty(object: any, key: string) {\n  const splitted = key.split('.');\n  let o: any = object;\n  splitted.forEach((key) => {\n    if(!key) {\n      return;\n    }\n    \n    // @ts-ignore\n    o = o[key];\n  });\n  \n  return o;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\r\nimport deferredPromise, { CancellablePromise } from \"../../helpers/cancellablePromise\";\r\nimport noop from \"../../helpers/noop\";\r\nimport { DcId } from \"../../types\";\r\n\r\nexport class NetworkStats {\r\n  public sent: number;\r\n  public received: number;\r\n  public awaitingChunks: Map<DcId, {length: number, deferred: CancellablePromise<void>}[]>;\r\n\r\n  constructor() {\r\n    this.sent = this.received = 0;\r\n    this.awaitingChunks = new Map();\r\n  }\r\n\r\n  public addSent(dcId: DcId, length: number) {\r\n    this.sent += length;\r\n  }\r\n\r\n  public addReceived(dcId: DcId, length: number) {\r\n    this.received += length;\r\n\r\n    const awaitingChunks = this.awaitingChunks.get(dcId);\r\n    const awaitingLength = awaitingChunks?.length;\r\n    if(awaitingLength) {\r\n      for(let i = 0; i < awaitingLength; ++i) {\r\n        const awaiting = awaitingChunks[i];\r\n        if(length >= awaiting.length) {\r\n          awaiting.deferred.resolve();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public waitForChunk(dcId: DcId, length: number) {\r\n    const deferred = deferredPromise<void>();\r\n    let awaitingChunks = this.awaitingChunks.get(dcId);\r\n    if(!awaitingChunks) {\r\n      this.awaitingChunks.set(dcId, awaitingChunks = []);\r\n    }\r\n\r\n    const awaiting = {length, deferred};\r\n    deferred.catch(noop).finally(() => {\r\n      indexOfAndSplice(awaitingChunks, awaiting);\r\n    });\r\n\r\n    awaitingChunks.push(awaiting);\r\n    return deferred;\r\n  }\r\n}\r\n\r\nconst networkStats = new NetworkStats();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.networkStats = networkStats);\r\nexport default networkStats;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport pause from '../../../helpers/schedulers/pause';\nimport { DcId } from '../../../types';\nimport { logger, LogTypes } from '../../logger';\nimport type MTPNetworker from '../networker';\nimport MTTransport from './transport';\nimport Modes from '../../../config/modes';\n\n                    \nimport transportController from './controller';\nimport networkStats from '../networkStats';\n          \n\nexport default class HTTP implements MTTransport {\n  public networker: MTPNetworker;\n  private log: ReturnType<typeof logger>;\n\n  private pending: Array<{\n    resolve: (body: Uint8Array) => void, \n    reject: any, \n    body: Uint8Array\n  }> = [];\n  private releasing: boolean;\n\n  public connected: boolean;\n  private destroyed: boolean;\n  private debug: boolean;\n  \n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\n    this.debug = Modes.debug && false;\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    \n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connected = false;\n  }\n\n  public _send(body: Uint8Array, mode?: RequestMode) {\n    const length = body.length;\n    this.debug && this.log.debug('-> body length to send:', length);\n\n    networkStats.addSent(this.dcId, length);\n    return fetch(this.url, {method: 'POST', body, mode}).then((response) => {\n      if(response.status !== 200 && !mode) {\n        response.arrayBuffer().then((buffer) => {\n          this.log.error('not 200', \n            new TextDecoder(\"utf-8\").decode(new Uint8Array(buffer)));\n        });\n\n        throw response;\n      }\n\n      this.setConnected(true);\n\n      // * test resending by dropping random request\n      // if(Math.random() > .5) {\n      //   throw 'asd';\n      // }\n\n      return response.arrayBuffer().then((buffer) => {\n        networkStats.addReceived(this.dcId, buffer.byteLength);\n        return new Uint8Array(buffer);\n      }); \n    }, (err) => {\n      this.setConnected(false);\n      throw err;\n    });\n  }\n\n  private setConnected(connected: boolean) {\n    if(this.connected === connected || this.destroyed) {\n      return;\n    }\n\n    this.connected = connected;\n\n                        \n    transportController.setTransportValue('https', connected);\n              \n  }\n\n  public destroy() {\n    this.setConnected(false);\n    this.destroyed = true;\n    this.pending.forEach((pending) => pending.reject());\n    this.pending.length = 0;\n  }\n\n  public send(body: Uint8Array) {\n    if(this.networker) {\n      return this._send(body);\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending() {\n    if(this.releasing) return;\n\n    this.releasing = true;\n    // this.log('-> messages to send:', this.pending.length);\n    for(let i = 0; i < this.pending.length; ++i) {\n      const pending = this.pending[i];\n      const {body, resolve} = pending;\n\n      try {\n        const result = await this._send(body);\n        resolve(result);\n        this.pending.splice(i, 1);\n      } catch(err) {\n        this.log.error('Send plain request error:', err);\n        await pause(5000);\n      }\n\n      --i;\n    }\n\n    this.releasing = false;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { logger, LogTypes } from '../../logger';\r\nimport Modes from '../../../config/modes';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport { MTConnection } from './transport';\r\n\r\n// let closeSocketBefore = Date.now() + 30e3;\r\n// let closeSocketAfter = Date.now() + 10e3;\r\n\r\nexport default class Socket extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private ws: WebSocket;\r\n  private log: ReturnType<typeof logger>;\r\n  private debug = Modes.debug && false;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n    this.connect();\r\n\r\n    return this;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.ws.removeEventListener('open', this.handleOpen);\r\n    this.ws.removeEventListener('close', this.handleClose);\r\n    this.ws.removeEventListener('error', this.handleError);\r\n    this.ws.removeEventListener('message', this.handleMessage);\r\n    this.ws = undefined;\r\n  }\r\n  \r\n  private connect() {\r\n    this.ws = new WebSocket(this.url, 'binary');\r\n    this.ws.binaryType = 'arraybuffer';\r\n    this.ws.addEventListener('open', this.handleOpen);\r\n    this.ws.addEventListener('close', this.handleClose);\r\n    this.ws.addEventListener('error', this.handleError);\r\n    this.ws.addEventListener('message', this.handleMessage);\r\n\r\n    // if(Date.now() < closeSocketBefore) {\r\n    // if(Date.now() >= closeSocketAfter) {\r\n    //   this.ws.close();\r\n    // }\r\n  }\r\n\r\n  public close() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.log('close execution');\r\n\r\n    try {\r\n      this.ws.close();\r\n    } catch(err) {\r\n\r\n    }\r\n    this.handleClose();\r\n  }\r\n  \r\n  private handleOpen = () => {\r\n    this.log('opened');\r\n\r\n    this.debug && this.log.debug('sending init packet');\r\n    this.dispatchEvent('open');\r\n  };\r\n\r\n  private handleError = (e: Event) => {\r\n    this.log.error('handleError', e);\r\n    this.close();\r\n  };\r\n\r\n  private handleClose = () => {\r\n    this.log('closed'/* , event, this.pending, this.ws.bufferedAmount */);\r\n\r\n    this.removeListeners();\r\n    this.dispatchEvent('close');\r\n  };\r\n\r\n  private handleMessage = (event: MessageEvent) => {\r\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\r\n\r\n    this.dispatchEvent('message', event.data as ArrayBuffer);\r\n  };\r\n\r\n  public send = (body: Uint8Array) => {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    this.ws.send(body);\r\n  };\r\n}\r\n","export default function randomize<T extends ArrayBufferView>(arr: T) {\n  if(crypto && 'getRandomValues' in crypto) {\n    crypto.getRandomValues(arr);\n  } else {\n    throw new Error('NO_SECURE_RANDOM');\n  }\n  \n  return arr;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n//import aesjs from 'aes-js';\r\nimport randomize from \"../../../helpers/array/randomize\";\r\nimport cryptoMessagePort from \"../../crypto/cryptoMessagePort\";\r\nimport { Codec } from \"./codec\";\r\n\r\n/* \r\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\r\n*/\r\nexport default class Obfuscation {\r\n  /* private enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\r\n  private dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\r\n\r\n  private id: number;\r\n  private idPromise: Promise<Obfuscation['id']>;\r\n  private process: (data: Uint8Array, operation: 'encrypt' | 'decrypt') => ReturnType<Obfuscation['_process']>;\r\n\r\n  // private cryptoEncKey: CryptoKey;\r\n  // private cryptoDecKey: CryptoKey;\r\n  // private cryptoKey: CryptoKey;\r\n\r\n  // private encIv: Uint8Array;\r\n  // private decIv: Uint8Array;\r\n\r\n  // private decIvCounter: Counter;\r\n\r\n  public async init(codec: Codec) {\r\n    if(this.idPromise !== undefined) {\r\n      this.release();\r\n    }\r\n\r\n    const initPayload = new Uint8Array(64);\r\n    randomize(initPayload);\r\n    \r\n    while(true) {\r\n      const val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | initPayload[0];\r\n      const val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | initPayload[4];\r\n      if(initPayload[0] !== 0xef &&\r\n          val !== 0x44414548 &&\r\n          val !== 0x54534f50 &&\r\n          val !== 0x20544547 &&\r\n          val !== 0x4954504f &&\r\n          val !== 0xeeeeeeee &&\r\n          val !== 0xdddddddd &&\r\n          val2 !== 0x00000000) {\r\n          //initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\r\n          break;\r\n      }\r\n      randomize(initPayload);\r\n    }\r\n\r\n    ////////////////////////initPayload.subarray(60, 62).hex = dcId;\r\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\r\n    console.log('initPayload', initPayload); */\r\n\r\n    const reversedPayload = initPayload.slice().reverse();\r\n\r\n    const encKey = initPayload.slice(8, 40);\r\n    const encIv = /* this.encIv =  */initPayload.slice(40, 56);\r\n    const decKey = reversedPayload.slice(8, 40);\r\n    const decIv = /* this.decIv =  */reversedPayload.slice(40, 56);\r\n\r\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\r\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\r\n    \r\n    // console.log('encKey', encKey.hex, encIv.hex);\r\n    // console.log('decKey', decKey.hex, decIv.hex);\r\n\r\n    const idPromise = this.idPromise = cryptoMessagePort.invokeCrypto('aes-ctr-prepare', {\r\n      encKey,\r\n      encIv,\r\n      decKey,\r\n      decIv\r\n    });\r\n\r\n    this.process = async(data, operation) => {\r\n      await idPromise;\r\n      return this._process(data, operation);\r\n    };\r\n\r\n    this.id = await idPromise;\r\n    \r\n    this.process = this._process;\r\n    \r\n    // this.decIvCounter = new Counter(this.decIv);\r\n    /* const key = this.cryptoEncKey = await subtle.importKey(\r\n      'raw',\r\n      encKey,\r\n      {name: 'AES-CTR'},\r\n      false,\r\n      ['encrypt']\r\n    ); */\r\n\r\n    // this.cryptoDecKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   decKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt']\r\n    // );\r\n\r\n    // this.cryptoKey = await subtle.importKey(\r\n    //   'raw',\r\n    //   encKey,\r\n    //   {name: 'AES-CTR'},\r\n    //   false,\r\n    //   ['encrypt', 'decrypt']\r\n    // );\r\n\r\n    initPayload.set(codec.obfuscateTag, 56);\r\n    const encrypted = await this.encode(initPayload.slice());\r\n\r\n    //console.log('encrypted', encrypted);\r\n\r\n    initPayload.set(encrypted.slice(56, 64), 56);\r\n\r\n    return initPayload;\r\n  }\r\n\r\n  /* public encode(payload: Uint8Array) {\r\n    let startTime = performance.now();\r\n    let res = this.enc.encrypt(payload);\r\n    let time = performance.now() - startTime;\r\n\r\n    try {\r\n      startTime = performance.now();\r\n      let arr = this.encNew.encrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      let time2 = performance.now() - startTime;\r\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n    \r\n    return res;\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    let res = this.dec.encrypt(payload);\r\n\r\n    try {\r\n      let arr = this.decNew.decrypt(payload);\r\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\r\n      let resNew = new Uint8Array(bytesFromWordss(arr));\r\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\r\n    } catch(err) {\r\n      console.error('Obfuscation: error:', err);\r\n    }\r\n    \r\n    return res;\r\n  } */\r\n\r\n  private _process = (data: Uint8Array, operation: 'encrypt' | 'decrypt') => {\r\n    return cryptoMessagePort.invoke('invoke', {\r\n      method: 'aes-ctr-process',\r\n      args: [{id: this.id, data, operation}],\r\n    }, undefined, undefined, [data.buffer]) as Promise<Uint8Array>;\r\n  };\r\n\r\n  public encode(payload: Uint8Array) {\r\n    /* return subtle.encrypt({\r\n        name: 'AES-CTR',\r\n        counter: this.encIv,\r\n        length: 64\r\n      },\r\n      this.cryptoEncKey,\r\n      payload\r\n    ); */\r\n    return this.process(payload, 'encrypt');\r\n  }\r\n\r\n  public decode(payload: Uint8Array) {\r\n    return this.process(payload, 'decrypt');\r\n  }\r\n\r\n  public async release() {\r\n    const idPromise = this.idPromise;\r\n    if(idPromise === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.id = undefined;\r\n    this.idPromise = undefined;\r\n\r\n    const id = await idPromise;\r\n    cryptoMessagePort.invokeCrypto('aes-ctr-destroy', id);\r\n  }\r\n\r\n  public destroy() {\r\n    this.release();\r\n  }\r\n\r\n  // public encode(payload: Uint8Array) {\r\n  //   let res = this.encNew.encrypt(payload);\r\n  //   let bytes = new Uint8Array(bytesFromWordss(res));\r\n    \r\n  //   return bytes;\r\n  // }\r\n\r\n  // public async decode(payload: Uint8Array) {\r\n  //   const counter = this.decIvCounter.counter.slice();\r\n  //   this.decIvCounter.increment();\r\n\r\n  //   const n: ArrayBuffer = await subtle.encrypt({\r\n  //       name: 'AES-CTR',\r\n  //       counter: counter,\r\n  //       length: 64\r\n  //     },\r\n  //     this.cryptoDecKey,\r\n  //     payload\r\n  //   );\r\n\r\n  //   const decoded = this.decNew.update(payload);\r\n    \r\n  //   console.log('decode', bytesToHex(decoded), 'new', n, bytesToHex(new Uint8Array(n)));\r\n\r\n  //   return decoded;\r\n  // }\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n//import { bytesFromHex, addPadding } from \"../../bin_utils\";\r\nimport { Codec } from \"./codec\";\r\n\r\nclass AbridgedPacketCodec implements Codec {\r\n  public tag = 0xef;\r\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\r\n\r\n  public encodePacket(data: Uint8Array) {\r\n    const len = data.byteLength >> 2;\r\n    let header: Uint8Array;\r\n    if(len < 127) {\r\n      header = new Uint8Array([len]);\r\n    } else { // Length: payload length, divided by four, and encoded as 3 length bytes (little endian)\r\n      //header = new Uint8Array([0x7f, ...addPadding(bytesFromHex(len.toString(16)).reverse(), 3, true)/* .reverse() */]);\r\n      header = new Uint8Array([0x7f, len & 0xFF, (len >> 8) & 0xFF, (len >> 16) & 0xFF]);\r\n      //console.log('got nobody cause im braindead', header, len);\r\n    }\r\n    \r\n    return header.concat(data);\r\n    //return new Uint8Array([...header, ...data]);\r\n  }\r\n\r\n  public readPacket(data: Uint8Array) {\r\n    let length = data[0];\r\n    if(length >= 127) { // 0x7f\r\n      length = data[1] | (data[2] << 8) | (data[3] << 16);\r\n\r\n      return data.slice(4, length << 2 + 1); // need +1\r\n    }\r\n    \r\n    return data.slice(1, length << 2 + 1); // need +1\r\n  }\r\n}\r\n\r\nexport default new AbridgedPacketCodec();\r\n","export default function bytesToHex(bytes: ArrayLike<number>) {\n  const length = bytes.length;\n  const arr: string[] = new Array(length);\n  for(let i = 0; i < length; ++i) {\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\n  }\n  return arr.join('');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from \"../../../config/modes\";\nimport { logger, LogTypes } from \"../../logger\";\nimport MTPNetworker from \"../networker\";\nimport Obfuscation from \"./obfuscation\";\nimport MTTransport, { MTConnection, MTConnectionConstructable } from \"./transport\";\n// import intermediatePacketCodec from './intermediate';\nimport abridgedPacketCodec from './abridged';\n// import paddedIntermediatePacketCodec from './padded';\nimport { ConnectionStatus } from \"../connectionStatus\";\n\n                    \nimport transportController from \"./controller\";\nimport bytesToHex from \"../../../helpers/bytes/bytesToHex\";\nimport networkStats from \"../networkStats\";\nimport ctx from \"../../../environment/ctx\";\n          \n\nexport default class TcpObfuscated implements MTTransport {\n  private codec = abridgedPacketCodec;\n  private obfuscation = new Obfuscation();\n  public networker: MTPNetworker;\n\n  private pending: Array<Partial<{\n    resolve: any, \n    reject: any, \n    body: Uint8Array, \n    encoded?: Uint8Array,\n    bodySent: boolean\n  }>> = [];\n\n  private debug = Modes.debug && false/* true */;\n  private log: ReturnType<typeof logger>;\n  public connected = false;\n  private lastCloseTime: number;\n  public connection: MTConnection;\n\n  private autoReconnect = true;\n  private reconnectTimeout: number;\n  private releasingPending: boolean;\n\n  //private debugPayloads: MTPNetworker['debugRequests'] = [];\n\n  constructor(\n    private Connection: MTConnectionConstructable, \n    private dcId: number, \n    private url: string, \n    private logSuffix: string, \n    private retryTimeout: number\n  ) {\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connect();\n  }\n\n  private onOpen = async() => {\n    this.connected = true;\n\n                        \n    transportController.setTransportOpened('websocket');\n              \n\n    const initPayload = await this.obfuscation.init(this.codec);\n    if(!this.connected) {\n      return;\n    }\n\n    this.connection.send(initPayload);\n\n    if(this.networker) {\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\n      this.networker.setConnectionStatus(ConnectionStatus.Connected);\n      this.networker.cleanupSent();\n      this.networker.resend();\n    }/*  else {\n      for(const pending of this.pending) {\n        if(pending.encoded && pending.body) {\n          pending.encoded = this.encodeBody(pending.body);\n        }\n      }\n    } */\n\n    setTimeout(() => {\n      this.releasePending();\n    }, 0);\n  };\n\n  private onMessage = async(buffer: ArrayBuffer) => {\n    networkStats.addReceived(this.dcId, buffer.byteLength);\n\n    let data = await this.obfuscation.decode(new Uint8Array(buffer));\n    data = this.codec.readPacket(data);\n\n    if(this.networker) { // authenticated!\n      //this.pending = this.pending.filter((p) => p.body); // clear pending\n\n      this.debug && this.log.debug('redirecting to networker', data.length);\n      this.networker.parseResponse(data).then((response) => {\n        this.debug && this.log.debug('redirecting to networker response:', response);\n\n        try {\n          this.networker.processMessage(response.response, response.messageId, response.sessionId);\n        } catch(err) {\n          this.log.error('handleMessage networker processMessage error', err);\n        }\n\n        //this.releasePending();\n      }).catch((err) => {\n        this.log.error('handleMessage networker parseResponse error', err);\n      });\n\n      //this.dd();\n      return;\n    }\n\n    //console.log('got hex:', data.hex);\n    const pending = this.pending.shift();\n    if(!pending) {\n      this.debug && this.log.debug('no pending for res:', bytesToHex(data));\n      return;\n    }\n\n    pending.resolve(data);\n  };\n\n  private onClose = () => {\n    this.clear();\n    \n    let needTimeout: number, retryAt: number;\n    if(this.autoReconnect) {\n      const time = Date.now();\n      const diff = time - this.lastCloseTime;\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\n      retryAt = time + needTimeout;\n    }\n    \n    if(this.networker) {\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\n      this.pending.length = 0;\n    }\n\n    if(this.autoReconnect) {\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\n      this.reconnectTimeout = ctx.setTimeout(this.reconnect, needTimeout);\n    } else {\n      this.log('reconnect isn\\'t needed');\n    }\n  };\n\n  public clear() {\n                        \n    if(this.connected) {\n      transportController.setTransportClosed('websocket');\n    }\n              \n\n    this.connected = false;\n\n    if(this.connection) {\n      this.connection.removeEventListener('open', this.onOpen);\n      this.connection.removeEventListener('close', this.onClose);\n      this.connection.removeEventListener('message', this.onMessage);\n      this.connection = undefined;\n    }\n  }\n\n  /**\n   * invoke only when closed\n   */\n  public reconnect = () => {\n    if(this.reconnectTimeout !== undefined) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = undefined;\n    }\n\n    if(this.connection) {\n      return;\n    }\n\n    this.log('trying to reconnect...');\n    this.lastCloseTime = Date.now();\n    \n    if(!this.networker) {\n      for(const pending of this.pending) {\n        if(pending.bodySent) {\n          pending.bodySent = false;\n        }\n      }\n    } else {\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.connect();\n  }\n\n  public forceReconnect() {\n    this.close();\n    this.reconnect();\n  }\n\n  public destroy() {\n    this.setAutoReconnect(false);\n    this.close();\n\n    if(this.obfuscation) {\n      this.obfuscation.destroy();\n    }\n\n    this.pending.forEach((pending) => {\n      if(pending.reject) {\n        pending.reject();\n      }\n    });\n    this.pending.length = 0;\n  }\n\n  public close() {\n    const connection = this.connection;\n    if(connection) {\n      const connected = this.connected;\n      this.clear();\n      if(connected) { // wait for buffered messages if they are there\n        connection.addEventListener('message', this.onMessage);\n        connection.addEventListener('close', () => {\n          connection.removeEventListener('message', this.onMessage);\n        }, {once: true});\n        connection.close();\n      }\n    }\n  }\n\n  /**\n   * Will connect if enable and disconnected \\\n   * Will reset reconnection timeout if disable\n   */\n  public setAutoReconnect(enable: boolean) {\n    this.autoReconnect = enable;\n\n    if(!enable) {\n      if(this.reconnectTimeout !== undefined) {\n        clearTimeout(this.reconnectTimeout);\n        this.reconnectTimeout = undefined;\n      }\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\n      this.reconnect();\n    }\n  }\n\n  private connect() {\n    if(this.connection) {\n      this.close();\n    }\n\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\n    this.connection.addEventListener('open', this.onOpen);\n    this.connection.addEventListener('close', this.onClose);\n    this.connection.addEventListener('message', this.onMessage);\n  }\n\n  private encodeBody(body: Uint8Array) {\n    const toEncode = this.codec.encodePacket(body);\n\n    //this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\n    const encoded = this.obfuscation.encode(toEncode);\n    //this.log('send after obf:', enc.hex);\n\n    return encoded;\n  }\n\n  public send(body: Uint8Array) {\n    this.debug && this.log.debug('-> body length to pending:', body.length);\n\n    const encoded: typeof body = /* this.connected ? this.encodeBody(body) :  */undefined;\n\n    //return;\n\n    if(this.networker) {\n      this.pending.push({body, encoded});\n      this.releasePending();\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body, encoded});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending(/* tt = false */) {\n    if(!this.connected || this.releasingPending) {\n      //this.connect();\n      return;\n    }\n\n    this.releasingPending = true;\n\n    /* if(!tt) {\n      this.releasePendingDebounced();\n      return;\n    } */\n\n    //this.log('-> messages to send:', this.pending.length);\n    let length = this.pending.length;\n    let sent = false;\n    //for(let i = length - 1; i >= 0; --i) {\n    for(let i = 0; i < length; ++i) {\n      const pending = this.pending[i];\n      if(!pending) {\n        break;\n      }\n      \n      const {body, bodySent} = pending;\n      if(body && !bodySent) {\n\n        //this.debugPayloads.push({before: body.slice(), after: enc});\n\n        this.debug && this.log.debug('-> body length to send:', body.length);\n\n        // if(!encoded) {\n        //   encoded = pending.encoded = this.encodeBody(body);\n        // }\n\n        const encoded = pending.encoded ??= await this.encodeBody(body);\n        if(!this.connected) {\n          break;\n        }\n\n        networkStats.addSent(this.dcId, encoded.byteLength);\n        this.connection.send(encoded);\n        \n        if(!pending.resolve) { // remove if no response needed\n          this.pending.splice(i--, 1);\n          length--;\n        } else {\n          pending.bodySent = true;\n        }\n\n        sent = true;\n        //delete pending.body;\n      }\n    }\n\n    this.releasingPending = undefined;\n\n    if(this.pending.length && sent) {\n      this.releasePending();\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport MTTransport, { MTConnectionConstructable } from './transports/transport';\nimport Modes from '../../config/modes';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\n\n                        \nimport HTTP from './transports/http';\n          \n\n                      \nimport Socket from './transports/websocket';\nimport TcpObfuscated from './transports/tcpObfuscated';\nimport { IS_WEB_WORKER } from '../../helpers/context';\nimport { DcId } from '../../types';\nimport { getEnvironment } from '../../environment/utils';\n\n                                             \n                                                       \n          \n\n          \n\nexport type TransportType = 'websocket' | 'https' | 'http';\nexport type ConnectionType = 'client' | 'download' | 'upload';\ntype Servers = {\n  [transportType in TransportType]: {\n    [connectionType in ConnectionType]: {\n      [dcId: DcId]: MTTransport[]\n    }\n  }\n};\n\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\nconst PREMIUM_SUFFIX = '_premium';\n\nexport class DcConfigurator {\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\n\n  private dcOptions = Modes.test\n    ? [\n      {id: 1, host: '149.154.175.10',  port: 80},\n      {id: 2, host: '149.154.167.40',  port: 80},\n      {id: 3, host: '149.154.175.117', port: 80}\n    ]\n    : [\n      {id: 1, host: '149.154.175.50',  port: 80},\n      {id: 2, host: '149.154.167.50',  port: 80},\n      {id: 3, host: '149.154.175.100', port: 80},\n      {id: 4, host: '149.154.167.91',  port: 80},\n      {id: 5, host: '149.154.171.5',   port: 80}\n    ];\n\n  public chosenServers: Servers = {} as any;\n\n                        \n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, suffix: string, premium?: boolean) => {\n    const path = connectionType !== 'client' ? 'apiws' + (premium ? PREMIUM_SUFFIX : '') : ('apiws' + TEST_SUFFIX);\n    const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n\n    const retryTimeout = connectionType === 'client' ? 10000 : 10000;\n\n    let oooohLetMeLive: MTConnectionConstructable;\n                                                 \n    oooohLetMeLive = Socket;\n             \n                                                                                                                                                   \n              \n\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\n  };\n            \n\n                          \n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, suffix: string, premium?: boolean) => {\n    let chosenServer: string;\n    if(Modes.ssl || !Modes.http) {\n      const subdomain = this.sslSubdomains[dcId - 1] + (connectionType !== 'client' ? '-1' : '');\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\n      chosenServer = 'https://' + subdomain + '.web.telegram.org/' + path;\n    } else {\n      for(let dcOption of this.dcOptions) {\n        if(dcOption.id === dcId) {\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\n          break;\n        }\n      }\n    }\n\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n    return new HTTP(dcId, chosenServer, logSuffix);\n  };\n            \n\n  public chooseServer(\n    dcId: DcId, \n    connectionType: ConnectionType = 'client', \n    transportType: TransportType = Modes.transport, \n    reuse = true,\n    premium?: boolean\n  ) {\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\n      connectionType = 'client';\n    } */\n\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\n      this.chosenServers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const servers = this.chosenServers[transportType][connectionType];\n\n    if(!(dcId in servers)) {\n      servers[dcId] = [];\n    }\n\n    const transports = servers[dcId];\n\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\n      let transport: MTTransport;\n\n      const suffix = connectionType === 'client' ? '' : '-1';\n\n                                                \n      transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, suffix, premium);\n                             \n                                                                              \n               \n                                                                            \n                \n  \n      if(!transport) {\n        console.error('No chosenServer!', dcId);\n        return null;\n      }\n      \n      if(reuse) {\n        transports.push(transport);\n      }\n      \n      return transport;\n    }\n  \n    return transports[0];\n  }\n  \n  public static removeTransport<T>(obj: any, transport: T) {\n    for(const transportType in obj) {\n      // @ts-ignore\n      for(const connectionType in obj[transportType]) {\n        // @ts-ignore\n        for(const dcId in obj[transportType][connectionType]) {\n          // @ts-ignore\n          const transports: T[] = obj[transportType][connectionType][dcId];\n          indexOfAndSplice(transports, transport);\n        }\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from \"../../../config/app\";\nimport deferredPromise from \"../../../helpers/cancellablePromise\";\nimport EventListenerBase from \"../../../helpers/eventListenerBase\";\nimport pause from \"../../../helpers/schedulers/pause\";\nimport { TransportType, DcConfigurator } from \"../dcConfigurator\";\nimport type HTTP from \"./http\";\nimport type TcpObfuscated from \"./tcpObfuscated\";\nimport MTTransport from \"./transport\";\n\nexport class MTTransportController extends EventListenerBase<{\n  change: (opened: MTTransportController['opened']) => void,\n  transport: (type: TransportType) => void\n}> {\n  private opened: Map<TransportType, number>;\n  private transports: {[k in TransportType]?: MTTransport};\n  private pinging: boolean;\n  private dcConfigurator: DcConfigurator;\n\n  constructor() {\n    super(true);\n\n    this.opened = new Map();\n    /* this.addEventListener('change', (opened) => {\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\n    }); */\n\n    this.addEventListener('change', (opened) => {\n      if(!opened.get('websocket')) {\n        this.waitForWebSocket();\n      }\n    });\n\n    // setTimeout(() => {\n      // this.waitForWebSocket();\n    // }, 200); // wait for first transport so won't have delay for first WS\n  }\n\n  public async pingTransports() {\n    const dcConfigurator = this.dcConfigurator ??= new DcConfigurator();\n    const timeout = 2000;\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\n    };\n\n    const httpPromise = deferredPromise<boolean>();\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\n    setTimeout(() => httpPromise.resolve(false), timeout);\n\n    const websocketPromise = deferredPromise<boolean>();\n    const socket = transports.websocket as TcpObfuscated;\n    socket.setAutoReconnect(false);\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\n    setTimeout(() => {\n      if(websocketPromise.isFulfilled || websocketPromise.isRejected) {\n        return;\n      }\n\n      if(socket.connection) {\n        socket.connection.close();\n      }\n      \n      websocketPromise.resolve(false);\n    }, timeout);\n\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\n\n    for(const transportType in transports) {\n      const transport = transports[transportType as TransportType];\n      transport.destroy();\n    }\n\n    const result = {\n      https: isHttpAvailable || this.opened.get('https') > 0,\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\n    };\n\n    // result.websocket = false;\n    return result;\n  }\n\n  public async waitForWebSocket() {\n    if(this.pinging) return;\n    this.pinging = true;\n\n    while(true) {\n      const {https, websocket} = await this.pingTransports();\n      if(https || websocket) {\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\n      }\n\n      if(websocket) {\n        break;\n      }\n\n      await pause(10000);\n    }\n\n    this.pinging = false;\n  }\n\n  public setTransportValue(type: TransportType, value: boolean) {\n    let length = this.opened.get(type) || 0;\n    length += value ? 1 : -1;\n    \n    this.opened.set(type, length);\n    this.dispatchEvent('change', this.opened);\n  }\n\n  public setTransportOpened(type: TransportType) {\n    return this.setTransportValue(type, true);\n  }\n\n  public setTransportClosed(type: TransportType) {\n    return this.setTransportValue(type, false);\n  }\n}\n\nconst transportController = new MTTransportController();\nexport default transportController;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport deferredPromise, { CancellablePromise } from \"../../../../helpers/cancellablePromise\";\r\nimport type { StoragesResults } from \"./loadStorages\";\r\n\r\nconst RESET_STORAGES_PROMISE: CancellablePromise<Set<keyof StoragesResults>> = deferredPromise();\r\nexport default RESET_STORAGES_PROMISE;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { CryptoMessagePort } from \"../crypto/cryptoMessagePort\";\nimport type { ApiFileManager } from \"../mtproto/apiFileManager\";\nimport type { ApiManager } from \"../mtproto/apiManager\";\nimport type { Authorizer } from \"../mtproto/authorizer\";\nimport type { DcConfigurator } from \"../mtproto/dcConfigurator\";\nimport type { NetworkerFactory } from \"../mtproto/networkerFactory\";\nimport type { PasswordManager } from \"../mtproto/passwordManager\";\nimport type { ReferenceDatabase } from \"../mtproto/referenceDatabase\";\nimport type { TimeManager } from \"../mtproto/timeManager\";\nimport type { RootScope } from \"../rootScope\";\nimport type DialogsStorage from \"../storages/dialogs\";\nimport type FiltersStorage from \"../storages/filters\";\nimport type PeersStorage from \"../storages/peers\";\nimport type ThumbsStorage from \"../storages/thumbs\";\nimport type { ApiUpdatesManager } from \"./apiUpdatesManager\";\nimport type { AppAvatarsManager } from \"./appAvatarsManager\";\nimport type { AppCallsManager } from \"./appCallsManager\";\nimport type { AppChatsManager } from \"./appChatsManager\";\nimport type { AppDocsManager } from \"./appDocsManager\";\nimport type { AppDraftsManager } from \"./appDraftsManager\";\nimport type { AppEmojiManager } from \"./appEmojiManager\";\nimport type { AppGroupCallsManager } from \"./appGroupCallsManager\";\nimport type { AppInlineBotsManager } from \"./appInlineBotsManager\";\nimport type { AppMessagesIdsManager } from \"./appMessagesIdsManager\";\nimport type { AppMessagesManager } from \"./appMessagesManager\";\nimport type { AppNotificationsManager } from \"./appNotificationsManager\";\nimport type { AppPeersManager } from \"./appPeersManager\";\nimport type { AppPhotosManager } from \"./appPhotosManager\";\nimport type { AppPollsManager } from \"./appPollsManager\";\nimport type { AppPrivacyManager } from \"./appPrivacyManager\";\nimport type { AppProfileManager } from \"./appProfileManager\";\nimport type { AppReactionsManager } from \"./appReactionsManager\";\nimport type { AppStateManager } from \"./appStateManager\";\nimport type { AppStickersManager } from \"./appStickersManager\";\nimport type { AppStoragesManager } from \"./appStoragesManager\";\nimport type { AppUsersManager } from \"./appUsersManager\";\nimport type { AppWebPagesManager } from \"./appWebPagesManager\";\nimport type { AppManagers } from \"./managers\";\n\nexport class AppManager {\n  protected appPeersManager: AppPeersManager;\n  protected appChatsManager: AppChatsManager;\n  protected appDocsManager: AppDocsManager;\n  protected appPhotosManager: AppPhotosManager;\n  protected appPollsManager: AppPollsManager;\n  protected appUsersManager: AppUsersManager;\n  protected appWebPagesManager: AppWebPagesManager;\n  protected appDraftsManager: AppDraftsManager;\n  protected appProfileManager: AppProfileManager;\n  protected appNotificationsManager: AppNotificationsManager;\n  protected apiUpdatesManager: ApiUpdatesManager;\n  protected appAvatarsManager: AppAvatarsManager;\n  protected appGroupCallsManager: AppGroupCallsManager;\n  protected appCallsManager: AppCallsManager;\n  protected appReactionsManager: AppReactionsManager;\n  protected appMessagesManager: AppMessagesManager;\n  protected appMessagesIdsManager: AppMessagesIdsManager;\n  protected appPrivacyManager: AppPrivacyManager;\n  protected appInlineBotsManager: AppInlineBotsManager;\n  protected appStickersManager: AppStickersManager;\n  protected referenceDatabase: ReferenceDatabase;\n  protected appEmojiManager: AppEmojiManager;\n  protected dialogsStorage: DialogsStorage;\n  protected filtersStorage: FiltersStorage;\n  protected apiManager: ApiManager;\n  // protected apiManager: ApiManagerProxy;\n  protected passwordManager: PasswordManager;\n  protected cryptoWorker: CryptoMessagePort;\n  protected apiFileManager: ApiFileManager;\n  protected peersStorage: PeersStorage;\n  protected thumbsStorage: ThumbsStorage;\n  protected networkerFactory: NetworkerFactory;\n  protected rootScope: RootScope;\n  protected authorizer: Authorizer;\n  protected dcConfigurator: DcConfigurator;\n  protected timeManager: TimeManager;\n  protected appStoragesManager: AppStoragesManager;\n  protected appStateManager: AppStateManager;\n\n  public clear: (init?: boolean) => void;\n  \n  public setManagers(managers: AppManagers) {\n    Object.assign(this, managers);\n    // this.after();\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type{ Chat } from \"../../../../layer\";\r\nimport type{ Dialog } from \"../../appMessagesManager\";\r\nimport type{ User } from \"../../appUsersManager\";\r\nimport type { StoragesStorages } from \"./createStorages\";\r\nimport { recordPromiseBound } from \"../../../../helpers/recordPromise\";\r\nimport { Awaited } from \"../../../../types\";\r\nimport { logger } from \"../../../logger\";\r\nimport RESET_STORAGES_PROMISE from \"./resetStoragesPromise\";\r\n\r\nexport type StoragesResults = Awaited<ReturnType<typeof loadStoragesInner>>;\r\n\r\nasync function loadStoragesInner(storages: StoragesStorages) {\r\n  const recordPromise = recordPromiseBound(logger('STORAGES-LOADER'));\r\n  const storagesKeys = Object.keys(storages) as Array<keyof StoragesStorages>;\r\n  const storagesPromises: Promise<any>[] = storagesKeys.map((key) => {\r\n    const promise = storages[key].getAll();\r\n    return recordPromise(promise, 'storage ' + (key as any as string));\r\n  });\r\n  \r\n  const storagesResults: {\r\n    users: User[],\r\n    chats: Chat[],\r\n    dialogs: Dialog[]\r\n  } = {} as any;\r\n  const arr = await Promise.all(storagesPromises);\r\n  for(let i = 0, length = storagesKeys.length; i < length; ++i) {\r\n    storagesResults[storagesKeys[i]] = arr[i] as any;\r\n  }\r\n\r\n  arr.splice(0, storagesKeys.length);\r\n\r\n  const resetStorages = await RESET_STORAGES_PROMISE;\r\n  if(resetStorages.size) {\r\n    for(const key of resetStorages) {\r\n      storagesResults[key].length = 0;\r\n    }\r\n\r\n    resetStorages.clear();\r\n  }\r\n\r\n  return storagesResults;\r\n}\r\n\r\nlet promise: ReturnType<typeof loadStoragesInner>;\r\nexport default function loadStorages(storages: StoragesStorages) {\r\n  return promise ??= loadStoragesInner(storages);\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { logger } from \"../logger\";\nimport { AppManager } from \"./manager\";\nimport createStorages from \"./utils/storages/createStorages\";\nimport loadStorages from \"./utils/storages/loadStorages\";\n\nexport class AppStoragesManager extends AppManager {\n  private storages: ReturnType<typeof createStorages>;\n\n  // private loadPromise: CancellablePromise<StoragesResults>;\n\n  private log: ReturnType<typeof logger>;\n\n  constructor() {\n    super();\n\n    this.log = logger('STORAGES');\n    this.storages = createStorages();\n    // this.loadPromise = deferredPromise();\n  }\n\n  public loadStorages() {\n    return loadStorages(this.storages);\n    // loadStorages(this.storages).then((storagesResults) => {\n      // this.loadPromise.resolve(storagesResults);\n    // });\n\n    // return this.loadPromise;\n  }\n\n  // public setStoragesResults(storagesResults: StoragesResults) {\n  //   this.loadPromise.resolve(storagesResults);\n  // }\n\n  public async loadStorage<T extends keyof AppStoragesManager['storages']>(name: T) {\n    return this.loadStorages().then((storagesResults) => {\n      return {\n        storage: this.storages[name],\n        results: storagesResults[name]\n      };\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { Chat } from \"../../../../layer\";\r\nimport type { Dialog } from \"../../appMessagesManager\";\r\nimport type { User } from \"../../appUsersManager\";\r\nimport DATABASE_STATE from \"../../../../config/databases/state\";\r\nimport AppStorage from \"../../../storage\";\r\n\r\nexport type StoragesStorages = {\r\n  users: AppStorage<Record<UserId, User>, typeof DATABASE_STATE>,\r\n  chats: AppStorage<Record<ChatId, Chat>, typeof DATABASE_STATE>,\r\n  dialogs: AppStorage<Record<PeerId, Dialog>, typeof DATABASE_STATE>\r\n};\r\n\r\nexport default function createStorages() {\r\n  const names: (keyof StoragesStorages)[] = ['users', 'chats', 'dialogs'];\r\n  const storages: StoragesStorages = {} as any;\r\n  for(const name of names) {\r\n    // @ts-ignore\r\n    storages[name] = new AppStorage(DATABASE_STATE, name);\r\n  }\r\n\r\n  return storages;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport randomize from '../../helpers/array/randomize';\r\nimport { AppManager } from '../appManagers/manager';\r\n\r\nexport class PasswordManager extends AppManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return this.apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then((state) => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      randomize(salt1);\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return this.apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return this.cryptoWorker.invokeCrypto('computeSRP', password, state, false).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return this.apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then((auth) => {\r\n        if(auth._ === 'auth.authorization') {\r\n          this.apiManager.setUser(auth.user);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return this.apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return this.apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Photo } from \"../../layer\";\nimport { logger } from \"../logger\";\nimport bytesToHex from \"../../helpers/bytes/bytesToHex\";\nimport deepEqual from \"../../helpers/object/deepEqual\";\nimport { AppManager } from \"../appManagers/manager\";\n\nexport type ReferenceContext = ReferenceContext.referenceContextProfilePhoto | ReferenceContext.referenceContextMessage | ReferenceContext.referenceContextEmojiesSounds | ReferenceContext.referenceContextReactions;\nexport namespace ReferenceContext {\n  export type referenceContextProfilePhoto = {\n    type: 'profilePhoto',\n    peerId: PeerId\n  };\n\n  export type referenceContextMessage = {\n    type: 'message',\n    peerId: PeerId,\n    messageId: number\n  };\n\n  export type referenceContextEmojiesSounds = {\n    type: 'emojiesSounds'\n  };\n\n  export type referenceContextReactions = {\n    type: 'reactions'\n  };\n}\n\nexport type ReferenceBytes = Photo.photo['file_reference'];\nexport type ReferenceContexts = Set<ReferenceContext>;\n\n//type ReferenceBytes = Uint8Array;\n\nexport class ReferenceDatabase extends AppManager {\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\n  //private references: Map<ReferenceBytes, number[]> = new Map();\n  private links: {[hex: string]: ReferenceBytes} = {};\n  private log = logger('RD', undefined, true);\n  private refreshEmojiesSoundsPromise: Promise<any>;\n\n  // constructor() {\n  //   super();\n\n    // apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\n    //   const originalPayload = task.payload;\n\n    //   assumeType<RefreshReferenceTaskResponse>(task);\n    //   task.originalPayload = originalPayload;\n\n    //   this.refreshReference(originalPayload).then((bytes) => {\n    //     task.payload = bytes;\n    //   }, (err) => {\n    //     task.error = err;\n    //   }).then(() => apiManager.postMessage(task));\n    // });\n  // }\n\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(!contexts) {\n      contexts = new Set();\n      this.contexts.set(reference, contexts);\n    }\n    \n    this.links[bytesToHex(reference)] = reference;\n    for(const _context of contexts) {\n      if(deepEqual(_context, context)) {\n        return;\n      }\n    }\n\n    contexts.add(context);\n  }\n\n  public getReferenceByLink(reference: ReferenceBytes) {\n    return this.links[bytesToHex(reference)];\n  }\n\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\n    return [contexts, reference];\n  }\n\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\n    const contexts = this.getContexts(reference);\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\n  }\n\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(contexts) {\n      for(const _context of contexts) {\n        if(deepEqual(_context, context)) {\n          contexts.delete(_context);\n          if(!contexts.size) {\n            this.contexts.delete(reference);\n            delete this.links[bytesToHex(reference)];\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\n    this.log('refreshReference: start', reference.slice(), context);\n    if(!context) {\n      const c = this.getContext(reference);\n      if(!c) {\n        this.log('refreshReference: got no context for reference:', reference.slice());\n        return Promise.reject('NO_CONTEXT');\n      }\n\n      [context, reference] = c;\n    }\n\n    let promise: Promise<any>;\n    switch(context?.type) {\n      case 'message': {\n        promise = this.appMessagesManager.wrapSingleMessage(context.peerId, context.messageId, true);\n        break; \n        // .then(() => {\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\n        // });\n      }\n\n      case 'emojiesSounds': {\n        promise = this.refreshEmojiesSoundsPromise || this.appStickersManager.getAnimatedEmojiSounds(true).then(() => {\n          this.refreshEmojiesSoundsPromise = undefined;\n        });\n        break;\n      }\n\n      default: {\n        this.log.warn('refreshReference: not implemented context', context);\n        return Promise.reject();\n      }\n    }\n\n    const hex = bytesToHex(reference);\n    this.log('refreshReference: refreshing reference:', hex);\n    return promise.then(() => {\n      const newHex = bytesToHex(reference);\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\n      if(hex !== newHex) {\n        return reference;\n      }\n\n      this.deleteContext(reference, context);\n\n      const newContext = this.getContext(reference);\n      if(newContext) {\n        return this.refreshReference(reference, newContext[0]);\n      }\n\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\n\n      throw 'NO_NEW_CONTEXT';\n    });\n  }\n\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\n    const contexts = this.contexts.get(oldReference);\n    if(contexts) {\n      this.contexts.delete(oldReference);\n      this.contexts.set(newReference, contexts);\n    }\n  } */\n}\n","export default function safeReplaceObject(wasObject: any, newObject: any) {\n  if(!wasObject) {\n    return newObject;\n  }\n\n  for(var key in wasObject) {\n    if(!newObject.hasOwnProperty(key)) {\n      delete wasObject[key];\n    }\n  }\n\n  for(var key in newObject) {\n    //if (newObject.hasOwnProperty(key)) { // useless\n      wasObject[key] = newObject[key];\n    //}\n  }\n  \n  return wasObject;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Message, MessageAction, MessageMedia } from \"../../../../layer\";\nimport getPeerId from \"../peers/getPeerId\";\n\nexport default function getPeerIdsFromMessage(message: Message.message | Message.messageService) {\n  const peerIds: number[] = [\n    message.fromId,\n    message.viaBotId,\n    (message as Message.message).fwdFromId\n  ];\n\n  const media = (message as Message.message).media;\n  if(media) {\n    const contactUserId = (media as MessageMedia.messageMediaContact).user_id;\n    if(contactUserId !== undefined) {\n      peerIds.push(contactUserId.toPeerId());\n    }\n\n    const results = (media as MessageMedia.messageMediaPoll).results;\n    const recentVoters = results?.recent_voters;\n    if(recentVoters?.length) {\n      peerIds.push(...recentVoters.map((userId) => userId.toPeerId()));\n    }\n  }\n\n  const recentReactions = ((message as Message.message).reactions)?.recent_reactions;\n  if(recentReactions?.length) {\n    peerIds.push(...recentReactions.map((reaction) => getPeerId(reaction.peer_id)));\n  }\n\n  const action = (message as Message.messageService).action;\n  if(action) {\n    const userIds: UserId[] = [\n      ...((action as MessageAction.messageActionChatAddUser).users || []),\n      (action as MessageAction.messageActionChatDeleteUser).user_id,\n      (action as MessageAction.messageActionChatJoinedByLink).inviter_id\n    ];\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\n\n    const chatIds: ChatId[] = [\n      (action as MessageAction.messageActionChatMigrateTo).channel_id,\n      (action as MessageAction.messageActionChannelMigrateFrom).chat_id,\n    ];\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\n  }\n\n  const recentRepliers = ((message as Message.message).replies)?.recent_repliers;\n  if(recentRepliers?.length) {\n    peerIds.push(...recentRepliers.map((reply) => getPeerId(reply)));\n  }\n\n  return new Set(peerIds.filter(Boolean));\n}\n","export default function defineNotNumerableProperties<T extends any>(obj: T, names: (keyof T)[]) {\n  //const perf = performance.now();\n  const props = {writable: true, configurable: true};\n  const out: {[name in keyof T]?: typeof props} = {};\n  names.forEach((name) => {\n    if(!obj.hasOwnProperty(name)) {\n      out[name] = props;\n    }\n  });\n  Object.defineProperties(obj, out);\n  //console.log('defineNotNumerableProperties time:', performance.now() - perf);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Dialog } from \"../../appMessagesManager\";\nimport type getDialogIndexKey from \"./getDialogIndexKey\";\n\nexport default function setDialogIndex(\n  dialog: Dialog, \n  indexKey: ReturnType<typeof getDialogIndexKey>,\n  index: number\n) {\n  return dialog[indexKey] = index;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { Chat, DialogPeer, Message, MessageAction, MessageMedia, MessagesPeerDialogs, Update } from \"../../layer\";\nimport type { Dialog, MyMessage } from \"../appManagers/appMessagesManager\";\nimport tsNow from \"../../helpers/tsNow\";\nimport SearchIndex from \"../searchIndex\";\nimport { SliceEnd } from \"../../helpers/slicedArray\";\nimport { MyDialogFilter } from \"./filters\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport { NoneToVoidFunction } from \"../../types\";\nimport ctx from \"../../environment/ctx\";\nimport AppStorage from \"../storage\";\nimport type DATABASE_STATE from \"../../config/databases/state\";\nimport forEachReverse from \"../../helpers/array/forEachReverse\";\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\nimport insertInDescendSortedArray from \"../../helpers/array/insertInDescendSortedArray\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport getServerMessageId from \"../appManagers/utils/messageId/getServerMessageId\";\nimport getPeerId from \"../appManagers/utils/peers/getPeerId\";\nimport generateMessageId from \"../appManagers/utils/messageId/generateMessageId\";\nimport { AppManager } from \"../appManagers/manager\";\nimport getDialogIndexKey from \"../appManagers/utils/dialogs/getDialogIndexKey\";\nimport isObject from \"../../helpers/object/isObject\";\nimport getDialogIndex from \"../appManagers/utils/dialogs/getDialogIndex\";\nimport getPeerIdsFromMessage from \"../appManagers/utils/messages/getPeerIdsFromMessage\";\nimport { AppStoragesManager } from \"../appManagers/appStoragesManager\";\nimport defineNotNumerableProperties from \"../../helpers/object/defineNotNumerableProperties\";\nimport setDialogIndex from \"../appManagers/utils/dialogs/setDialogIndex\";\n\nexport type FolderDialog = {\n  dialog: Dialog,\n  index: number\n};\n\nexport type Folder = {\n  dialogs: Dialog[],\n  id: number,\n  unreadMessagesCount: number,\n  unreadPeerIds: Set<PeerId>,\n  unreadUnmutedPeerIds: Set<PeerId>,\n  dispatchUnreadTimeout?: number\n};\n\nexport const GLOBAL_FOLDER_ID: LOCAL_FOLDER_ID = undefined;\nexport type LOCAL_FOLDER_ID = 0 | 1;\n\n// let spentTime = 0;\nexport default class DialogsStorage extends AppManager {\n  private storage: AppStoragesManager['storages']['dialogs'];\n  \n  private dialogs: {[peerId: PeerId]: Dialog};\n\n  private folders: {[folderId: number]: Folder} = {};\n\n  private allDialogsLoaded: {[folder_id: number]: boolean};\n  private dialogsOffsetDate: {[folder_id: number]: number};\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\n  private dialogsNum: number;\n\n  private dialogsIndex: SearchIndex<PeerId>;\n\n  private cachedResults: {\n    query: string,\n    count: number,\n    dialogs: Dialog[],\n    folderId: number\n  };\n\n  protected after() {\n    this.clear(true);\n\n    this.rootScope.addEventListener('language_change', () => {\n      const peerId = this.appUsersManager.getSelf().id.toPeerId(false);\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        const peerText = this.appPeersManager.getPeerSearchText(peerId);\n        this.dialogsIndex.indexObject(peerId, peerText);\n      }\n    });\n\n    const onFilterUpdate = (filter: MyDialogFilter) => {\n      const dialogs = this.getCachedDialogs(false);\n      for(let i = 0; i < dialogs.length; ++i) {\n        this.processDialogForFilter(dialogs[i], filter);\n      }\n    };\n\n    this.rootScope.addEventListener('filter_order', () => {\n      const dialogs = this.getCachedDialogs(false);\n      // const indexKeys: ReturnType<DialogsStorage['getDialogIndexKey']>[] = [];\n      for(const filterId in this.folders) {\n        if(+filterId > 1) {\n          delete this.folders[filterId];\n        }\n\n        // indexKeys.push(this.getDialogIndexKey(+filterId));\n      }\n\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        // for(const indexKey of indexKeys) {\n        //   delete dialog[indexKey];\n        // }\n\n        this.processDialogForFilters(dialog);\n      }\n    });\n\n    this.rootScope.addEventListener('filter_update', onFilterUpdate);\n    this.rootScope.addEventListener('filter_new', onFilterUpdate);\n\n    this.rootScope.addEventListener('filter_delete', (filter) => {\n      const dialogs = this.getCachedDialogs(false);\n\n      const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        delete dialog[indexKey];\n      }\n\n      delete this.folders[filter.id];\n    });\n\n    this.rootScope.addEventListener('dialog_notify_settings', (dialog) => {\n      this.processDialogForFilters(dialog);\n      this.prepareDialogUnreadCountModifying(dialog)();\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const chat: Chat.chat = this.appChatsManager.getChat(chatId);\n\n      const peerId = chatId.toPeerId(true);\n      if(chat.pFlags.left && this.getDialogOnly(peerId)) {\n        this.dropDialogOnDeletion(peerId);\n      }\n    });\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateFolderPeers: this.onUpdateFolderPeers,\n\n      updateDialogPinned: this.onUpdateDialogPinned,\n\n      updatePinnedDialogs: this.onUpdatePinnedDialogs,\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('dialogs')\n    ]).then(([state, {results: dialogs, storage}]) => {\n      this.storage = storage;\n      this.dialogs = this.storage.getCache();\n\n      this.pinnedOrders = state.pinnedOrders || {};\n      if(!this.pinnedOrders[0]) this.pinnedOrders[0] = [];\n      if(!this.pinnedOrders[1]) this.pinnedOrders[1] = [];\n      \n      if(dialogs.length) {\n        AppStorage.freezeSaving<typeof DATABASE_STATE>(this.setDialogsFromState.bind(this, dialogs), ['chats', 'dialogs', 'messages', 'users']);\n      }\n\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\n\n      if(dialogs.length) {\n        this.appDraftsManager.addMissedDialogs();\n      }\n    });\n  }\n\n  private setDialogsFromState(dialogs: Dialog[]) {\n    for(let i = 0, length = dialogs.length; i < length; ++i) {\n      const dialog = dialogs[i];\n      if(!dialog) {\n        continue;\n      }\n\n      // if(dialog.peerId !== SERVICE_PEER_ID) {\n        dialog.top_message = getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\n      // }\n\n      if(dialog.topMessage) {\n        this.appMessagesManager.saveMessages([dialog.topMessage]);\n      }\n\n      for(let i = 0; i <= 21; ++i) {\n        const indexKey: ReturnType<typeof getDialogIndexKey> = `index_${i}` as any;\n        delete dialog[indexKey];\n      }\n      // delete dialog.indexes;\n\n      this.saveDialog(dialog, undefined, true);\n\n      // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\n      const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      if(!message) {\n        this.appMessagesManager.reloadConversation(dialog.peerId);\n      }\n    }\n  }\n\n  public isDialogsLoaded(folderId: number) {\n    return !!this.allDialogsLoaded[folderId];\n  }\n\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\n      this.allDialogsLoaded[0] = loaded;\n      this.allDialogsLoaded[1] = loaded;\n    } else {\n      this.allDialogsLoaded[folderId] = loaded;\n    }\n\n    if(this.allDialogsLoaded[0] && this.allDialogsLoaded[1]) {\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\n    }\n\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\n  }\n\n  public clear = (init = false) => {\n    this.pinnedOrders = {\n      0: [],\n      1: []\n    };\n\n    if(!init) {\n      this.storage.clear();\n\n      this.setDialogsLoaded(0, false);\n      this.setDialogsLoaded(1, false);\n      this.setDialogsLoaded(GLOBAL_FOLDER_ID, false);\n      this.savePinnedOrders();\n    } else {\n      this.allDialogsLoaded = {};\n    }\n\n    this.folders = {};\n    this.dialogsOffsetDate = {};\n    this.dialogsNum = 0;\n    this.dialogsIndex = new SearchIndex({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n    this.cachedResults = {\n      query: '',\n      count: 0,\n      dialogs: [],\n      folderId: 0\n    };\n  };\n\n  public handleDialogUnpinning(dialog: Dialog, folderId: number) {\n    delete dialog.pFlags.pinned;\n    indexOfAndSplice(this.pinnedOrders[folderId], dialog.peerId);\n    this.savePinnedOrders();\n  }\n\n  public savePinnedOrders() {\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n  }\n\n  public resetPinnedOrder(folderId: number) {\n    this.pinnedOrders[folderId] = [];\n  }\n\n  public getPinnedOrders(folderId: number) {\n    return this.pinnedOrders[folderId];\n  }\n\n  public getOffsetDate(folderId: number): number {\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\n      return Math.min(this.getOffsetDate(0), this.getOffsetDate(1));\n    }\n\n    return offsetDate;\n  }\n\n  public getFolder(id: number) {\n    let folder = this.folders[id];\n    if(!folder) {\n      folder = this.folders[id] = {\n        dialogs: [], \n        id, \n        unreadMessagesCount: 0, \n        unreadPeerIds: new Set(), \n        unreadUnmutedPeerIds: new Set()\n      };\n\n      defineNotNumerableProperties(folder, ['dispatchUnreadTimeout']);\n    }\n\n    return folder;\n  }\n\n  public getFolderDialogs(id: number, skipMigrated = true): Dialog[] {\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\n      return this.getCachedDialogs(skipMigrated);\n    }\n\n    const folder = this.getFolder(id);\n    return skipMigrated ? folder.dialogs.filter((dialog) => dialog.migratedTo === undefined) : folder.dialogs;\n  }\n\n  public getNextDialog(currentPeerId: PeerId, next: boolean, filterId: number) {\n    const folder = this.getFolderDialogs(filterId, true);\n    let dialog: Dialog;\n    if(!currentPeerId) {\n      if(next) {\n        dialog = folder[0];\n      }\n    } else {\n      const idx = folder.findIndex((dialog) => dialog.peerId === currentPeerId);\n      if(idx !== -1) {\n        const nextIndex = next ? idx + 1 : idx - 1;\n        dialog = folder[nextIndex];\n      }\n    }\n\n    return dialog;\n  }\n\n  public getDialogIndexKeyByFilterId(filterId: number) {\n    if(filterId <= 1) return getDialogIndexKey(filterId as LOCAL_FOLDER_ID);\n    const filter = this.filtersStorage.getFilter(filterId);\n    return getDialogIndexKey(filter.orderIndex);\n  }\n  \n  public isPeerUnmuted(peerId: PeerId) {\n    return !this.appNotificationsManager.isPeerLocalMuted(peerId, true);\n  }\n\n  public getFolderUnreadCount(filterId: number) {\n    const folder = this.getFolder(filterId);\n    return {unreadUnmutedCount: folder.unreadUnmutedPeerIds.size, unreadCount: folder.unreadPeerIds.size};\n  }\n\n  public getCachedDialogs(skipMigrated?: boolean) {\n    return this.getFolderDialogs(0, skipMigrated).concat(this.getFolderDialogs(1, skipMigrated));\n  }\n\n  private setDialogIndexInFilter(dialog: Dialog, indexKey: ReturnType<typeof getDialogIndexKey>, filter: MyDialogFilter) {\n    let index: number;\n\n    /* if(filter.id <= 1) {\n      index = getDialogIndex(dialog, getDialogIndexKey(filter.id));\n    } else  */if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n      const pinnedIndex = filter.pinnedPeerIds.indexOf(dialog.peerId);\n      if(pinnedIndex !== -1) {\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(filter.pinned_peers.length - 1 - pinnedIndex), true);\n      } else if(dialog.pFlags?.pinned) {\n        index = this.generateIndexForDialog(dialog, true);\n      } else {\n        index = getDialogIndex(dialog);\n      }\n    }\n\n    // if(!dialog.hasOwnProperty(indexKey)) {\n    //   defineNotNumerableProperties(dialog, [indexKey]);\n    // }\n\n    return setDialogIndex(dialog, indexKey, index);\n  }\n\n  public getDialog(peerId: PeerId, folderId?: number, skipMigrated = true): [Dialog, number] | [] {\n    const folders: Dialog[][] = [];\n\n    if(folderId === undefined) {\n      folders.push(this.getFolder(0).dialogs, this.getFolder(1).dialogs);\n    } else {\n      folders.push(this.getFolderDialogs(folderId, false));\n    }\n\n    for(let folder of folders) {\n      let i = 0, skipped = 0;\n      for(let length = folder.length; i < length; ++i) {\n        const dialog = folder[i];\n        if(dialog.peerId === peerId) {\n          return [dialog, i - skipped];\n        } else if(skipMigrated && dialog.migratedTo !== undefined) {\n          ++skipped;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogs[peerId];\n  }\n\n  public getDialogIndex(peerId: PeerId | Dialog, indexKey: ReturnType<typeof getDialogIndexKey>) {\n    const dialog = isObject(peerId) ? peerId : this.getDialogOnly(peerId);\n    return getDialogIndex(dialog, indexKey);\n  }\n\n  /*\n  var date = Date.now() / 1000 | 0;\n  var m = date * 0x10000;\n\n  var k = (date + 1) * 0x10000;\n  k - m;\n  65536\n  */\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\n    if(date === undefined) {\n      date = tsNow(true) + this.timeManager.getServerTimeOffset();\n    }\n\n    return (date * 0x10000) + (isPinned ? 0 : ((++this.dialogsNum) & 0xFFFF));\n  }\n\n  public processDialogForFilters(dialog: Dialog) {\n    // let perf = performance.now();\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      this.processDialogForFilter(dialog, filter);\n    }\n    // spentTime += (performance.now() - perf);\n    // console.log('generate index time:', spentTime);\n  }\n\n  public processDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n    const folder = this.getFolder(filter.id);\n    const dialogs = folder.dialogs;\n\n    const wasIndex = dialogs.findIndex((d) => d.peerId === dialog.peerId);\n    const wasDialog = dialogs[wasIndex];\n    const wasDialogIndex = this.getDialogIndex(wasDialog, indexKey);\n\n    const newDialogIndex = this.setDialogIndexInFilter(dialog, indexKey, filter);\n\n    if(wasDialogIndex === newDialogIndex) {\n      return false;\n    }\n\n    if((!wasDialogIndex && newDialogIndex) || (wasIndex && !newDialogIndex)) {\n      this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, !!newDialogIndex);\n    }\n\n    if(wasIndex !== -1) {\n      dialogs.splice(wasIndex, 1);\n    }\n\n    if(newDialogIndex) {\n      insertInDescendSortedArray(dialogs, dialog, (dialog) => this.getDialogIndex(dialog, indexKey), -1);\n    }\n\n    return true;\n  }\n\n  public prepareDialogUnreadCountModifying(dialog: Dialog) {\n    const callbacks: NoneToVoidFunction[] = [\n      this.prepareFolderUnreadCountModifyingByDialog(dialog.folder_id, dialog)\n    ];\n\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n        callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog));\n      }\n    }\n\n    return () => callbacks.forEach((callback) => callback());\n  }\n\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: Dialog, toggle?: boolean) {\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n    const wasUnmuted = this.isPeerUnmuted(dialog.peerId);\n    \n    if(toggle !== undefined) {\n      const addMessagesCount = toggle ? wasUnreadCount : -wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!wasUnreadCount, wasUnreadCount && wasUnmuted, dialog);\n      return;\n    }\n\n    return () => {\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n      const newUnmuted = this.isPeerUnmuted(dialog.peerId);\n\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!newUnreadCount, newUnreadCount && newUnmuted, dialog);\n    };\n  }\n\n  public modifyFolderUnreadCount(\n    folderId: number, \n    addMessagesCount: number, \n    toggleDialog: boolean, \n    toggleUnmuted: boolean, \n    dialog: Dialog\n  ) {\n    const folder = this.getFolder(folderId);\n    if(addMessagesCount) {\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\n    }\n    \n    const {peerId} = dialog;\n    if(toggleDialog) {\n      folder.unreadPeerIds.add(peerId);\n    } else {\n      folder.unreadPeerIds.delete(peerId);\n    }\n\n    if(toggleUnmuted) {\n      folder.unreadUnmutedPeerIds.add(peerId);\n    } else {\n      folder.unreadUnmutedPeerIds.delete(peerId);\n    }\n\n    if(folder.dispatchUnreadTimeout === undefined) {\n      folder.dispatchUnreadTimeout = ctx.setTimeout(() => {\n        folder.dispatchUnreadTimeout = undefined;\n        const _folder = {...folder};\n        delete _folder.dialogs;\n        this.rootScope.dispatchEvent('folder_unread', _folder);\n      }, 0);\n    }\n  }\n\n  public generateIndexForDialog(dialog: Dialog, justReturn = false, message?: MyMessage) {\n    let topDate = 0, isPinned: boolean;\n    if(dialog.pFlags.pinned && !justReturn) {\n      topDate = this.generateDialogPinnedDate(dialog);\n      isPinned = true;\n    } else {\n      if(!message) {\n        message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      }\n      \n      topDate = (message as Message.message)?.date || topDate;\n\n      const channelId = this.appPeersManager.isChannel(dialog.peerId) && dialog.peerId.toChatId();\n      if(channelId) {\n        const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n        if(!topDate || (channel.date && channel.date > topDate)) {\n          topDate = channel.date;\n        }\n      }\n  \n      if(dialog.draft?._ === 'draftMessage' && dialog.draft.date > topDate) {\n        topDate = dialog.draft.date;\n      }\n    }\n\n    if(!topDate) {\n      topDate = tsNow(true);\n    }\n\n    const index = this.generateDialogIndex(topDate, isPinned);\n    if(justReturn) {\n      return index;\n    }\n\n    const indexKey = getDialogIndexKey(dialog.folder_id);\n    setDialogIndex(dialog, indexKey, index);\n  }\n\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\n  }\n\n  public generateDialogPinnedDate(dialog: Dialog) {\n    const order = this.pinnedOrders[dialog.folder_id];\n\n    const foundIndex = order.indexOf(dialog.peerId);\n    let pinnedIndex = foundIndex;\n    if(foundIndex === -1) {\n      pinnedIndex = order.push(dialog.peerId) - 1;\n      this.savePinnedOrders();\n    }\n\n    return this.generateDialogPinnedDateByIndex(pinnedIndex);\n  }\n\n  /* public generateDialog(peerId: PeerId) {\n    const dialog: Dialog = {\n      _: 'dialog',\n      pFlags: {},\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      top_message: 0,\n      read_inbox_max_id: 0,\n      read_outbox_max_id: 0,\n      unread_count: 0,\n      unread_mentions_count: 0,\n      notify_settings: {\n        _: 'peerNotifySettings',\n      },\n    };\n\n    return dialog;\n  } */\n\n  public setDialogToState(dialog: Dialog) {\n    const {peerId, pts} = dialog;\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const messagesStorage = this.appMessagesManager.getHistoryMessagesStorage(peerId);\n    const history = historyStorage.history.slice;\n    let incomingMessage: MyMessage;\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const mid = history[i];\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\n      if(message && !message.pFlags.is_outgoing/*  || peerId === SERVICE_PEER_ID */) {\n        incomingMessage = message;\n  \n        const peerIds = getPeerIdsFromMessage(message);\n        this.peersStorage.requestPeersForKey(peerIds, `topMessage_${peerId}`);\n  \n        break;\n      }\n    }\n\n    dialog.topMessage = incomingMessage;\n\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\n      dialog.unread_count = 0;\n    }\n\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\n    // CAN TOUCH NOW\n\n    if(peerId.isAnyChat() && pts) {\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\n      dialog.pts = newPts;\n    }\n\n    this.storage.set({\n      [peerId]: dialog\n    });\n\n    this.peersStorage.requestPeer(peerId, 'dialog');\n\n    /* for(let id in this.filtersStorage.filters) {\n      const filter = this.filtersStorage.filters[id];\n\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n        \n      }\n    } */\n  }\n\n  public pushDialog(dialog: Dialog, offsetDate?: number, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const {folder_id, peerId} = dialog;\n    const dialogs = this.getFolderDialogs(folder_id, false);\n    const pos = dialogs.findIndex((d) => d.peerId === peerId);\n    if(pos !== -1) {\n      dialogs.splice(pos, 1);\n    }\n    \n    //if(!this.dialogs[peerId]) {\n      this.dialogs[peerId] = dialog;\n      \n      this.setDialogToState(dialog);\n    //}\n\n    if(offsetDate === undefined) {\n      offsetDate = this.getDialogOffsetDate(dialog);\n    }\n\n    this.processDialogForFilters(dialog);\n\n    if(offsetDate && !dialog.pFlags.pinned) {\n      if(saveGlobalOffset) {\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\n          this.dialogsOffsetDate[GLOBAL_FOLDER_ID] = offsetDate;\n        }\n      }\n\n      const savedOffsetDate = this.dialogsOffsetDate[folder_id];\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\n        // if(pos !== -1) {\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folder_id)) {\n          this.clearDialogFromState(dialog, true);\n          return;\n        }\n  \n        this.dialogsOffsetDate[folder_id] = offsetDate;\n      }\n    }\n\n    if(pos === -1) {\n      this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\n    }\n\n    const indexKey = getDialogIndexKey(folder_id);\n    /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, (dialog) => getDialogIndex(dialog, indexKey), -1);\n    /* if(pos !== -1 && pos !== newPos) {\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\n    } */\n  }\n\n  public dropDialog(peerId: PeerId): ReturnType<DialogsStorage['getDialog']> {\n    const foundDialog = this.getDialog(peerId, undefined, false);\n    const [dialog, index] = foundDialog;\n    if(dialog) {\n      delete this.dialogs[peerId];\n\n      const folder = this.getFolder(dialog.folder_id);\n      folder.dialogs.splice(index, 1);\n      const wasPinned = indexOfAndSplice(this.pinnedOrders[dialog.folder_id], peerId) !== undefined;\n      \n      this.processDialogForFilters(dialog);\n\n      this.dialogsIndex.indexObject(peerId, '');\n\n      if(wasPinned) {\n        this.savePinnedOrders();\n      }\n\n      this.clearDialogFromState(dialog, false);\n    }\n\n    return foundDialog;\n  }\n\n  public clearDialogFromState(dialog: Dialog, keepLocal: boolean) {\n    const peerId = dialog.peerId;\n    this.peersStorage.requestPeersForKey([], `topMessage_${peerId}`);\n    this.peersStorage.releasePeer(peerId, 'dialog');\n    this.storage.delete(peerId, keepLocal);\n  }\n\n  public dropDialogWithEvent(peerId: PeerId) {\n    const dropped = this.dropDialog(peerId);\n    if(dropped.length) {\n      this.rootScope.dispatchEvent('dialog_drop', {peerId, dialog: dropped[0]});\n    }\n\n    return dropped;\n  }\n\n  /**\n   * leaving chat, leaving channel, deleting private dialog\n   */\n  public dropDialogOnDeletion(peerId: PeerId) {\n    this.dropDialogWithEvent(peerId);\n    this.rootScope.dispatchEvent('peer_deleted', peerId);\n  }\n\n  public applyDialogs(dialogsResult: MessagesPeerDialogs.messagesPeerDialogs) {\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\n\n    // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\n    forEachReverse(dialogsResult.dialogs, (dialog, idx) => {\n      if(dialog._ === 'dialogFolder') {\n        dialogsResult.dialogs.splice(idx, 1);\n      }\n    });\n\n    this.appUsersManager.saveApiUsers(dialogsResult.users);\n    this.appChatsManager.saveApiChats(dialogsResult.chats);\n    this.appMessagesManager.saveMessages(dialogsResult.messages);\n\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\n\n    const updatedDialogs: {[peerId: PeerId]: Dialog} = {};\n    (dialogsResult.dialogs as Dialog[]).forEach((dialog) => {\n      const peerId = getPeerId(dialog.peer);\n      let topMessage = dialog.top_message;\n\n      const topPendingMessage = this.appMessagesManager.pendingTopMsgs[peerId];\n      if(topPendingMessage) {\n        if(!topMessage \n          || (this.appMessagesManager.getMessageByPeer(peerId, topPendingMessage) as MyMessage)?.date > (this.appMessagesManager.getMessageByPeer(peerId, topMessage) as MyMessage)?.date) {\n          dialog.top_message = topMessage = topPendingMessage;\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMessage;\n        }\n      }\n\n      /* const d = Object.assign({}, dialog);\n      if(peerId === 239602833) {\n        this.log.error('applyConversation lun', dialog, d);\n      } */\n\n      if(topMessage || dialog.draft?._ === 'draftMessage') {\n        this.saveDialog(dialog);\n        updatedDialogs[peerId] = dialog;\n      } else {\n        this.dropDialogWithEvent(peerId);\n      }\n\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n      if(updates !== undefined) {\n        for(const update of updates) {\n          updates.delete(update);\n          this.apiUpdatesManager.saveUpdate(update);\n        }\n\n        if(!updates.size) {\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[peerId];\n        }\n      }\n    });\n\n    if(Object.keys(updatedDialogs).length) {\n      this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n    }\n  }\n\n  private getDialogOffsetDate(dialog: Dialog) {\n    const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n    return message?.date || 0;\n  }\n\n  /**\n   * Won't save migrated from peer, forbidden peers, left and kicked\n   */\n  public saveDialog(dialog: Dialog, folderId = dialog.folder_id ?? 0, ignoreOffsetDate?: boolean, saveGlobalOffset?: boolean) {\n    const peerId = getPeerId(dialog.peer);\n    if(!peerId) {\n      console.error('saveConversation no peerId???', dialog, folderId);\n      return;\n    }\n\n    if(dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\n      console.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\n    }\n    \n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : NULL_PEER_ID;\n\n    if(peerId.isAnyChat()) {\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\n      // ! chatForbidden stays for chat where you're kicked\n      if(\n        chat._ === 'channelForbidden' \n        // || chat._ === 'chatForbidden' \n        || (chat as Chat.chat).pFlags.left \n        // || (chat as any).pFlags.kicked\n      ) {\n        return;\n      }\n    }\n\n    const peerText = this.appPeersManager.getPeerSearchText(peerId);\n    this.dialogsIndex.indexObject(peerId, peerText);\n\n    const wasDialogBefore = this.getDialogOnly(peerId);\n\n    let mid: number, message: MyMessage;\n    if(dialog.top_message) {\n      mid = generateMessageId(dialog.top_message);//dialog.top_message;\n\n      // preserve outgoing message\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\n        mid = wasDialogBefore.top_message;\n      }\n\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\n    } else {\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\n      message = {\n        _: 'message',\n        id: mid,\n        mid,\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        deleted: true,\n        pFlags: {out: true},\n        date: 0,\n        message: ''\n      };\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\n    }\n\n    if(!message?.pFlags) {\n      this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\n    }\n\n    if(!channelId && peerId.isAnyChat()) {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n        const migratedToPeer = getPeerId(chat.migrated_to);\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\n        dialog.migratedTo = migratedToPeer;\n        //return;\n      }\n    }\n\n    dialog.top_message = mid;\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\n    dialog.read_inbox_max_id = generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id);\n\n    if(dialog.folder_id === undefined) {\n      if(dialog._ === 'dialog') {\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\n        dialog.folder_id = wasDialogBefore ? wasDialogBefore.folder_id : folderId;\n      }/*  else if(dialog._ === 'dialogFolder') {\n        dialog.folder_id = dialog.folder.id;\n      } */\n    }\n\n    dialog.draft = this.appDraftsManager.saveDraft(peerId, 0, dialog.draft);\n    dialog.peerId = peerId;\n    // dialog.indexes ??= {} as any;\n\n    // Because we saved message without dialog present\n    if(message && message.pFlags.is_outgoing) {\n      const isOut = message.pFlags.out;\n      if(mid > dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n\n        if(!dialog.unread_count && !isOut) {\n          ++dialog.unread_count;\n        }\n      } else {\n        delete message.pFlags.unread;\n      }\n    }\n\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const slice = historyStorage.history.slice;\n    /* if(historyStorage === undefined) { // warning\n      historyStorage.history.push(mid);\n    } else  */if(!slice.length) {\n      historyStorage.history.unshift(mid);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    } else if(!slice.isEnd(SliceEnd.Bottom)) { // * this will probably never happen, however, if it does, then it will fix slice with top_message\n      const slice = historyStorage.history.insertSlice([mid]);\n      slice.setEnd(SliceEnd.Bottom);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    historyStorage.maxId = mid;\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\n\n    this.appNotificationsManager.savePeerSettings({\n      peerId, \n      settings: dialog.notify_settings\n    });\n\n    if(channelId && dialog.pts) {\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\n    }\n\n    this.generateIndexForDialog(dialog);\n\n    if(wasDialogBefore) {\n      // fix unread count\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(wasDialogBefore);\n      safeReplaceObject(wasDialogBefore, dialog);\n      releaseUnreadCount();\n    }\n\n    this.pushDialog(dialog, message?.date, ignoreOffsetDate, saveGlobalOffset);\n  }\n\n  public getDialogs(query = '', offsetIndex?: number, limit = 20, folderId: number = 0, skipMigrated = false): {\n    dialogs: Dialog[],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  } | Promise<{\n    dialogs: Dialog[],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  }> {\n    if(folderId > 1) {\n      const promises: Promise<any>[] = [];\n\n      const fillContactsResult = this.appUsersManager.fillContacts();\n      if(!fillContactsResult.cached) {\n        promises.push(fillContactsResult.promise);\n      }\n\n      const reloadMissingDialogsPromise = this.filtersStorage.reloadMissingPeerIds(folderId);\n      if(reloadMissingDialogsPromise) {\n        promises.push(reloadMissingDialogsPromise);\n      }\n\n      if(promises.length) {\n        return Promise.all(promises).then(() => {\n          return this.getDialogs(query, offsetIndex, limit, folderId, skipMigrated);\n        });\n      }\n    }\n\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\n    const realFolderId: LOCAL_FOLDER_ID = folderId > 1 || this.getOffsetDate(folderId) ? GLOBAL_FOLDER_ID : folderId as LOCAL_FOLDER_ID;\n    let curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n\n    const indexKey = this.getDialogIndexKeyByFilterId(folderId);\n\n    if(query) {\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== folderId) {\n        this.cachedResults.query = query;\n        this.cachedResults.folderId = folderId;\n\n        const results = this.dialogsIndex.search(query);\n\n        const dialogs: Dialog[] = [];\n        for(const peerId in this.dialogs) {\n          const dialog = this.dialogs[peerId];\n          if(results.has(dialog.peerId) && dialog.folder_id === folderId) {\n            dialogs.push(dialog);\n          }\n        }\n\n        dialogs.sort((d1, d2) => this.getDialogIndex(d2, indexKey) - this.getDialogIndex(d1, indexKey));\n        this.cachedResults.dialogs = dialogs;\n        this.cachedResults.count = dialogs.length;\n      }\n\n      curDialogStorage = this.cachedResults.dialogs;\n    } else {\n      this.cachedResults.query = '';\n    }\n\n    let offset = 0;\n    if(offsetIndex > 0) {\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\n        if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n          break;\n        }\n      }\n    }\n\n    const loadedAll = this.isDialogsLoaded(realFolderId);\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\n    if(query || loadedAll || isEnoughDialogs) {\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: loadedAll ? curDialogStorage.length : null,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        isEnd: (query || loadedAll) && (offset + limit) >= curDialogStorage.length\n      };\n    }\n\n    return this.appMessagesManager.getTopMessages(limit, realFolderId).then((result) => {\n      //const curDialogStorage = this[folderId];\n      if(skipMigrated) {\n        curDialogStorage = this.getFolderDialogs(folderId, skipMigrated);\n      }\n\n      offset = 0;\n      if(offsetIndex > 0) {\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\n          if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n            break;\n          }\n        }\n      }\n\n      //this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\n\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: result.count === undefined ? curDialogStorage.length : result.count,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\n        isEnd: result.isEnd\n      };\n    });\n  }\n\n  // only 0 and 1 folders\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\n    //this.log('updateFolderPeers', update);\n    const peers = update.folder_peers;\n\n    peers.forEach((folderPeer) => {\n      const {folder_id, peer} = folderPeer;\n\n      const peerId = getPeerId(peer);\n      const dialog = this.dropDialog(peerId)[0];\n      if(dialog) {\n        if(dialog.pFlags?.pinned) {\n          this.handleDialogUnpinning(dialog, folder_id);\n        }\n\n        dialog.folder_id = folder_id as LOCAL_FOLDER_ID;\n        this.generateIndexForDialog(dialog);\n        this.pushDialog(dialog); // need for simultaneously updatePinnedDialogs\n      }\n\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n    });\n  };\n\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\n    const folderId = update.folder_id ?? 0;\n    //this.log('updateDialogPinned', update);\n    const peerId = getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\n    /* if(update.folder_id > 1) {\n      const filter = this.filtersStorage.filters[update.folder_id];\n      if(update.pFlags.pinned) {\n        filter.pinned_peers.unshift(peerId);\n      } else {\n        filter.pinned_peers.findAndSplice((p) => p === peerId);\n      }\n    } */\n\n    if(dialog) {\n      if(!update.pFlags.pinned) {\n        this.handleDialogUnpinning(dialog, folderId);\n      } else { // means set\n        dialog.pFlags.pinned = true;\n      }\n\n      this.generateIndexForDialog(dialog);\n    } \n\n    this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n  };\n\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\n    const folderId = update.folder_id ?? 0;\n        \n    const handleOrder = (order: PeerId[]) => {\n      this.pinnedOrders[folderId].length = 0;\n      order.reverse(); // index must be higher\n      order.forEach((peerId) => {\n        newPinned[peerId] = true;\n  \n        const dialog = this.getDialogOnly(peerId);\n        this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n        if(!dialog) {\n          return;\n        }\n  \n        dialog.pFlags.pinned = true;\n        this.generateIndexForDialog(dialog);\n      });\n      \n      const dialogs = this.getFolderDialogs(folderId, false);\n      for(const dialog of dialogs) {\n        if(!dialog.pFlags.pinned) {\n          break;\n        }\n\n        const peerId = dialog.peerId;\n        if(!newPinned[peerId]) {\n          this.appMessagesManager.scheduleHandleNewDialogs(peerId);\n        }\n      }\n    };\n\n    //this.log('updatePinnedDialogs', update);\n    const newPinned: {[peerId: PeerId]: true} = {};\n    if(!update.order) {\n      this.apiManager.invokeApi('messages.getPinnedDialogs', {\n        folder_id: folderId\n      }).then((dialogsResult) => {\n        // * for test reordering and rendering\n        // dialogsResult.dialogs.reverse();\n\n        this.applyDialogs(dialogsResult);\n\n        handleOrder(dialogsResult.dialogs.map((d) => d.peerId));\n\n        /* dialogsResult.dialogs.forEach((dialog) => {\n          newPinned[dialog.peerId] = true;\n        });\n\n        this.dialogsStorage.getFolder(folderId).forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(dialog.pFlags.pinned && !newPinned[peerId]) {\n            this.newDialogsToHandle[peerId] = {reload: true};\n            this.scheduleHandleNewDialogs();\n          }\n        }); */\n      });\n\n      return;\n    }\n\n    //this.log('before order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    handleOrder(update.order.map((peer) => getPeerId((peer as DialogPeer.dialogPeer).peer)));\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { DialogFilter, Update } from \"../../layer\";\nimport { Modify } from \"../../types\";\nimport type { Dialog } from '../appManagers/appMessagesManager';\nimport forEachReverse from \"../../helpers/array/forEachReverse\";\nimport copy from \"../../helpers/object/copy\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport getPeerId from \"../appManagers/utils/peers/getPeerId\";\nimport { AppManager } from \"../appManagers/manager\";\nimport assumeType from \"../../helpers/assumeType\";\n\nexport type MyDialogFilter = Modify<DialogFilter.dialogFilter, {\n  /* pinned_peers: PeerId[],\n  include_peers: PeerId[],\n  exclude_peers: PeerId[], */\n  pinnedPeerIds: PeerId[],\n  includePeerIds: PeerId[],\n  excludePeerIds: PeerId[]\n}>;\n\nconst convertment = [\n  ['pinned_peers', 'pinnedPeerIds'], \n  ['exclude_peers', 'excludePeerIds'], \n  ['include_peers', 'includePeerIds']\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\n\nconst START_ORDER_INDEX = 2;\n\n// const LOCAL_FILTER: MyDialogFilter = {\n//   _: 'dialogFilter',\n//   id: 0,\n//   title: '',\n//   exclude_peers: [],\n//   include_peers: [],\n//   pinned_peers: [],\n//   excludePeerIds: [],\n//   includePeerIds: [],\n//   pinnedPeerIds: [],\n//   pFlags: {}\n// };\n\nexport default class FiltersStorage extends AppManager {\n  private filters: {[filterId: string]: MyDialogFilter};\n  private orderIndex: number;\n  private reloadedPeerIds: Set<PeerId>;\n\n  protected after() {\n    this.clear(true);\n    this.filters = {};\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateDialogFilter: this.onUpdateDialogFilter,\n\n      updateDialogFilters: (update) => {\n        //console.warn('updateDialogFilters', update);\n\n        const oldFilters = copy(this.filters);\n\n        this.getDialogFilters(true).then((filters) => {\n          for(const _filterId in oldFilters) {\n            const filterId = +_filterId;\n            if(!filters.find((filter) => filter.id === filterId)) { // * deleted\n              this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\n            }\n          }\n\n          this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map((filter) => filter.id)});\n        });\n      },\n\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\n    });\n\n    // delete peers when dialog is being dropped\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        let modified = false;\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach((arr) => {\n          forEachReverse(arr, (inputPeer, idx) => {\n            if(getPeerId(inputPeer) === peerId) {\n              arr.splice(idx, 1);\n              modified = true;\n            }\n          });\n        });\n\n        if(modified) {\n          this.saveDialogFilter(filter, true);\n        }\n      }\n    }); */\n\n    return this.appStateManager.getState().then((state) => {\n      safeReplaceObject(this.filters, state.filters);\n\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        if(filter.hasOwnProperty('orderIndex') && filter.orderIndex >= this.orderIndex) {\n          this.orderIndex = filter.orderIndex + 1;\n        }\n\n        /* this.appMessagesManager.dialogsStorage.folders[+filterId] = {\n          dialogs: []\n        }; */\n      }\n\n      // delete this.filters[0];\n      // delete this.filters[1];\n      // this.getLocalFilter(0);\n      // this.getLocalFilter(1);\n    });\n  }\n\n  // private getLocalFilter(id: number) {\n  //   return this.filters[id] ??= {...copy(LOCAL_FILTER), id};\n  // }\n\n  public clear = (init?: boolean) => {\n    if(!init) {\n      // safeReplaceObject(this.filters, {});\n      this.reloadedPeerIds.clear();\n      this.clearFilters();\n    } else {\n      this.filters = {};\n      this.reloadedPeerIds = new Set();\n    }\n\n    this.orderIndex = START_ORDER_INDEX;\n  };\n\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\n    if(update.filter) {\n      this.saveDialogFilter(update.filter as any);\n    } else if(this.filters[update.id]) { // Папка удалена\n      //this.getDialogFilters(true);\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\n      delete this.filters[update.id];\n    }\n\n    this.appStateManager.pushToState('filters', this.filters);\n  };\n\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\n    //console.log('updateDialogFilterOrder', update);\n\n    this.orderIndex = START_ORDER_INDEX;\n    update.order.forEach((filterId, idx) => {\n      const filter = this.filters[filterId];\n      delete filter.orderIndex;\n      this.setOrderIndex(filter);\n    });\n\n    this.rootScope.dispatchEvent('filter_order', update.order);\n\n    this.appStateManager.pushToState('filters', this.filters);\n  };\n\n  public testDialogForFilter(dialog: Dialog, filter: MyDialogFilter) {\n    if(filter.id <= 1) {\n      return dialog.folder_id === filter.id;\n    }\n\n    const peerId = dialog.peerId;\n\n    // * check whether dialog exists\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\n      return false;\n    }\n\n    // exclude_peers\n    if(filter.excludePeerIds.includes(peerId)) {\n      return false;\n    }\n\n    // include_peers\n    if(filter.includePeerIds.includes(peerId)) {\n      return true;\n    }\n\n    const pFlags = filter.pFlags;\n\n    // exclude_archived\n    if(pFlags.exclude_archived && dialog.folder_id === 1) {\n      return false;\n    }\n\n    // exclude_read\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\n      return false;\n    }\n\n    // exclude_muted\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted(peerId) && !(dialog.unread_mentions_count && dialog.unread_count)) {\n      return false;\n    }\n\n    if(this.appPeersManager.isAnyChat(peerId)) {\n      // broadcasts\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\n        return true;\n      }\n\n      // groups\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\n        return true;\n      }\n    } else {\n      const userId = peerId.toUserId();\n      \n      // bots\n      if(this.appUsersManager.isBot(userId)) {\n        return !!pFlags.bots;\n      }\n      \n      // non_contacts\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n\n      // contacts\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\n  }\n\n  public getFilter(filterId: number) {\n    return this.filters[filterId];\n  }\n\n  public getFilters() {\n    return this.filters;\n  }\n\n  public clearFilters() {\n    const filters = this.getFilters();\n    for(const filterId in filters) { // delete filters\n      this.onUpdateDialogFilter({\n        _: 'updateDialogFilter',\n        id: +filterId,\n      });\n    }\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId: number) {\n    const filter = this.filters[filterId];\n\n    const index = filter.pinnedPeerIds.indexOf(peerId);\n    const wasPinned = index !== -1;\n\n    if(wasPinned) {\n      filter.pinned_peers.splice(index, 1);\n      filter.pinnedPeerIds.splice(index, 1);\n    }\n    \n    if(!wasPinned) {\n      if(filter.pinned_peers.length >= (await this.apiManager.getConfig()).pinned_infolder_count_max) {\n        return Promise.reject({type: 'PINNED_DIALOGS_TOO_MUCH'});\n      }\n      \n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\n      filter.pinnedPeerIds.unshift(peerId);\n    }\n    \n    return this.updateDialogFilter(filter);\n  }\n\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\n    const maxId = Math.max(1, ...Object.keys(this.filters).map((i) => +i));\n    filter = copy(filter);\n    filter.id = maxId + 1;\n    return this.updateDialogFilter(filter, undefined, prepend);\n  }\n\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\n    const flags = remove ? 0 : 1;\n\n    return this.apiManager.invokeApi('messages.updateDialogFilter', {\n      flags,\n      id: filter.id,\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\n    }).then((bool: boolean) => { // возможно нужна проверка и откат, если результат не ТРУ\n      //console.log('updateDialogFilter bool:', bool);\n\n      if(bool) {\n        /* if(!this.filters[filter.id]) {\n          this.saveDialogFilter(filter);\n        }\n\n        rootScope.$broadcast('filter_update', filter); */\n\n        this.onUpdateDialogFilter({\n          _: 'updateDialogFilter',\n          id: filter.id,\n          filter: remove ? undefined : filter as any\n        });\n\n        if(prepend) {\n          const f: MyDialogFilter[] = [];\n          for(const filterId in this.filters) {\n            const filter = this.filters[filterId];\n            ++filter.orderIndex;\n            f.push(filter);\n          }\n\n          filter.orderIndex = START_ORDER_INDEX;\n\n          const order = f.sort((a, b) => a.orderIndex - b.orderIndex).map((filter) => filter.id);\n          this.onUpdateDialogFilterOrder({\n            _: 'updateDialogFilterOrder',\n            order\n          });\n        }\n      }\n\n      return bool;\n    });\n  }\n\n  public getOutputDialogFilter(filter: MyDialogFilter) {\n    const c = copy(filter);\n    /* convertment.forEach(([from, to]) => {\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\n    }); */\n\n    this.filterIncludedPinnedPeers(filter);\n\n    return c;\n  }\n\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\n      if(filter.pinnedPeerIds.includes(peerId)) {\n        filter.include_peers.splice(idx, 1);\n        filter.includePeerIds.splice(idx, 1);\n      }\n    });\n  }\n\n  // private spliceMissingPeerIds(filterId: number, type: ArgumentTypes<FiltersStorage['reloadMissingPeerIds']>[1], missingPeerIds: PeerId[]) {\n  //   const filter = this.getFilter(filterId);\n  //   const peers = filter && filter[type];\n  //   if(!peers?.length) {\n  //     return;\n  //   }\n\n  //   let spliced = false;\n  //   missingPeerIds.forEach((peerId) => {\n  //     const inputPeer = findAndSplice(peers, (inputPeer) => getPeerId(inputPeer) === peerId);\n  //     if(inputPeer) {\n  //       spliced = true;\n  //     }\n  //   });\n\n  //   if(spliced) {\n  //     this.onUpdateDialogFilter({\n  //       _: 'updateDialogFilter',\n  //       id: filterId,\n  //       filter\n  //     });\n  //   }\n  // }\n\n  public reloadMissingPeerIds(filterId: number, type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers') {\n    const filter = this.getFilter(filterId);\n    const peers = filter && filter[type];\n    if(!peers?.length) {\n      return;\n    }\n\n    // const missingPeerIds: PeerId[] = [];\n    const reloadDialogs = peers.filter((inputPeer) => {\n      const peerId = getPeerId(inputPeer);\n      const isAlreadyReloaded = this.reloadedPeerIds.has(peerId);\n      const dialog = this.appMessagesManager.getDialogOnly(peerId);\n      // if(isAlreadyReloaded && !dialog) {\n      //   missingPeerIds.push(peerId);\n      // }\n\n      const reload = !isAlreadyReloaded && !dialog;\n      return reload;\n    });\n\n    if(!reloadDialogs.length) {\n      // if(missingPeerIds.length) {\n      //   this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n      // }\n\n      return;\n    }\n\n    const reloadPromises = reloadDialogs.map((inputPeer) => {\n      const peerId = getPeerId(inputPeer);\n      const promise = this.appMessagesManager.reloadConversation(inputPeer)\n      .then((dialog) => {\n        this.reloadedPeerIds.add(peerId);\n\n        return dialog ? undefined : peerId;\n      });\n\n      return promise;\n    });\n\n    const reloadPromise = Promise.all(reloadPromises).then((missingPeerIds) => {\n      missingPeerIds = missingPeerIds.filter(Boolean);\n      if(!missingPeerIds.length) {\n        return;\n      }\n\n      // this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n    });\n\n    return reloadPromise;\n  }\n\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\n    const keys = Object.keys(this.filters);\n    if(keys.length && !overwrite) {\n      return keys.map((filterId) => this.filters[filterId]).sort((a, b) => a.orderIndex - b.orderIndex);\n    }\n\n    const filters = await this.apiManager.invokeApiSingle('messages.getDialogFilters');\n    return filters.map((filter) => this.saveDialogFilter(filter, overwrite)).filter(Boolean);\n  }\n\n  public getSuggestedDialogsFilters() {\n    return this.apiManager.invokeApi('messages.getSuggestedDialogFilters');\n  }\n\n  public saveDialogFilter(filter: DialogFilter, update = true) {\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\n\n    // if(filter._ === 'dialogFilterDefault') {\n    //   return;\n    //   // filter = this.getLocalFilter(0);\n    //   // delete filter.orderIndex;\n    // }\n\n    assumeType<MyDialogFilter>(filter);\n    convertment.forEach(([from, to]) => {\n      assumeType<MyDialogFilter>(filter);\n      filter[to] = filter[from].map((peer) => getPeerId(peer));\n    });\n\n    this.filterIncludedPinnedPeers(filter);\n    \n    filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\n    filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\n\n    const oldFilter = this.filters[filter.id];\n    if(oldFilter) {\n      Object.assign(oldFilter, filter);\n    } else {\n      this.filters[filter.id] = filter;\n    }\n    \n    this.setOrderIndex(filter);\n    \n    if(update) {\n      this.rootScope.dispatchEvent('filter_update', filter);\n    } else if(!oldFilter) {\n      this.rootScope.dispatchEvent('filter_new', filter);\n    }\n\n    return filter;\n  }\n\n  public setOrderIndex(filter: MyDialogFilter) {\n    if(filter.hasOwnProperty('orderIndex')) {\n      if(filter.orderIndex >= this.orderIndex) {\n        this.orderIndex = filter.orderIndex + 1;\n      }\n    } else {\n      filter.orderIndex = this.orderIndex++ as MyDialogFilter['orderIndex'];\n    }\n\n    this.appStateManager.pushToState('filters', this.filters);\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function applyMixins(derivedCtor: any, constructors: any[]) {\r\n  // const callbacks: Array<(...args: any[]) => any> = [];\r\n\r\n  constructors.forEach((baseCtor) => {\r\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n      const value: PropertyDescriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null);\r\n      /* if(name === '_constructor') {\r\n        callbacks.push(value.value);\r\n        return;\r\n      } else  */if(name === 'constructor') {\r\n        return;\r\n      }\r\n\r\n      Object.defineProperty(\r\n        derivedCtor.prototype,\r\n        name,\r\n        value\r\n      );\r\n    });\r\n  });\r\n\r\n  // if(callbacks.length) {\r\n  //   function c(...args: any[]): any {\r\n  //     callbacks.forEach((cb, idx) => {\r\n  //       // @ts-ignore\r\n  //       cb.apply(this, args[idx] || []);\r\n  //     });\r\n  //   };\r\n\r\n  //   Object.defineProperty(derivedCtor.prototype, 'superConstructor', {\r\n  //     configurable: true,\r\n  //     enumerable: true,\r\n  //     value: c,\r\n  //     writable: true\r\n  //   });\r\n  // }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport DEBUG from '../../config/debug';\nimport { ConstructorDeclMap, Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates } from '../../layer';\nimport { logger, LogTypes } from '../logger';\nimport assumeType from '../../helpers/assumeType';\nimport App from '../../config/app';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport { AppManager } from './manager';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport getPeerId from './utils/peers/getPeerId';\nimport ctx from '../../environment/ctx';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport applyMixins from '../../helpers/applyMixins';\n\ntype UpdatesState = {\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\n  syncPending: {\n    seqAwaiting?: number,\n    ptsAwaiting?: true,\n    timeout: number\n  },\n  syncLoading: Promise<void>,\n\n  seq?: number,\n  pts?: number,\n  date?: number,\n  lastPtsUpdateTime?: number\n};\n\nconst SYNC_DELAY = 6;\n\nclass ApiUpdatesManager {\n  public updatesState: UpdatesState = {\n    pendingPtsUpdates: [],\n    pendingSeqUpdates: {},\n    syncPending: null,\n    syncLoading: null\n  };\n\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\n  private attached = false;\n\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\n  private debug = DEBUG;\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  private setProxy() {\n    const self = this;\n    this.updatesState = new Proxy(this.updatesState, {\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\n        // @ts-ignore\n        target[key] = value;\n        self.saveUpdatesState();\n        return true;\n      }\n    });\n  }\n\n  public saveUpdatesState() {\n    const us = this.updatesState;\n    this.appStateManager.pushToState('updates', {\n      seq: us.seq,\n      pts: us.pts,\n      date: us.date\n    });\n  }\n\n  private popPendingSeqUpdate() {\n    const state = this.updatesState;\n    const nextSeq = state.seq + 1;\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\n    if(!pendingUpdatesData) {\n      return false;\n    }\n\n    const updates = pendingUpdatesData.updates;\n    for(let i = 0, length = updates.length; i < length; ++i) {\n      this.saveUpdate(updates[i]);\n    }\n\n    state.seq = pendingUpdatesData.seq;\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\n      state.date = pendingUpdatesData.date;\n    }\n    delete state.pendingSeqUpdates[nextSeq];\n  \n    if(!this.popPendingSeqUpdate() &&\n      state.syncPending &&\n      state.syncPending.seqAwaiting &&\n      state.seq >= state.syncPending.seqAwaiting) {\n      if(!state.syncPending.ptsAwaiting) {\n        clearTimeout(state.syncPending.timeout);\n        state.syncPending = null;\n      } else {\n        delete state.syncPending.seqAwaiting;\n      }\n    }\n  \n    return true;\n  }\n\n  private popPendingPtsUpdate(channelId: ChatId) {\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\n    if(!curState.pendingPtsUpdates.length) {\n      return false;\n    }\n\n    curState.pendingPtsUpdates.sort((a, b) => {\n      return a.pts - b.pts;\n    });\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\n  \n    let curPts = curState.pts;\n    let goodPts = 0;\n    let goodIndex = 0;\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n      curPts += update.pts_count;\n      if(curPts >= update.pts) {\n        goodPts = update.pts;\n        goodIndex = i;\n      }\n    }\n  \n    if(!goodPts) {\n      return false;\n    }\n  \n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\n  \n    curState.pts = goodPts;\n    for(let i = 0; i <= goodIndex; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n\n      // @ts-ignore\n      this.saveUpdate(update);\n    }\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\n  \n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\n      if(!curState.syncPending.seqAwaiting) {\n        clearTimeout(curState.syncPending.timeout);\n        curState.syncPending = null;\n      } else {\n        delete curState.syncPending.ptsAwaiting;\n      }\n    }\n  \n    return true;\n  }\n\n  public forceGetDifference() {\n    if(!this.updatesState.syncLoading) {\n      this.getDifference();\n    }\n  }\n\n  public processLocalUpdate(update: Update) {\n    this.processUpdateMessage({\n      _: 'updateShort',\n      update\n    } as Updates);\n  }\n\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\n    override: boolean\n  }> = {}) => {\n    // return forceGetDifference()\n    const processOpts = {\n      date: updateMessage.date,\n      seq: updateMessage.seq,\n      seqStart: updateMessage.seq_start,\n      //ignoreSyncLoading: options.ignoreSyncLoading\n    };\n\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\n  \n    switch(updateMessage._) {\n      case 'updatesTooLong':\n      case 'new_session_created':\n        this.forceGetDifference();\n        break;\n  \n      case 'updateShort':\n        this.processUpdate(updateMessage.update, processOpts);\n        break;\n  \n      case 'updateShortMessage':\n      case 'updateShortChatMessage': {\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\n        const isOut = updateMessage.pFlags.out;\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? this.appPeersManager.peerId : (updateMessage as Updates.updateShortMessage).user_id);\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id\n          ? (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true)\n          : ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || this.appPeersManager.peerId);\n  \n        this.processUpdate({\n          _: 'updateNewMessage',\n          message: {\n            _: 'message',\n            pFlags: updateMessage.pFlags,\n            id: updateMessage.id,\n            from_id: this.appPeersManager.getOutputPeer(fromId.toPeerId()),\n            peer_id: this.appPeersManager.getOutputPeer(toId),\n            date: updateMessage.date,\n            message: updateMessage.message,\n            fwd_from: updateMessage.fwd_from,\n            reply_to: updateMessage.reply_to,\n            entities: updateMessage.entities\n          },\n          pts: updateMessage.pts,\n          pts_count: updateMessage.pts_count\n        }, processOpts);\n        break;\n      }\n  \n      case 'updatesCombined':\n      case 'updates':\n        this.appUsersManager.saveApiUsers(updateMessage.users, options.override);\n        this.appChatsManager.saveApiChats(updateMessage.chats, options.override);\n  \n        updateMessage.updates.forEach((update: Update) => {\n          this.processUpdate(update, processOpts);\n        });\n        break;\n  \n      default:\n        this.log.warn('Unknown update message', updateMessage);\n    }\n  };\n  \n  private getDifference(first = false): Promise<void> {\n    // this.trace('Get full diff')\n    const updatesState = this.updatesState;\n    let wasSyncing = updatesState.syncLoading;\n    if(!wasSyncing) {\n      updatesState.pendingSeqUpdates = {};\n      updatesState.pendingPtsUpdates = [];\n    }\n  \n    if(updatesState.syncPending) {\n      clearTimeout(updatesState.syncPending.timeout);\n      updatesState.syncPending = null;\n    }\n\n    const promise = this.apiManager.invokeApi('updates.getDifference', {\n      pts: updatesState.pts, \n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\n      date: updatesState.date, \n      qts: -1\n    }, {\n      timeout: 0x7fffffff\n    }).then((differenceResult) => {\n      this.debug && this.log.debug('Get diff result', differenceResult);\n\n      if(differenceResult._ === 'updates.differenceEmpty') {\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\n        updatesState.date = differenceResult.date;\n        updatesState.seq = differenceResult.seq;\n        return;\n      }\n\n      // ! SORRY I'M SORRY I'M SORRY\n      if(first) {\n        this.rootScope.dispatchEvent('state_synchronizing');\n      }\n\n      if(differenceResult._ !== 'updates.differenceTooLong') {\n        this.appUsersManager.saveApiUsers(differenceResult.users);\n        this.appChatsManager.saveApiChats(differenceResult.chats);\n\n        // Should be first because of updateMessageID\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\n    \n        differenceResult.other_updates.forEach((update) => {\n          switch(update._) {\n            case 'updateChannelTooLong':\n            case 'updateNewChannelMessage':\n            case 'updateEditChannelMessage':\n              this.processUpdate(update);\n              return;\n          }\n          \n          this.saveUpdate(update);\n        });\n\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\n        differenceResult.new_messages.forEach((apiMessage) => {\n          this.saveUpdate({\n            _: 'updateNewMessage',\n            message: apiMessage,\n            pts: updatesState.pts,\n            pts_count: 0\n          });\n        });\n\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\n        updatesState.seq = nextState.seq;\n        updatesState.pts = nextState.pts;\n        updatesState.date = nextState.date;\n      } else {\n        updatesState.pts = differenceResult.pts;\n        updatesState.date = (Date.now() / 1000 | 0) + this.timeManager.getServerTimeOffset();\n        delete updatesState.seq;\n        \n        this.channelStates = {};\n        \n        this.log.warn('getDifference:', differenceResult._);\n        this.onDifferenceTooLong();\n      }\n  \n      // this.log('apply diff', updatesState.seq, updatesState.pts)\n  \n      if(differenceResult._ === 'updates.differenceSlice') {\n        return this.getDifference();\n      } else {\n        this.debug && this.log.debug('finished get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(updatesState, promise);\n    }\n  \n    return promise;\n  }\n\n  private getChannelDifference(channelId: ChatId): Promise<void> {\n    const channelState = this.getChannelState(channelId);\n    const wasSyncing = channelState.syncLoading;\n    if(!wasSyncing) {\n      channelState.pendingPtsUpdates = [];\n    }\n\n    if(channelState.syncPending) {\n      clearTimeout(channelState.syncPending.timeout);\n      channelState.syncPending = null;\n    }\n\n    //this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\n    const promise = this.apiManager.invokeApi('updates.getChannelDifference', {\n      channel: this.appChatsManager.getChannelInput(channelId),\n      filter: {_: 'channelMessagesFilterEmpty'},\n      pts: channelState.pts,\n      limit: 30\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\n      this.debug && this.log.debug('Get channel diff result', differenceResult)\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\n  \n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\n        this.debug && this.log.debug('apply channel empty diff', differenceResult);\n        return;\n      }\n  \n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\n        this.debug && this.log.debug('channel diff too long', differenceResult);\n        delete this.channelStates[channelId];\n\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\n        return;\n      }\n  \n      this.appUsersManager.saveApiUsers(differenceResult.users);\n      this.appChatsManager.saveApiChats(differenceResult.chats);\n  \n      // Should be first because of updateMessageID\n      this.debug && this.log.debug('applying', differenceResult.other_updates.length, 'channel other updates');\n      differenceResult.other_updates.forEach((update) => {\n        this.saveUpdate(update);\n      });\n  \n      this.debug && this.log.debug('applying', differenceResult.new_messages.length, 'channel new messages');\n      differenceResult.new_messages.forEach((apiMessage) => {\n        this.saveUpdate({\n          _: 'updateNewChannelMessage',\n          message: apiMessage,\n          pts: channelState.pts,\n          pts_count: 0\n        });\n      });\n  \n      this.debug && this.log.debug('apply channel diff', channelState.pts);\n  \n      if(differenceResult._ === 'updates.channelDifference' &&\n        !differenceResult.pFlags['final']) {\n        return this.getChannelDifference(channelId);\n      } else {\n        this.debug && this.log.debug('finished channel get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(channelState, promise, channelId);\n    }\n\n    return promise;\n  }\n\n  private onDifferenceTooLong() {\n    this.appUsersManager.clear();\n    this.appChatsManager.clear();\n    this.appMessagesManager.clear();\n\n    this.rootScope.dispatchEvent('state_cleared');\n  }\n\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\n    state.syncLoading = promise;\n    this.rootScope.dispatchEvent('state_synchronizing', channelId);\n\n    promise.then(() => {\n      state.syncLoading = null;\n      this.rootScope.dispatchEvent('state_synchronized', channelId);\n    }, () => {\n      state.syncLoading = null;\n    });\n  }\n  \n  public addChannelState(channelId: ChatId, pts: number) {\n    if(!pts) {\n      throw new Error('Add channel state without pts ' + channelId);\n    }\n\n    if(!(channelId in this.channelStates)) {\n      this.channelStates[channelId] = {\n        pts,\n        pendingPtsUpdates: [],\n        syncPending: null,\n        syncLoading: null\n      };\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public getChannelState(channelId: ChatId, pts?: number) {\n    if(this.channelStates[channelId] === undefined) {\n      this.addChannelState(channelId, pts);\n    }\n\n    return this.channelStates[channelId];\n  }\n\n  private processUpdate(update: Update, options: Partial<{\n    date: number,\n    seq: number,\n    seqStart: number/* ,\n    ignoreSyncLoading: boolean */\n  }> = {}) {\n    let channelId: ChatId;\n    switch(update._) {\n      case 'updateNewChannelMessage':\n      case 'updateEditChannelMessage':\n        channelId = getPeerId(update.message.peer_id).toChatId();\n        break;\n      /* case 'updateDeleteChannelMessages':\n        channelId = update.channel_id;\n        break; */\n      case 'updateChannelTooLong':\n        channelId = update.channel_id;\n        if(!(channelId in this.channelStates)) {\n          return false;\n        }\n        break;\n      default:\n        if('channel_id' in update && 'pts' in update) {\n          channelId = update.channel_id;\n        }\n        break;\n    }\n  \n    const {pts, pts_count} = update as Update.updateNewMessage;\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\n  \n    // this.log.log('process', channelId, curState.pts, update)\n  \n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\n      return false;\n    }\n  \n    if(update._ === 'updateChannelTooLong') {\n      if(!curState.lastPtsUpdateTime ||\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\n        // this.log.trace('channel too long, get diff', channelId, update)\n        this.getChannelDifference(channelId);\n      }\n      return false;\n    }\n  \n    if(update._ === 'updateNewMessage' ||\n        update._ === 'updateEditMessage' ||\n        update._ === 'updateNewChannelMessage' ||\n        update._ === 'updateEditChannelMessage') {\n      const message = update.message as Message.message;\n      const toPeerId = getPeerId(message.peer_id);\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\n      let reason: string;\n      if(message.from_id && !this.appUsersManager.hasUser(getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\n          fwdHeader.from_id && !this.appUsersManager.hasUser(getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !this.appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\n          toPeerId.isUser() && !this.appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\n          toPeerId.isAnyChat() && !this.appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\n        this.log.warn('Not enough data for message update', toPeerId, reason, message);\n        if(channelId && this.appChatsManager.hasChat(channelId)) {\n          this.getChannelDifference(channelId);\n        } else {\n          this.forceGetDifference();\n        }\n        return false;\n      }\n    } else if(channelId && !this.appChatsManager.hasChat(channelId)) {\n      // this.log.log('skip update, missing channel', channelId, update)\n      return false;\n    }\n  \n    let popPts: boolean;\n    let popSeq: boolean;\n  \n    if(pts) {\n      const newPts = curState.pts + (pts_count || 0);\n      if(newPts < pts) {\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && this.appChatsManager.getChat(channelId));\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\n        if(!curState.syncPending && !curState.syncLoading) {\n          curState.syncPending = {\n            timeout: ctx.setTimeout(() => {\n              curState.syncPending = null;\n\n              if(curState.syncLoading) {\n                return;\n              }\n\n              if(channelId) {\n                this.getChannelDifference(channelId);\n              } else {\n                this.getDifference();\n              }\n            }, SYNC_DELAY)\n          };\n        }\n\n        curState.syncPending.ptsAwaiting = true;\n        return false;\n      }\n\n      if(pts > curState.pts) {\n        curState.pts = pts;\n        popPts = true;\n  \n        curState.lastPtsUpdateTime = Date.now();\n      } else if(pts_count) {\n        // this.log.warn('Duplicate update', update)\n        return false;\n      }\n\n      if(channelId && options.date && this.updatesState.date < options.date) {\n        this.updatesState.date = options.date;\n      }\n    } else if(!channelId && options.seq > 0) {\n      const seq = options.seq;\n      const seqStart = options.seqStart || seq;\n  \n      if(seqStart !== curState.seq + 1) {\n        if(seqStart > curState.seq) {\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending && curState.syncPending.seqAwaiting);\n  \n          if(curState.pendingSeqUpdates[seqStart] === undefined) {\n            curState.pendingSeqUpdates[seqStart] = {seq, date: options.date, updates: []};\n          }\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\n  \n          if(!curState.syncPending) {\n            curState.syncPending = {\n              timeout: ctx.setTimeout(() => {\n                curState.syncPending = null;\n\n                if(curState.syncLoading) {\n                  return;\n                }\n\n                this.getDifference();\n              }, SYNC_DELAY)\n            };\n          }\n\n          if(!curState.syncPending.seqAwaiting ||\n            curState.syncPending.seqAwaiting < seqStart) {\n            curState.syncPending.seqAwaiting = seqStart;\n          }\n          return false;\n        }\n      }\n  \n      if(curState.seq !== seq) {\n        curState.seq = seq;\n        if(options.date && curState.date < options.date) {\n          curState.date = options.date;\n        }\n\n        popSeq = true;\n      }\n    }\n  \n    this.saveUpdate(update);\n  \n    if(popPts) {\n      this.popPendingPtsUpdate(channelId);\n    } else if(popSeq) {\n      this.popPendingSeqUpdate();\n    }\n  }\n\n  public saveUpdate(update: Update) {\n    //this.debug && this.log('saveUpdate', update);\n    this.dispatchEvent(update._, update as any);\n  }\n  \n  public attach(langCode?: string) {\n    if(this.attached) return;\n\n    //return;\n\n    this.log('attach');\n    \n    this.attached = true;\n\n    this.appStateManager.getState().then(({updates: state}) => {\n      const newVersion = this.appStateManager.newVersion/*  || '0.8.6' */;\n\n      //rootScope.broadcast('state_synchronizing');\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\n        this.log('will get new state');\n\n        this.updatesState.syncLoading = new Promise((resolve) => {\n          this.apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\n            this.updatesState.seq = stateResult.seq;\n            this.updatesState.pts = stateResult.pts;\n            this.updatesState.date = stateResult.date;\n            this.saveUpdatesState();\n            //setTimeout(() => {\n              this.updatesState.syncLoading = null;\n              resolve();\n              //rootScope.broadcast('state_synchronized');\n            //}, 1000);\n        \n          // ! for testing\n          // updatesState.seq = 1\n          // updatesState.pts = stateResult.pts - 5000\n          // updatesState.date = 1\n          // getDifference()\n          });\n        });\n      } else {\n        // ! for testing\n        /* state.seq = 1;\n        state.pts = state.pts - 15;\n        state.date = 1; */\n        // state.pts -= 100;\n\n        /* state.date = 1628623682;\n        state.pts = 2007500;\n        state.seq = 503; */\n\n        Object.assign(this.updatesState, state);\n        \n        this.log('will get difference', Object.assign({}, state));\n        \n        this.getDifference(true)/* .finally(() => {\n          if(this.updatesState.syncLoading) {\n            rootScope.broadcast('state_synchronizing');\n          }\n        }) */;\n      }\n\n      this.apiManager.setUpdatesProcessor(this.processUpdateMessage);\n\n      // this.updatesState.syncLoading.then(() => {\n        this.setProxy();\n      // });\n\n      if(newVersion) {\n        this.updatesState.syncLoading.then(async() => {\n          const strs: Record<string, string> = {\n            en: 'was updated to version',\n            ru: 'обновлён до версии'\n          };\n\n          const getChangelog = (lang: string) => {\n            fetch(`changelogs/${lang}_${newVersion.split(' ')[0]}.md`)\n            .then((res) => (res.status === 200 && res.ok && res.text()) || Promise.reject())\n            .then((text) => {\n              const langStr = strs[lang] || strs.en;\n              const pre = `**Telegram Web${App.suffix} ${langStr} ${newVersion}**\\n\\n`;\n  \n              text = pre + text;\n  \n              const entities: MessageEntity[] = [];\n              const message = parseMarkdown(text, entities);\n  \n              const update: Update.updateServiceNotification = {\n                _: 'updateServiceNotification',\n                entities,\n                message,\n                type: 'local',\n                pFlags: {},\n                inbox_date: Date.now() / 1000 | 0,\n                media: undefined\n              };\n\n              this.processLocalUpdate(update);\n            });\n          };\n          \n          const languages = filterUnique([langCode, 'en']);\n          for(const language of languages) {\n            try {\n              await getChangelog(language);\n              break;\n            } catch(err) {\n              \n            }\n          }\n        });\n      }\n    });\n  }\n}\n\ninterface ApiUpdatesManager extends EventListenerBase<{\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\n}>, AppManager {}\napplyMixins(ApiUpdatesManager, [EventListenerBase, AppManager]);\n\nexport { ApiUpdatesManager };\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { UserProfilePhoto, ChatPhoto, InputFileLocation } from \"../../layer\";\nimport { DownloadOptions } from \"../mtproto/apiFileManager\";\nimport { AppManager } from \"./manager\";\n\nexport type PeerPhotoSize = 'photo_small' | 'photo_big';\n\nexport class AppAvatarsManager extends AppManager {\n  private savedAvatarURLs: {\n    [peerId: PeerId]: {\n      [size in PeerPhotoSize]?: string | Promise<string>\n    }\n  } = {};\n  \n  protected after() {\n    this.rootScope.addEventListener('avatar_update', (peerId) => {\n      this.removeFromAvatarsCache(peerId);\n    });\n  }\n\n  public isAvatarCached(peerId: PeerId, size?: PeerPhotoSize) {\n    const saved = this.savedAvatarURLs[peerId];\n    if(size === undefined) {\n      return !!saved;\n    }\n\n    return !!(saved && saved[size] && !(saved[size] instanceof Promise));\n  }\n  \n  public removeFromAvatarsCache(peerId: PeerId) {\n    if(this.savedAvatarURLs[peerId]) {\n      delete this.savedAvatarURLs[peerId];\n    }\n  }\n\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\n    let saved = this.savedAvatarURLs[peerId];\n    if(!saved || !saved[size]) {\n      if(!saved) {\n        saved = this.savedAvatarURLs[peerId] = {};\n      }\n\n      //console.warn('will invoke downloadSmallFile:', peerId);\n      const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\n        _: 'inputPeerPhotoFileLocation', \n        pFlags: {},\n        peer: this.appPeersManager.getInputPeerById(peerId), \n        photo_id: photo.photo_id\n      };\n\n      const downloadOptions: DownloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\n      if(size === 'photo_big') {\n        peerPhotoFileLocation.pFlags.big = true;\n        downloadOptions.limitPart = 512 * 1024;\n      }\n\n      /* let str: string;\n      const time = Date.now();\n      if(peerId === 0) {\n        str = `download avatar ${peerId}`;\n      } */\n\n      const promise = this.apiFileManager.download(downloadOptions);\n      return saved[size] = promise.then((blob) => {\n        return saved[size] = URL.createObjectURL(blob);\n\n        /* if(str) {\n          console.log(str, Date.now() / 1000, Date.now() - time);\n        } */\n      });\n    } else {\n      return saved[size];\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { getEnvironment } from \"../../environment/utils\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport { nextRandomUint } from \"../../helpers/random\";\nimport { InputPhoneCall, MessagesDhConfig, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, PhonePhoneCall } from \"../../layer\";\nimport { AppManager } from \"./manager\";\n\nexport type CallId = PhoneCall['id'];\n\nexport type MyPhoneCall = Exclude<PhoneCall, PhoneCall.phoneCallEmpty | PhoneCall.phoneCallDiscarded>;\n\nexport class AppCallsManager extends AppManager {\n  private calls: Map<CallId, MyPhoneCall>;\n  \n  protected after() {\n    this.calls = new Map();\n\n    if(!getEnvironment().IS_CALL_SUPPORTED) {\n      return;\n    }\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePhoneCall: (update) => {\n        this.saveCall(update.phone_call);\n      },\n\n      updatePhoneCallSignalingData: (update) => {\n        this.rootScope.dispatchEvent('call_signaling', {callId: update.phone_call_id, data: update.data});\n      }\n    });\n  }\n\n  public computeKey(g_b: Uint8Array, a: Uint8Array, p: Uint8Array) {\n    return this.cryptoWorker.invokeCrypto('compute-dh-key', g_b, a, p);\n  }\n  \n  public saveCall(call: PhoneCall) {\n    const isDiscarded = call._ === 'phoneCallDiscarded';\n    const oldCall = this.calls.get(call.id);\n    if(oldCall) {\n      // if(shouldUpdate) {\n      safeReplaceObject(oldCall, call);\n      // }\n\n      if(isDiscarded) {\n        this.calls.delete(call.id);\n      }\n      \n      call = oldCall;\n    } else if(!isDiscarded) {\n      this.calls.set(call.id, call as any);\n    }\n\n    this.rootScope.dispatchEvent('call_update', call);\n\n    return call;\n  }\n  \n  public getCall(callId: CallId) {\n    return this.calls.get(callId);\n  }\n  \n  public getCallInput(id: CallId): InputPhoneCall {\n    const call = this.getCall(id);\n    return {\n      _: 'inputPhoneCall',\n      id: call.id,\n      access_hash: call.access_hash\n    };\n  }\n\n  public savePhonePhoneCall(phonePhoneCall: PhonePhoneCall) {\n    this.appUsersManager.saveApiUsers(phonePhoneCall.users);\n    return this.saveCall(phonePhoneCall.phone_call);\n  }\n\n  public generateDh() {\n    return this.apiManager.invokeApi('messages.getDhConfig', {\n      version: 0,\n      random_length: 256\n    }).then((dhConfig) => {\n      return this.cryptoWorker.invokeCrypto('generate-dh', dhConfig as MessagesDhConfig.messagesDhConfig);\n    });\n  }\n\n  // private verifyProtocolCompatibility(protocol: PhoneCallProtocol) {\n  //   const my = getCallProtocol();\n  //   const myVersion = my.library_versions[0];\n  //   return !protocol.library_versions.find((version) => {\n  //     return compareVersion(myVersion, version) > 0;\n  //   });\n  // }\n\n  public async requestCall(userId: UserId, protocol: PhoneCallProtocol, g_a_hash: Uint8Array, video?: boolean) {\n    const phonePhoneCall = await this.apiManager.invokeApi('phone.requestCall', {\n      user_id: this.appUsersManager.getUserInput(userId),\n      protocol: protocol,\n      video: video,\n      random_id: nextRandomUint(32),\n      g_a_hash: g_a_hash\n    });\n\n    return this.savePhonePhoneCall(phonePhoneCall);\n  }\n\n  public async discardCall(callId: CallId, duration: number, reason: PhoneCallDiscardReason['_'], video?: boolean) {\n    if(!this.getCall(callId)) {\n      return;\n    }\n\n    const updates = await this.apiManager.invokeApi('phone.discardCall', {\n      video,\n      peer: this.getCallInput(callId),\n      duration,\n      reason: {\n        _: reason\n      },\n      connection_id: '0'\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n  }\n}\n","import { RestrictionReason } from \"../layer\";\n\nconst platforms = new Set([\n  'all',\n  'web',\n  'webk'\n]);\n\nconst ignore = new Set();\n\nexport function getRestrictionReason(reasons: RestrictionReason[]) {\n  // return reasons[0];\n  return reasons.find((reason) => platforms.has(reason.platform) && !ignore.has(reason.reason));\n}\n\nexport function isRestricted(reasons: RestrictionReason[]) {\n  return !!getRestrictionReason(reasons);\n}\n\nexport function ignoreRestrictionReasons(reasons: string[]) {\n  ignore.clear();\n  reasons.forEach((reason) => {\n    ignore.add(reason);\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport deepEqual from \"../../helpers/object/deepEqual\";\nimport isObject from \"../../helpers/object/isObject\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport { ChannelParticipant, ChannelsCreateChannel, Chat, ChatAdminRights, ChatBannedRights, ChatInvite, ChatPhoto, InputChannel, InputChatPhoto, InputFile, InputPeer, SponsoredMessage, Update, Updates } from \"../../layer\";\nimport { isRestricted } from \"../../helpers/restrictions\";\nimport { AppManager } from \"./manager\";\nimport getPeerId from \"./utils/peers/getPeerId\";\nimport hasRights from \"./utils/chats/hasRights\";\nimport getParticipantPeerId from \"./utils/chats/getParticipantPeerId\";\nimport { AppStoragesManager } from \"./appStoragesManager\";\n\nexport type Channel = Chat.channel;\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] | 'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants';\n\nexport class AppChatsManager extends AppManager {\n  private storage: AppStoragesManager['storages']['chats'];\n  \n  private chats: {[id: ChatId]: Chat.channel | Chat.chat | any};\n  //private usernames: any;\n  //private channelAccess: any;\n  //private megagroups: {[id: number]: true};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      /* updateChannel: (update) => {\n        const channelId = update.channel_id;\n        //console.log('updateChannel:', update);\n        rootScope.broadcast('channel_settings', {channelId});\n      }, */\n\n      updateChannelParticipant: (update) => {\n        this.apiManager.clearCache('channels.getParticipants', (params) => {\n          return (params.channel as InputChannel.inputChannel).channel_id === update.channel_id;\n        });\n      },\n\n      updateChatDefaultBannedRights: (update) => {\n        const chatId = getPeerId(update.peer).toChatId();\n        const chat: Chat.chat = this.chats[chatId];\n        if(chat) {\n          chat.default_banned_rights = update.default_banned_rights;\n          this.rootScope.dispatchEvent('chat_update', chatId);\n        }\n      }\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('chats')\n    ]).then(([state, {results: chats, storage}]) => {\n      this.storage = storage;\n\n      if(chats.length) {\n        for(let i = 0, length = chats.length; i < length; ++i) {\n          const chat = chats[i];\n          if(chat) {\n            this.chats[chat.id] = chat;\n          }\n        }\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.set({\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\n        });\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.delete(peerId.toChatId());\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const chatId in this.chats) {\n        if(!chatId) continue;\n        if(!this.peersStorage.isPeerNeeded(chatId.toPeerId(true))) {\n          /* const chat = this.chats[chatId];\n          if(chat.username) {\n            delete this.usernames[cleanUsername(chat.username)];\n          } */\n          \n          this.storage.delete(chatId);\n          delete this.chats[chatId];\n        }\n      }\n    } else {\n      this.chats = {};\n    }\n  };\n\n  public saveApiChats(apiChats: any[], override?: boolean) {\n    if((apiChats as any).saved) return;\n    (apiChats as any).saved = true;\n    apiChats.forEach((chat) => this.saveApiChat(chat, override));\n  }\n\n  public saveApiChat(chat: Chat, override?: boolean) {\n    if(chat._ === 'chatEmpty') return;\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\n      return;\n    } */\n    \n    // * exclude from state\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\n\n    const oldChat: Exclude<Chat, Chat.chatEmpty> = this.chats[chat.id];\n\n    /* if(oldChat && !override) {\n      return;\n    } */\n\n    if((chat as Chat.chat).pFlags === undefined) {\n      (chat as Chat.chat).pFlags = {};\n    }\n\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\n      return;\n    }\n\n    if(chat._ === 'channel' &&\n        chat.participants_count === undefined &&\n        oldChat !== undefined &&\n        (oldChat as Chat.channel).participants_count) {\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\n    }\n\n    /* if(chat.username) {\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\n      this.usernames[searchUsername] = chat.id;\n    } */\n\n    let changedPhoto = false, changedTitle = false;\n    if(oldChat === undefined) {\n      this.chats[chat.id] = chat;\n    } else {\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      if(oldPhotoId !== newPhotoId) {\n        changedPhoto = true;\n      }\n\n      if(oldChat.title !== chat.title) {\n        changedTitle = true;\n      }\n\n      safeReplaceObject(oldChat, chat);\n      this.rootScope.dispatchEvent('chat_update', chat.id);\n    }\n\n    const peerId = chat.id.toPeerId(true);\n    if(changedPhoto) {\n      this.rootScope.dispatchEvent('avatar_update', peerId);\n    }\n\n    if(changedTitle) {\n      this.rootScope.dispatchEvent('peer_title_edit', peerId);\n    }\n\n    if(this.peersStorage.isPeerNeeded(peerId)) {\n      this.storage.set({\n        [chat.id]: chat\n      });\n    }\n  }\n\n  public getChat(id: ChatId) {\n    return this.chats[id] || {_: 'chatEmpty', id, deleted: true, access_hash: '', pFlags: {}/* this.channelAccess[id] */};\n  }\n\n  public getChatTyped(id: ChatId): Chat {\n    return this.getChat(id);\n  }\n\n  /**\n   * Check the user's ability to do an action in chat\n   * @param id \n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n   * @param rights do not provide this parameter when checking rights for self\n   * @param isThread \n   * @returns \n   */\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n    return hasRights(this.getChat(id), action, rights, isThread);\n  }\n\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\n    const chat: Chat.chat = this.getChat(id);\n    if(chat.default_banned_rights) {\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\n        return Promise.resolve();\n      }\n    }\n    \n    return this.apiManager.invokeApi('messages.editChatDefaultBannedRights', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true)),\n      banned_rights\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  /* public resolveUsername(username: string) {\n    return this.usernames[username] || 0;\n  } */\n\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\n    this.channelAccess[id] = accessHash;\n  } */\n\n  /* public saveIsMegagroup(id: ChatId) {\n    this.megagroups[id] = true;\n  } */\n\n  public isChannel(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\n  }\n\n  public isMegagroup(id: ChatId) {\n    /* if(this.megagroups[id]) {\n      return true;\n    } */\n\n    const chat: Chat = this.chats[id];\n    return !!(chat as Chat.channel)?.pFlags?.megagroup;\n  }\n\n  public isBroadcast(id: ChatId) {\n    return this.isChannel(id) && !this.isMegagroup(id);\n  }\n\n  public isInChat(id: ChatId) {\n    let good = true;\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channelForbidden' \n      || chat._ === 'chatForbidden' \n      || chat._ === 'chatEmpty' \n      || (chat as Chat.chat).pFlags.left \n      // || (chat as any).pFlags.kicked \n      || (chat as Chat.chat).pFlags.deactivated) {\n      good = false;\n    }\n\n    return good;\n  }\n\n  public getChannelInput(id: ChatId): InputChannel {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'chatEmpty' || !(chat as Chat.channel).access_hash) {\n      return {\n        _: 'inputChannelEmpty'\n      };\n    } else {\n      return {\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\n      };\n    }\n  }\n\n  public getInputPeer(id: ChatId) {\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\n  }\n\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\n    return {\n      _: 'inputPeerChat',\n      chat_id: id\n    };\n  }\n\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\n    return {\n      _: 'inputPeerChannel',\n      channel_id: id,\n      access_hash: this.getChat(id).access_hash/*  || this.channelAccess[id] */ || 0\n    };\n  }\n\n  public hasChat(id: ChatId, allowMin?: true) {\n    const chat = this.chats[id];\n    return isObject(chat) && (allowMin || !chat.pFlags.min);\n  }\n\n  public getChatPhoto(id: ChatId) {\n    const chat: Chat.chat = this.getChat(id);\n\n    return chat && chat.photo || {\n      _: 'chatPhotoEmpty'\n    };\n  }\n\n  public getChatString(id: ChatId) {\n    const chat = this.getChat(id);\n    if(this.isChannel(id)) {\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + chat.access_hash;\n    }\n    return 'g' + id;\n  }\n\n  /* public wrapForFull(id: number, fullChat: any) {\n    const chatFull = copy(fullChat);\n    const chat = this.getChat(id);\n\n    if(!chatFull.participants_count) {\n      chatFull.participants_count = chat.participants_count;\n    }\n\n    if(chatFull.participants &&\n        chatFull.participants._ === 'chatParticipants') {\n      chatFull.participants.participants = this.wrapParticipants(id, chatFull.participants.participants);\n    }\n\n    if(chatFull.about) {\n      chatFull.rAbout = wrapRichText(chatFull.about, {noLinebreaks: true});\n    }\n\n    //chatFull.peerString = this.getChatString(id);\n    chatFull.chat = chat;\n\n    return chatFull;\n  }\n\n  public wrapParticipants(id: number, participants: any[]) {\n    const chat = this.getChat(id);\n    const myId = appUsersManager.getSelf().id;\n    if(this.isChannel(id)) {\n      const isAdmin = chat.pFlags.creator;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = isAdmin && participant._ === 'channelParticipant';\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    } else {\n      const isAdmin = chat.pFlags.creator || chat.pFlags.admins_enabled && chat.pFlags.admin;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = !participant.canLeave && (\n          chat.pFlags.creator ||\n          participant._ === 'chatParticipant' && (isAdmin || myId === participant.inviter_id)\n        );\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    }\n\n    return participants;\n  } */\n\n  public createChannel(options: ChannelsCreateChannel): Promise<ChatId> {\n    return this.apiManager.invokeApi('channels.createChannel', options).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const channelId = (updates as any).chats[0].id;\n      return channelId;\n    });\n  }\n\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\n    const input = this.getChannelInput(id);\n    const usersInputs = userIds.map((u) => this.appUsersManager.getUserInput(u));\n\n    return this.apiManager.invokeApi('channels.inviteToChannel', {\n      channel: input,\n      users: usersInputs\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\n    return this.apiManager.invokeApi('messages.createChat', {\n      users: userIds.map((u) => this.appUsersManager.getUserInput(u)),\n      title\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const chatId = (updates as any as Updates.updates).chats[0].id;\n      return chatId;\n    });\n  }\n\n  private onChatUpdated = (chatId: ChatId, updates?: any) => {\n    //console.log('onChatUpdated', chatId, updates);\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    if(updates?.updates?.length && this.isChannel(chatId)) {\n      this.rootScope.dispatchEvent('invalidate_participants', chatId);\n    }\n  };\n\n  public leaveChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.leaveChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public joinChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.joinChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\n    return this.apiManager.invokeApi('messages.addChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId),\n      fwd_limit: fwdLimit\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChatUser(id: ChatId, userId: UserId) {\n    return this.apiManager.invokeApi('messages.deleteChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public leaveChat(id: ChatId) {\n    return this.deleteChatUser(id, this.appUsersManager.getSelf().id);\n  }\n\n  public leave(id: ChatId) {\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\n  }\n\n  public delete(id: ChatId) {\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\n  }\n\n  public deleteChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.deleteChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChat(id: ChatId) {\n    //return this.leaveChat(id).then(() => {\n      return this.apiManager.invokeApi('messages.deleteChat', {\n        chat_id: id\n      });\n    //});\n  }\n\n  public migrateChat(id: ChatId): Promise<ChatId> {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\n    return this.apiManager.invokeApi('messages.migrateChat', {\n      chat_id: id\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find((u) => u._ === 'updateChannel') as any;\n      return update.channel_id;\n    });\n  }\n\n  public updateUsername(id: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.updateUsername', {\n      channel: this.getChannelInput(id),\n      username\n    }).then((bool) => {\n      if(bool) {\n        const chat: Chat.channel = this.getChat(id);\n        chat.username = username;\n      }\n\n      return bool;\n    });\n  }\n\n  public editPhoto(id: ChatId, inputFile: InputFile) {\n    const inputChatPhoto: InputChatPhoto = {\n      _: 'inputChatUploadedPhoto',\n      file: inputFile\n    };\n\n    let promise: any;\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editPhoto', {\n        channel: this.getChannelInput(id),\n        photo: inputChatPhoto\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatPhoto', {\n        chat_id: id,\n        photo: inputChatPhoto\n      });\n    }\n\n    return promise.then((updates: any) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editTitle(id: ChatId, title: string) {\n    let promise: any;\n\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editTitle', {\n        channel: this.getChannelInput(id),\n        title\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatTitle', {\n        chat_id: id,\n        title\n      });\n    }\n\n    return promise.then((updates: any) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public editAbout(id: ChatId, about: string) {\n    const peerId = id.toPeerId(true);\n    return this.apiManager.invokeApi('messages.editChatAbout', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      about\n    }).then((bool) => {\n      if(bool) {\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return bool;\n    });\n  }\n\n  public editBanned(id: ChatId, participant: PeerId | ChannelParticipant, banned_rights: ChatBannedRights) {\n    const peerId = typeof(participant) !== 'object' ? participant : getParticipantPeerId(participant);\n    return this.apiManager.invokeApi('channels.editBanned', {\n      channel: this.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId),\n      banned_rights\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n\n      if(typeof(participant) === 'object') {\n        const timestamp = Date.now() / 1000 | 0;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateChannelParticipant',\n          channel_id: id,\n          date: timestamp,\n          actor_id: undefined,\n          qts: undefined,\n          user_id: peerId,\n          prev_participant: participant,\n          new_participant: Object.keys(banned_rights.pFlags).length ? {\n            _: 'channelParticipantBanned',\n            date: timestamp,\n            banned_rights,\n            kicked_by: this.appUsersManager.getSelf().id,\n            peer: this.appPeersManager.getOutputPeer(peerId),\n            pFlags: {}\n          } : undefined\n        });\n      }\n    });\n  }\n\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {}\n    });\n  }\n  \n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {\n        view_messages: true\n      }\n    });\n  }\n\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant) {\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant);\n    else return this.deleteChatUser(id, (participant as PeerId).toUserId());\n  }\n\n  public resolveChannel(id: ChatId) {\n    return this.apiManager.invokeApiSingle('channels.getChannels', {\n      id: [{\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: '0'\n      }]\n    }).then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\n    return this.migrateChat(id).then((channelId) => {\n      return this.apiManager.invokeApi('channels.togglePreHistoryHidden', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      });\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleSignatures(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('channels.toggleSignatures', {\n      channel: this.getChannelInput(id),\n      enabled\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('messages.toggleNoForwards', {\n      peer: this.getInputPeer(id),\n      enabled\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public setChatAvailableReactions(id: ChatId, reactions: Array<string>) {\n    return this.apiManager.invokeApi('messages.setChatAvailableReactions', {\n      peer: this.getInputPeer(id),\n      available_reactions: reactions\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public isRestricted(chatId: ChatId) {\n    const chat: Chat.channel = this.getChat(chatId);\n    const restrictionReasons = chat.restriction_reason;\n\n    return !!(chat.pFlags.restricted && restrictionReasons && isRestricted(restrictionReasons));\n  }\n\n  public getSendAs(channelId: ChatId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getSendAs', \n      params: {\n        peer: this.getChannelInputPeer(channelId)\n      },\n      processResult: (sendAsPeers) => {\n        this.appUsersManager.saveApiUsers(sendAsPeers.users);\n        this.saveApiChats(sendAsPeers.chats);\n\n        return sendAsPeers.peers;\n      }\n    });\n  }\n\n  public importChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.importChatInvite', {hash})\n    .then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      const chat = (updates as Updates.updates).chats[0];\n      return chat.id;\n    });\n  }\n\n  public checkUsername(chatId: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.checkUsername', {\n      channel: this.getChannelInput(chatId),\n      username\n    });\n  }\n\n  public getSponsoredMessage(chatId: ChatId) {\n    return this.apiManager.invokeApiCacheable('channels.getSponsoredMessages', {\n      channel: this.getChannelInput(chatId)\n    }, {cacheSeconds: 300}).then((sponsoredMessages) => {\n      this.appUsersManager.saveApiUsers(sponsoredMessages.users);\n      this.appChatsManager.saveApiChats(sponsoredMessages.chats);\n\n      const sponsoredMessage = sponsoredMessages.messages.shift();\n      sponsoredMessages.messages.push(sponsoredMessage);\n\n      return sponsoredMessages;\n    });\n  }\n\n  public viewSponsoredMessage(chatId: ChatId, randomId: SponsoredMessage['random_id']) {\n    return this.apiManager.invokeApiSingle('channels.viewSponsoredMessage', {\n      channel: this.getChannelInput(chatId),\n      random_id: randomId\n    });\n  }\n\n  public checkChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.checkChatInvite', {\n      hash: hash\n    }).then((chatInvite) => {\n      if((chatInvite as ChatInvite.chatInvitePeek).chat) {\n        this.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\n      }\n\n      return chatInvite;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type lang from \"../lang\";\nimport type langSign from \"../langSign\";\nimport type { State } from \"../config/state\";\nimport DEBUG, { MOUNT_CLASS_TO } from \"../config/debug\";\nimport { HelpCountriesList, HelpCountry, LangPackDifference, LangPackString } from \"../layer\";\nimport stateStorage from \"./stateStorage\";\nimport App from \"../config/app\";\nimport rootScope from \"./rootScope\";\nimport { IS_MOBILE } from \"../environment/userAgent\";\nimport deepEqual from \"../helpers/object/deepEqual\";\nimport safeAssign from \"../helpers/object/safeAssign\";\nimport capitalizeFirstLetter from \"../helpers/string/capitalizeFirstLetter\";\nimport matchUrlProtocol from \"./richTextProcessor/matchUrlProtocol\";\nimport wrapUrl from \"./richTextProcessor/wrapUrl\";\n\nexport const langPack: {[actionType: string]: LangPackKey} = {\n  \"messageActionChatCreate\": \"ActionCreateGroup\",\n  \"messageActionChatCreateYou\": \"ActionYouCreateGroup\",\n\t\"messageActionChatEditTitle\": \"ActionChangedTitle\",\n\t\"messageActionChatEditPhoto\": \"ActionChangedPhoto\",\n\t\"messageActionChatEditVideo\": \"ActionChangedVideo\",\n\t\"messageActionChatDeletePhoto\": \"ActionRemovedPhoto\",\n\t\"messageActionChatReturn\": \"ActionAddUserSelf\",\n\t\"messageActionChatReturnYou\": \"ActionAddUserSelfYou\",\n\t\"messageActionChatJoined\": \"ActionAddUserSelfMega\",\n\t\"messageActionChatJoinedYou\": \"ChannelMegaJoined\",\n  \"messageActionChatAddUser\": \"ActionAddUser\",\n  \"messageActionChatAddUsers\": \"ActionAddUser\",\n\t\"messageActionChatLeave\": \"ActionLeftUser\",\n\t\"messageActionChatLeaveYou\": \"YouLeft\",\n\t\"messageActionChatDeleteUser\": \"ActionKickUser\",\n\t\"messageActionChatJoinedByLink\": \"ActionInviteUser\",\n  \"messageActionPinMessage\": \"Chat.Service.Group.UpdatedPinnedMessage\",\n  \"messageActionContactSignUp\": \"Chat.Service.PeerJoinedTelegram\",\n\t\"messageActionChannelCreate\": \"ActionCreateChannel\",\n\t\"messageActionChannelEditTitle\": \"Chat.Service.Channel.UpdatedTitle\",\n\t\"messageActionChannelEditPhoto\": \"Chat.Service.Channel.UpdatedPhoto\",\n\t\"messageActionChannelEditVideo\": \"Chat.Service.Channel.UpdatedVideo\",\n  \"messageActionChannelDeletePhoto\": \"Chat.Service.Channel.RemovedPhoto\",\n  \"messageActionHistoryClear\": \"HistoryCleared\",\n\t\"messageActionDiscussionStarted\": \"DiscussionStarted\",\n\n  \"messageActionChannelMigrateFrom\": \"ActionMigrateFromGroup\",\n\n  \"messageActionPhoneCall.video_in_ok\": \"ChatList.Service.VideoCall.incoming\",\n\t\"messageActionPhoneCall.video_out_ok\": \"ChatList.Service.VideoCall.outgoing\",\n\t\"messageActionPhoneCall.video_missed\": \"ChatList.Service.VideoCall.Missed\",\n\t\"messageActionPhoneCall.video_cancelled\": \"ChatList.Service.VideoCall.Cancelled\",\n  \"messageActionPhoneCall.in_ok\": \"ChatList.Service.Call.incoming\",\n\t\"messageActionPhoneCall.out_ok\": \"ChatList.Service.Call.outgoing\",\n\t\"messageActionPhoneCall.missed\": \"ChatList.Service.Call.Missed\",\n\t\"messageActionPhoneCall.cancelled\": \"ChatList.Service.Call.Cancelled\",\n\n\t\"messageActionGroupCall.started\": \"Chat.Service.VoiceChatStarted.Channel\",\n\t\"messageActionGroupCall.started_by\": \"Chat.Service.VoiceChatStarted\",\n\t\"messageActionGroupCall.started_byYou\": \"Chat.Service.VoiceChatStartedYou\",\n\t\"messageActionGroupCall.ended\": \"Chat.Service.VoiceChatFinished.Channel\",\n\t\"messageActionGroupCall.ended_by\": \"Chat.Service.VoiceChatFinished\",\n\t\"messageActionGroupCall.ended_byYou\": \"Chat.Service.VoiceChatFinishedYou\",\n\n\t\"messageActionBotAllowed\": \"Chat.Service.BotPermissionAllowed\"\n};\n\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\n\nexport type FormatterArgument = string | number | Node | FormatterArgument[];\nexport type FormatterArguments = FormatterArgument[];\n\nexport const UNSUPPORTED_LANG_PACK_KEY: LangPackKey = IS_MOBILE ? 'Message.Unsupported.Mobile' : 'Message.Unsupported.Desktop';\n\nnamespace I18n {\n\texport const strings: Map<LangPackKey, LangPackString> = new Map();\n\texport const countriesList: HelpCountry[] = [];\n\tlet pluralRules: Intl.PluralRules;\n\n\tlet cacheLangPackPromise: Promise<LangPackDifference>;\n\texport let lastRequestedLangCode: string;\n\texport let lastAppliedLangCode: string;\n\texport let requestedServerLanguage = false;\n  export let timeFormat: State['settings']['timeFormat'];\n\texport function getCacheLangPack(): Promise<LangPackDifference> {\n\t\tif(cacheLangPackPromise) return cacheLangPackPromise;\n\t\treturn cacheLangPackPromise = Promise.all([\n\t\t\tstateStorage.get('langPack') as Promise<LangPackDifference>,\n\t\t\tpolyfillPromise\n\t\t]).then(([langPack]) => {\n\t\t\tif(!langPack/*  || true */) {\n\t\t\t\treturn loadLocalLangPack();\n\t\t\t} else if(DEBUG && false) {\n\t\t\t\treturn getLangPack(langPack.lang_code);\n\t\t\t}/*  else if(langPack.appVersion !== App.langPackVersion) {\n\t\t\t\treturn getLangPack(langPack.lang_code);\n\t\t\t} */\n\t\t\t\n\t\t\tif(!lastRequestedLangCode) {\n\t\t\t\tlastRequestedLangCode = langPack.lang_code;\n\t\t\t}\n\t\t\t\n\t\t\tapplyLangPack(langPack);\n\t\t\treturn langPack;\n\t\t}).finally(() => {\n\t\t\tcacheLangPackPromise = undefined;\n\t\t});\n\t}\n\n  function updateAmPm() {\n    if(timeFormat === 'h12') {\n      try {\n        const dateTimeFormat = getDateTimeFormat({hour: 'numeric', minute: 'numeric', hour12: true});\n        const date = new Date();\n        date.setHours(0);\n        const amText = dateTimeFormat.format(date);\n        amPmCache.am = amText.split(' ')[1];\n        date.setHours(12);\n        const pmText = dateTimeFormat.format(date);\n        amPmCache.pm = pmText.split(' ')[1];\n      } catch(err) {\n        console.error('cannot get am/pm', err);\n        amPmCache = {am: 'AM', pm: 'PM'};\n      }\n    }\n  }\n\n  export function setTimeFormat(\n    format: State['settings']['timeFormat'],\n    haveToUpdate = !!timeFormat && timeFormat !== format\n  ) {\n    timeFormat = format;\n\n    updateAmPm();\n\n    if(haveToUpdate) {\n      cachedDateTimeFormats.clear();\n      const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n      elements.forEach((element) => {\n        const instance = weakMap.get(element);\n\n        if(instance instanceof IntlDateElement) {\n          instance.update();\n        }\n      });\n    }\n  }\n\n\texport function loadLocalLangPack() {\n\t\tconst defaultCode = App.langPackCode;\n\t\tlastRequestedLangCode = defaultCode;\n\t\treturn Promise.all([\n\t\t\timport('../lang'),\n\t\t\timport('../langSign'),\n\t\t\timport('../countries')\n\t\t]).then(([lang, langSign, countries]) => {\n\t\t\tconst strings: LangPackString[] = [];\n\t\t\tformatLocalStrings(lang.default, strings);\n\t\t\tformatLocalStrings(langSign.default, strings);\n\n\t\t\tconst langPack: LangPackDifference = {\n\t\t\t\t_: 'langPackDifference',\n\t\t\t\tfrom_version: 0,\n\t\t\t\tlang_code: defaultCode,\n\t\t\t\tstrings,\n\t\t\t\tversion: 0,\n\t\t\t\tlocal: true,\n\t\t\t\tcountries: countries.default\n\t\t\t};\n\t\t\treturn saveLangPack(langPack);\n\t\t});\n\t}\n\n\texport function loadLangPack(langCode: string) {\n\t\trequestedServerLanguage = true;\n    const managers = rootScope.managers;\n\t\treturn Promise.all([\n\t\t\tmanagers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\tlang_pack: App.langPack\n\t\t\t}),\n\t\t\tmanagers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\tlang_pack: 'android'\n\t\t\t}),\n\t\t\timport('../lang'),\n\t\t\timport('../langSign'),\n\t\t\tmanagers.apiManager.invokeApiCacheable('help.getCountriesList', {\n\t\t\t\tlang_code: langCode,\n\t\t\t\thash: 0\n\t\t\t}) as Promise<HelpCountriesList.helpCountriesList>,\n\t\t\tpolyfillPromise,\n\t\t]);\n\t}\n\n\texport function getStrings(langCode: string, strings: string[]) {\n\t\treturn rootScope.managers.apiManager.invokeApi('langpack.getStrings', {\n\t\t\tlang_pack: App.langPack,\n\t\t\tlang_code: langCode,\n\t\t\tkeys: strings\n\t\t});\n\t}\n\n\texport function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\n\t\tfor(const i in strings) {\n\t\t\t// @ts-ignore\n\t\t\tconst v = strings[i];\n\t\t\tif(typeof(v) === 'string') {\n\t\t\t\tpushTo.push({\n\t\t\t\t\t_: 'langPackString',\n\t\t\t\t\tkey: i,\n\t\t\t\t\tvalue: v\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpushTo.push({\n\t\t\t\t\t_: 'langPackStringPluralized',\n\t\t\t\t\tkey: i,\n\t\t\t\t\t...v\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn pushTo;\n\t}\n\n\texport function getLangPack(langCode: string) {\n\t\tlastRequestedLangCode = langCode;\n\t\treturn loadLangPack(langCode).then(([langPack1, langPack2, localLangPack1, localLangPack2, countries, _]) => {\n\t\t\tlet strings: LangPackString[] = [];\n\n\t\t\t[localLangPack1, localLangPack2].forEach((l) => {\n\t\t\t\tformatLocalStrings(l.default as any, strings);\n\t\t\t});\n\n\t\t\tstrings = strings.concat(langPack1.strings);\n\n\t\t\tfor(const string of langPack2.strings) {\n\t\t\t\tstrings.push(string);\n\t\t\t}\n\n\t\t\tlangPack1.strings = strings;\n\t\t\tlangPack1.countries = countries;\n\t\t\treturn saveLangPack(langPack1);\n\t\t});\n\t}\n\n\texport function saveLangPack(langPack: LangPackDifference) {\n\t\tlangPack.appVersion = App.langPackVersion;\n\n\t\treturn stateStorage.set({langPack}).then(() => {\n\t\t\tapplyLangPack(langPack);\n\t\t\treturn langPack;\n\t\t});\n\t}\n\n\texport const polyfillPromise = (function checkIfPolyfillNeeded() {\n\t\tif(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn import('./pluralPolyfill').then((_Intl) => {\n\t\t\t\t(window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\n\t\t\t});\n\t\t}\n\t})();\n\t\n\texport function applyLangPack(langPack: LangPackDifference) {\n\t\tif(langPack.lang_code !== lastRequestedLangCode) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code);\n\t\t} catch(err) {\n\t\t\tconsole.error('pluralRules error', err);\n\t\t\tpluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\n\t\t}\n\n\t\tstrings.clear();\n\n\t\tfor(const string of langPack.strings) {\n\t\t\tstrings.set(string.key as LangPackKey, string);\n\t\t}\n\n\t\tif(langPack.countries) {\n\t\t\tcountriesList.length = 0;\n\t\t\tcountriesList.push(...langPack.countries.countries);\n\n\t\t\tlangPack.countries.countries.forEach((country) => {\n\t\t\t\tif(country.name) {\n\t\t\t\t\tconst langPackKey: any = country.default_name;\n\t\t\t\t\tstrings.set(langPackKey, {\n\t\t\t\t\t\t_: 'langPackString',\n\t\t\t\t\t\tkey: langPackKey,\n\t\t\t\t\t\tvalue: country.name\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif(lastAppliedLangCode !== langPack.lang_code) {\n\t\t\trootScope.dispatchEvent('language_change', langPack.lang_code);\n\t\t\tlastAppliedLangCode = langPack.lang_code;\n      cachedDateTimeFormats.clear();\n      updateAmPm();\n\t\t}\n\n\t\tconst elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n\t\telements.forEach((element) => {\n\t\t\tconst instance = weakMap.get(element);\n\n\t\t\tif(instance) {\n\t\t\t\tinstance.update();\n\t\t\t}\n\t\t});\n\t}\n\n  function pushNextArgument(out: ReturnType<typeof superFormatter>, args: FormatterArguments, indexHolder: {i: number}) {\n    const arg = args[indexHolder.i++];\n\t\tif(Array.isArray(arg)) {\n\t\t\tout.push(...arg as any);\n\t\t} else {\n\t\t\tout.push(arg);\n\t\t}\n  }\n\n\texport function superFormatter(input: string, args?: FormatterArguments, indexHolder = {i: 0}): Exclude<FormatterArgument, FormatterArgument[]>[] {\n\t\tlet out: ReturnType<typeof superFormatter> = [];\n\t\tconst regExp = /(\\*\\*|__)(.+?)\\1|(\\n)|(\\[.+?\\]\\(.*?\\))|un\\d|%\\d\\$.|%./g;\n\n\t\tlet lastIndex = 0;\n\t\tinput.replace(regExp, (match, p1: any, p2: any, p3: any, p4: string, offset: number, string: string) => {\n\t\t\t//console.table({match, p1, p2, offset, string});\n\n\t\t\tout.push(string.slice(lastIndex, offset));\n\n\t\t\tif(p1) {\n\t\t\t\t//offset += p1.length;\n        let element: HTMLElement;\n\t\t\t\tswitch(p1) {\n\t\t\t\t\tcase '**': {\n            element = document.createElement('b');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n          case '__': {\n            element = document.createElement('i');\n            break;\n          }\n\t\t\t\t}\n\n        element.append(...superFormatter(p2, args, indexHolder) as any);\n        out.push(element);\n\t\t\t} else if(p3) {\n\t\t\t\tout.push(document.createElement('br'));\n\t\t\t} else if(p4) {\n        const idx = p4.lastIndexOf(']');\n\t\t\t\tconst text = p4.slice(1, idx);\n        \n\t\t\t\tconst url = p4.slice(idx + 2, p4.length - 1);\n        let a: HTMLAnchorElement;\n\t\t\t\tif(url && matchUrlProtocol(url)) {\n          a = document.createElement('a');\n          const wrappedUrl = wrapUrl(url);\n          a.href = wrappedUrl.url;\n          if(wrappedUrl.onclick) a.setAttribute('onclick', wrappedUrl.onclick);\n          a.target = '_blank';\n\t\t\t\t} else {\n          a = args[indexHolder.i++] as HTMLAnchorElement;\n          a.textContent = ''; // reset content\n        }\n\n        a.append(...superFormatter(text, args, indexHolder) as any);\n\n\t\t\t\tout.push(a);\n\t\t\t} else if(args) {\n        pushNextArgument(out, args, indexHolder);\n\t\t\t}\n\n\t\t\tlastIndex = offset + match.length;\n\t\t\treturn '';\n\t\t});\n\t\n\t\tif(lastIndex !== input.length) {\n\t\t\tout.push(input.slice(lastIndex));\n\t\t}\n\n\t\treturn out;\n\t}\n\t\n\texport function format(key: LangPackKey, plain: true, args?: FormatterArguments): string;\n\texport function format(key: LangPackKey, plain?: false, args?: FormatterArguments): ReturnType<typeof superFormatter>;\n\texport function format(key: LangPackKey, plain = false, args?: FormatterArguments): ReturnType<typeof superFormatter> | string {\n\t\tconst str = strings.get(key);\n\t\tlet input: string;\n\t\tif(str) {\n\t\t\tif(str._ === 'langPackStringPluralized' && args?.length) {\n\t\t\t\tlet v = args[0] as number | string;\n\t\t\t\tif(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\n\t\t\t\tconst s = pluralRules.select(v);\n\t\t\t\t// @ts-ignore\n\t\t\t\tinput = str[s + '_value'] || str['other_value'];\n\t\t\t} else if(str._ === 'langPackString') {\n\t\t\t\tinput = str.value;\n\t\t\t} else {\n\t\t\t\t//input = '[' + key + ']';\n\t\t\t\tinput = key;\n\t\t\t}\n\t\t} else {\n\t\t\t//input = '[' + key + ']';\n\t\t\tinput = key;\n\t\t}\n\n    const result = superFormatter(input, args);\n    if(plain) { // * let's try a hack now... (don't want to replace []() entity)\n      return result.map((item) => item instanceof Node ? item.textContent : item).join('');\n    } else {\n      return result;\n    }\n\t\t\n\t\t/* if(plain) {\n\t\t\tif(args?.length) {\n\t\t\t\tconst regExp = /un\\d|%\\d\\$.|%./g;\n\t\t\t\tlet i = 0;\n\t\t\t\tinput = input.replace(regExp, (match, offset, string) => {\n\t\t\t\t\treturn '' + args[i++];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn input;\n\t\t} else {\n\t\t\treturn superFormatter(input, args);\n\t\t} */\n\t}\n\n\texport const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\n\n\texport type IntlElementBaseOptions = {\n\t\telement?: HTMLElement,\n\t\tproperty?: 'innerText' | 'innerHTML' | 'placeholder' | 'textContent',\n\t};\n\n\tabstract class IntlElementBase<Options extends IntlElementBaseOptions> {\n\t\tpublic element: IntlElementBaseOptions['element'];\n\t\tpublic property: IntlElementBaseOptions['property'];\n\t\n\t\tconstructor(options?: Options) {\n\t\t\tthis.element = options?.element || document.createElement('span');\n\t\t\tthis.element.classList.add('i18n');\n\t\t\t\n      this.property = options?.property;\n      if(options && ((options as any as IntlElementOptions).key || (options as any as IntlDateElementOptions).date)) {\n        this.update(options);\n      }\n\n\t\t\tweakMap.set(this.element, this);\n\t\t}\n\n\t\tabstract update(options?: Options): void;\n\t}\n\n\texport type IntlElementOptions = IntlElementBaseOptions & {\n\t\tkey?: LangPackKey,\n\t\targs?: FormatterArguments\n\t};\n\texport class IntlElement extends IntlElementBase<IntlElementOptions> {\n\t\tpublic key: IntlElementOptions['key'];\n\t\tpublic args: IntlElementOptions['args'];\n\n    constructor(options: IntlElementOptions = {}) {\n      super({...options, property: options.property ?? 'innerHTML'});\n    }\n\n\t\tpublic update(options?: IntlElementOptions) {\n\t\t\tsafeAssign(this, options);\n\t\n\t\t\tif(this.property === 'innerHTML') {\n\t\t\t\tthis.element.textContent = '';\n\t\t\t\tthis.element.append(...format(this.key, false, this.args) as any);\n\t\t\t} else {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst v = this.element[this.property];\n\t\t\t\tconst formatted = format(this.key, true, this.args);\n\n\t\t\t\t// * hasOwnProperty won't work here\n\t\t\t\tif(v === undefined) this.element.dataset[this.property] = formatted;\n\t\t\t\telse (this.element as HTMLInputElement)[this.property] = formatted;\n\t\t\t}\n\t\t}\n\n    public compareAndUpdate(options?: IntlElementOptions) {\n      if(this.key === options.key && deepEqual(this.args, options.args)) {\n        return;\n      }\n\n      return this.update(options);\n    }\n\t}\n\n  const cachedDateTimeFormats: Map<string, Intl.DateTimeFormat> = new Map();\n  function getDateTimeFormat(options: Intl.DateTimeFormatOptions = {}) {\n    let json = JSON.stringify(options);\n    let dateTimeFormat = cachedDateTimeFormats.get(json);\n    if(!dateTimeFormat) {\n      cachedDateTimeFormats.set(json, dateTimeFormat = new Intl.DateTimeFormat(lastRequestedLangCode + '-u-hc-' + timeFormat, options));\n    }\n\n    return dateTimeFormat;\n  }\n\n  export let amPmCache = {am: 'AM', pm: 'PM'};\n\texport type IntlDateElementOptions = IntlElementBaseOptions & {\n\t\tdate?: Date,\n\t\toptions: Intl.DateTimeFormatOptions\n\t};\n\texport class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\n\t\tpublic date: IntlDateElementOptions['date'];\n\t\tpublic options: IntlDateElementOptions['options'];\n\n    constructor(options: IntlDateElementOptions) {\n      super({...options, property: options.property ?? 'textContent'});\n    }\n\n\t\tpublic update(options?: IntlDateElementOptions) {\n\t\t\tsafeAssign(this, options);\n\t\n      let text: string;\n      if(this.options.hour && this.options.minute && Object.keys(this.options).length === 2/*  && false */) {\n        let hours = this.date.getHours();\n        text = ('0' + (timeFormat === 'h12' ? (hours % 12) || 12 : hours)).slice(-2) + ':' + ('0' + this.date.getMinutes()).slice(-2);\n        // if(this.options.second) {\n        //   text += ':' + ('0' + this.date.getSeconds()).slice(-2);\n        // }\n\n        if(timeFormat === 'h12') {\n          text += ' ' + (hours < 12 ? amPmCache.am : amPmCache.pm);\n        }\n      } else {\n        // * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\n        const dateTimeFormat = getDateTimeFormat(this.options);\n        text = capitalizeFirstLetter(dateTimeFormat.format(this.date));\n      }\n\n      (this.element as any)[this.property] = text;\n\t\t}\n\t}\n\n\texport function i18n(key: LangPackKey, args?: FormatterArguments) {\n\t\treturn new IntlElement({key, args}).element;\n\t}\n\t\n\texport function i18n_(options: IntlElementOptions) {\n\t\treturn new IntlElement(options).element;\n\t}\n\n\texport function _i18n(element: HTMLElement, key: LangPackKey, args?: FormatterArguments, property?: IntlElementOptions['property']) {\n\t\treturn new IntlElement({element, key, args, property}).element;\n\t}\n}\n\nexport {I18n};\nexport default I18n;\n\nconst i18n = I18n.i18n;\nexport {i18n};\n\nconst i18n_ = I18n.i18n_;\nexport {i18n_};\n\nconst _i18n = I18n._i18n;\nexport {_i18n};\n\nexport function joinElementsWith(elements: (Node | string)[], joiner: typeof elements[0] | ((isLast: boolean) => typeof elements[0])) {\n\tconst arr = elements.slice(0, 1);\n  for(let i = 1; i < elements.length; ++i) {\n    const isLast = (elements.length - 1) === i;\n    arr.push(typeof(joiner) === 'function' ? joiner(isLast) : joiner);\n    arr.push(elements[i]);\n  }\n\n\treturn arr;\n}\n\n\nexport function join(elements: (Node | string)[], useLast: boolean, plain: true): string;\nexport function join(elements: (Node | string)[], useLast?: boolean, plain?: false): (string | Node)[];\nexport function join(elements: (Node | string)[], useLast: boolean, plain: boolean): string | (string | Node)[];\nexport function join(elements: (Node | string)[], useLast = true, plain?: boolean): string | (string | Node)[] {\n\tconst joined = joinElementsWith(elements, (isLast) => {\n    const langPackKey: LangPackKey = isLast && useLast ? 'AutoDownloadSettings.LastDelimeter' : 'AutoDownloadSettings.Delimeter';\n    return plain ? I18n.format(langPackKey, true) : i18n(langPackKey);\n  });\n\n  return plain ? joined.join('') : joined;\n}\n\nMOUNT_CLASS_TO.I18n = I18n;\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport I18n, { i18n } from \"../lib/langPack\";\r\n\r\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nexport const ONE_DAY = 86400;\r\n\r\n// https://stackoverflow.com/a/6117889\r\nexport const getWeekNumber = (date: Date) => {\r\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n  const dayNum = d.getUTCDay() || 7;\r\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\r\n};\r\n\r\nexport function formatDateAccordingToTodayNew(time: Date) {\r\n  const today = new Date();\r\n  const now = today.getTime() / 1000 | 0;\r\n  const timestamp = time.getTime() / 1000 | 0;\r\n\r\n  const options: Intl.DateTimeFormatOptions = {};\r\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\r\n    options.hour = options.minute = '2-digit';\r\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\r\n    options.year = options.day = 'numeric';\r\n    options.month = '2-digit';\r\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\r\n    options.weekday = 'short';\r\n  } else { // same year\r\n    options.month = 'short';\r\n    options.day = 'numeric';\r\n  }\r\n\r\n  return new I18n.IntlDateElement({\r\n    date: time,\r\n    options\r\n  }).element;\r\n}\r\n\r\nexport function formatFullSentTimeRaw(timestamp: number, options: {\r\n  capitalize?: boolean\r\n} = {}) {\r\n  const date = new Date();\r\n  const time = new Date(timestamp * 1000);\r\n  const now = date.getTime() / 1000;\r\n\r\n  const timeEl = formatTime(time);\r\n\r\n  let dateEl: Node | string;\r\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\r\n    dateEl = i18n(options.capitalize ? 'Date.Today' : 'Peer.Status.Today');\r\n  } else if((now - timestamp) < (ONE_DAY * 2) && (date.getDate() - 1) === time.getDate()) { // yesterday\r\n    dateEl = i18n(options.capitalize ? 'Yesterday' : 'Peer.Status.Yesterday');\r\n\r\n    if(options.capitalize) {\r\n      (dateEl as HTMLElement).style.textTransform = 'capitalize';\r\n    }\r\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\r\n    dateEl = new I18n.IntlDateElement({\r\n      date: time,\r\n      options: {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      }\r\n    }).element;\r\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate() + ', ' + time.getFullYear();\r\n  } else {\r\n    dateEl = new I18n.IntlDateElement({\r\n      date: time,\r\n      options: {\r\n        month: 'short',\r\n        day: 'numeric'\r\n      }\r\n    }).element;\r\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate();\r\n  }\r\n\r\n  return {dateEl, timeEl};\r\n}\r\n\r\nexport function formatFullSentTime(timestamp: number) {\r\n  const {dateEl, timeEl} = formatFullSentTimeRaw(timestamp, {\r\n    capitalize: true\r\n  });\r\n\r\n  const fragment = document.createDocumentFragment();\r\n  fragment.append(dateEl, ' ', i18n('ScheduleController.at'), ' ', timeEl);\r\n  return fragment;\r\n}\r\n\r\nexport function formatTime(date: Date) {\r\n  return new I18n.IntlDateElement({\r\n    date,\r\n    options: {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }\r\n  }).element;\r\n}\r\n\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\r\n\r\nexport const getFullDate = (date: Date, options: Partial<{\r\n  noTime: true, \r\n  noSeconds: true,\r\n  monthAsNumber: true,\r\n  leadingZero: true\r\n}> = {}) => {\r\n  const joiner = options.monthAsNumber ? '.' : ' ';\r\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\r\n\r\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) + \r\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) + \r\n    joiner + date.getFullYear() + \r\n    (options.noTime ? '' : ', ' + time);\r\n};\r\n\r\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\r\nconst minYear = 2013;\r\nconst yearPattern = new RegExp(\"20[0-9]{1,2}\");\r\nconst monthYearOrDayPattern = new RegExp(\"(\\\\w{3,}) ([0-9]{0,4})\", 'i');\r\nconst yearOrDayAndMonthPattern = new RegExp(\"([0-9]{0,4}) (\\\\w{2,})\", 'i');\r\nconst shortDate = new RegExp(\"^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\r\nconst longDate = new RegExp(\"^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$\", 'i');\r\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nexport type DateData = {\r\n  title: string,\r\n  minDate: number,\r\n  maxDate: number,\r\n};\r\nexport function fillTipDates(query: string, dates: DateData[]) {\r\n  const q = query.trim().toLowerCase();\r\n\r\n  if(q.length < 3) {\r\n    return;\r\n  }\r\n\r\n  if(\"today\".indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: 'Today',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  if(\"yesterday\".indexOf(q) === 0) {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime() - 86400000;\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 86400001;\r\n    dates.push({\r\n      title: 'Yesterday',\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  const dayOfWeek = getDayOfWeek(q);\r\n  if(dayOfWeek >= 0) {\r\n    const date = new Date();\r\n    const now = date.getTime();\r\n    const currentDay = date.getDay();\r\n    const distance = dayOfWeek - currentDay;\r\n    date.setDate(date.getDate() + distance);\r\n    if(date.getTime() > now) {\r\n      date.setTime(date.getTime() - 604800000);\r\n    }\r\n    const year = date.getFullYear()\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    date.setFullYear(year, month, day);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const minDate = date.getTime();\r\n    date.setFullYear(year, month, day + 1);\r\n    date.setHours(0, 0, 0);\r\n\r\n    const maxDate = date.getTime() - 1;\r\n    dates.push({\r\n      title: formatWeekLong(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n    return;\r\n  }\r\n\r\n  let matches: any[];\r\n  if((matches = shortDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const k = parseInt(g1);\r\n    const k1 = parseInt(g2);\r\n    if(k > 0 && k <= 31) {\r\n      if(k1 >= minYear && k <= 12) {\r\n        const selectedYear = k1;\r\n        const month = k - 1;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      } else if (k1 <= 12) {\r\n        const day = k - 1;\r\n        const month = k1 - 1;\r\n        createForDayMonth(dates, day, month);\r\n      }\r\n    } else if (k >= minYear && k1 <= 12) {\r\n      const selectedYear = k;\r\n      const month = k1 - 1;\r\n      createForMonthYear(dates, month, selectedYear);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = longDate.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[3];\r\n    const g3 = matches[5];\r\n    if(!matches[2] === matches[4]) {\r\n      return;\r\n    }\r\n\r\n    const day = parseInt(g1);\r\n    const month = parseInt(g2) - 1;\r\n    let year = parseInt(g3);\r\n    if(year >= 10 && year <= 99) {\r\n      year += 2000;\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(year, month, day);\r\n      date.setHours(0, 0, 0);\r\n      \r\n      const minDate = date.getTime();\r\n      date.setFullYear(year, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: formatterYearMax(minDate),\r\n        minDate,\r\n        maxDate\r\n      });\r\n      return;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = yearPattern.exec(q)) !== null) {\r\n    let selectedYear = +q;\r\n    const currentYear = new Date().getFullYear();\r\n    if(selectedYear < minYear) {\r\n      selectedYear = minYear;\r\n      for(let i = currentYear; i >= selectedYear; i--) {\r\n        const date = new Date();\r\n        date.setFullYear(i, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const minDate = date.getTime();\r\n        date.setFullYear(i + 1, 0, 1);\r\n        date.setHours(0, 0, 0);\r\n\r\n        const maxDate = date.getTime() - 1;\r\n        dates.push({\r\n          title: '' + i,\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    } else if(selectedYear <= currentYear) {\r\n      const date = new Date();\r\n      date.setFullYear(selectedYear, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const minDate = date.getTime();\r\n      date.setFullYear(selectedYear + 1, 0, 1);\r\n      date.setHours(0, 0, 0);\r\n\r\n      const maxDate = date.getTime() - 1;\r\n      dates.push({\r\n        title: '' + selectedYear,\r\n        minDate,\r\n        maxDate\r\n      });\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g1);\r\n    if(month >= 0) {\r\n      const k = +g2;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if(k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\r\n    const g1 = matches[1];\r\n    const g2 = matches[2];\r\n    const month = getMonth(g2);\r\n    if(month >= 0) {\r\n      const k = +g1;\r\n      if(k > 0 && k <= 31) {\r\n        const day = k - 1;\r\n        createForDayMonth(dates, day, month);\r\n        return;\r\n      } else if (k >= minYear) {\r\n        const selectedYear = k;\r\n        createForMonthYear(dates, month, selectedYear);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\r\n  const currentYear = new Date().getFullYear();\r\n  const today = Date.now();\r\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\r\n    const date = new Date();\r\n    date.setFullYear(selectedYear, month, 1);\r\n    date.setHours(0, 0, 0);\r\n    const minDate = date.getTime();\r\n    if(minDate > today) {\r\n      return;\r\n    }\r\n    date.setMonth(date.getMonth() + 1);\r\n    const maxDate = date.getTime() - 1;\r\n\r\n    dates.push({\r\n      title: formatterMonthYear(minDate),\r\n      minDate,\r\n      maxDate\r\n    });\r\n  }\r\n}\r\n\r\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\r\n  if(validDateForMonth(day, month)) {\r\n    const currentYear = new Date().getFullYear();\r\n    const today = Date.now();\r\n    \r\n    for(let i = currentYear; i >= minYear; i--) {\r\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\r\n        continue;\r\n      }\r\n\r\n      const date = new Date();\r\n      date.setFullYear(i, month, day + 1);\r\n      date.setHours(0, 0, 0);\r\n      \r\n      const minDate = date.getTime();\r\n      if(minDate > today) {\r\n        continue;\r\n      }\r\n\r\n      date.setFullYear(i, month, day + 2);\r\n      date.setHours(0, 0, 0);\r\n      const maxDate = date.getTime() - 1;\r\n      if(i === currentYear) {\r\n        dates.push({\r\n          title: formatterDayMonth(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      } else {\r\n        dates.push({\r\n          title: formatterYearMax(minDate),\r\n          minDate,\r\n          maxDate\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatterMonthYear(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getFullYear();\r\n}\r\n\r\nfunction formatterDayMonth(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getDate();\r\n}\r\n\r\nfunction formatterYearMax(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\r\n}\r\n\r\nfunction formatWeekLong(timestamp: number) {\r\n  const date = new Date(timestamp);\r\n  return days[date.getDay()];\r\n}\r\n\r\nfunction validDateForMonth(day: number, month: number) {\r\n  if(month >= 0 && month < 12) {\r\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isLeapYear(year: number) {\r\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n}\r\n\r\nfunction getMonth(q: string) {\r\n  /* String[] months = new String[]{\r\n          LocaleController.getString(\"January\", R.string.January).toLowerCase(),\r\n          LocaleController.getString(\"February\", R.string.February).toLowerCase(),\r\n          LocaleController.getString(\"March\", R.string.March).toLowerCase(),\r\n          LocaleController.getString(\"April\", R.string.April).toLowerCase(),\r\n          LocaleController.getString(\"May\", R.string.May).toLowerCase(),\r\n          LocaleController.getString(\"June\", R.string.June).toLowerCase(),\r\n          LocaleController.getString(\"July\", R.string.July).toLowerCase(),\r\n          LocaleController.getString(\"August\", R.string.August).toLowerCase(),\r\n          LocaleController.getString(\"September\", R.string.September).toLowerCase(),\r\n          LocaleController.getString(\"October\", R.string.October).toLowerCase(),\r\n          LocaleController.getString(\"November\", R.string.November).toLowerCase(),\r\n          LocaleController.getString(\"December\", R.string.December).toLowerCase()\r\n  }; */\r\n\r\n  /* String[] monthsEng = new String[12];\r\n  Calendar c = Calendar.getInstance();\r\n  for (int i = 1; i <= 12; i++) {\r\n      c.set(0, 0, 0, 0, 0, 0);\r\n      c.set(Calendar.MONTH, i);\r\n      monthsEng[i - 1] = c.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.ENGLISH).toLowerCase();\r\n  } */\r\n\r\n  q = q.toLowerCase();\r\n  for(let i = 0; i < 12; i++) {\r\n    const month = months[i].toLowerCase();\r\n    if(month.indexOf(q) === 0) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction getDayOfWeek(q: string) {\r\n  const c = new Date();\r\n  if(q.length <= 3) {\r\n    return -1;\r\n  }\r\n  \r\n  for(let i = 0; i < 7; i++) {\r\n    c.setDate(c.getDate() + 1);\r\n    \r\n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\r\n      return c.getDay();\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\r\n","/**\n * Will be used for FILE_REFERENCE_EXPIRED\n * @param key \n * @param wasObject \n * @param newObject \n */\n export default function safeReplaceArrayInObject<K>(key: K, wasObject: any, newObject: any) {\n  if('byteLength' in newObject[key]) { // Uint8Array\n    newObject[key] = [...newObject[key]];\n  }\n\n  if(wasObject && wasObject[key] !== newObject[key]) {\n    wasObject[key].length = newObject[key].length;\n    (newObject[key] as any[]).forEach((v, i) => {\n      wasObject[key][i] = v;\n    });\n\n    /* wasObject[key].set(newObject[key]); */\n    newObject[key] = wasObject[key];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { AccountWallPapers, Document, MessagesSavedGifs, PhotoSize, WallPaper } from '../../layer';\nimport { ReferenceContext } from '../mtproto/referenceDatabase';\nimport { getFullDate } from '../../helpers/date';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport { AppManager } from './manager';\nimport wrapPlainText from '../richTextProcessor/wrapPlainText';\nimport assumeType from '../../helpers/assumeType';\nimport { getEnvironment } from '../../environment/utils';\nimport { isServiceWorkerOnline } from '../mtproto/mtproto.worker';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport getDocumentURL from './utils/docs/getDocumentURL';\nimport type { ThumbCache } from '../storages/thumbs';\n\nexport type MyDocument = Document.document;\n\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\n\nconst EXTENSION_MIME_TYPE_MAP = {\n  mov: 'video/quicktime',\n  gif: 'image/gif',\n  pdf: 'application/pdf',\n};\n\ntype WallPaperId = WallPaper.wallPaper['id'];\n\nlet uploadWallPaperTempId = 0;\n\nexport class AppDocsManager extends AppManager {\n  private docs: {[docId: DocId]: MyDocument};\n\n  private stickerCachedThumbs: {[docId: DocId]: {[toneIndex: number]: {url: string, w: number, h: number}}};\n\n  private uploadingWallPapers: {[id: WallPaperId]: {cacheContext: ThumbCache, file: File}};\n\n  protected after() {\n    this.docs = {};\n    this.stickerCachedThumbs = {};\n    this.uploadingWallPapers = {};\n\n    MTProtoMessagePort.getInstance<false>().addEventListener('serviceWorkerOnline', (online) => {\n      if(!online) {\n        this.onServiceWorkerFail();\n      }\n    });\n  }\n\n  private onServiceWorkerFail = () => {\n    for(const id in this.docs) {\n      const doc = this.docs[id];\n\n      if(doc.supportsStreaming) {\n        delete doc.supportsStreaming;\n        this.thumbsStorage.deleteCacheContext(doc);\n      }\n    }\n  };\n\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\n    if(!doc || doc._ === 'documentEmpty') {\n      return;\n    }\n\n    const oldDoc = this.docs[doc.id];\n\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\n      this.referenceDatabase.saveContext(doc.file_reference, context);\n    }\n    \n    //console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\n    // if(oldDoc) {\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\n    //     if(doc.thumbs) {\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\n    //         apiDoc.thumbs[0] = d.thumbs[0];\n    //       } */\n    //     }\n\n    //   //}\n\n    //   return oldDoc;\n\n    //   //return Object.assign(d, apiDoc, context);\n    //   //return context ? Object.assign(d, context) : d;\n    // }\n\n    if(!oldDoc) {\n      this.docs[doc.id] = doc;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name', \n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle', \n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw', \n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\n\n    for(let i = 0, length = doc.attributes.length; i < length; ++i) {\n      const attribute = doc.attributes[i];\n      switch(attribute._) {\n        case 'documentAttributeFilename':\n          doc.file_name = wrapPlainText(attribute.file_name);\n          break;\n\n        case 'documentAttributeAudio':\n          doc.duration = attribute.duration;\n          doc.type = attribute.pFlags.voice && doc.mime_type === 'audio/ogg' ? 'voice' : 'audio';\n          /* if(apiDoc.type === 'audio') {\n            apiDoc.supportsStreaming = true;\n          } */\n          break;\n\n        case 'documentAttributeVideo':\n          doc.duration = attribute.duration;\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          //apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\n            doc.type = 'round';\n          } else /* if(apiDoc.thumbs) */ {\n            doc.type = 'video';\n          }\n          break;\n\n        case 'documentAttributeSticker':\n          if(attribute.alt !== undefined) {\n            doc.stickerEmojiRaw = attribute.alt;\n          }\n\n          if(attribute.stickerset) {\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\n              delete attribute.stickerset;\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\n              doc.stickerSetInput = attribute.stickerset;\n            }\n          }\n\n          // * there can be no thumbs, then it is a document\n          if(/* apiDoc.thumbs &&  */doc.mime_type === 'image/webp' && (doc.thumbs || getEnvironment().IS_WEBP_SUPPORTED)) {\n            doc.type = 'sticker';\n            doc.sticker = 1;\n          } else if(doc.mime_type === 'video/webm') {\n            if(!getEnvironment().IS_WEBM_SUPPORTED) {\n              return;\n            }\n\n            doc.type = 'sticker';\n            doc.sticker = 3;\n            doc.animated = true;\n          }\n          break;\n\n        case 'documentAttributeImageSize':\n          doc.type = 'photo';\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          break;\n\n        case 'documentAttributeAnimated':\n          if((doc.mime_type === 'image/gif' || doc.mime_type === 'video/mp4')/*  && apiDoc.thumbs */) {\n            doc.type = 'gif';\n          }\n\n          doc.animated = true;\n          break;\n      }\n    }\n    \n    if(!doc.mime_type) {\n      const ext = (doc.file_name || '').split('.').pop();\n      // @ts-ignore\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase()];\n      if(mappedMimeType) {\n        doc.mime_type = mappedMimeType;\n      } else {\n        switch(doc.type) {\n          case 'gif':\n          case 'video':\n          case 'round':\n            doc.mime_type = 'video/mp4';\n            break;\n          case 'sticker':\n            doc.mime_type = 'image/webp';\n            break;\n          case 'audio':\n            doc.mime_type = 'audio/mpeg';\n            break;\n          case 'voice':\n            doc.mime_type = 'audio/ogg';\n            break;\n          default:\n            doc.mime_type = 'application/octet-stream';\n            break;\n        }\n      }\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\n      doc.type = 'pdf';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\n      doc.type = 'gif';\n    }\n\n    if(doc.type === 'voice' || doc.type === 'round') {\n      // browser will identify extension\n      doc.file_name = doc.type + '_' + getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\n    }\n\n    if(isServiceWorkerOnline()) {\n      if((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video'/*  || doc.mime_type.indexOf('video/') === 0 */) {\n        doc.supportsStreaming = true;\n        \n        const cacheContext = this.thumbsStorage.getCacheContext(doc);\n        if(!cacheContext.url) {\n          this.thumbsStorage.setCacheContextURL(doc, undefined, getDocumentURL(doc), 0);\n        }\n      }\n    }\n\n    // for testing purposes\n    // doc.supportsStreaming = false;\n    // doc.url = ''; // * this will break upload urls\n    \n    if(!doc.file_name) {\n      doc.file_name = '';\n    }\n\n    if(doc.mime_type === 'application/x-tgsticker' && doc.file_name === 'AnimatedSticker.tgs') {\n      doc.type = 'sticker';\n      doc.animated = true;\n      doc.sticker = 2;\n    }\n\n    /* if(!doc.url) {\n      doc.url = this.getFileURL(doc);\n    } */\n\n    if(oldDoc) {\n      return Object.assign(oldDoc, doc);\n    }\n\n    return doc;\n  }\n  \n  public getDoc(docId: DocId | MyDocument): MyDocument {\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\n  }\n\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean) {\n    return this.apiFileManager.downloadMedia({\n      media: doc,\n      queueId,\n      onlyCache\n    });\n  }\n\n  public getLottieCachedThumb(docId: DocId, toneIndex: number) {\n    const cached = this.stickerCachedThumbs[docId];\n    return cached && cached[toneIndex];\n  }\n\n  public saveLottiePreview(docId: DocId, blob: Blob, width: number, height: number, toneIndex: number) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const cached = this.stickerCachedThumbs[doc.id] ??= {};\n  \n    const thumb = cached[toneIndex];\n    if(thumb && thumb.w >= width && thumb.h >= height) {\n      return;\n    }\n\n    cached[toneIndex] = {\n      url: URL.createObjectURL(blob),\n      w: width,\n      h: height\n    };\n  }\n\n  public saveWebPConvertedStrippedThumb(docId: DocId, bytes: Uint8Array) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const thumb = doc.thumbs && doc.thumbs.find((thumb) => thumb._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n    if(!thumb) {\n      return;\n    }\n\n    doc.pFlags.stickerThumbConverted = true;\n    thumb.bytes = bytes;\n  }\n\n  public getWallPapers() {\n    return this.apiManager.invokeApiHashable({method: 'account.getWallPapers'}).then((accountWallpapers) => {\n      const wallPapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers as WallPaper.wallPaper[];\n      wallPapers.forEach((wallPaper) => {\n        wallPaper.document = this.saveDoc(wallPaper.document);\n      });\n\n      return wallPapers;\n    });\n  }\n\n  public prepareWallPaperUpload(file: File) {\n    const id = 'wallpaper-upload-' + ++uploadWallPaperTempId;\n\n    const thumb = {\n      _: 'photoSize',\n      h: 0,\n      w: 0,\n      location: {} as any,\n      size: file.size,\n      type: 'full',\n    } as PhotoSize.photoSize;\n    let document: MyDocument = {\n      _: 'document',\n      access_hash: '',\n      attributes: [],\n      dc_id: 0,\n      file_reference: [],\n      id,\n      mime_type: file.type,\n      size: file.size,\n      date: Date.now() / 1000,\n      pFlags: {},\n      thumbs: [thumb],\n      file_name: file.name\n    };\n\n    document = this.saveDoc(document);\n\n    const cacheContext = this.thumbsStorage.setCacheContextURL(document, undefined, URL.createObjectURL(file), file.size);\n\n    const wallpaper: WallPaper.wallPaper = {\n      _: 'wallPaper',\n      access_hash: '',\n      document: document,\n      id,\n      slug: id,\n      pFlags: {}\n    };\n\n    this.uploadingWallPapers[id] = {\n      cacheContext,\n      file,\n    };\n\n    return wallpaper;\n  }\n\n  public uploadWallPaper(id: WallPaperId) {\n    const {cacheContext, file} = this.uploadingWallPapers[id];\n    delete this.uploadingWallPapers[id];\n\n    const upload = this.apiFileManager.upload({file, fileName: file.name});\n    return upload.then((inputFile) => {\n      return this.apiManager.invokeApi('account.uploadWallPaper', {\n        file: inputFile,\n        mime_type: file.type,\n        settings: {\n          _: 'wallPaperSettings',\n          \n        }\n      }).then((wallPaper) => {\n        assumeType<WallPaper.wallPaper>(wallPaper);\n        wallPaper.document = this.saveDoc(wallPaper.document);\n        this.thumbsStorage.setCacheContextURL(wallPaper.document, undefined, cacheContext.url, cacheContext.downloaded);\n\n        return wallPaper;\n      });\n    });\n  }\n\n  public getGifs() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getSavedGifs',\n      processResult: (res) => {\n        assumeType<MessagesSavedGifs.messagesSavedGifs>(res);\n        return res.gifs.map((doc) => this.saveDoc(doc));\n      }\n    });\n  }\n\n  public requestDocPart(docId: DocId, dcId: number, offset: number, limit: number) {\n    const doc = this.getDoc(docId);\n    return this.apiFileManager.requestFilePart(dcId, getDocumentInput(doc), offset, limit);\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { FileURLType, getFileURL } from \"../../../../helpers/fileName\";\r\nimport { Document, PhotoSize } from \"../../../../layer\";\r\nimport getDocumentDownloadOptions from \"./getDocumentDownloadOptions\";\r\n\r\nexport default function getDocumentURL(doc: Document.document, download = false, thumb?: PhotoSize.photoSize) {\r\n  let type: FileURLType;\r\n  if(download) {\r\n    type = 'download';\r\n  } else if(thumb) {\r\n    type = 'thumb';\r\n  } else if(doc.supportsStreaming) {\r\n    type = 'stream';\r\n  } else {\r\n    type = 'document';\r\n  }\r\n\r\n  return getFileURL(type, getDocumentDownloadOptions(doc, thumb));\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity, DraftMessage, MessagesSaveDraft } from \"../../layer\";\r\nimport tsNow from \"../../helpers/tsNow\";\r\nimport stateStorage from \"../stateStorage\";\r\nimport assumeType from \"../../helpers/assumeType\";\r\nimport isObject from \"../../helpers/object/isObject\";\r\nimport deepEqual from \"../../helpers/object/deepEqual\";\r\nimport { AppManager } from \"./manager\";\r\nimport getPeerId from \"./utils/peers/getPeerId\";\r\nimport generateMessageId from \"./utils/messageId/generateMessageId\";\r\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\r\n\r\nexport type MyDraftMessage = DraftMessage.draftMessage;\r\n\r\nexport class AppDraftsManager extends AppManager {\r\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage} = {};\r\n  private getAllDraftPromise: Promise<void> = null;\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateDraftMessage: (update) => {\r\n        const peerId = getPeerId(update.peer);\r\n        this.saveDraft(peerId, update.threadId, update.draft, {notify: true});\r\n      }\r\n    });\r\n\r\n    /* return  */stateStorage.get('drafts').then((drafts) => {\r\n      this.drafts = drafts || {};\r\n    });\r\n  }\r\n\r\n  private getKey(peerId: PeerId, threadId?: number) {\r\n    return '' + peerId + (threadId ? '_' + threadId : '');\r\n  }\r\n\r\n  public getDraft(peerId: PeerId, threadId?: number) {\r\n    return this.drafts[this.getKey(peerId, threadId)];\r\n  }\r\n\r\n  public addMissedDialogs() {\r\n    return this.getAllDrafts().then(() => {\r\n      for(const key in this.drafts) {\r\n        if(key.indexOf('_') !== -1) { // exclude threads\r\n          continue;\r\n        }\r\n\r\n        const peerId = key.toPeerId();\r\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\r\n        if(!dialog) {\r\n          this.appMessagesManager.reloadConversation(peerId);\r\n          /* const dialog = appMessagesManager.generateDialog(peerId);\r\n          dialog.draft = this.drafts[key];\r\n          appMessagesManager.saveConversation(dialog);\r\n          appMessagesManager.newDialogsToHandle[peerId] = dialog;\r\n          appMessagesManager.scheduleHandleNewDialogs(); */\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAllDrafts() {\r\n    return this.getAllDraftPromise || (\r\n      this.getAllDraftPromise = this.apiManager.invokeApi('messages.getAllDrafts')\r\n      .then((updates) => {\r\n        const p = this.apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\r\n        p.then(() => {\r\n          this.apiUpdatesManager.processUpdateMessage(updates);\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  public saveDraft(peerId: PeerId, threadId: number, apiDraft: DraftMessage, options: Partial<{\r\n    notify: boolean,\r\n    force: boolean\r\n  }> = {}) {\r\n    const draft = this.processApiDraft(apiDraft);\r\n\r\n    const key = this.getKey(peerId, threadId);\r\n    if(draft) {\r\n      this.drafts[key] = draft;\r\n    } else {\r\n      delete this.drafts[key];\r\n    }\r\n\r\n    stateStorage.set({\r\n      drafts: this.drafts\r\n    });\r\n\r\n    if(options.notify) {\r\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\r\n      this.rootScope.dispatchEvent('draft_updated', {\r\n        peerId,\r\n        threadId,\r\n        draft,\r\n        force: options.force\r\n      });\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  private draftsAreEqual(draft1: DraftMessage, draft2: DraftMessage) {\r\n    if(typeof(draft1) !== typeof(draft2)) {\r\n      return false;\r\n    }\r\n\r\n    if(!isObject(draft1)) {\r\n      return true;\r\n    }\r\n\r\n    if(draft1._ !== draft2._) {\r\n      return false;\r\n    }\r\n  \r\n    if(draft1._ === 'draftMessage' && draft2._ === draft1._) {\r\n      if(draft1.reply_to_msg_id !== draft2.reply_to_msg_id) {\r\n        return false;\r\n      }\r\n  \r\n      if(!deepEqual(draft1.entities, draft2.entities)) {\r\n        return false;\r\n      }\r\n  \r\n      if(draft1.message !== draft2.message) {\r\n        return false;\r\n      }\r\n  \r\n      if(draft1.pFlags.no_webpage !== draft2.pFlags.no_webpage) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private isEmptyDraft(draft: DraftMessage) {\r\n    if(!draft || draft._ === 'draftMessageEmpty') {\r\n      return true;\r\n    }\r\n    \r\n    if(draft.reply_to_msg_id > 0) {\r\n      return false;\r\n    }\r\n    \r\n    if(!draft.message.length) {\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  private processApiDraft(draft: DraftMessage): MyDraftMessage {\r\n    if(!draft || draft._ !== 'draftMessage') {\r\n      return undefined;\r\n    }\r\n\r\n    if(draft.reply_to_msg_id) {\r\n      draft.reply_to_msg_id = generateMessageId(draft.reply_to_msg_id);\r\n    }\r\n\r\n    return draft;\r\n  }\r\n\r\n  public async syncDraft(peerId: PeerId, threadId: number, localDraft?: DraftMessage, saveOnServer = true, force = false) {\r\n    // console.warn(dT(), 'sync draft', peerID)\r\n    const serverDraft = this.getDraft(peerId, threadId);\r\n    if(this.draftsAreEqual(serverDraft, localDraft)) {\r\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\r\n      return true;\r\n    }\r\n\r\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\r\n    let params: MessagesSaveDraft = {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      message: ''\r\n    };\r\n\r\n    let draftObj: DraftMessage;\r\n    if(this.isEmptyDraft(localDraft)) {\r\n      draftObj = {_: 'draftMessageEmpty'};\r\n    } else {\r\n      assumeType<DraftMessage.draftMessage>(localDraft);\r\n      let message = localDraft.message;\r\n      let entities: MessageEntity[] = localDraft.entities;\r\n\r\n      if(localDraft.reply_to_msg_id) {\r\n        params.reply_to_msg_id = getServerMessageId(localDraft.reply_to_msg_id);\r\n      }\r\n\r\n      if(entities?.length) {\r\n        params.entities = this.appMessagesManager.getInputEntities(entities);\r\n      }\r\n\r\n      if(localDraft.pFlags.no_webpage) {\r\n        params.no_webpage = localDraft.pFlags.no_webpage;\r\n      }\r\n\r\n      params.message = message;\r\n    }\r\n\r\n    const saveLocalDraft = draftObj || localDraft;\r\n    saveLocalDraft.date = tsNow(true) + this.timeManager.getServerTimeOffset();\r\n\r\n    this.saveDraft(peerId, threadId, saveLocalDraft, {notify: true, force});\r\n\r\n    if(saveOnServer && !threadId) {\r\n      return this.apiManager.invokeApi('messages.saveDraft', params);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public clearAllDrafts() {\r\n    return this.apiManager.invokeApi('messages.clearAllDrafts').then((bool) => {\r\n      if(!bool) {\r\n        return;\r\n      }\r\n\r\n      for(const combined in this.drafts) {\r\n        const [peerId, threadId] = combined.split('_');\r\n        this.rootScope.dispatchEvent('draft_updated', {\r\n          peerId: peerId.toPeerId(),\r\n          threadId: threadId ? +threadId : undefined,\r\n          draft: undefined\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearDraft(peerId: PeerId, threadId: number) {\r\n    const emptyDraft: DraftMessage.draftMessageEmpty = {\r\n      _: 'draftMessageEmpty'\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, emptyDraft as any, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, emptyDraft, {notify: true, force: true});  \r\n    }\r\n  }\r\n\r\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\r\n    const draft: DraftMessage.draftMessage = {\r\n      _: 'draftMessage',\r\n      date: Date.now() / 1000 | 0,\r\n      message,\r\n      pFlags: {},\r\n      entities\r\n    };\r\n\r\n    if(threadId) {\r\n      this.syncDraft(peerId, threadId, draft, false, true);\r\n    } else {\r\n      this.saveDraft(peerId, threadId, draft, {notify: true, force: true});  \r\n    }\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from \"../../config/app\";\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\nimport isObject from \"../../helpers/object/isObject\";\nimport validateInitObject from \"../../helpers/object/validateInitObject\";\nimport I18n from \"../langPack\";\nimport fixEmoji from \"../richTextProcessor/fixEmoji\";\nimport SearchIndex from \"../searchIndex\";\nimport stateStorage from \"../stateStorage\";\nimport { AppManager } from \"./manager\";\n\ntype EmojiLangPack = {\n  keywords: {\n    [keyword: string]: string[],\n  },\n  version: number,\n  langCode: string\n};\n\nconst EMOJI_LANG_PACK: EmojiLangPack = {\n  keywords: {},\n  version: 0,\n  langCode: App.langPackCode\n};\n\nconst RECENT_MAX_LENGTH = 36;\n\nexport class AppEmojiManager extends AppManager {\n  private static POPULAR_EMOJI = [\"😂\", \"😘\", \"❤️\", \"😍\", \"😊\", \"😁\", \"👍\", \"☺️\", \"😔\", \"😄\", \"😭\", \"💋\", \"😒\", \"😳\", \"😜\", \"🙈\", \"😉\", \"😃\", \"😢\", \"😝\", \"😱\", \"😡\", \"😏\", \"😞\", \"😅\", \"😚\", \"🙊\", \"😌\", \"😀\", \"😋\", \"😆\", \"👌\", \"😐\", \"😕\"];\n  private keywordLangPacks: {\n    [langCode: string]: EmojiLangPack\n  } = {};\n\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\n\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\n\n  private recent: string[];\n  private getRecentEmojisPromise: Promise<AppEmojiManager['recent']>;\n\n  /* public getPopularEmoji() {\n    return stateStorage.get('emojis_popular').then((popEmojis) => {\n      var result = []\n      if (popEmojis && popEmojis.length) {\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\n        }\n        callback(result)\n        return\n      }\n\n      return stateStorage.get('emojis_recent').then((recentEmojis) => {\n        recentEmojis = recentEmojis || popular || []\n        var shortcut\n        var code\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\n          shortcut = recentEmojis[i]\n          if (Array.isArray(shortcut)) {\n            shortcut = shortcut[0]\n          }\n          if (shortcut && typeof shortcut === 'string') {\n            if (shortcut.charAt(0) == ':') {\n              shortcut = shortcut.substr(1, shortcut.length - 2)\n            }\n            if (code = shortcuts[shortcut]) {\n              result.push({code: code, rate: 1})\n            }\n          }\n        }\n        callback(result)\n      });\n    });\n  }\n\n  function pushPopularEmoji (code) {\n    getPopularEmoji(function (popularEmoji) {\n      var exists = false\n      var count = popularEmoji.length\n      var result = []\n      for (var i = 0; i < count; i++) {\n        if (popularEmoji[i].code == code) {\n          exists = true\n          popularEmoji[i].rate++\n        }\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\n      }\n      if (exists) {\n        result.sort(function (a, b) {\n          return b[1] - a[1]\n        })\n      } else {\n        if (result.length > 41) {\n          result = result.slice(0, 41)\n        }\n        result.push([code, 1])\n      }\n      ConfigStorage.set({emojis_popular: result})\n    })\n  } */\n\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\n    const promise = this.getKeywordsPromises[langCode];\n    if(promise) {\n      return promise;\n    }\n\n    const storageKey: any = 'emojiKeywords_' + langCode;\n    return this.getKeywordsPromises[langCode] = stateStorage.get(storageKey).then((pack: EmojiLangPack) => {\n      if(!isObject(pack)) {\n        pack = {} as any;\n      }\n\n      validateInitObject(EMOJI_LANG_PACK, pack);\n\n      // important\n      pack.langCode = langCode;\n      this.keywordLangPacks[langCode] = pack;\n\n      return this.apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\n        lang_code: pack.langCode,\n        from_version: pack.version\n      }).then((keywordsDifference) => {\n        pack.version = keywordsDifference.version;\n        \n        const packKeywords = pack.keywords;\n        const keywords = keywordsDifference.keywords;\n        for(let i = 0, length = keywords.length; i < length; ++i) {\n          const {keyword, emoticons} = keywords[i];\n          packKeywords[keyword] = emoticons;\n        }\n\n        stateStorage.set({\n          [storageKey]: pack\n        });\n\n        return pack;\n      }, () => {\n        return pack;\n      });\n    });\n  }\n\n  public getBothEmojiKeywords() {\n    const promises: Promise<any>[] = [\n      this.getEmojiKeywords()\n    ];\n\n    if(I18n.lastRequestedLangCode !== App.langPackCode) {\n      promises.push(this.getEmojiKeywords(I18n.lastRequestedLangCode));\n    }\n\n    if(!this.recent) {\n      promises.push(this.getRecentEmojis());\n    }\n\n    return Promise.all(promises);\n  }\n\n  private indexEmojis() {\n    if(!this.index) {\n      this.index = new SearchIndex(undefined, 2);\n    }\n\n    for(const langCode in this.keywordLangPacks) {\n      if(this.indexedLangPacks[langCode]) {\n        continue;\n      }\n\n      const pack = this.keywordLangPacks[langCode];\n      const keywords = pack.keywords;\n\n      for(const keyword in keywords) {\n        const emoticons = keywords[keyword];\n        this.index.indexObject(emoticons, keyword);\n      }\n\n      this.indexedLangPacks[langCode] = true;\n    }\n  }\n\n  public searchEmojis(q: string) {\n    this.indexEmojis();\n\n    q = q.toLowerCase().replace(/_/g, ' ');\n    \n    //const perf = performance.now();\n    let emojis: Array<string>;\n    if(q.trim()) {\n      const set = this.index.search(q);\n      emojis = Array.from(set).reduce((acc, v) => acc.concat(v), []);\n    } else {\n      emojis = this.recent.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\n    }\n\n    emojis = Array.from(new Set(emojis));\n    //console.log('searchEmojis', q, 'time', performance.now() - perf);\n\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\n        emojis[i] += '\\ufe0f';\n      }\n    } */\n\n    return emojis;\n  }\n\n  public getRecentEmojis() {\n    if(this.getRecentEmojisPromise) return this.getRecentEmojisPromise;\n    return this.getRecentEmojisPromise = this.appStateManager.getState().then((state) => {\n      return this.recent = Array.isArray(state.recentEmoji) ? state.recentEmoji : [];\n    });\n  }\n\n  public pushRecentEmoji(emoji: string) {\n    emoji = fixEmoji(emoji);\n    this.getRecentEmojis().then((recent) => {\n      indexOfAndSplice(recent, emoji);\n      recent.unshift(emoji);\n      if(recent.length > RECENT_MAX_LENGTH) {\n        recent.length = RECENT_MAX_LENGTH;\n      }\n\n      this.appStateManager.pushToState('recentEmoji', recent);\n      this.rootScope.dispatchEvent('emoji_recent', emoji);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport type GroupCallConnectionInstance from \"../calls/groupCallConnectionInstance\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport { nextRandomUint } from \"../../helpers/random\";\nimport { DataJSON, GroupCall, GroupCallParticipant, GroupCallParticipantVideoSourceGroup, InputGroupCall, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates } from \"../../layer\";\nimport { logger } from \"../logger\";\nimport { NULL_PEER_ID } from \"../mtproto/mtproto_config\";\nimport { AppManager } from \"./manager\";\nimport getPeerId from \"./utils/peers/getPeerId\";\n\nexport type GroupCallId = GroupCall['id'];\nexport type MyGroupCall = GroupCall | InputGroupCall;\n\nexport type GroupCallConnectionType = 'main' | 'presentation';\n\nexport type JoinGroupCallJsonPayload = {\n  fingerprints: {\n    fingerprint: string;\n    setup: string;\n    hash: string;\n  }[];\n  pwd: string;\n  ssrc: number;\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\n  ufrag: string;\n};\n\nconst GET_PARTICIPANTS_LIMIT = 100;\n\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\n\nexport class AppGroupCallsManager extends AppManager {\n  private log: ReturnType<typeof logger>;\n  \n  private groupCalls: Map<GroupCallId, MyGroupCall>;\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\n  private nextOffsets: Map<GroupCallId, string>;\n  \n  // private doNotDispatchParticipantUpdate: PeerId;\n\n  protected after() {\n    this.log = logger('GROUP-CALLS');\n    \n    this.groupCalls = new Map();\n    this.participants = new Map();\n    this.nextOffsets = new Map();\n    \n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateGroupCall: (update) => {\n        this.saveGroupCall(update.call, update.chat_id);\n      },\n      \n      updateGroupCallParticipants: (update) => {\n        this.saveGroupCall(update.call);\n        \n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\n\n        const groupCallId = update.call.id;\n        this.saveApiParticipants(groupCallId, update.participants);\n      }\n    });\n\n    this.rootScope.addEventListener('group_call_update', (groupCall) => {\n      if(groupCall._ === 'groupCallDiscarded') {\n        this.participants.delete(groupCall.id);\n      }\n    });\n  }\n\n  public getCachedParticipants(groupCallId: GroupCallId) {\n    let participants = this.participants.get(groupCallId);\n    if(!participants) {\n      this.participants.set(groupCallId, participants = new Map());\n    }\n\n    return participants;\n  }\n\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\n    const nextOffsetsMap = this.nextOffsets;\n\n    const setNextOffset = (newNextOffset: string) => {\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\n        nextOffsetsMap.set(groupCallId, newNextOffset);\n      }\n    };\n\n    const nextOffset = nextOffsetsMap.get(groupCallId);\n    return {\n      nextOffset,\n      setNextOffset\n    };\n  }\n\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\n    const participants = this.getCachedParticipants(groupCallId);\n\n    const peerId = getPeerId(participant.peer);\n\n    const oldParticipant = participants.get(peerId);\n    const hasLeft = participant.pFlags.left;\n    if(!oldParticipant && hasLeft) {\n      return;\n    }\n\n    // * fix missing flag\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\n      participant.pFlags.can_self_unmute = true;\n    }\n\n    if(oldParticipant) {\n      safeReplaceObject(oldParticipant, participant);\n      participant = oldParticipant;\n    } else {\n      participants.set(peerId, participant);\n    }\n\n    // if(!skipCounterUpdating) {\n      const groupCall = this.getGroupCall(groupCallId);\n      if(groupCall?._ === 'groupCall') {\n        let modified = false;\n        if(hasLeft) {\n          --groupCall.participants_count;\n          modified = true;\n        } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\n          ++groupCall.participants_count;\n          modified = true;\n        }\n  \n        if(modified) {\n          this.rootScope.dispatchEvent('group_call_update', groupCall);\n        }\n      }\n    // }\n    \n    if(hasLeft) {\n      participants.delete(peerId);\n    }\n\n    if(oldParticipant || true/*  && this.doNotDispatchParticipantUpdate !== peerId */) {\n      this.rootScope.dispatchEvent('group_call_participant', {\n        groupCallId,\n        participant\n      });\n    }\n  }\n\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\n    if((apiParticipants as any).saved) return;\n    (apiParticipants as any).saved = true;\n    apiParticipants.forEach((p) => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\n  }\n\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\n    muted: boolean,\n    volume: number,\n    raiseHand: boolean,\n    videoStopped: boolean,\n    videoPaused: boolean,\n    presentationPaused: boolean\n  }>) {\n    this.saveApiParticipant(groupCallId, participant);\n\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : getPeerId(participant.peer);\n    const updates = await this.apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\n      call: this.getGroupCallInput(groupCallId),\n      participant: peerId === NULL_PEER_ID ? this.appPeersManager.getInputPeerSelf() : this.appPeersManager.getInputPeerById(peerId),\n      muted: options.muted,\n      volume: options.volume,\n      raise_hand: options.raiseHand,\n      video_paused: options.videoPaused,\n      video_stopped: options.videoStopped,\n      presentation_paused: options.presentationPaused\n    });\n    \n    // do not replace with peerId because it can be null\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = getPeerId(participant.peer);\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\n  }\n  \n  public getGroupCall(id: GroupCallId) {\n    return this.groupCalls.get(id);\n  }\n\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\n    const call = this.getGroupCall(id);\n    if(call && call._ !== 'inputGroupCall' && !override) {\n      return call;\n    }\n\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'phone.getGroupCall',\n      params: {\n        call: this.getGroupCallInput(id),\n        limit\n      },\n      processResult: (groupCall) => {\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\n        this.appUsersManager.saveApiUsers(groupCall.users);\n        this.appChatsManager.saveApiChats(groupCall.chats);\n        this.saveApiParticipants(id, groupCall.participants, true);\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\n\n        if(limit && this.nextOffsets.get(id) === undefined) {\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\n        }\n\n        return call;\n      }\n    });\n  }\n  \n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\n    const oldCall = this.groupCalls.get(call.id);\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\n    if(oldCall) {\n      if(shouldUpdate) {\n        safeReplaceObject(oldCall, call);\n      }\n      \n      call = oldCall;\n    } else {\n      this.groupCalls.set(call.id, call);\n    }\n\n    if(shouldUpdate) {\n      this.rootScope.dispatchEvent('group_call_update', call as any);\n    }\n\n    return call;\n  }\n\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string) {\n    const updates = await this.apiManager.invokeApi('phone.createGroupCall', {\n      peer: this.appPeersManager.getInputPeerById(chatId.toPeerId(true)),\n      random_id: nextRandomUint(32),\n      schedule_date: scheduleDate,\n      title\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCall') as Update.updateGroupCall;\n    return update.call;\n  }\n\n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\n    const groupCall = this.getGroupCall(id);\n    return {\n      _: 'inputGroupCall',\n      id: groupCall.id,\n      access_hash: groupCall.access_hash\n    };\n  }\n\n  // public generateSelfParticipant(): GroupCallParticipant {\n  //   const mainSources = this.currentGroupCall.connections.main.sources;\n  //   const presentationSources = this.currentGroupCall.connections.presentation?.sources;\n  //   return {\n  //     _: 'groupCallParticipant',\n  //     pFlags: {\n  //       can_self_unmute: true,\n  //       self: true\n  //     },\n  //     source: mainSources.audio.source,\n  //     video: this.generateSelfVideo(mainSources.video),\n  //     presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\n  //     date: tsNow(true),\n  //     peer: this.appPeersManager.getOutputPeer(rootScope.myId)\n  //   };\n  // }\n\n  public async getGroupCallParticipants(id: GroupCallId) {\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\n\n    if(nextOffset !== '') {\n      await this.apiManager.invokeApiSingleProcess({\n        method: 'phone.getGroupParticipants', \n        params: {\n          call: this.getGroupCallInput(id),\n          ids: [],\n          sources: [],\n          offset: nextOffset || '',\n          limit: GET_PARTICIPANTS_LIMIT\n        },\n        processResult: (groupCallParticipants) => {\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\n  \n          this.appChatsManager.saveApiChats(groupCallParticipants.chats);\n          this.appUsersManager.saveApiUsers(groupCallParticipants.users);\n          this.saveApiParticipants(id, groupCallParticipants.participants);\n    \n          setNextOffset(newNextOffset);\n        }\n      });\n    }\n\n    return {\n      participants: this.getCachedParticipants(id),\n      isEnd: this.nextOffsets.get(id) === ''\n    };\n  }\n\n  public hangUp(id: GroupCallId, discard?: boolean | number) {\n    const groupCallInput = this.getGroupCallInput(id);\n    let promise: Promise<Updates>;\n    if(typeof(discard) === 'boolean' && discard) {\n      promise = this.apiManager.invokeApi('phone.discardGroupCall', {\n        call: groupCallInput\n      });\n    } else if(typeof(discard) === 'number') {\n      promise = this.apiManager.invokeApi('phone.leaveGroupCall', {\n        call: groupCallInput,\n        source: discard\n      });\n    } else {\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', {\n        call: groupCallInput,\n        join_as: {_: 'inputPeerSelf'},\n        muted: true,\n        video_stopped: true,\n        params: {\n          _: 'dataJSON',\n          data: ''\n        }\n      });\n    }\n\n    return promise.then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public async joinGroupCall(groupCallId: GroupCallId, params: DataJSON, options: GroupCallConnectionInstance['options']) {\n    const groupCallInput = this.getGroupCallInput(groupCallId);\n    let promise: Promise<Updates>;\n    if(options.type === 'main') {\n      const request: PhoneJoinGroupCall = {\n        call: groupCallInput,\n        join_as: {_: 'inputPeerSelf'},\n        params,\n        muted: options.isMuted,\n        video_stopped: !options.joinVideo\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', request);\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\n    } else {\n      const request: PhoneJoinGroupCallPresentation = {\n        call: groupCallInput,\n        params,\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCallPresentation', request);\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\n    }\n\n    const updates = await promise;\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\n    return update;\n  }\n\n  public leaveGroupCallPresentation(groupCallId: GroupCallId) {\n    return this.apiManager.invokeApi('phone.leaveGroupCallPresentation', {\n      call: this.getGroupCallInput(groupCallId)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { InputPhoto } from \"../../../../layer\";\nimport { MyPhoto } from \"../../appPhotosManager\";\n\nexport default function getPhotoInput(photo: MyPhoto): InputPhoto.inputPhoto {\n  return {\n    _: 'inputPhoto',\n    id: photo.id,\n    access_hash: photo.access_hash,\n    file_reference: photo.file_reference\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { InputMedia } from \"../../../../layer\";\nimport { MyPhoto } from \"../../appPhotosManager\";\nimport getPhotoInput from \"./getPhotoInput\";\n\nexport default function getPhotoMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\n  return {\n    _: 'inputMediaPhoto',\n    id: getPhotoInput(photo),\n    ttl_seconds: 0\n  };\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { Document, InputMedia } from \"../../../../layer\";\r\n\r\nexport default function getMediaInput(doc: Document.document): InputMedia.inputMediaDocument {\r\n  return {\r\n    _: 'inputMediaDocument',\r\n    id: {\r\n      _: 'inputDocument',\r\n      id: doc.id,\r\n      access_hash: doc.access_hash,\r\n      file_reference: doc.file_reference\r\n    },\r\n    ttl_seconds: 0\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { MyDocument } from \"./appDocsManager\";\r\nimport type { MyPhoto } from \"./appPhotosManager\";\r\nimport type { MyTopPeer } from \"./appUsersManager\";\r\nimport { BotInlineResult, GeoPoint, InputGeoPoint, InputMedia, MessageEntity, MessagesBotResults, ReplyMarkup } from \"../../layer\";\r\nimport insertInDescendSortedArray from \"../../helpers/array/insertInDescendSortedArray\";\r\nimport { AppManager } from \"./manager\";\r\nimport getPhotoMediaInput from \"./utils/photos/getPhotoMediaInput\";\r\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\r\nimport generateQId from \"./utils/inlineBots/generateQId\";\r\nimport getDocumentMediaInput from \"./utils/docs/getDocumentMediaInput\";\r\n\r\nexport class AppInlineBotsManager extends AppManager {\r\n  private inlineResults: {[queryAndResultIds: string]: BotInlineResult} = {};\r\n  private setHash: {\r\n    [botId: UserId]: {\r\n      peerId: PeerId, \r\n      time: number\r\n    }\r\n  } = {};\r\n\r\n  public getGeoInput(geo: GeoPoint): InputGeoPoint {\r\n    return geo._ === 'geoPoint' ? {\r\n      _: 'inputGeoPoint',\r\n      lat: geo.lat,\r\n      long: geo.long,\r\n      accuracy_radius: geo.accuracy_radius\r\n    } : {\r\n      _: 'inputGeoPointEmpty'\r\n    };\r\n  }\r\n\r\n  public getInlineResults(peerId: PeerId, botId: BotId, query = '', offset = '', geo?: GeoPoint) {\r\n    return this.apiManager.invokeApi('messages.getInlineBotResults', {\r\n      bot: this.appUsersManager.getUserInput(botId),\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      query,\r\n      geo_point: geo ? this.getGeoInput(geo) : undefined,\r\n      offset\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then((botResults) => {\r\n      const queryId = botResults.query_id;\r\n\r\n      /* if(botResults.switch_pm) {\r\n        botResults.switch_pm.rText = wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\r\n      } */\r\n      \r\n      botResults.results.forEach((result) => {\r\n        if(result._ === 'botInlineMediaResult') {\r\n          if(result.document) {\r\n            result.document = this.appDocsManager.saveDoc(result.document);\r\n          }\r\n          \r\n          if(result.photo) {\r\n            result.photo = this.appPhotosManager.savePhoto(result.photo);\r\n          }\r\n        }\r\n        \r\n        this.inlineResults[generateQId(queryId, result.id)] = result;\r\n      });\r\n\r\n      return botResults;\r\n    });\r\n  }\r\n\r\n  private pushPopularBot(botId: BotId) {\r\n    this.appUsersManager.getTopPeers('bots_inline').then((topPeers) => {\r\n      const botPeerId = botId.toPeerId();\r\n      const index = topPeers.findIndex((topPeer) => topPeer.id === botPeerId);\r\n      let topPeer: MyTopPeer;\r\n      if(index !== -1) {\r\n        topPeer = topPeers[index];\r\n      } else {\r\n        topPeer = {\r\n          id: botPeerId,\r\n          rating: 0\r\n        };\r\n      }\r\n\r\n      ++topPeer.rating;\r\n      insertInDescendSortedArray(topPeers, topPeer, 'rating');\r\n\r\n      this.appStateManager.setKeyValueToStorage('topPeersCache');\r\n      \r\n      // rootScope.$broadcast('inline_bots_popular')\r\n    });\r\n  }\r\n\r\n  public switchToPM(fromPeerId: PeerId, botId: BotId, startParam: string) {\r\n    this.setHash[botId] = {peerId: fromPeerId, time: Date.now()};\r\n    return this.appMessagesManager.startBot(botId, undefined, startParam);\r\n  }\r\n  \r\n  /*\r\n  function resolveInlineMention (username) {\r\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\r\n      if (peerId.isUser()) {\r\n        var bot = AppUsersManager.getUser(peerId)\r\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\r\n          var resolvedBot = {\r\n            username: username,\r\n            id: peerId,\r\n            placeholder: bot.bot_inline_placeholder\r\n          }\r\n          if (bot.pFlags.bot_inline_geo &&\r\n            GeoLocationManager.isAvailable()) {\r\n              return checkGeoLocationAccess(peerId).then(function () {\r\n                return GeoLocationManager.getPosition().then(function (coords) {\r\n                  resolvedBot.geo = coords\r\n                  return qSync.when(resolvedBot)\r\n                })\r\n              })['catch'](function () {\r\n                return qSync.when(resolvedBot)\r\n              })\r\n            }\r\n            return qSync.when(resolvedBot)\r\n          }\r\n        }\r\n        return $q.reject()\r\n      }, function (error) {\r\n        error.handled = true\r\n        return $q.reject(error)\r\n      })\r\n    }\r\n    \r\n    function regroupWrappedResults (results, rowW, rowH) {\r\n      if (!results ||\r\n        !results[0] ||\r\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\r\n          return\r\n        }\r\n        var ratios = []\r\n        angular.forEach(results, function (result) {\r\n          var w\r\n          var h, doc\r\n          var photo\r\n          if (result._ === 'botInlineMediaResult') {\r\n            if (doc = result.document) {\r\n              w = result.document.w\r\n              h = result.document.h\r\n            }\r\n            else if (photo = result.photo) {\r\n              var photoSize = (photo.sizes || [])[0]\r\n              w = photoSize && photoSize.w\r\n              h = photoSize && photoSize.h\r\n            }\r\n          }else {\r\n            w = result.w\r\n            h = result.h\r\n          }\r\n          if (!w || !h) {\r\n            w = h = 1\r\n          }\r\n          ratios.push(w / h)\r\n        })\r\n        \r\n        var rows = []\r\n        var curCnt = 0\r\n        var curW = 0\r\n        angular.forEach(ratios, function (ratio) {\r\n          var w = ratio * rowH\r\n          curW += w\r\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\r\n            curCnt++\r\n          } else {\r\n            rows.push(curCnt)\r\n            curCnt = 1\r\n            curW = w\r\n          }\r\n        })\r\n        if (curCnt) {\r\n          rows.push(curCnt)\r\n        }\r\n        \r\n        var i = 0\r\n        var thumbs = []\r\n        var lastRowI = rows.length - 1\r\n        angular.forEach(rows, function (rowCnt, rowI) {\r\n          var lastRow = rowI === lastRowI\r\n          var curRatios = ratios.slice(i, i + rowCnt)\r\n          var sumRatios = 0\r\n          angular.forEach(curRatios, function (ratio) {\r\n            sumRatios += ratio\r\n          })\r\n          angular.forEach(curRatios, function (ratio, j) {\r\n            var thumbH = rowH\r\n            var thumbW = rowW * ratio / sumRatios\r\n            var realW = thumbH * ratio\r\n            if (lastRow && thumbW > realW) {\r\n              thumbW = realW\r\n            }\r\n            var result = results[i + j]\r\n            result.thumbW = Math.floor(thumbW) - 2\r\n            result.thumbH = Math.floor(thumbH) - 2\r\n          })\r\n          \r\n          i += rowCnt\r\n        })\r\n      } */\r\n\r\n  public async checkSwitchReturn(botId: BotId) {\r\n    const bot = this.appUsersManager.getUser(botId);\r\n    if(!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\r\n      return;\r\n    }\r\n\r\n    const peerData = this.setHash[botId];\r\n    if(peerData) {\r\n      delete this.setHash[botId];\r\n      if((Date.now() - peerData.time) < 3600e3) {\r\n        return peerData.peerId;\r\n      }\r\n    }\r\n  }\r\n\r\n  public switchInlineQuery(peerId: PeerId, threadId: number, botId: BotId, query: string) {\r\n    this.appDraftsManager.setDraft(peerId, threadId, '@' + this.appUsersManager.getUser(botId).username + ' ' + query);\r\n  }\r\n\r\n  public callbackButtonClick(peerId: PeerId, mid: number, button: any) {\r\n    return this.apiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: this.appPeersManager.getInputPeerById(peerId),\r\n      msg_id: getServerMessageId(mid),\r\n      data: button.data\r\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true});\r\n  }\r\n      \r\n  /* function gameButtonClick (id) {\r\n    var message = AppMessagesManager.getMessage(id)\r\n    var peerId = AppMessagesManager.getMessagePeer(message)\r\n    \r\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\r\n      peer: AppPeersManager.getInputPeerByID(peerId),\r\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\r\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\r\n      if (typeof callbackAnswer.message === 'string' &&\r\n      callbackAnswer.message.length) {\r\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\r\n      }\r\n      else if (typeof callbackAnswer.url === 'string') {\r\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\r\n      }\r\n    })\r\n  } */\r\n\r\n  public sendInlineResult(peerId: PeerId, botId: BotId, queryAndResultIds: string, options: Partial<{\r\n    viaBotId: BotId,\r\n    queryId: string,\r\n    resultId: string,\r\n    replyMarkup: ReplyMarkup,\r\n    entities: MessageEntity[],\r\n    replyToMsgId: number,\r\n    clearDraft: true,\r\n    scheduleDate: number,\r\n    silent: true,\r\n    sendAsPeerId: PeerId,\r\n    geoPoint: GeoPoint\r\n  }> = {}) {\r\n    const inlineResult = this.inlineResults[queryAndResultIds];\r\n    if(!inlineResult) {\r\n      return;\r\n    }\r\n\r\n    this.pushPopularBot(botId);\r\n    const splitted = queryAndResultIds.split('_');\r\n    const queryID = splitted.shift();\r\n    const resultID = splitted.join('_');\r\n    options.viaBotId = botId;\r\n    options.queryId = queryID;\r\n    options.resultId = resultID;\r\n    if(inlineResult.send_message.reply_markup) {\r\n      options.replyMarkup = inlineResult.send_message.reply_markup;\r\n    }\r\n    \r\n    if(inlineResult.send_message._ === 'botInlineMessageText') {\r\n      options.entities = inlineResult.send_message.entities;\r\n      this.appMessagesManager.sendText(peerId, inlineResult.send_message.message, options);\r\n    } else {\r\n      let caption = '';\r\n      let inputMedia: InputMedia;\r\n      const sendMessage = inlineResult.send_message;\r\n      switch(sendMessage._) {\r\n        case 'botInlineMessageMediaAuto': {\r\n          caption = sendMessage.message;\r\n\r\n          if(inlineResult._ === 'botInlineMediaResult') {\r\n            const {document, photo} = inlineResult;\r\n            if(document) {\r\n              inputMedia = getDocumentMediaInput(document as MyDocument);\r\n            } else {\r\n              inputMedia = getPhotoMediaInput(photo as MyPhoto);\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaGeo': {\r\n          inputMedia = {\r\n            _: 'inputMediaGeoPoint',\r\n            geo_point: this.getGeoInput(sendMessage.geo)\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n        \r\n        case 'botInlineMessageMediaVenue': {\r\n          inputMedia = {\r\n            _: 'inputMediaVenue',\r\n            geo_point: this.getGeoInput(sendMessage.geo),\r\n            title: sendMessage.title,\r\n            address: sendMessage.address,\r\n            provider: sendMessage.provider,\r\n            venue_id: sendMessage.venue_id,\r\n            venue_type: sendMessage.venue_type\r\n          };\r\n\r\n          options.geoPoint = sendMessage.geo;\r\n\r\n          break;\r\n        }\r\n\r\n        case 'botInlineMessageMediaContact': {\r\n          inputMedia = {\r\n            _: 'inputMediaContact',\r\n            phone_number: sendMessage.phone_number,\r\n            first_name: sendMessage.first_name,\r\n            last_name: sendMessage.last_name,\r\n            vcard: sendMessage.vcard\r\n          };\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      if(!inputMedia) {\r\n        inputMedia = {\r\n          _: 'messageMediaPending',\r\n          type: inlineResult.type,\r\n          file_name: inlineResult.title || \r\n            (inlineResult as BotInlineResult.botInlineResult).content?.url || \r\n            (inlineResult as BotInlineResult.botInlineResult).url,\r\n          size: 0,\r\n          progress: {percent: 30, total: 0}\r\n        } as any;\r\n      }\r\n\r\n      this.appMessagesManager.sendOther(peerId, inputMedia, options);\r\n    }\r\n  }\r\n  \r\n  /* function checkGeoLocationAccess (botID) {\r\n    var key = 'bot_access_geo' + botID\r\n    return Storage.get(key).then(function (geoAccess) {\r\n      if (geoAccess && geoAccess.granted) {\r\n        return true\r\n      }\r\n      return ErrorService.confirm({\r\n        type: 'BOT_ACCESS_GEO_INLINE'\r\n      }).then(function () {\r\n        var setHash = {}\r\n        setHash[key] = {granted: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return true\r\n      }, function () {\r\n        var setHash = {}\r\n        setHash[key] = {denied: true, time: tsNow()}\r\n        Storage.set(setHash)\r\n        return $q.reject()\r\n      })\r\n    })\r\n  } */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MESSAGE_ID_INCREMENT } from \"./utils/messageId\";\r\nimport generateMessageId from \"./utils/messageId/generateMessageId\";\r\n\r\nexport class AppMessagesIdsManager {\r\n  private tempNum = 0;\r\n\r\n  public generateTempMessageId(messageId: number) {\r\n    const num = ++this.tempNum;\r\n    return generateMessageId(messageId) + (num & (MESSAGE_ID_INCREMENT - 1));\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport App from \"../../config/app\";\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport Modes from \"../../config/modes\";\r\nimport tsNow from \"../../helpers/tsNow\";\r\nimport sessionStorage from '../sessionStorage';\r\n\r\nexport class TelegramMeWebManager {\r\n  private disabled = /* false &&  */(Modes.test || App.domains.indexOf(location.hostname) === -1);\r\n\r\n  public setAuthorized(canRedirect: boolean) {\r\n    if(this.disabled) {\r\n      return;\r\n    }\r\n\r\n    return sessionStorage.get('tgme_sync').then((curValue) => {\r\n      const ts = tsNow(true);\r\n      if(\r\n        canRedirect &&\r\n        curValue?.canRedirect === canRedirect &&\r\n        (curValue.ts + 86400) > ts\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      sessionStorage.set({\r\n        tgme_sync: {\r\n          canRedirect, \r\n          ts\r\n        }\r\n      });\r\n\r\n      const path = `_websync_?authed=${canRedirect ? '1' : '0'}&version=${encodeURIComponent(App.version + ' ' + App.suffix)}`;\r\n      const urls = [\r\n        '//telegram.me/' + path,\r\n        '//t.me/' + path\r\n      ];\r\n\r\n      const promises = urls.map((url) => {\r\n        const script = document.createElement('script');\r\n        const promise = new Promise<void>((resolve) => {\r\n          script.onload = script.onerror = () => {\r\n            script.remove();\r\n            resolve();\r\n          };\r\n        });\r\n        script.src = url;\r\n        document.body.appendChild(script);\r\n        return promise;\r\n      });\r\n\r\n      return Promise.all(promises);\r\n    });\r\n  }\r\n}\r\n\r\nconst telegramMeWebManager = new TelegramMeWebManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.telegramMeWebManager = telegramMeWebManager);\r\nexport default telegramMeWebManager;\r\n","export default function splitStringByLength(str: string, maxLength: number) {\n  if(str.length < maxLength) return [str];\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\n  const delimiter = ' ';//'\\n';\n  const out: string[] = [];\n\n  const cut = (end?: number) => {\n    let part = str.slice(lastSliceStartIndex, end);\n    const _arrayIndex = arrayIndex++;\n    if(part.length > maxLength) {\n      let overflowPart = part.slice(maxLength);\n      const splitted = splitStringByLength(overflowPart, maxLength);\n      splitted.forEach((part) => {\n        out[arrayIndex++] = part;\n      });\n\n      part = part.slice(0, maxLength);\n    }\n\n    lastSliceStartIndex = end;\n    length = 0;\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\n  };\n\n  let lastIndex = 0;\n  do {\n    let index = str.indexOf(delimiter, lastIndex);\n    if(index === -1) {\n      if(lastIndex !== (str.length - 1)) {\n        cut();\n      }\n\n      break;\n    }\n\n    index += delimiter.length;\n\n    const partLength = index - lastIndex;\n    if((length + partLength) > maxLength) {\n      cut(length);\n    }\n    \n    lastIndex = index;\n    length += partLength;\n  } while(true);\n\n  return out;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { TabState } from \"../mtproto/mtprotoworker\";\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\nimport MTProtoMessagePort from \"../mtproto/mtprotoMessagePort\";\n\ntype Tab = {\n  source: MessageEventSource,\n  state: TabState\n};\n\nexport class AppTabsManager {\n  private tabs: Map<Tab['source'], Tab>;\n\n  constructor() {\n    this.tabs = new Map();\n  }\n\n  public start() {\n    const port = MTProtoMessagePort.getInstance<false>();\n\n    port.addEventListener('tabState', (state, source) => {\n      const tab = this.tabs.get(source);\n      tab.state = state;\n    });\n  }\n\n  public getTabs() {\n    return [...this.tabs.values()].filter((tab) => !!tab.state);\n  }\n\n  public addTab(source: MessageEventSource) {\n    const tab: Tab = {\n      source,\n      state: undefined\n    };\n  \n    this.tabs.set(source, tab);\n  }\n\n  public deleteTab(source: MessageEventSource) {\n    this.tabs.delete(source);\n  }\n}\n\nconst appTabsManager = new AppTabsManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appTabsManager = appTabsManager);\nexport default appTabsManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LazyLoadQueueBase from \"../../components/lazyLoadQueueBase\";\nimport deferredPromise, { CancellablePromise } from \"../../helpers/cancellablePromise\";\nimport tsNow from \"../../helpers/tsNow\";\nimport { randomLong } from \"../../helpers/random\";\nimport { Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer, ReactionCount, MessagePeerReaction, MessagesSearchCounter, Peer, MessageReactions, Document, InputFile } from \"../../layer\";\nimport { ArgumentTypes, InvokeApiOptions } from \"../../types\";\nimport { logger, LogTypes } from \"../logger\";\nimport type { ApiFileManager } from '../mtproto/apiFileManager';\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport { GLOBAL_FOLDER_ID, LOCAL_FOLDER_ID } from \"../storages/dialogs\";\nimport { ChatRights } from \"./appChatsManager\";\nimport { MyDocument } from \"./appDocsManager\";\nimport { MyPhoto } from \"./appPhotosManager\";\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\nimport DEBUG from \"../../config/debug\";\nimport SlicedArray, { Slice, SliceEnd } from \"../../helpers/slicedArray\";\nimport { MUTE_UNTIL, NULL_PEER_ID, REPLIES_HIDDEN_CHANNEL_ID, REPLIES_PEER_ID, SERVICE_PEER_ID } from \"../mtproto/mtproto_config\";\nimport telegramMeWebManager from \"../mtproto/telegramMeWebManager\";\nimport { getMiddleware } from \"../../helpers/middleware\";\nimport assumeType from \"../../helpers/assumeType\";\nimport copy from \"../../helpers/object/copy\";\nimport getObjectKeysAndSort from \"../../helpers/object/getObjectKeysAndSort\";\nimport forEachReverse from \"../../helpers/array/forEachReverse\";\nimport deepEqual from \"../../helpers/object/deepEqual\";\nimport splitStringByLength from \"../../helpers/string/splitStringByLength\";\nimport debounce from \"../../helpers/schedulers/debounce\";\nimport { AppManager } from \"./manager\";\nimport type { MediaSize } from \"../../helpers/mediaSize\";\nimport getPhotoMediaInput from \"./utils/photos/getPhotoMediaInput\";\nimport getPhotoDownloadOptions from \"./utils/photos/getPhotoDownloadOptions\";\nimport fixEmoji from \"../richTextProcessor/fixEmoji\";\nimport mergeEntities from \"../richTextProcessor/mergeEntities\";\nimport parseEntities from \"../richTextProcessor/parseEntities\";\nimport parseMarkdown from \"../richTextProcessor/parseMarkdown\";\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\nimport generateMessageId from \"./utils/messageId/generateMessageId\";\nimport getPeerId from \"./utils/peers/getPeerId\";\nimport filterMessagesByInputFilter from \"./utils/messages/filterMessagesByInputFilter\";\nimport ctx from \"../../environment/ctx\";\nimport { getEnvironment } from \"../../environment/utils\";\nimport getDialogIndex from \"./utils/dialogs/getDialogIndex\";\nimport defineNotNumerableProperties from \"../../helpers/object/defineNotNumerableProperties\";\nimport getDocumentMediaInput from \"./utils/docs/getDocumentMediaInput\";\nimport getDocumentInputFileName from \"./utils/docs/getDocumentInputFileName\";\nimport getFileNameForUpload from \"../../helpers/getFileNameForUpload\";\nimport type { Progress } from \"./appDownloadManager\";\nimport noop from \"../../helpers/noop\";\nimport appTabsManager from \"./appTabsManager\";\nimport MTProtoMessagePort from \"../mtproto/mtprotoMessagePort\";\nimport getAlbumText from \"./utils/messages/getAlbumText\";\nimport pause from \"../../helpers/schedulers/pause\";\n\n//console.trace('include');\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\n\nconst APITIMEOUT = 0;\nconst DO_NOT_READ_HISTORY = false;\n\nexport type HistoryStorage = {\n  count: number | null,\n  history: SlicedArray<number>,\n\n  maxId?: number,\n  readPromise?: Promise<void>,\n  readMaxId?: number,\n  readOutboxMaxId?: number,\n  triedToReadMaxId?: number,\n\n  maxOutId?: number,\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>\n};\n\nexport type HistoryResult = {\n  count: number,\n  history: number[],\n  isEnd: ReturnType<Slice<number>['getEnds']>,\n  offsetIdOffset?: number,\n};\n\nexport type Dialog = MTDialog.dialog;\n\nexport type MyMessage = Message.message | Message.messageService;\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty' \n  | 'inputMessagesFilterPhotos' \n  | 'inputMessagesFilterPhotoVideo' \n  | 'inputMessagesFilterVideo' \n  | 'inputMessagesFilterDocument' \n  | 'inputMessagesFilterVoice' \n  | 'inputMessagesFilterRoundVoice' \n  | 'inputMessagesFilterRoundVideo' \n  | 'inputMessagesFilterMusic' \n  | 'inputMessagesFilterUrl' \n  | 'inputMessagesFilterMyMentions'\n  | 'inputMessagesFilterChatPhotos'\n  | 'inputMessagesFilterPinned';\n\nexport type PinnedStorage = Partial<{\n  promise: Promise<PinnedStorage>,\n  count: number,\n  maxId: number\n}>;\nexport type MessagesStorage = Map<number, Message.message | Message.messageService> & {peerId: PeerId, type: MessagesStorageType, key: MessagesStorageKey};\nexport type MessagesStorageType = 'scheduled' | 'history' | 'grouped';\nexport type MessagesStorageKey = `${PeerId}_${MessagesStorageType}`;\n\nexport type MyMessageActionType = Message.messageService['action']['_'];\n\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\n  afterMessageId: string,\n  messageId: string\n}>;\n\ntype MapValueType<A> = A extends Map<any, infer V> ? V : never;\n\nexport type BatchUpdates = {\n  'messages_reactions': AppMessagesManager['batchUpdateReactions'],\n  'messages_views': AppMessagesManager['batchUpdateViews']\n};\n\ntype PendingMessageDetails = {\n  peerId: PeerId,\n  tempId: number,\n  threadId: number,\n  storage: MessagesStorage,\n  sequential?: boolean\n};\n\nconst processAfter = (cb: () => void) => {\n  // setTimeout(cb, 0);\n  cb();\n};\n\nexport class AppMessagesManager extends AppManager {\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\n  private groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\n  private historiesStorage: {\n    [peerId: PeerId]: HistoryStorage\n  };\n  private threadsStorage: {\n    [peerId: PeerId]: {\n      [threadId: string]: HistoryStorage\n    }\n  };\n  private searchesStorage: {\n    [peerId: PeerId]: Partial<{\n      [inputFilter in MyInputMessagesFilter]: {\n        count?: number,\n        history: number[]\n      }\n    }>\n  };\n  private pinnedMessages: {[peerId: PeerId]: PinnedStorage};\n\n  private threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\n  private threadsToReplies: {\n    [peerId_threadId: string]: string;\n  };\n\n  private pendingByRandomId: {\n    [randomId: string]: PendingMessageDetails\n  } = {};\n  private pendingByMessageId: {[mid: string]: Long} = {};\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\n  public pendingTopMsgs: {[peerId: PeerId]: number} = {};\n  private tempFinalizeCallbacks: {\n    [tempId: string]: {\n      [callbackName: string]: Partial<{\n        deferred: CancellablePromise<void>, \n        callback: (message: MyMessage) => Promise<any>\n      }>\n    }\n  } = {};\n  \n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\n\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message.message | Message.messageService>>> = new Map();\n  private fetchSingleMessagesPromise: Promise<void> = null;\n\n  private maxSeenId = 0;\n\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\n\n  private newDialogsHandlePromise: Promise<any>;\n  private newDialogsToHandle: {[peerId: PeerId]: Dialog} = {};\n  public newUpdatesAfterReloadToHandle: {[peerId: PeerId]: Set<Update>} = {};\n\n  private notificationsHandlePromise = 0;\n  private notificationsToHandle: {[peerId: PeerId]: {\n    fwdCount: number,\n    fromId: PeerId,\n    topMessage?: MyMessage\n  }} = {};\n\n  private reloadConversationsPromise: Promise<void>;\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>}> = new Map();\n\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\n\n  private groupedTempId = 0;\n\n  private typings: {[peerId: PeerId]: {action: SendMessageAction, timeout?: number}} = {};\n\n  private middleware: ReturnType<typeof getMiddleware>;\n\n  private unreadMentions: {[peerId: PeerId]: SlicedArray<number>} = {};\n  private goToNextMentionPromises: {[peerId: PeerId]: Promise<number>} = {};\n  \n  private batchUpdates: {\n    [k in keyof BatchUpdates]?: {\n      callback: BatchUpdates[k],\n      batch: ArgumentTypes<BatchUpdates[k]>[0]\n    }\n  } = {};\n  private batchUpdatesDebounced: () => Promise<void>;\n\n  private uploadFilePromises: {[fileName: string]: CancellablePromise<any>};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateMessageID: this.onUpdateMessageId,\n\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\n      updateNewMessage: this.onUpdateNewMessage,\n      updateNewChannelMessage: this.onUpdateNewMessage,\n\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\n\n      updateEditMessage: this.onUpdateEditMessage,\n      updateEditChannelMessage: this.onUpdateEditMessage,\n\n      updateMessageReactions: this.onUpdateMessageReactions,\n\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\n      updateReadHistoryInbox: this.onUpdateReadHistory,\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\n      updateReadChannelInbox: this.onUpdateReadHistory,\n      updateReadChannelOutbox: this.onUpdateReadHistory,\n\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\n\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\n\n      updateDeleteMessages: this.onUpdateDeleteMessages,\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\n\n      updateChannel: this.onUpdateChannel,\n\n      updateChannelReload: this.onUpdateChannelReload,\n\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\n\n      updateServiceNotification: this.onUpdateServiceNotification,\n\n      updatePinnedMessages: this.onUpdatePinnedMessages,\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\n\n      updateNotifySettings: this.onUpdateNotifySettings,\n\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\n\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages\n    });\n\n    // ! Invalidate notify settings, can optimize though\n    this.rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1));\n      let filterFunc: (dialog: Dialog) => boolean;\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => this.appPeersManager.isBroadcast(dialog.peerId);\n      else filterFunc = (dialog) => this.appPeersManager.isAnyGroup(dialog.peerId);\n\n      dialogs\n      .filter(filterFunc)\n      .forEach((dialog) => {\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n      });\n    });\n\n    this.rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\n      msgs.forEach(({peerId, mid, isScheduled}) => {\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\n        if(!message) return;\n        message.media = {\n          _: 'messageMediaWebPage', \n          webpage: this.appWebPagesManager.getCachedWebPage(id)\n        };\n\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: storage.key,\n          peerId,\n          mid,\n          message\n        });\n      });\n    });\n\n    this.rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\n      if(threadId) return;\n\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        if(!threadId) {\n          dialog.draft = draft;\n\n          let drop = false;\n          if(!draft && !getServerMessageId(dialog.top_message)) {\n            this.dialogsStorage.dropDialog(peerId);\n            drop = true;\n          } else {\n            this.dialogsStorage.generateIndexForDialog(dialog);\n            this.dialogsStorage.pushDialog(dialog);\n          }\n\n          this.rootScope.dispatchEvent('dialog_draft', {\n            peerId,\n            dialog,\n            drop,\n            draft\n          });\n        }\n      } else {\n        this.reloadConversation(peerId);\n      }\n    });\n\n    this.rootScope.addEventListener('poll_update', ({poll}) => {\n      const set = this.appPollsManager.pollToMessages[poll.id];\n      if(set) {\n        for(const key of set) {\n          const [peerId, mid] = key.split('_');\n\n          const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\n          this.setDialogToStateIfMessageIsTop(message);\n        }\n      }\n    });\n    \n    this.batchUpdatesDebounced = debounce(() => {\n      for(const event in this.batchUpdates) {\n        const details = this.batchUpdates[event as keyof BatchUpdates];\n        delete this.batchUpdates[event as keyof BatchUpdates];\n\n        // @ts-ignore\n        const result = details.callback(details.batch);\n        if(result && (!(result instanceof Array) || result.length)) {\n          // @ts-ignore\n          rootScope.dispatchEvent(event as keyof BatchUpdates, result);\n        }\n      }\n    }, 33, false, true);\n\n    return this.appStateManager.getState().then((state) => {\n      if(state.maxSeenMsgId) {\n        this.maxSeenId = state.maxSeenMsgId;\n      }\n    });\n  }\n\n  public clear = (init?: boolean) => {\n    if(this.middleware) {\n      this.middleware.clean();\n    } else {\n      this.middleware = getMiddleware();\n      this.uploadFilePromises = {};\n    }\n\n    this.messagesStorageByPeerId = {};\n    this.groupedMessagesStorage = {};\n    this.scheduledMessagesStorage = {};\n    this.historiesStorage = {};\n    this.threadsStorage = {};\n    this.searchesStorage = {};\n    this.pinnedMessages = {};\n    this.threadsServiceMessagesIdsStorage = {};\n    this.threadsToReplies = {};\n\n    this.dialogsStorage && this.dialogsStorage.clear(init);\n    this.filtersStorage && this.filtersStorage.clear(init);\n  };\n\n  public getInputEntities(entities: MessageEntity[]) {\n    const sendEntites = copy(entities);\n    sendEntites.forEach((entity) => {\n      if(entity._ === 'messageEntityMentionName') {\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = this.appUsersManager.getUserInput(entity.user_id);\n      }\n    });\n    return sendEntites;\n  }\n\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: MyMessage) => Promise<any>) {\n    const finalize = this.tempFinalizeCallbacks[tempId] ?? (this.tempFinalizeCallbacks[tempId] = {});\n    const obj = finalize[callbackName] ?? (finalize[callbackName] = {deferred: deferredPromise<void>()});\n\n    obj.callback = callback;\n\n    return obj.deferred;\n  }\n\n  public editMessage(message: any, text: string, options: Partial<{\n    noWebPage: true,\n    newMedia: any,\n    scheduleDate: number,\n    entities: MessageEntity[]\n  }> = {}): Promise<void> {\n    /* if(!this.canEditMessage(messageId)) {\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\n    } */\n\n    const {mid, peerId} = message;\n\n    if(message.pFlags.is_outgoing) {\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\n        //this.log('invoke editMessage callback', message);\n        return this.editMessage(message, text, options);\n      });\n    }\n\n    let entities = options.entities || [];\n    if(text) {\n      text = parseMarkdown(text, entities);\n    }\n\n    const schedule_date = options.scheduleDate || (message.pFlags.is_scheduled ? message.date : undefined);\n    return this.apiManager.invokeApi('messages.editMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: message.id,\n      message: text,\n      media: options.newMedia,\n      entities: entities.length ? this.getInputEntities(entities) : undefined,\n      no_webpage: options.noWebPage,\n      schedule_date\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error) => {\n      this.log.error('editMessage error:', error);\n      \n      if(error && error.type === 'MESSAGE_NOT_MODIFIED') {\n        error.handled = true;\n        return;\n      }\n      if(error && error.type === 'MESSAGE_EMPTY') {\n        error.handled = true;\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  public async sendText(peerId: PeerId, text: string, options: Partial<{\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    queryId: string,\n    resultId: string,\n    noWebPage: true,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    webPage: WebPage,\n    scheduleDate: number,\n    silent: true,\n    sendAsPeerId: PeerId,\n  }> = {}): Promise<void> {\n    if(!text.trim()) {\n      return;\n    }\n\n    options.entities ??= [];\n    \n    //this.checkSendOptions(options);\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n    \n    const config = await this.apiManager.getConfig();\n    const MAX_LENGTH = config.message_length_max;\n    const splitted = splitStringByLength(text, MAX_LENGTH);\n    text = splitted[0];\n    if(splitted.length > 1) {\n      if(options.webPage?._ === 'webPage' && !text.includes(options.webPage.url)) {\n        delete options.webPage;\n      }\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    \n    let entities = options.entities;\n    if(!options.viaBotId) {\n      text = parseMarkdown(text, entities);\n      //entities = mergeEntities(entities, parseEntities(text));\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    message.entities = entities;\n    message.message = text;\n\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n    const isChannel = this.appPeersManager.isChannel(peerId);\n\n    if(options.webPage) {\n      message.media = {\n        _: 'messageMediaWebPage',\n        webpage: options.webPage\n      };\n    }\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      toggleError(false);\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n      let apiPromise: any;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMessage', {\n          no_webpage: options.noWebPage,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          message: text,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate || undefined,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      }\n\n      /* function is<T>(value: any, condition: boolean): value is T {\n        return condition;\n      } */\n\n      //this.log('sendText', message.mid);\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates: Updates) => {\n        //this.log('sendText sent', message.mid);\n        //if(is<Updates.updateShortSentMessage>(updates, updates._ === 'updateShortSentMessage')) {\n        if(updates._ === 'updateShortSentMessage') {\n          //assumeType<Updates.updateShortSentMessage>(updates);\n\n          // * fix copying object with promise\n          const promise = message.promise;\n          delete message.promise;\n          const newMessage = copy(message);\n          defineNotNumerableProperties(message, ['promise']);\n          message.promise = promise;\n\n          newMessage.date = updates.date;\n          newMessage.id = updates.id;\n          newMessage.media = updates.media;\n          newMessage.entities = updates.entities;\n          this.wrapMessageEntities(newMessage);\n          if(updates.pFlags.out) {\n            newMessage.pFlags.out = true;\n          }\n\n          // * override with new updates\n          updates = {\n            _: 'updates',\n            users: [],\n            chats: [],\n            seq: 0,\n            date: undefined,\n            updates: [{\n              _: 'updateMessageID',\n              random_id: message.random_id,\n              id: newMessage.id\n            }, {\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\n              message: newMessage,\n              pts: updates.pts,\n              pts_count: updates.pts_count\n            }]\n          };\n        } else if((updates as Updates.updates).updates) {\n          (updates as Updates.updates).updates.forEach((update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n        // Testing bad situations\n        // var upd = angular.copy(updates)\n        // updates.updates.splice(0, 1)\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // $timeout(function () {\n        // ApiUpdatesManager.processUpdateMessage(upd)\n        // }, 5000)\n        message.promise.resolve();\n      }, (error: any) => {\n        toggleError(true);\n        message.promise.reject(error);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    const promises: ReturnType<AppMessagesManager['sendText']>[] = [message.promise];\n    for(let i = 1; i < splitted.length; ++i) {\n      promises.push(this.sendText(peerId, splitted[i], options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public sendFile(peerId: PeerId, file: File | Blob | MyDocument, options: Partial<{\n    isRoundMessage: true,\n    isVoiceMessage: true,\n    isGroupedItem: true,\n    isMedia: true,\n\n    replyToMsgId: number,\n    sendAsPeerId: PeerId,\n    threadId: number,\n    groupId: string,\n    caption: string,\n    entities: MessageEntity[],\n    width: number,\n    height: number,\n    objectURL: string,\n    thumb: {\n      blob: Blob,\n      url: string,\n      size: MediaSize\n    },\n    duration: number,\n    background: true,\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number,\n    noSound: boolean,\n\n    waveform: Uint8Array,\n\n    // ! only for internal use\n    processAfter?: typeof processAfter\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    //this.checkSendOptions(options);\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\n\n    const fileType = 'mime_type' in file ? file.mime_type : file.type;\n    const fileName = file instanceof File ? file.name : '';\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\n    let caption = options.caption || '';\n\n    this.log('sendFile', file, fileType);\n\n    const entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    const attributes: DocumentAttribute[] = [];\n\n    const isPhoto = getEnvironment().IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\n\n    let photo: MyPhoto, document: MyDocument;\n\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\n    if(isDocument) { // maybe it's a sticker or gif\n      attachType = 'document';\n      apiFileName = '';\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\n      attachType = 'audio';\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\n      actionName = 'sendMessageUploadAudioAction';\n\n      if(options.isVoiceMessage) {\n        attachType = 'voice';\n        message.pFlags.media_unread = true;\n      }\n\n      let attribute: DocumentAttribute.documentAttributeAudio = {\n        _: 'documentAttributeAudio',\n        pFlags: {\n          voice: options.isVoiceMessage\n        },\n        waveform: options.waveform,\n        duration: options.duration || 0\n      };\n\n      attributes.push(attribute);\n    } else if(!options.isMedia) {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    } else if(isPhoto) {\n      attachType = 'photo';\n      apiFileName = 'photo.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadPhotoAction';\n\n      const photoSize = {\n        _: 'photoSize',\n        w: options.width,\n        h: options.height,\n        type: 'full',\n        location: null,\n        size: file.size\n      } as PhotoSize.photoSize;\n\n      photo = {\n        _: 'photo',\n        id: '' + message.id,\n        sizes: [photoSize],\n        w: options.width,\n        h: options.height\n      } as any;\n\n      const cacheContext = this.thumbsStorage.getCacheContext(photo, photoSize.type);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n      \n      photo = this.appPhotosManager.savePhoto(photo);\n    } else if(getEnvironment().VIDEO_MIME_TYPES_SUPPORTED.has(fileType)) {\n      attachType = 'video';\n      apiFileName = 'video.mp4';\n      actionName = 'sendMessageUploadVideoAction';\n\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\n        _: 'documentAttributeVideo',\n        pFlags: {\n          round_message: options.isRoundMessage,\n          supports_streaming: true\n        }, \n        duration: options.duration,\n        w: options.width,\n        h: options.height\n      };\n\n      attributes.push(videoAttribute);\n\n      // * must follow after video attribute\n      if(options.noSound && \n        file.size > (10 * 1024) && \n        file.size < (10 * 1024 * 1024)) {\n        attributes.push({\n          _: 'documentAttributeAnimated'\n        });\n      }\n    } else {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    }\n\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\n\n    if((['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).indexOf(attachType) !== -1 && !isDocument) {\n      const thumbs: PhotoSize[] = [];\n      document = {\n        _: 'document',\n        id: '' + message.id,\n        duration: options.duration,\n        attributes,\n        w: options.width,\n        h: options.height,\n        thumbs,\n        mime_type: fileType,\n        size: file.size\n      } as any;\n\n      if(options.objectURL) {\n        const cacheContext = this.thumbsStorage.getCacheContext(document);\n        cacheContext.downloaded = file.size;\n        cacheContext.url = options.objectURL;\n      }\n\n      let thumb: PhotoSize.photoSize;\n      if(isPhoto) {\n        attributes.push({\n          _: 'documentAttributeImageSize',\n          w: options.width,\n          h: options.height\n        });\n\n        thumb = {\n          _: 'photoSize',\n          w: options.width,\n          h: options.height,\n          type: 'full',\n          size: file.size\n        };\n      } else if(attachType === 'video') {\n        if(options.thumb) {\n          thumb = {\n            _: 'photoSize',\n            w: options.thumb.size.width,\n            h: options.thumb.size.height,\n            type: 'local-thumb',\n            size: options.thumb.blob.size\n          };\n\n          const thumbCacheContext = this.thumbsStorage.getCacheContext(document, thumb.type);\n          thumbCacheContext.downloaded = thumb.size;\n          thumbCacheContext.url = options.thumb.url;\n        }\n      }\n\n      if(thumb) {\n        thumbs.push(thumb);\n      }\n\n      /* if(thumbs.length) {\n        const thumb = thumbs[0] as PhotoSize.photoSize;\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\n        docThumb.downloaded = thumb.size;\n        docThumb.url = thumb.url;\n      } */\n      \n      document = this.appDocsManager.saveDoc(document);\n    }\n\n    this.log('sendFile', attachType, apiFileName, file.type, options);\n\n    const sentDeferred = deferredPromise<InputMedia>();\n    // sentDeferred.cancel = () => {\n    //   const error = new Error('Download canceled');\n    //   error.name = 'AbortError';\n    //   sentDeferred.reject(error);\n\n    //   if(uploadPromise?.cancel) {\n    //     uploadPromise.cancel();\n    //   }\n    // };\n\n    const media: MessageMedia = isDocument ? undefined : {\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\n      pFlags: {},\n      // preloader,\n      photo,\n      document\n    };\n    \n    if(media) {\n      defineNotNumerableProperties(media as any, ['promise']);\n      (media as any).promise = sentDeferred;\n    }\n    \n    message.entities = entities;\n    message.message = caption;\n    message.media = isDocument ? {\n      _: 'messageMediaDocument',\n      pFlags: {},\n      document: file \n    } as MessageMedia.messageMediaDocument : media;\n    \n    const uploadingFileName = !isDocument ? getFileNameForUpload(file) : undefined;\n    message.uploadingFileName = uploadingFileName;\n\n    if(uploadingFileName) {\n      this.uploadFilePromises[uploadingFileName] = sentDeferred;\n    }\n\n    const toggleError = (on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    let uploaded = false,\n      uploadPromise: ReturnType<ApiFileManager['upload']> = null;\n\n    message.send = () => {\n      if(isDocument) {\n        const {id, access_hash, file_reference} = file as MyDocument;\n\n        const inputMedia: InputMedia = {\n          _: 'inputMediaDocument',\n          id: {\n            _: 'inputDocument',\n            id,\n            access_hash,\n            file_reference\n          }\n        };\n        \n        sentDeferred.resolve(inputMedia);\n      } else if(file instanceof File || file instanceof Blob) {\n        const load = () => {\n          if(!uploaded || message.error) {\n            uploaded = false;\n\n            uploadPromise = this.apiFileManager.upload({file, fileName: uploadingFileName});\n            uploadPromise.catch((err) => {\n              if(!uploaded) {\n                this.log('cancelling upload', media);\n      \n                this.cancelPendingMessage(message.random_id);\n                this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n                sentDeferred.reject(err);\n              }\n            });\n\n            uploadPromise.addNotifyListener((progress: Progress) => {\n              /* if(DEBUG) {\n                this.log('upload progress', progress);\n              } */\n  \n              const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\n              if(actionName) {\n                this.setTyping(peerId, {_: actionName, progress: percents | 0});\n              }\n              sentDeferred.notifyAll(progress);\n            });\n\n            sentDeferred.notifyAll({done: 0, total: file.size});\n          }\n\n          let thumbUploadPromise: typeof uploadPromise;\n          if(attachType === 'video' && options.objectURL && options.thumb?.blob) {\n            thumbUploadPromise = this.apiFileManager.upload({file: options.thumb.blob});\n          }\n  \n          uploadPromise && uploadPromise.then(async(inputFile) => {\n            /* if(DEBUG) {\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\n            } */\n\n            inputFile.name = apiFileName;\n            uploaded = true;\n            let inputMedia: InputMedia;\n            switch(attachType) {\n              case 'photo':\n                inputMedia = {\n                  _: 'inputMediaUploadedPhoto', \n                  file: inputFile,\n                };\n                break;\n\n              default:\n                inputMedia = {\n                  _: 'inputMediaUploadedDocument', \n                  file: inputFile, \n                  mime_type: fileType, \n                  pFlags: {\n                    force_file: actionName === 'sendMessageUploadDocumentAction' ? true : undefined,\n                    // nosound_video: options.noSound ? true : undefined\n                  },\n                  attributes\n                };\n            }\n\n            if(thumbUploadPromise) {\n              try {\n                const inputFile = await thumbUploadPromise;\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\n              } catch(err) {\n                this.log.error('sendFile thumb upload error:', err);\n              }\n            }\n            \n            sentDeferred.resolve(inputMedia);\n          }, (/* error */) => {\n            toggleError(true);\n          });\n  \n          return sentDeferred;\n        };\n\n        if(options.isGroupedItem) {\n          load();\n        } else {\n          this.sendSmthLazyLoadQueue.push({\n            load\n          });\n        }\n      }\n\n      return sentDeferred;\n    };\n\n    this.beforeMessageSending(message, {\n      isGroupedItem: options.isGroupedItem, \n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      processAfter: options.processAfter\n    });\n\n    if(!options.isGroupedItem) {\n      sentDeferred.then((inputMedia) => {\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n        return this.apiManager.invokeApi('messages.sendMedia', {\n          background: options.background,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          message: caption,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          entities,\n          clear_draft: options.clearDraft,\n          send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n        }).then((updates) => {\n          this.apiUpdatesManager.processUpdateMessage(updates);\n        }, (error) => {\n          if(attachType === 'photo' &&\n            error.code === 400 &&\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\n            error.handled = true;\n            attachType = 'document';\n            message.send();\n            return;\n          }\n\n          toggleError(true);\n          throw error;\n        });\n      });\n\n      sentDeferred.then(message.promise.resolve, message.promise.reject);\n    }\n\n    const ret: {\n      message: typeof message,\n      promise: typeof sentDeferred\n    } = {\n      message\n    } as any;\n\n    defineNotNumerableProperties(ret, ['promise']);\n    ret.promise = sentDeferred;\n\n    return ret;\n  }\n\n  public async sendAlbum(peerId: PeerId, files: File[], options: Partial<{\n    isMedia: true,\n    entities: MessageEntity[],\n    replyToMsgId: number,\n    sendAsPeerId: PeerId,\n    threadId: number,\n    caption: string,\n    sendFileDetails: Partial<{\n      duration: number,\n      width: number,\n      height: number,\n      objectURL: string,\n      thumbBlob: Blob,\n      thumbURL: string\n    }>[],\n    silent: true,\n    clearDraft: true,\n    scheduleDate: number\n  }> = {}) {\n    //this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    if(files.length === 1) {\n      return this.sendFile(peerId, files[0], {...options, ...options.sendFileDetails[0]});\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let caption = options.caption || '';\n    let entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    this.log('sendAlbum', files, options);\n\n    const groupId = '' + ++this.groupedTempId;\n\n    const callbacks: Array<() => void> = [];\n    const processAfter = (cb: () => void) => {\n      callbacks.push(cb);\n    };\n\n    const messages = files.map((file, idx) => {\n      const details = options.sendFileDetails[idx];\n      const o: Parameters<AppMessagesManager['sendFile']>[2] = {\n        isGroupedItem: true,\n        isMedia: options.isMedia,\n        scheduleDate: options.scheduleDate,\n        silent: options.silent,\n        replyToMsgId,\n        threadId: options.threadId,\n        sendAsPeerId: options.sendAsPeerId,\n        groupId,\n        processAfter,\n        ...details\n      };\n\n      if(idx === 0) {\n        o.caption = caption;\n        o.entities = entities;\n        //o.replyToMsgId = replyToMsgId;\n      }\n\n      return this.sendFile(peerId, file, o).message;\n    });\n\n    if(options.clearDraft) {\n      callbacks.push(() => {\n        this.appDraftsManager.clearDraft(peerId, options.threadId);\n      });\n    }\n\n    callbacks.forEach((callback) => {\n      callback();\n    });\n\n    // * test pending\n    //return;\n\n    const toggleError = (message: any, on: boolean) => {\n      if(on) {\n        message.error = true;\n      } else {\n        delete message.error;\n      }\n\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n    const invoke = (multiMedia: InputSingleMedia[]) => {\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'});\n\n      const deferred = deferredPromise<void>();\n      this.sendSmthLazyLoadQueue.push({\n        load: () => {\n          return this.apiManager.invokeApi('messages.sendMultiMedia', {\n            peer: inputPeer,\n            multi_media: multiMedia,\n            reply_to_msg_id: replyToMsgId,\n            schedule_date: options.scheduleDate,\n            silent: options.silent,\n            clear_draft: options.clearDraft,\n            send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n          }).then((updates) => {\n            this.apiUpdatesManager.processUpdateMessage(updates);\n            deferred.resolve();\n          }, (error) => {\n            messages.forEach((message) => toggleError(message, true));\n            deferred.reject(error);\n          });\n        }\n      });\n\n      return deferred;\n    };\n\n    const promises: Promise<InputSingleMedia>[] = messages.map((message) => {\n      return (message.send() as Promise<InputMedia>).then((inputMedia) => {\n        return this.apiManager.invokeApi('messages.uploadMedia', {\n          peer: inputPeer,\n          media: inputMedia\n        });\n      })\n      .then((messageMedia) => {\n        let inputMedia: InputMedia;\n        if(messageMedia._ === 'messageMediaPhoto') {\n          const photo = this.appPhotosManager.savePhoto(messageMedia.photo);\n          inputMedia = getPhotoMediaInput(photo);\n        } else if(messageMedia._ === 'messageMediaDocument') {\n          const doc = this.appDocsManager.saveDoc(messageMedia.document);\n          inputMedia = getDocumentMediaInput(doc);\n        }\n\n        const inputSingleMedia: InputSingleMedia = {\n          _: 'inputSingleMedia',\n          media: inputMedia,\n          random_id: message.random_id,\n          message: caption,\n          entities\n        };\n\n        // * only 1 caption for all inputs\n        if(caption) {\n          caption = '';\n          entities = [];\n        }\n\n        return inputSingleMedia;\n      }).catch((err: any) => {\n        if(err.name === 'AbortError') {\n          return null;\n        }\n\n        this.log.error('sendAlbum upload item error:', err, message);\n        toggleError(message, true);\n        throw err;\n      });\n    });\n\n    return Promise.all(promises).then((inputs) => {\n      return invoke(inputs.filter(Boolean));\n    });\n  }\n\n  public sendContact(peerId: PeerId, contactPeerId: PeerId) {\n    return this.sendOther(peerId, this.appUsersManager.getContactMediaInput(contactPeerId));\n  }\n\n  public sendOther(peerId: PeerId, inputMedia: InputMedia, options: Partial<{\n    replyToMsgId: number,\n    threadId: number,\n    viaBotId: BotId,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    queryId: string\n    resultId: string,\n    scheduleDate: number,\n    silent: true,\n    geoPoint: GeoPoint,\n    sendAsPeerId: PeerId,\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    //this.checkSendOptions(options);\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let media: MessageMedia;\n    switch(inputMedia._) {\n      case 'inputMediaPoll': {\n        const pollId = '' + message.id;\n        inputMedia.poll.id = pollId;\n        this.appPollsManager.savePoll(inputMedia.poll, {\n          _: 'pollResults',\n          flags: 4,\n          total_voters: 0,\n          pFlags: {},\n          recent_voters: []\n        });\n\n        const {poll, results} = this.appPollsManager.getPoll(pollId);\n        media = {\n          _: 'messageMediaPoll',\n          poll,\n          results\n        };\n\n        break;\n      }\n\n      case 'inputMediaPhoto': {\n        media = {\n          _: 'messageMediaPhoto',\n          photo: this.appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id)\n        };\n        break;\n      }\n\n      case 'inputMediaDocument': {\n        const doc = this.appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\n        /* if(doc.sticker && doc.stickerSetInput) {\n          appStickersManager.pushPopularSticker(doc.id);\n        } */\n        media = {\n          _: 'messageMediaDocument',\n          document: doc\n        };\n        break;\n      }\n\n      case 'inputMediaContact': {\n        media = {\n          _: 'messageMediaContact',\n          phone_number: inputMedia.phone_number,\n          first_name: inputMedia.first_name,\n          last_name: inputMedia.last_name,\n          user_id: inputMedia.user_id ?? '0',\n          vcard: inputMedia.vcard\n        };\n        break;\n      }\n\n      case 'inputMediaGeoPoint': {\n        media = {\n          _: 'messageMediaGeo',\n          geo: options.geoPoint\n        };\n        break;\n      }\n\n      case 'inputMediaVenue': {\n        media = {\n          _: 'messageMediaVenue',\n          geo: options.geoPoint,\n          title: inputMedia.title,\n          address: inputMedia.address,\n          provider: inputMedia.provider,\n          venue_id: inputMedia.venue_id,\n          venue_type: inputMedia.venue_type\n        };\n        break;\n      }\n      \n      // @ts-ignore\n      case 'messageMediaPending': {\n        media = inputMedia;\n        break;\n      }\n    }\n\n    message.media = media;\n\n    let toggleError = (on: boolean) => {\n      /* const historyMessage = this.messagesForHistory[messageId];\n      if (on) {\n        message.error = true\n        if (historyMessage) {\n          historyMessage.error = true\n        }\n      } else {\n        delete message.error\n        if (historyMessage) {\n          delete historyMessage.error\n        }\n      } */\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined;\n      let apiPromise: Promise<any>;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMedia', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          message: '',\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      }\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates) => {\n        if(updates.updates) {\n          updates.updates.forEach((update: Update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }, (error) => {\n        toggleError(true);\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined, \n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    return message.promise;\n  }\n\n  /* private checkSendOptions(options: Partial<{\n    scheduleDate: number\n  }>) {\n    if(options.scheduleDate) {\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\n      if(options.scheduleDate <= minTimestamp) {\n        delete options.scheduleDate;\n      }\n    }\n  } */\n\n  private beforeMessageSending(message: Message.message, options: Partial<{\n    isGroupedItem: true, \n    isScheduled: true, \n    threadId: number, \n    clearDraft: true,\n    sequential: boolean,\n    processAfter?: (cb: () => void) => void\n  }> = {}) {\n    const messageId = message.id;\n    const peerId = this.getMessagePeer(message);\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n    let callbacks: Array<() => void> = [];\n    if(options.isScheduled) {\n      //if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('scheduled_new', message);\n      });\n    } else {\n      /* if(options.threadId && this.threadsStorage[peerId]) {\n        delete this.threadsStorage[peerId][options.threadId];\n      } */\n      const storages: HistoryStorage[] = [\n        this.getHistoryStorage(peerId),\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\n      ];\n\n      for(const storage of storages) {\n        if(storage) {\n          storage.history.unshift(messageId);\n        }\n      }\n\n      this.saveMessages([message], {storage, isOutgoing: true});\n      this.setDialogTopMessage(message);\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('history_append', {storageKey: storage.key, message});\n      });\n    }\n\n    const pending: PendingMessageDetails = this.pendingByRandomId[message.random_id] = {\n      peerId, \n      tempId: messageId, \n      threadId: options.threadId, \n      storage,\n      sequential: options.sequential\n    };\n\n    if(!options.isGroupedItem && message.send) {\n      callbacks.push(() => {\n        if(options.clearDraft) {\n          this.appDraftsManager.clearDraft(peerId, options.threadId);\n        }\n\n        message.send();\n      });\n    }\n\n    if(callbacks.length) {\n      (options.processAfter || processAfter)(() => {\n        for(const callback of callbacks) {\n          callback();\n        }\n      });\n    }\n\n    return pending;\n  }\n\n  private generateOutgoingMessage(peerId: PeerId, options: Partial<{\n    scheduleDate: number,\n    replyToMsgId: number,\n    sendAsPeerId: PeerId, \n    threadId: number,\n    viaBotId: BotId,\n    groupId: string,\n    replyMarkup: ReplyMarkup,\n  }>) {\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    let postAuthor: string;\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\n    if(isBroadcast) {\n      const chat = this.appPeersManager.getPeer(peerId) as Chat.channel;\n      if(chat.pFlags.signatures) {\n        const user = this.appUsersManager.getSelf();\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n        postAuthor = fullName;\n      }\n    }\n\n    const message: Message.message = {\n      _: 'message',\n      id: this.generateTempMessageId(peerId),\n      from_id: options.sendAsPeerId ? this.appPeersManager.getOutputPeer(options.sendAsPeerId) : this.generateFromId(peerId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      post_author: postAuthor, \n      pFlags: this.generateFlags(peerId),\n      date: options.scheduleDate || (tsNow(true) + this.timeManager.getServerTimeOffset()),\n      message: '',\n      grouped_id: options.groupId,\n      random_id: randomLong(),\n      reply_to: this.generateReplyHeader(options.replyToMsgId, options.threadId),\n      via_bot_id: options.viaBotId,\n      reply_markup: options.replyMarkup,\n      replies: this.generateReplies(peerId),\n      views: isBroadcast && 1,\n      pending: true\n    };\n\n    defineNotNumerableProperties(message, ['send', 'promise']);\n    if(options.groupId === undefined) {\n      message.promise = deferredPromise();\n    }\n\n    return message;\n  }\n\n  private generateReplyHeader(replyToMsgId: number, replyToTopId?: number) {\n    const header = {\n      _: 'messageReplyHeader',\n      reply_to_msg_id: replyToMsgId || replyToTopId,\n    } as MessageReplyHeader;\n\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\n      header.reply_to_top_id = replyToTopId;\n    }\n\n    return header;\n  }\n\n  private generateReplies(peerId: PeerId) {\n    let replies: MessageReplies.messageReplies;\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n      if(channelFull?.linked_chat_id) {\n        replies = {\n          _: 'messageReplies',\n          flags: 1,\n          pFlags: {\n            comments: true\n          },\n          channel_id: channelFull.linked_chat_id,\n          replies: 0,\n          replies_pts: 0\n        };\n      }\n    }\n\n    return replies;\n  }\n\n  /**\n   * Generate correct from_id according to anonymous or broadcast\n   */\n  private generateFromId(peerId: PeerId) {\n    if(this.appPeersManager.isAnyChat(peerId) && (this.appPeersManager.isBroadcast(peerId) || this.isAnonymousSending(peerId))) {\n      return undefined;\n    } else {\n      return this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId());\n    }\n  }\n\n  private generateFlags(peerId: PeerId) {\n    const pFlags: Message.message['pFlags'] = {};\n    const fromId = this.appUsersManager.getSelf().id;\n    if(peerId !== fromId) {\n      pFlags.out = true;\n\n      if(!this.appPeersManager.isChannel(peerId) && !this.appUsersManager.isBot(peerId)) {\n        pFlags.unread = true;\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      pFlags.post = true;\n    }\n\n    return pFlags;\n  }\n\n  private generateForwardHeader(peerId: PeerId, originalMessage: Message.message) {\n    const myId = this.appUsersManager.getSelf().id.toPeerId();\n    const fromId = originalMessage.fromId;\n    if(fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from) {\n      return;\n    }\n\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\n      _: 'messageFwdHeader',\n      flags: 0,\n      date: originalMessage.date\n    };\n\n    let isUserHidden = false;\n    if(originalMessage.fwd_from) {\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\n    } else {\n      fwdHeader.post_author = originalMessage.post_author;\n      \n      if(fromId.isUser()) {\n        const userFull = this.appProfileManager.getCachedFullUser(fromId.toUserId());\n        if(userFull?.private_forward_name) {\n          fwdHeader.from_name = userFull.private_forward_name;\n          isUserHidden = true;\n        }\n      }\n\n      if(!isUserHidden) {\n        fwdHeader.from_id = this.appPeersManager.getOutputPeer(fromId);\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(originalMessage.peerId)) {\n      if(originalMessage.post_author) {\n        fwdHeader.post_author = originalMessage.post_author;\n      }\n\n      fwdHeader.channel_post = originalMessage.id;\n    }\n    \n    if(peerId === myId && !isUserHidden) {\n      fwdHeader.saved_from_msg_id = originalMessage.id;\n      fwdHeader.saved_from_peer = this.appPeersManager.getOutputPeer(originalMessage.peerId);\n    }\n\n    return fwdHeader;\n  }\n\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\n    const maxId = Number.MAX_SAFE_INTEGER;\n    const message: Message.messageService = {\n      _: 'messageService',\n      pFlags: {},\n      action: {\n        _: 'messageActionChannelEditPhoto',\n        photo\n      },\n      id: maxId,\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      mid: maxId,\n      peerId,\n      date: (photo as Photo.photo).date,\n      fromId: peerId\n    };\n\n    this.getHistoryMessagesStorage(peerId).set(maxId, message);\n    return message;\n  }\n\n  public getUploadPromise(uploadFileName: string) {\n    return this.uploadFilePromises[uploadFileName];\n  }\n\n  public isAnonymousSending(peerId: PeerId): boolean {\n    return peerId.isAnyChat() && this.appPeersManager.getPeer(peerId).admin_rights?.pFlags?.anonymous;\n  }\n\n  public setDialogTopMessage(message: MyMessage, dialog: MTDialog.dialog = this.getDialogOnly(message.peerId)) {\n    if(dialog) {\n      dialog.top_message = message.mid;\n      \n      const historyStorage = this.getHistoryStorage(message.peerId);\n      historyStorage.maxId = message.mid;\n\n      this.dialogsStorage.generateIndexForDialog(dialog, false, message);\n\n      this.scheduleHandleNewDialogs(message.peerId, dialog);\n    }\n  }\n\n  public cancelPendingMessage(randomId: string) {\n    const pendingData = this.pendingByRandomId[randomId];\n\n    /* if(DEBUG) {\n      this.log('cancelPendingMessage', randomId, pendingData);\n    } */\n\n    if(pendingData) {\n      const {peerId, tempId, storage} = pendingData;\n      const historyStorage = this.getHistoryStorage(peerId);\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateDeleteMessages',\n        messages: [tempId],\n        pts: undefined,\n        pts_count: undefined\n      });\n\n      historyStorage.history.delete(tempId);\n\n      delete this.pendingByRandomId[randomId];\n      storage.delete(tempId);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /* public async refreshConversations() {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(let folderId = 0; folderId < 2; ++folderId) {\n      let offsetDate = 0;\n      for(;;) {\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\n  \n        if(dialogs.length) {\n          outDialogs.push(...dialogs as Dialog[]);\n          const dialog = dialogs[dialogs.length - 1];\n\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\n          const peerId = getPeerId(dialog.peer);\n          const mid = generateMessageId(dialog.top_message);\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\n\n          if(!offsetDate) {\n            console.error('refreshConversations: got no offsetDate', dialog);\n            break;\n          }\n        }\n        \n        if(isEnd) {\n          break;\n        }\n      }\n    }\n\n    let obj: {[peerId: string]: Dialog} = {};\n    outDialogs.forEach((dialog) => {\n      obj[dialog.peerId] = dialog;\n    });\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n\n    return outDialogs;\n  } */\n\n  public async fillConversations(): Promise<void> {\n    const middleware = this.middleware.get();\n    while(!this.dialogsStorage.isDialogsLoaded(GLOBAL_FOLDER_ID)) {\n      const result = await this.getTopMessages(100, GLOBAL_FOLDER_ID);\n      if(!middleware() || result.isEnd) {\n        break;\n      }\n    }\n  }\n\n  /* public async getConversationsAll(query = '', folderId = 0) {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(; folderId < 2; ++folderId) {\n      let offsetIndex = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\n  \n        if(dialogs.length) {\n          outDialogs.push(...dialogs);\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return outDialogs;\n  } */\n\n  public getConversations(query = '', offsetIndex?: number, limit?: number, folderId = 0, skipMigrated?: boolean) {\n    return this.dialogsStorage.getDialogs(query, offsetIndex, limit, folderId, skipMigrated);\n  }\n\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(threadId) {\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    } else {\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\n      const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    }\n  }\n\n  // public lolSet = new Set();\n  public getTopMessages(limit: number, folderId: LOCAL_FOLDER_ID, offsetDate?: number) {\n    //const dialogs = this.dialogsStorage.getFolder(folderId);\n    let offsetId = 0;\n    let offsetPeerId: PeerId;\n    let offsetIndex = 0;\n\n    if(offsetDate === undefined) {\n      offsetDate = this.dialogsStorage.getOffsetDate(folderId);\n    }\n\n    if(offsetDate) {\n      offsetIndex = offsetDate * 0x10000;\n      offsetDate += this.timeManager.getServerTimeOffset();\n    }\n\n    const useLimit = 100;\n    const middleware = this.middleware.get();\n\n    // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\n    // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\n    // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\n    const params: MessagesGetDialogs = {\n      folder_id: folderId,\n      offset_date: offsetDate,\n      offset_id: offsetId,\n      offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n      limit: useLimit,\n      hash: '0'\n    };\n\n    return this.apiManager.invokeApiSingle('messages.getDialogs', params, {\n      //timeout: APITIMEOUT,\n      noErrorBox: true\n    }).then((dialogsResult) => {\n      if(!middleware() || dialogsResult._ === 'messages.dialogsNotModified') return null;\n\n      if(DEBUG) {\n        this.log('messages.getDialogs result:', dialogsResult.dialogs, {...dialogsResult.dialogs[0]});\n      }\n\n      /* if(!offsetDate) {\n        telegramMeWebService.setAuthorized(true);\n      } */\n\n      // can reset pinned order here\n      if(!offsetId && !offsetDate && !offsetPeerId && folderId !== GLOBAL_FOLDER_ID) {\n        this.dialogsStorage.resetPinnedOrder(folderId);\n      }\n\n      if(!offsetDate) {\n        telegramMeWebManager.setAuthorized(true);\n        this.appDraftsManager.addMissedDialogs();\n      }\n\n      this.appUsersManager.saveApiUsers(dialogsResult.users);\n      this.appChatsManager.saveApiChats(dialogsResult.chats);\n      this.saveMessages(dialogsResult.messages);\n\n      let maxSeenIdIncremented = offsetDate ? true : false;\n      let hasPrepend = false;\n      const noIdsDialogs: {[peerId: PeerId]: Dialog} = {};\n      const setFolderId: LOCAL_FOLDER_ID = folderId === GLOBAL_FOLDER_ID ? 0 : folderId;\n      const saveGlobalOffset = folderId === GLOBAL_FOLDER_ID;\n      forEachReverse((dialogsResult.dialogs as Dialog[]), (dialog) => {\n        //const d = Object.assign({}, dialog);\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\n        if(dialog.folder_id === undefined) {\n          dialog.folder_id = setFolderId;\n        }\n\n        this.dialogsStorage.saveDialog(dialog, undefined, true, saveGlobalOffset);\n\n        if(!maxSeenIdIncremented &&\n          !this.appPeersManager.isChannel(dialog.peerId || getPeerId(dialog.peer))) {\n          this.incrementMaxSeenId(dialog.top_message);\n          maxSeenIdIncremented = true;\n        }\n\n        if(dialog.peerId === undefined) {\n          return;\n        }\n\n        // if(!folderId && !dialog.folder_id) {\n        //   this.lolSet.add(dialog.peerId);\n        // }\n\n        if(offsetIndex && getDialogIndex(dialog) > offsetIndex) {\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\n          hasPrepend = true;\n        }\n\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\n        if(!getServerMessageId(dialog.read_inbox_max_id) && !getServerMessageId(dialog.read_outbox_max_id)) {\n          noIdsDialogs[dialog.peerId] = dialog;\n\n          this.log.error('noIdsDialogs', dialog, params);\n        }\n      });\n\n      const keys = Object.keys(noIdsDialogs);\n      if(keys.length) {\n        //setTimeout(() => { // test bad situation\n          const peerIds = keys.map((key) => key.toPeerId());\n          const promises = peerIds.map((peerId) => this.reloadConversation(peerId));\n          Promise.all(promises).then(() => {\n            this.rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\n  \n            for(let i = 0; i < peerIds.length; ++i) {\n              const peerId = peerIds[i];\n              this.rootScope.dispatchEvent('dialog_unread', {\n                peerId, \n                dialog: this.getDialogOnly(peerId)\n              });\n            }\n          });\n        //}, 10e3);\n      }\n\n      const count = (dialogsResult as MessagesDialogs.messagesDialogsSlice).count;\n\n      // exclude empty draft dialogs\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\n      let dialogsLength = 0;\n      for(let i = 0, length = folderDialogs.length; i < length; ++i) {\n        if(getServerMessageId(folderDialogs[i].top_message)) {\n          ++dialogsLength;\n        }\n      }\n\n      const isEnd = /* limit > dialogsResult.dialogs.length || */ \n        !count || \n        dialogsLength >= count ||\n        !dialogsResult.dialogs.length;\n      if(isEnd) {\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\n      }\n\n      if(hasPrepend) {\n        this.scheduleHandleNewDialogs();\n      } else {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', {});\n      }\n\n      const dialogs = (dialogsResult as MessagesDialogs.messagesDialogsSlice).dialogs;\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\n      return {\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1], \n        count, \n        dialogs: slicedDialogs\n      };\n    });\n  }\n\n  public async forwardMessages(peerId: PeerId, fromPeerId: PeerId, mids: number[], options: Partial<{\n    withMyScore: true,\n    silent: true,\n    scheduleDate: number,\n    dropAuthor: boolean,\n    dropCaptions: boolean,\n    sendAsPeerId: PeerId,\n  }> = {}) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    mids = mids.slice().sort((a, b) => a - b);\n\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\n        this.sendText(peerId, originalMessage.message, {\n          entities: originalMessage.entities,\n          scheduleDate: options.scheduleDate,\n          silent: options.silent\n        });\n\n        mids.splice(i--, 1);\n        --length;\n      }\n    }\n\n    if(!mids.length) {\n      return Promise.resolve();\n    }\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    if(options.dropCaptions) {\n      options.dropAuthor = true;\n    }\n\n    const groups: {\n      [groupId: string]: {\n        tempId: string,\n        messages: Message.message[]\n      }\n    } = {};\n\n    const newMids: number[] = [];\n    const newMessages = mids.map((mid) => {\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\n      newMids.push(message.id);\n\n      const keys: Array<keyof Message.message> = [\n        'entities', \n        'media', \n        // 'reply_markup'\n      ];\n\n      if(!options.dropAuthor) {\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\n        keys.push('views', 'forwards');\n\n        if(message.fwd_from?.from_name && peerId === this.appPeersManager.peerId) {\n          delete message.from_id;\n        }\n      }\n\n      if(!options.dropCaptions || !originalMessage.media) {\n        keys.push('message');\n      }\n\n      const replyToMid = originalMessage.reply_to?.reply_to_msg_id;\n      const replyToMessageIdx = mids.indexOf(replyToMid);\n      if(replyToMid && replyToMessageIdx !== -1) {\n        const newReplyToMid = newMids[replyToMessageIdx];\n        message.reply_to = {\n          _: 'messageReplyHeader',\n          reply_to_msg_id: newReplyToMid\n        };\n\n        /* this.invokeAfterMessageIsSent(newReplyToMid, 'reply', async(originalMessage) => {\n          message.reply_to.reply_to_msg_id = originalMessage.mid;\n        }); */\n      }\n\n      keys.forEach((key) => {\n        // @ts-ignore\n        message[key] = originalMessage[key];\n      });\n\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n      if(document) {\n        const types: MyDocument['type'][] = ['round', 'voice'];\n        if(types.includes(document.type)) {\n          (message as MyMessage).pFlags.media_unread = true;\n        }\n      }\n\n      if(originalMessage.grouped_id) {\n        const group = groups[originalMessage.grouped_id] ?? (groups[originalMessage.grouped_id] = {tempId: '' + ++this.groupedTempId, messages: []});\n        group.messages.push(message);\n      }\n\n      return message;\n    });\n\n    for(const groupId in groups) {\n      const group = groups[groupId];\n      if(group.messages.length > 1) {\n        group.messages.forEach((message) => {\n          message.grouped_id = group.tempId;\n        });\n      }\n    }\n\n    newMessages.forEach((message) => {\n      this.beforeMessageSending(message, {\n        isScheduled: !!options.scheduleDate || undefined,\n        sequential: true\n      });\n    });\n\n    const sentRequestOptions: PendingAfterMsg = {};\n    if(this.pendingAfterMsgs[peerId]) {\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n    }\n\n    const promise = /* true ? Promise.resolve() :  */this.apiManager.invokeApiAfter('messages.forwardMessages', {\n      from_peer: this.appPeersManager.getInputPeerById(fromPeerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      random_id: newMessages.map((message) => message.random_id),\n      to_peer: this.appPeersManager.getInputPeerById(peerId),\n      with_my_score: options.withMyScore,\n      silent: options.silent,\n      schedule_date: options.scheduleDate,\n      drop_author: options.dropAuthor,\n      drop_media_captions: options.dropCaptions,\n      send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n    }, sentRequestOptions).then((updates) => {\n      this.log('forwardMessages updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }).finally(() => {\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n        delete this.pendingAfterMsgs[peerId];\n      }\n    });\n\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.forwardMessages(peerId, fromPeerId, overflowMids, options));\n    }\n    \n    return Promise.all(promises).then(noop);\n  }\n\n  public generateEmptyMessage(mid: number): Message.message | Message.messageService {\n    return undefined;\n    // return {\n    //   _: 'messageEmpty',\n    //   id: getServerMessageId(mid),\n    //   mid,\n    //   deleted: true,\n    //   pFlags: {}\n    // };\n  }\n  \n  public getMessagesStorageByKey(key: MessagesStorageKey) {\n    const s = key.split('_');\n    const peerId: PeerId = +s[0];\n    const type: MessagesStorageType = s[1] as any;\n    return type === 'scheduled' ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n  }\n\n  public getMessageFromStorage(storage: MessagesStorage | MessagesStorageKey, mid: number) {\n    if(typeof(storage) === 'string') {\n      storage = this.getMessagesStorageByKey(storage);\n    }\n    \n    return storage && storage.get(mid)/*  || this.generateEmptyMessage(mid) */;\n  }\n\n  private createMessageStorage(peerId: PeerId, type: MessagesStorageType) {\n    const storage: MessagesStorage = new Map() as any;\n    storage.peerId = peerId;\n    storage.type = type;\n    storage.key = `${peerId}_${type}`;\n    \n    /* let num = 0;\n    Object.defineProperty(storage, 'num', {\n      get: () => ++num,\n      set: (_num: number) => num = _num, \n      enumerable: false\n    });\n\n    Object.defineProperty(storage, 'generateIndex', {\n      value: (message: any) => {\n        if(message.index === undefined) {\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\n        }\n      },\n      enumerable: false\n    }); */\n\n    return storage;\n  }\n\n  public getHistoryMessagesStorage(peerId: PeerId) {\n    return this.messagesStorageByPeerId[peerId] ?? (this.messagesStorageByPeerId[peerId] = this.createMessageStorage(peerId, 'history'));\n  }\n\n  public getMessagesStorage(key: MessagesStorageKey | MessagesStorage): MessagesStorage {\n    if(typeof(key) === 'object') {\n      return key;\n    } else {\n      return this.getMessagesStorageByKey(key);\n    }\n  }\n\n  public getMessageById(messageId: number) {\n    for(const peerId in this.messagesStorageByPeerId) {\n      if(this.appPeersManager.isChannel(peerId.toPeerId())) {\n        continue;\n      }\n\n      const message = this.messagesStorageByPeerId[peerId].get(messageId);\n      if(message) {\n        return message;\n      }\n    }\n\n    return this.getMessageFromStorage(null, messageId);\n  }\n\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\n    if(!peerId) {\n      return this.getMessageById(messageId);\n    }\n\n    return this.getMessageFromStorage(this.getHistoryMessagesStorage(peerId), messageId);\n  }\n\n  public getMessagePeer(message: any): PeerId {\n    const toId = message.peer_id && getPeerId(message.peer_id) || NULL_PEER_ID;\n\n    return toId;\n  }\n\n  public getDialogByPeerId(peerId: PeerId): [Dialog, number] | [] {\n    return this.dialogsStorage.getDialog(peerId);\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogsStorage.getDialogOnly(peerId);\n  }\n\n  public cantForwardDeleteMids(storageKey: MessagesStorageKey, mids: number[]) {\n    const storage = this.getMessagesStorage(storageKey);\n    let cantForward = !mids.length, cantDelete = !mids.length;\n    for(const mid of mids) {\n      const message = this.getMessageFromStorage(storage, mid);\n      if(!cantForward) {\n        cantForward = !this.canForward(message);\n      }\n      \n      if(!cantDelete) {\n        cantDelete = !this.canDeleteMessage(message);\n      }\n\n      if(cantForward && cantDelete) break;\n    }\n\n    return {cantForward, cantDelete};\n  }\n\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\n  public reloadConversation(inputPeer: PeerId | InputPeer) {\n    let promise: CancellablePromise<Dialog>;\n    if(inputPeer !== undefined) {\n      const peerId = getPeerId(inputPeer);\n      let obj = this.reloadConversationsPeers.get(peerId);\n      if(obj) {\n        promise = obj.promise;\n      }\n\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      this.reloadConversationsPeers.set(peerId, obj = {\n        inputDialogPeer: this.appPeersManager.getInputDialogPeerById(inputPeer),\n        promise\n      });\n    }\n\n    if(this.reloadConversationsPromise) {\n      return promise || this.reloadConversationsPromise;\n    }\n\n    this.reloadConversationsPromise = pause(0).then(() => {\n      const inputDialogPeers: InputDialogPeer[] = [];\n      const promises: {[peerId: string]: typeof promise} = {};\n      for(const [peerId, {inputDialogPeer, promise}] of this.reloadConversationsPeers) {\n        inputDialogPeers.push(inputDialogPeer);\n        promises[peerId] = promise;\n      }\n\n      this.reloadConversationsPeers.clear();\n\n      const fullfillLeft = () => {\n        for(const peerId in promises) {\n          promises[peerId].resolve(undefined);\n        }\n      };\n\n      return this.apiManager.invokeApi('messages.getPeerDialogs', {peers: inputDialogPeers}).then((result) => {\n        this.dialogsStorage.applyDialogs(result);\n\n        result.dialogs.forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(peerId) {\n            promises[peerId].resolve(dialog as Dialog);\n            delete promises[peerId];\n          }\n        });\n\n        // fullfillLeft();\n        // resolve();\n      }, (err) => {\n        // fullfillLeft();\n        // resolve();\n        // reject(err);\n      }).then(() => {\n        fullfillLeft();\n        \n        this.reloadConversationsPromise = null;\n        if(this.reloadConversationsPeers.size) {\n          this.reloadConversation();\n        }\n      });\n    });\n\n    return promise || this.reloadConversationsPromise;\n  }\n\n  private doFlushHistory(peer: InputPeer, just_clear?: boolean, revoke?: boolean): Promise<true> {\n    return this.apiManager.invokeApiSingle('messages.deleteHistory', {\n      just_clear,\n      revoke,\n      peer,\n      max_id: 0\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        return true;\n      }\n\n      return this.doFlushHistory(peer, just_clear, revoke);\n    });\n  }\n\n  public async flushHistory(peerId: PeerId, justClear?: boolean, revoke?: boolean) {\n    if(this.appPeersManager.isChannel(peerId)) {\n      const promise = this.getHistory(peerId, 0, 1);\n\n      const historyResult = await promise;\n\n      const channelId = peerId.toChatId();\n      const maxId = historyResult.history[0] || 0;\n      return this.apiManager.invokeApiSingle('channels.deleteHistory', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        max_id: getServerMessageId(maxId)\n      }).then((bool) => {\n        if(bool) {\n          this.apiUpdatesManager.processLocalUpdate({\n            _: 'updateChannelAvailableMessages',\n            channel_id: channelId,\n            available_min_id: maxId\n          });\n        }\n\n        return bool;\n      });\n    }\n\n    return this.doFlushHistory(this.appPeersManager.getInputPeerById(peerId), justClear, revoke).then(() => {\n      [\n        this.historiesStorage, \n        this.threadsStorage, \n        this.searchesStorage, \n        this.pinnedMessages,\n        this.pendingAfterMsgs,\n        this.pendingTopMsgs\n      ].forEach((s) => {\n        delete s[peerId];\n      });\n\n      const m = this.needSingleMessages.get(peerId);\n      if(m) {\n        m.clear();\n      }\n\n      [\n        this.messagesStorageByPeerId,\n        this.scheduledMessagesStorage\n      ].forEach((s) => {\n        const ss = s[peerId];\n        if(ss) {\n          ss.clear();\n        }\n      });\n      \n      if(justClear) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog: this.getDialogOnly(peerId)});\n      } else {\n        delete this.notificationsToHandle[peerId];\n        delete this.typings[peerId];\n        \n        const c = this.reloadConversationsPeers.get(peerId);\n        if(c) {\n          this.reloadConversationsPeers.delete(peerId);\n          c.promise.resolve(undefined);\n        }\n\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    });\n  }\n\n  public hidePinnedMessages(peerId: PeerId) {\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.getPinnedMessage(peerId)\n    ])\n    .then(([state, pinned]) => {\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\n      this.rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\n    });\n  }\n\n  public getPinnedMessage(peerId: PeerId) {\n    const p = this.pinnedMessages[peerId] ?? (this.pinnedMessages[peerId] = {});\n    if(p.promise) return p.promise;\n    else if(p.maxId) return Promise.resolve(p);\n\n    return p.promise = this.getSearch({\n      peerId, \n      inputFilter: {_: 'inputMessagesFilterPinned'},\n      maxId: 0,\n      limit: 1\n    }).then((result) => {\n      p.count = result.count;\n      p.maxId = result.history[0]?.mid;\n      return p;\n    }).finally(() => {\n      delete p.promise;\n    });\n  }\n\n  public getPinnedMessagesCount(peerId: PeerId) {\n    return this.pinnedMessages[peerId]?.count;\n  }\n\n  public getPinnedMessagesMaxId(peerId: PeerId) {\n    return this.pinnedMessages[peerId]?.maxId;\n  }\n\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\n    return this.apiManager.invokeApi('messages.updatePinnedMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      unpin,\n      silent,\n      pm_oneside,\n      id: getServerMessageId(mid)\n    }).then((updates) => {\n      //this.log('pinned updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\n    return this.apiManager.invokeApiSingle('messages.unpinAllMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        const storage = this.getHistoryMessagesStorage(peerId);\n        storage.forEach((message) => {\n          if((message as Message.message).pFlags.pinned) {\n            delete (message as Message.message).pFlags.pinned;\n          }\n        });\n\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\n        delete this.pinnedMessages[peerId];\n\n        return true;\n      }\n\n      return this.unpinAllMessages(peerId);\n    });\n  }\n\n  public getAlbumText(grouped_id: string) {\n    const group = this.groupedMessagesStorage[grouped_id];\n    return getAlbumText(Array.from(group.values()) as Message.message[]);\n  }\n\n  public getGroupsFirstMessage(message: Message.message) {\n    if(!message?.grouped_id) return message;\n\n    const storage = this.groupedMessagesStorage[message.grouped_id];\n    let minMid = Number.MAX_SAFE_INTEGER;\n    for(const [mid, message] of storage) {\n      if(message.mid < minMid) {\n        minMid = message.mid;\n      }\n    }\n\n    return this.getMessageFromStorage(storage, minMid) as Message.message;\n  }\n\n  public getMidsByAlbum(groupedId: string, sort: 'asc' | 'desc' = 'asc') {\n    return getObjectKeysAndSort(this.groupedMessagesStorage[groupedId], sort);\n  }\n\n  public getMessagesByAlbum(groupedId: string) {\n    const mids = this.getMidsByAlbum(groupedId, 'asc');\n    const storage = this.groupedMessagesStorage[groupedId];\n    return mids.map((mid) => this.getMessageFromStorage(storage, mid) as Message.message);\n  }\n\n  public getMidsByMessage(message: Message) {\n    if(!message) return [];\n    else if((message as Message.message).grouped_id) return this.getMidsByAlbum((message as Message.message).grouped_id);\n    else return [message.mid];\n  }\n\n  public filterMessages(message: MyMessage, verify: (message: MyMessage) => boolean) {\n    const out: MyMessage[] = [];\n    if((message as Message.message).grouped_id) {\n      const storage = this.groupedMessagesStorage[(message as Message.message).grouped_id];\n      for(const [mid, message] of storage) {\n        if(verify(message)) {\n          out.push(message);\n        }\n      }\n    } else {\n      if(verify(message)) {\n        out.push(message);\n      }\n    }\n\n    return out;\n  }\n\n  public generateTempMessageId(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    return this.appMessagesIdsManager.generateTempMessageId(dialog?.top_message || 0);\n  }\n\n  public saveMessage(message: Message, options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    //isNew: boolean, // * new - from update\n  }> = {}) {\n    if(!message || message._ === 'messageEmpty') {\n      return;\n    }\n\n    if(message.pFlags === undefined) {\n      message.pFlags = {};\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\n\n    const peerId = this.getMessagePeer(message);\n    const storage = options.storage || this.getHistoryMessagesStorage(peerId);\n    const isChannel = message.peer_id._ === 'peerChannel';\n    const isBroadcast = isChannel && this.appChatsManager.isBroadcast(peerId.toChatId());\n    const isMessage = message._ === 'message';\n\n    if(options.isOutgoing) {\n      message.pFlags.is_outgoing = true;\n    }\n    \n    const mid = generateMessageId(message.id);\n    message.mid = mid;\n\n    if(isMessage) {\n      if(options.isScheduled) {\n        message.pFlags.is_scheduled = true;\n      }\n\n      if(message.grouped_id) {\n        const storage = this.groupedMessagesStorage[message.grouped_id] ?? (this.groupedMessagesStorage[message.grouped_id] = this.createMessageStorage(peerId, 'grouped'));\n        storage.set(mid, message);\n      }\n\n      if(message.via_bot_id) {\n        // ! WARNING\n        message.viaBotId = message.via_bot_id as any;\n      }\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog && mid) {\n      if(mid > dialog[message.pFlags.out\n        ? 'read_outbox_max_id'\n        : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n      }\n    }\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n    if(message.reply_to) {\n      if(message.reply_to.reply_to_msg_id) {\n        message.reply_to.reply_to_msg_id = message.reply_to_mid = generateMessageId(message.reply_to.reply_to_msg_id);\n      } \n\n      if(message.reply_to.reply_to_top_id) {\n        message.reply_to.reply_to_top_id = generateMessageId(message.reply_to.reply_to_top_id);\n      }\n    }\n\n    const replies = isMessage && message.replies;\n    if(replies) {\n      if(replies.max_id) replies.max_id = generateMessageId(replies.max_id);\n      if(replies.read_max_id) replies.read_max_id = generateMessageId(replies.read_max_id);\n    }\n\n    const overwriting = !!peerId;\n    if(!overwriting) {\n      message.date -= this.timeManager.getServerTimeOffset();\n    }\n    \n    //storage.generateIndex(message);\n    const myId = this.appPeersManager.peerId;\n\n    const fwdHeader = isMessage && (message as Message.message).fwd_from;\n\n    message.peerId = peerId;\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\n      message.fromId = fwdHeader ? (fwdHeader.from_id ? getPeerId(fwdHeader.from_id) : NULL_PEER_ID) : myId;\n    } else {\n      //message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\n      message.fromId = message.pFlags.post || !message.from_id ? peerId : getPeerId(message.from_id);\n    }\n\n    if(fwdHeader) {\n      //if(peerId === myID) {\n        if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = generateMessageId(fwdHeader.saved_from_msg_id);\n        if(fwdHeader.channel_post) fwdHeader.channel_post = generateMessageId(fwdHeader.channel_post);\n\n        const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\n        const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\n        if(peer && msgId) {\n          const savedFromPeerId = getPeerId(peer);\n          const savedFromMid = generateMessageId(msgId);\n          message.savedFrom = savedFromPeerId + '_' + savedFromMid;\n        }\n\n        /* if(peerId.isAnyChat() || peerId === myID) {\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\n        } */\n      /* } else {\n        apiMessage.fwdPostID = fwdHeader.channel_post;\n      } */\n\n      message.fwdFromId = getPeerId(fwdHeader.from_id);\n\n      if(!overwriting) {\n        fwdHeader.date -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    const mediaContext: ReferenceContext = {\n      type: 'message',\n      peerId,\n      messageId: mid\n    };\n\n    /* if(isMessage) {\n      const entities = message.entities;\n      if(entities && entities.find((entity) => entity._ === 'messageEntitySpoiler')) {\n        message.media = {_: 'messageMediaUnsupported'};\n      }\n    } */\n\n    if(isMessage && message.media) {\n      let unsupported = false;\n      switch(message.media._) {\n        case 'messageMediaEmpty': {\n          delete message.media;\n          break;\n        }\n\n        case 'messageMediaPhoto': {\n          if(message.media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            message.media.photo = this.appPhotosManager.savePhoto(message.media.photo, mediaContext);\n          }\n\n          if(!(message.media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\n            delete message.media;\n          }\n          \n          break;\n        }\n          \n        case 'messageMediaPoll': {\n          const result = this.appPollsManager.savePoll(message.media.poll, message.media.results, message);\n          message.media.poll = result.poll;\n          message.media.results = result.results;\n          break;\n        }\n          \n        case 'messageMediaDocument': {\n          if(message.media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            const originalDoc = message.media.document;\n            message.media.document = this.appDocsManager.saveDoc(originalDoc, mediaContext); // 11.04.2020 warning\n\n            if(!message.media.document && originalDoc._ !== 'documentEmpty') {\n              unsupported = true;\n            }\n          }\n\n          break;\n        }\n          \n        case 'messageMediaWebPage': {\n          const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(peerId, mid, options.isScheduled);\n          message.media.webpage = this.appWebPagesManager.saveWebPage(message.media.webpage, messageKey, mediaContext);\n          break;\n        }\n          \n        /*case 'messageMediaGame':\n          AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\n          apiMessage.media.handleMessage = true;\n          break; */\n\n        case 'messageMediaInvoice': {\n          unsupported = true;\n          message.media = {_: 'messageMediaUnsupported'};\n          break;\n        }\n\n        case 'messageMediaUnsupported': {\n          unsupported = true;\n          break;\n        }\n      }\n\n      if(unsupported) {\n        message.media = {_: 'messageMediaUnsupported'};\n        message.message = '';\n        delete message.entities;\n        delete message.totalEntities;\n      }\n    }\n\n    if(!isMessage && message.action) {\n      const action = message.action as MessageAction;\n      let migrateFrom: PeerId;\n      let migrateTo: PeerId;\n      const suffix = message.fromId === this.appUsersManager.getSelf().id ? 'You' : '';\n\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\n        (action as MessageAction.messageActionChatEditPhoto).photo = this.appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\n      }\n\n      if((action as any).document) {\n        (action as any).document = this.appDocsManager.saveDoc((action as any).photo, mediaContext);\n      }\n\n      switch(action._) {\n        //case 'messageActionChannelEditPhoto':\n        case 'messageActionChatEditPhoto':\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\n          if((action.photo as Photo.photo)?.video_sizes) {\n            // @ts-ignore\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\n          } else {\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\n              // @ts-ignore\n              action._ = 'messageActionChannelEditPhoto';\n            }\n          }\n          break;\n        \n        case 'messageActionGroupCall': {\n          //assumeType<MessageAction.messageActionGroupCall>(action);\n\n          this.appGroupCallsManager.saveGroupCall(action.call);\n\n          let type: string;\n          if(action.duration === undefined) {\n            type = 'started';\n          } else {\n            type = 'ended'\n          }\n\n          if(!isBroadcast) {\n            type += '_by' + suffix;\n          }\n\n          // @ts-ignore\n          action.type = type;\n\n          break;\n        }\n\n        case 'messageActionChatEditTitle':\n          /* if(options.isNew) {\n            const chat = appChatsManager.getChat(peerId.toChatId());\n            chat.title = action.title;\n            appChatsManager.saveApiChat(chat, true);\n          } */\n          \n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelEditTitle';\n          }\n          break;\n\n        case 'messageActionChatDeletePhoto':\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelDeletePhoto';\n          }\n          break;\n\n        case 'messageActionChatAddUser':\n          if(action.users.length === 1) {\n            // @ts-ignore\n            action.user_id = action.users[0];\n            // @ts-ignore\n            if(message.fromId === action.user_id) {\n              if(isChannel) {\n                // @ts-ignore\n                action._ = 'messageActionChatJoined' + suffix;\n              } else {\n                // @ts-ignore\n                action._ = 'messageActionChatReturn' + suffix;\n              }\n            }\n          } else if(action.users.length > 1) {\n            // @ts-ignore\n            action._ = 'messageActionChatAddUsers';\n          }\n          break;\n\n        case 'messageActionChatDeleteUser':\n          if(message.fromId === action.user_id) {\n            // @ts-ignore\n            action._ = 'messageActionChatLeave' + suffix;\n          }\n          break;\n\n        case 'messageActionChannelMigrateFrom':\n          migrateFrom = action.chat_id.toPeerId(true);\n          migrateTo = peerId;\n          break\n\n        case 'messageActionChatMigrateTo':\n          migrateFrom = peerId;\n          migrateTo = action.channel_id.toPeerId(true);\n          break;\n\n        case 'messageActionHistoryClear':\n          //apiMessage.deleted = true;\n          message.clear_history = true;\n          delete message.pFlags.out;\n          delete message.pFlags.unread;\n          break;\n\n        case 'messageActionPhoneCall':\n          // @ts-ignore\n          action.type = \n            (action.pFlags.video ? 'video_' : '') +\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\n            (\n              action.duration !== undefined ? 'ok' : (\n                action.reason._ === 'phoneCallDiscardReasonMissed'\n                  ? 'missed'\n                  : 'cancelled'\n              )\n            );\n          break;\n      }\n      \n      if(migrateFrom &&\n          migrateTo &&\n          !this.migratedFromTo[migrateFrom] &&\n          !this.migratedToFrom[migrateTo]) {\n        this.migrateChecks(migrateFrom, migrateTo);\n      }\n    }\n\n    /* if(message.grouped_id) {\n      if(!groups) {\n        groups = new Set();\n      }\n\n      groups.add(message.grouped_id);\n    } else {\n      message.rReply = this.getRichReplyText(message);\n    } */\n\n    if(isMessage && message.message.length && !message.totalEntities) {\n      this.wrapMessageEntities(message);  \n    }\n\n    storage.set(mid, message);\n\n    return message;\n  }\n\n  public saveMessages(messages: any[], options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    //isNew: boolean, // * new - from update\n  }> = {}): (Message.message | Message.messageService)[] {\n    if((messages as any).saved) return messages;\n    (messages as any).saved = true;\n    messages.forEach((message, idx, arr) => {\n      arr[idx] = this.saveMessage(message, options);\n    });\n\n    return messages;\n  }\n\n  public async getFirstMessageToEdit(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n      let goodMessage: Message.message | Message.messageService;\n      const myPeerId = this.appPeersManager.peerId;\n      for(const mid of slice) {\n        const message = this.getMessageByPeer(peerId, mid);\n        const good = myPeerId === peerId ? message.fromId === myPeerId : message.pFlags.out;\n\n        if(good) {\n          if(await this.canEditMessage(message, 'text')) {\n            goodMessage = message;\n            break;\n          }\n\n          // * this check will allow editing only last message\n          //break;\n        }\n      }\n\n      return goodMessage;\n    }\n  }\n\n  private wrapMessageEntities(message: Message.message) {\n    const apiEntities = message.entities ? message.entities.slice() : [];\n    message.message = fixEmoji(message.message, apiEntities);\n\n    const myEntities = parseEntities(message.message);\n    message.totalEntities = mergeEntities(apiEntities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n  }\n\n  public reportMessages(peerId: PeerId, mids: number[], reason: ReportReason['_'], message?: string) {\n    return this.apiManager.invokeApiSingle('messages.report', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      reason: {\n        _: reason\n      },\n      message\n    });\n  }\n\n  public startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\n    if(startParam) {\n      const randomId = randomLong();\n\n      return this.apiManager.invokeApi('messages.startBot', {\n        bot: this.appUsersManager.getUserInput(botId),\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        random_id: randomId,\n        start_param: startParam\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      });\n    }\n\n    const str = '/start';\n    if(chatId) {\n      let promise: Promise<void>;\n      if(this.appChatsManager.isChannel(chatId)) {\n        promise = this.appChatsManager.inviteToChannel(chatId, [botId]);\n      } else {\n        promise = this.appChatsManager.addChatUser(chatId, botId, 0);\n      }\n\n      return promise.catch((error) => {\n        if(error && error.type == 'USER_ALREADY_PARTICIPANT') {\n          error.handled = true;\n          return;\n        }\n\n        throw error;\n      }).then(() => {\n        const bot = this.appUsersManager.getUser(botId);\n        return this.sendText(peerId, str + '@' + bot.username);\n      });\n    }\n\n    return this.sendText(peerId, str);\n  }\n\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\n    this.apiManager.invokeApi('folders.editPeerFolders', {\n      folder_peers: peerIds.map((peerId) => {\n        return {\n          _: 'inputFolderPeer',\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          folder_id: folderId\n        };\n      })\n    }).then((updates) => {\n      //this.log('editPeerFolders updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\n    });\n  }\n\n  public getFilter(filterId: number) {\n    return this.filtersStorage.getFilter(filterId);\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId?: number) {\n    if(filterId > 1) {\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\n\n    if(pinned) {\n      const appConfig = await this.apiManager.getAppConfig();\n      const max = filterId === 1 ? \n        (this.rootScope.premium ? appConfig.dialogs_folder_pinned_limit_premium : appConfig.dialogs_folder_pinned_limit_default) : \n        (this.rootScope.premium ? appConfig.dialogs_pinned_limit_premium : appConfig.dialogs_pinned_limit_default);\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\n        return Promise.reject({type: 'PINNED_DIALOGS_TOO_MUCH'});\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.toggleDialogPin', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      pinned\n    }).then((bool) => {\n      if(bool) {\n        const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\n        this.apiUpdatesManager.saveUpdate({\n          _: 'updateDialogPinned',\n          peer: this.appPeersManager.getDialogPeer(peerId),\n          folder_id: filterId,\n          pFlags\n        });\n      }\n    });\n  }\n\n  public markDialogUnread(peerId: PeerId, read?: true) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\n    return this.apiManager.invokeApi('messages.markDialogUnread', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      unread\n    }).then((bool) => {\n      if(bool) {\n        const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\n        this.onUpdateDialogUnreadMark({\n          _: 'updateDialogUnreadMark',\n          peer: this.appPeersManager.getDialogPeer(peerId),\n          pFlags\n        });\n      }\n    });\n  }\n\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\n    if(!this.migratedFromTo[migrateFrom] &&\n      !this.migratedToFrom[migrateTo] &&\n      this.appChatsManager.hasChat(migrateTo.toChatId())) {\n      const fromChat: Chat.chat = this.appChatsManager.getChat(migrateFrom.toChatId());\n      if(fromChat?.migrated_to && (fromChat.migrated_to as InputChannel.inputChannel).channel_id === migrateTo.toChatId()) {\n        this.migratedFromTo[migrateFrom] = migrateTo;\n        this.migratedToFrom[migrateTo] = migrateFrom;\n\n        this.rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\n\n        this.dialogsStorage.dropDialogWithEvent(migrateFrom);\n      }\n    }\n  }\n\n  private canMessageBeEdited(message: Message, kind: 'text' | 'poll') {\n    if((message as Message.message)?.pFlags?.is_outgoing) {\n      return false;\n    }\n\n    const goodMedias = [\n      'messageMediaPhoto',\n      'messageMediaDocument',\n      'messageMediaWebPage'\n    ];\n\n    if(kind === 'poll') {\n      goodMedias.push('messageMediaPoll');\n    }\n\n    if(!message || \n        message._ !== 'message' || \n        message.deleted ||\n        message.fwd_from ||\n        message.via_bot_id ||\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\n        message.fromId && this.appUsersManager.isBot(message.fromId)) {\n      return false;\n    }\n    \n    if(message.media?._ === 'messageMediaDocument' &&\n        ((message.media.document as Document.document).sticker || (message.media.document as Document.document).type === 'round')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async canEditMessage(message: Message.message | Message.messageService, kind: 'text' | 'poll' = 'text') {\n    if(!message || !this.canMessageBeEdited(message, kind)) {\n      return false;\n    }\n\n    // * second rule for saved messages, because there is no 'out' flag\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === this.appUsersManager.getSelf().id) {\n      return true;\n    }\n\n    if(!message.pFlags.out || (\n        message.peer_id._ !== 'peerChannel' &&  \n        message.date < (tsNow(true) - (await this.apiManager.getConfig()).edit_time_limit) && \n        (message as Message.message).media?._ !== 'messageMediaPoll'\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canDeleteMessage(message: MyMessage) {\n    return message && (\n      message.peerId.isUser() \n      || message.pFlags.out \n      || this.appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' \n      || this.appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\n    ) && !message.pFlags.is_outgoing;\n  }\n\n  public getReplyKeyboard(peerId: PeerId) {\n    return this.getHistoryStorage(peerId).replyMarkup;\n  }\n\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n    if(!message) {\n      return false;\n    }\n\n    let messageReplyMarkup = (message as Message.message).reply_markup;\n    if(!messageReplyMarkup &&\n      !message.pFlags?.out &&\n      !(message as Message.messageService).action) {\n      return false;\n    }\n\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\n      return false;\n    }\n\n    const lastReplyMarkup = historyStorage.replyMarkup;\n    if(messageReplyMarkup) {\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n        return false;\n      }\n\n      if(messageReplyMarkup.pFlags.selective) {\n        return false;\n      }\n\n      if(historyStorage.maxOutId &&\n        message.mid < historyStorage.maxOutId &&\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\n      }\n\n      messageReplyMarkup.mid = message.mid;\n      /* messageReplyMarkup = Object.assign({\n        mid: message.mid\n      }, messageReplyMarkup); */\n\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\n        messageReplyMarkup.fromId = getPeerId(message.from_id);\n      }\n\n      historyStorage.replyMarkup = messageReplyMarkup;\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    if(message.pFlags.out) {\n      if(lastReplyMarkup) {\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\n        if(lastReplyMarkup.pFlags.single_use &&\n          !lastReplyMarkup.pFlags.hidden &&\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\n          (message as Message.message).message) {\n          lastReplyMarkup.pFlags.hidden = true;\n          // this.log('set', historyStorage.reply_markup)\n          return true;\n        }\n      } else if(!historyStorage.maxOutId ||\n        message.mid > historyStorage.maxOutId) {\n        historyStorage.maxOutId = message.mid;\n      }\n    }\n\n    assumeType<Message.messageService>(message);\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\n      (lastReplyMarkup\n        ? message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId\n        : this.appUsersManager.isBot(message.action.user_id)\n      )\n    ) {\n      historyStorage.replyMarkup = {\n        _: 'replyKeyboardHide',\n        mid: message.mid,\n        pFlags: {}\n      };\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    return false;\n  }\n\n  public getSearchStorage(peerId: PeerId, inputFilter: MyInputMessagesFilter) {\n    if(!this.searchesStorage[peerId]) this.searchesStorage[peerId] = {};\n    if(!this.searchesStorage[peerId][inputFilter]) this.searchesStorage[peerId][inputFilter] = {history: []};\n    return this.searchesStorage[peerId][inputFilter];\n  }\n\n  public getSearchCounters(peerId: PeerId, filters: MessagesFilter[], canCache = true): Promise<MessagesSearchCounter[]> {\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return Promise.resolve(filters.map((filter) => {\n        return {\n          _: 'messages.searchCounter',\n          pFlags: {},\n          filter: filter,\n          count: 0\n        };\n      }));\n    }\n\n    const func = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n    return func('messages.getSearchCounters', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      filters\n    });\n  }\n\n  public filterMessagesByInputFilterFromStorage(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage | MessagesStorageKey, limit: number) {\n    const _storage = this.getMessagesStorage(storage);\n    return filterMessagesByInputFilter(inputFilter, history.map((mid) => _storage.get(mid)), limit);\n  }\n\n  public getSearch({peerId, query, inputFilter, maxId, limit, nextRate, backLimit, threadId, folderId, minDate, maxDate}: {\n    peerId?: PeerId,\n    maxId?: number,\n    limit?: number,\n    nextRate?: number,\n    backLimit?: number,\n    threadId?: number,\n    folderId?: number,\n    query?: string,\n    inputFilter?: {\n      _: MyInputMessagesFilter\n    },\n    minDate?: number,\n    maxDate?: number\n  }): Promise<{\n    count: number,\n    next_rate: number,\n    offset_id_offset: number,\n    history: MyMessage[]\n  }> {\n    if(this.appPeersManager.isRestricted(peerId)/*  || true */) {\n      return Promise.resolve({\n        count: 0,\n        offset_id_offset: 0,\n        next_rate: undefined,\n        history: []\n      });\n    }\n\n    if(!query) query = '';\n    if(!inputFilter) inputFilter = {_: 'inputMessagesFilterEmpty'};\n    if(limit === undefined) limit = 20;\n    if(!nextRate) nextRate = 0;\n    if(!backLimit) backLimit = 0;\n\n    minDate = minDate ? minDate / 1000 | 0 : 0;\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\n\n    let foundMsgs: MyMessage[] = [];\n\n    //this.log('search', maxId);\n\n    if(backLimit) {\n      limit += backLimit;\n    }\n\n    //const beta = inputFilter._ === 'inputMessagesFilterPinned' && !backLimit;\n    const beta = false;\n\n    let storage: {\n      count?: number;\n      history: SlicedArray<number>;\n    };\n\n    // * костыль для limit 1, если нужно и получить сообщение, и узнать количество сообщений\n    if(peerId && !backLimit && !maxId && !query && limit !== 1 && !threadId/*  && inputFilter._ !== 'inputMessagesFilterPinned' */) {\n      storage = beta ? \n        this.getSearchStorage(peerId, inputFilter._) as any : \n        this.getHistoryStorage(peerId);\n      foundMsgs = this.filterMessagesByInputFilterFromStorage(inputFilter._, storage.history.slice, this.getHistoryMessagesStorage(peerId), limit);\n    }\n\n    if(foundMsgs.length) {\n      if(foundMsgs.length < limit && (beta ? storage.count !== storage.history.length : true)) {\n        maxId = foundMsgs[foundMsgs.length - 1].mid;\n        limit = limit - foundMsgs.length;\n      } else {\n        return Promise.resolve({\n          count: beta ? storage.count : 0,\n          next_rate: 0,\n          offset_id_offset: 0,\n          history: foundMsgs\n        });\n      }\n    } else if(beta && storage?.count) {\n      return Promise.resolve({\n        count: storage.count,\n        next_rate: 0,\n        offset_id_offset: 0,\n        history: []\n      });\n    }\n\n    const canCache = false && (['inputMessagesFilterChatPhotos', 'inputMessagesFilterPinned'] as MyInputMessagesFilter[]).includes(inputFilter._);\n    const method = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n\n    let apiPromise: Promise<any>;\n    if(peerId && !nextRate && folderId === undefined/*  || !query */) {\n      apiPromise = method('messages.search', {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        limit,\n        offset_id: getServerMessageId(maxId) || 0,\n        add_offset: backLimit ? -backLimit : 0,\n        max_id: 0,\n        min_id: 0,\n        hash: '',\n        top_msg_id: getServerMessageId(threadId) || 0\n      }, {\n        //timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    } else {\n      //var offsetDate = 0;\n      let offsetPeerId: PeerId;\n      let offsetId = 0;\n      let offsetMessage = maxId && this.getMessageByPeer(peerId, maxId);\n\n      if(offsetMessage && offsetMessage.date) {\n        //offsetDate = offsetMessage.date + timeManager.getServerTimeOffset();\n        offsetId = offsetMessage.id;\n        offsetPeerId = this.getMessagePeer(offsetMessage);\n      }\n\n      apiPromise = method('messages.searchGlobal', {\n        q: query,\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        offset_rate: nextRate,\n        offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n        offset_id: offsetId,\n        limit,\n        folder_id: folderId\n      }, {\n        //timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    }\n\n    return apiPromise.then((searchResult: any) => {\n      this.appUsersManager.saveApiUsers(searchResult.users);\n      this.appChatsManager.saveApiChats(searchResult.chats);\n      this.saveMessages(searchResult.messages);\n\n      /* if(beta && storage && (!maxId || storage.history[storage.history.length - 1] === maxId)) {\n        const storage = this.getSearchStorage(peerId, inputFilter._);\n        const add = (searchResult.messages.map((m: any) => m.mid) as number[]).filter((mid) => storage.history.indexOf(mid) === -1);\n        storage.history.push(...add);\n        storage.history.sort((a, b) => b - a);\n        storage.count = searchResult.count;\n      } */\n\n      if(DEBUG) {\n        this.log('getSearch result:', inputFilter, searchResult);\n      }\n\n      const foundCount: number = searchResult.count || (foundMsgs.length + searchResult.messages.length);\n\n      searchResult.messages.forEach((message: MyMessage) => {\n        const peerId = this.getMessagePeer(message);\n        if(peerId.isAnyChat()) {\n          const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\n          if(chat.migrated_to) {\n            this.migrateChecks(peerId, (chat.migrated_to as InputChannel.inputChannel).channel_id.toPeerId(true));\n          }\n        }\n\n        foundMsgs.push(message);\n      });\n\n      return {\n        count: foundCount,\n        offset_id_offset: searchResult.offset_id_offset || 0,\n        next_rate: searchResult.next_rate,\n        history: foundMsgs\n      };\n    });\n  }\n\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\n    const repliesKey = peerId + '_' + mid;\n    for(const threadKey in this.threadsToReplies) {\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\n    }\n\n    this.getDiscussionMessage(peerId, mid);\n  }\n\n  public generateThreadServiceStartMessage(message: Message.message | Message.messageService) {\n    const threadKey = message.peerId + '_' + message.mid;\n    if(this.threadsServiceMessagesIdsStorage[threadKey]) return;\n\n    const maxMessageId = getServerMessageId(Math.max(...this.getMidsByMessage(message)));\n    const serviceStartMessage: Message.messageService = {\n      _: 'messageService',\n      pFlags: {\n        is_single: true\n      },\n      id: this.appMessagesIdsManager.generateTempMessageId(maxMessageId),\n      date: message.date,\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\n      peer_id: message.peer_id,\n      action: {\n        _: 'messageActionDiscussionStarted'\n      },\n      reply_to: this.generateReplyHeader(message.id)\n    };\n\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\n    this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\n  }\n\n  public getThreadServiceMessageId(peerId: PeerId, threadId: number) {\n    return this.threadsServiceMessagesIdsStorage[peerId + '_' + threadId];\n  }\n\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApiSingle('messages.getDiscussionMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((result) => {\n      this.appChatsManager.saveApiChats(result.chats);\n      this.appUsersManager.saveApiUsers(result.users);\n      this.saveMessages(result.messages);\n\n      const message = this.getMessageWithReplies(result.messages[0] as Message.message);\n      const threadKey = message.peerId + '_' + message.mid;\n\n      this.generateThreadServiceStartMessage(message);\n      \n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\n      result.max_id = historyStorage.maxId = generateMessageId(result.max_id) || 0;\n      result.read_inbox_max_id = historyStorage.readMaxId = generateMessageId(result.read_inbox_max_id ?? message.mid);\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = generateMessageId(result.read_outbox_max_id) || 0;\n\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\n\n      return message;\n    });\n  }\n\n  private handleNewMessage(message: MyMessage) {\n    this.rootScope.dispatchEvent('history_multiappend', message);\n  }\n\n  private handleNewDialogs = () => {\n    let newMaxSeenId = 0;\n    const obj = this.newDialogsToHandle;\n    for(const peerId in obj) {\n      const dialog = obj[peerId];\n      if(!dialog) {\n        this.reloadConversation(peerId.toPeerId());\n        delete obj[peerId];\n      } else {\n        this.dialogsStorage.pushDialog(dialog);\n        if(!this.appPeersManager.isChannel(peerId.toPeerId())) {\n          newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\n        }\n      }\n    }\n\n    //this.log('after order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    if(newMaxSeenId !== 0) {\n      this.incrementMaxSeenId(newMaxSeenId);\n    }\n\n    this.rootScope.dispatchEvent('dialogs_multiupdate', obj);\n    this.newDialogsToHandle = {};\n  };\n\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: Dialog) {\n    if(peerId !== undefined) {\n      this.newDialogsToHandle[peerId] = dialog;\n    }\n\n    if(this.newDialogsHandlePromise) return this.newDialogsHandlePromise;\n    return this.newDialogsHandlePromise = pause(0).then(() => {\n      this.newDialogsHandlePromise = undefined;\n      this.handleNewDialogs();\n    });\n  }\n\n  public async deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\n    let promise: Promise<any>;\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    const localMessageIds = mids.map((mid) => getServerMessageId(mid));\n\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n      const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\n        mids = mids.filter((mid) => {\n          const message = this.getMessageByPeer(peerId, mid);\n          return !!message.pFlags.out;\n        });\n\n        if(!mids.length) {\n          return;\n        }\n      }\n\n      promise = this.apiManager.invokeApi('channels.deleteMessages', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: channelId,\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.deleteMessages', {\n        revoke,\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    }\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.deleteMessages(peerId, overflowMids, revoke));\n    }\n    \n    return Promise.all(promises).then(noop);\n  }\n\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    // console.trace('start read')\n    this.log('readHistory:', peerId, maxId, threadId);\n    if(!this.getReadMaxIdIfUnread(peerId, threadId)) {\n      if(!force && !threadId) {\n        const dialog = this.getDialogOnly(peerId);\n        if(dialog && this.isDialogUnread(dialog)) {\n          force = true;\n        }\n      }\n\n      if(!force) {\n        this.log('readHistory: isn\\'t unread');\n        return Promise.resolve();\n      }\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(historyStorage.triedToReadMaxId >= maxId) {\n      return Promise.resolve();\n    }\n\n    let apiPromise: Promise<any>;\n    if(threadId) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readDiscussion', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          msg_id: getServerMessageId(threadId),\n          read_max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelDiscussionInbox',\n        channel_id: peerId.toChatId(),\n        top_msg_id: threadId,\n        read_max_id: maxId\n      });\n    } else if(this.appPeersManager.isChannel(peerId)) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('channels.readHistory', {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelInbox',\n        max_id: maxId,\n        channel_id: peerId.toChatId(),\n        still_unread_count: undefined,\n        pts: undefined\n      });\n    } else {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readHistory', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          max_id: getServerMessageId(maxId)\n        }).then((affectedMessages) => {\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          });\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadHistoryInbox',\n        max_id: maxId,\n        peer: this.appPeersManager.getOutputPeer(peerId),\n        still_unread_count: undefined,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n\n    this.rootScope.dispatchEvent('notification_reset', this.appPeersManager.getPeerString(peerId));\n\n    if(historyStorage.readPromise) {\n      return historyStorage.readPromise;\n    }\n\n    historyStorage.triedToReadMaxId = maxId;\n\n    apiPromise.finally(() => {\n      delete historyStorage.readPromise;\n\n      const {readMaxId} = historyStorage;\n      this.log('readHistory: promise finally', maxId, readMaxId);\n\n      if(readMaxId > maxId) {\n        this.readHistory(peerId, readMaxId, threadId, true);\n      }\n    });\n\n    return historyStorage.readPromise = apiPromise;\n  }\n\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(historyStorage.maxId) {\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\n    }\n  }\n\n  public fixDialogUnreadMentionsIfNoMessage(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public modifyCachedMentions(peerId: PeerId, mid: number, add: boolean) {\n    const slicedArray = this.unreadMentions[peerId];\n    if(!slicedArray) return;\n\n    if(add) {\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\n        slicedArray.insertSlice([mid]);\n      }\n    } else {\n      slicedArray.delete(mid);\n    }\n  }\n\n  private fixUnreadMentionsCountIfNeeded(peerId: PeerId, slicedArray: SlicedArray<number>) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!slicedArray.length && dialog?.unread_mentions_count) {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public goToNextMention(peerId: PeerId) {\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then((messages) => {\n      console.log(messages);\n    }); */\n\n    const promise = this.goToNextMentionPromises[peerId];\n    if(promise) {\n      return promise;\n    }\n\n    const slicedArray = this.unreadMentions[peerId] ?? (this.unreadMentions[peerId] = new SlicedArray());\n    const length = slicedArray.length;\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\n    if(!length && isTopEnd) {\n      this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      return Promise.resolve();\n    }\n\n    let loadNextPromise = Promise.resolve();\n    if(!isTopEnd && length < 25) {\n      loadNextPromise = this.loadNextMentions(peerId);\n    }\n\n    return this.goToNextMentionPromises[peerId] = loadNextPromise.then(() => {\n      const last = slicedArray.last;\n      const mid = last && last[last.length - 1];\n      if(mid) {\n        slicedArray.delete(mid);\n        return mid;\n      } else {\n        this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray);\n      }\n    }).finally(() => {\n      delete this.goToNextMentionPromises[peerId];\n    });\n  }\n\n  public loadNextMentions(peerId: PeerId) {\n    const slicedArray = this.unreadMentions[peerId];\n    const maxId = slicedArray.first[0] || 1;\n\n    const backLimit = 50;\n    const add_offset = -backLimit;\n    const limit = backLimit;\n    return this.getUnreadMentions(peerId, maxId, add_offset, limit).then((messages) => {\n      this.mergeHistoryResult(slicedArray, messages, maxId === 1 ? 0 : maxId, limit, add_offset);\n    });\n  }\n\n  public getUnreadMentions(peerId: PeerId, offsetId: number, add_offset: number, limit: number, maxId = 0, minId = 0) {\n    return this.apiManager.invokeApiSingle('messages.getUnreadMentions', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: getServerMessageId(offsetId),\n      add_offset,\n      limit,\n      max_id: getServerMessageId(maxId),\n      min_id: getServerMessageId(minId)\n    }).then((messagesMessages) => {\n      assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\n      this.appUsersManager.saveApiUsers(messagesMessages.users);\n      this.appChatsManager.saveApiChats(messagesMessages.chats);\n      this.saveMessages(messagesMessages.messages);\n\n      return messagesMessages;\n    });\n  }\n\n  public readMessages(peerId: PeerId, msgIds: number[]) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    if(!msgIds.length) {\n      return Promise.resolve();\n    }\n\n    msgIds = msgIds.map((mid) => getServerMessageId(mid));\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n\n      update = {\n        _: 'updateChannelReadMessagesContents',\n        channel_id: channelId,\n        messages: msgIds\n      };\n\n      promise = this.apiManager.invokeApi('channels.readMessageContents', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: msgIds\n      });\n    } else {\n      update = {\n        _: 'updateReadMessagesContents',\n        messages: msgIds,\n        pts: undefined,\n        pts_count: undefined\n      };\n\n      promise = this.apiManager.invokeApi('messages.readMessageContents', {\n        id: msgIds\n      }).then((affectedMessages) => {\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\n        this.apiUpdatesManager.processLocalUpdate(update);\n      });\n    }\n\n    this.apiUpdatesManager.processLocalUpdate(update);\n\n    return promise;\n  }\n\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      //threadId = this.getLocalMessageId(threadId);\n      if(!this.threadsStorage[peerId]) this.threadsStorage[peerId] = {};\n      return this.threadsStorage[peerId][threadId] ?? (this.threadsStorage[peerId][threadId] = {count: null, history: new SlicedArray()});\n    }\n\n    return this.historiesStorage[peerId] ?? (this.historiesStorage[peerId] = {count: null, history: new SlicedArray()});\n  }\n\n  public getHistoryStorageTransferable(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const {\n      count,\n      history,\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    } = historyStorage;\n\n    return {\n      count,\n      history: undefined as HistoryStorage,\n      historySerialized: history.toJSON(),\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    };\n  }\n\n  private getNotifyPeerSettings(peerId: PeerId) {\n    return Promise.all([\n      this.appNotificationsManager.getNotifyPeerTypeSettings(),\n      this.appNotificationsManager.getNotifySettings(this.appPeersManager.getInputNotifyPeerById(peerId, true))\n    ]).then(([_, peerTypeNotifySettings]) => {\n      return {\n        muted: this.appNotificationsManager.isPeerLocalMuted(peerId, true),\n        peerTypeNotifySettings\n      };\n    });\n  }\n\n  private handleNotifications = () => {\n    ctx.clearTimeout(this.notificationsHandlePromise);\n    this.notificationsHandlePromise = 0;\n\n    //var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\n    //const timeout = 1000;\n\n    for(const _peerId in this.notificationsToHandle) {\n      const peerId = _peerId.toPeerId();\n      // if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\n        // continue;\n      // }\n\n      const notifyPeerToHandle = this.notificationsToHandle[peerId];\n      this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n        const topMessage = notifyPeerToHandle.topMessage;\n        if((muted && !topMessage.pFlags.mentioned) || !topMessage.pFlags.unread) {\n          return;\n        }\n\n        //setTimeout(() => {\n          if(topMessage.pFlags.unread) {\n            this.notifyAboutMessage(topMessage, {\n              fwdCount: notifyPeerToHandle.fwdCount,\n              peerTypeNotifySettings\n            });\n          }\n        //}, timeout);\n      });\n    }\n\n    this.notificationsToHandle = {};\n  };\n\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\n    const randomId = update.random_id;\n    const pendingData = this.pendingByRandomId[randomId];\n    //this.log('AMM updateMessageID:', update, pendingData);\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n      const mid = generateMessageId(update.id);\n      const message = this.getMessageFromStorage(storage, mid);\n      if(message) {\n        [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n        .filter(Boolean)\n        .forEach((storage) => {\n          storage.history.delete(tempId);\n        });\n\n        this.finalizePendingMessageCallbacks(storage, tempId, message);\n      } else {\n        this.pendingByMessageId[mid] = randomId;\n      }\n    }\n  };\n\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const dialog = this.getDialogOnly(peerId);\n\n    // * local update\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\n\n    // * temporary save the message for info (peerId, reply mids...)\n    this.saveMessages([message], {storage: this.createMessageStorage(peerId, 'history')});\n\n    const threadKey = this.getThreadKey(message);\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\n    if(threadId && !isLocalThreadUpdate && this.threadsStorage[peerId] && this.threadsStorage[peerId][threadId]) {\n      const update = {\n        _: 'updateNewDiscussionMessage',\n        message\n      } as Update.updateNewDiscussionMessage;\n\n      this.onUpdateNewMessage(update);\n    }\n\n    if(!dialog && !isLocalThreadUpdate) {\n      let good = true;\n      if(peerId.isAnyChat()) {\n        good = this.appChatsManager.isInChat(peerId.toChatId());\n      }\n\n      if(good) {\n        const set = this.newUpdatesAfterReloadToHandle[peerId] ?? (this.newUpdatesAfterReloadToHandle[peerId] = new Set());\n        if(set.has(update)) {\n          this.log.error('here we go again', peerId);\n          return;\n        }\n\n        (update as any).ignoreExisting = true;\n        set.add(update);\n        this.scheduleHandleNewDialogs(peerId);\n      }\n\n      return;\n    }\n\n    /* if(update._ === 'updateNewChannelMessage') {\n      const chat = appChatsManager.getChat(peerId.toChatId());\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n        return;\n      }\n    } */\n\n    this.saveMessages([message], {storage});\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n    /* if((message as Message.message).grouped_id) {\n      this.log('updateNewMessage', message);\n    } */\n\n    const pendingMessage = this.checkPendingMessage(message);\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if(!isLocalThreadUpdate) {\n      this.updateMessageRepliesIfNeeded(message);\n    }\n\n    // * so message can exist if reloadConversation came back earlier with mid\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\n    if(isExisting) {\n      if(!ignoreExisting) {\n        return false;\n      }\n    } else {\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\n      const firstSlice = historyStorage.history.first;\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\n        let i = 0;\n        for(const length = firstSlice.length; i < length; ++i) {\n          if(message.mid > firstSlice[i]) {\n            break;\n          }\n        }\n\n        firstSlice.splice(i, 0, message.mid);\n      } else {\n        historyStorage.history.unshift(message.mid);\n      }\n\n      if(historyStorage.count !== null) {\n        historyStorage.count++;\n      }\n    }\n\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\n      this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n    }\n\n    const fromId = message.fromId;\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\n      this.appUsersManager.forceUserOnline(fromId, message.date);\n\n      const action: SendMessageAction = {\n        _: 'sendMessageCancelAction'\n      };\n\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\n      if(peerId.isUser()) {\n        update = {\n          _: 'updateUserTyping',\n          action,\n          user_id: fromId\n        };\n      } else if(this.appPeersManager.isChannel(peerId)) {\n        update = {\n          _: 'updateChannelUserTyping',\n          action,\n          channel_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId),\n          top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n        };\n      } else {\n        update = {\n          _: 'updateChatUserTyping',\n          action,\n          chat_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId)\n        };\n      }\n\n      this.apiUpdatesManager.processLocalUpdate(update);\n    }\n\n    // commented to render the message if it's been sent faster than history_append came to main thread\n    // if(!pendingMessage) {\n      this.handleNewMessage(message);\n    // }\n\n    if(isLocalThreadUpdate) {\n      return;\n    }\n    \n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\n    if(dialog) {\n      if(inboxUnread && message.mid > dialog.top_message) {\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n        ++dialog.unread_count;\n        if(message.pFlags.mentioned) {\n          ++dialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, true);\n        }\n\n        releaseUnreadCount();\n      }\n\n      if(message.mid >= dialog.top_message) {\n        this.setDialogTopMessage(message, dialog);\n      }\n    }\n\n    if(inboxUnread/*  && ($rootScope.selectedPeerID != peerID || $rootScope.idle.isIDLE) */) {\n      const notifyPeer = peerId;\n      let notifyPeerToHandle = this.notificationsToHandle[notifyPeer];\n      if(notifyPeerToHandle === undefined) {\n        notifyPeerToHandle = this.notificationsToHandle[notifyPeer] = {\n          fwdCount: 0,\n          fromId: NULL_PEER_ID\n        };\n      }\n\n      if(notifyPeerToHandle.fromId !== fromId) {\n        notifyPeerToHandle.fromId = fromId;\n        notifyPeerToHandle.fwdCount = 0;\n      }\n\n      if((message as Message.message).fwd_from) {\n        ++notifyPeerToHandle.fwdCount;\n      }\n\n      notifyPeerToHandle.topMessage = message;\n\n      if(!this.notificationsHandlePromise) {\n        this.notificationsHandlePromise = ctx.setTimeout(this.handleNotifications, 0);\n      }\n    }\n  };\n\n  private onUpdateMessageReactions = (update: Update.updateMessageReactions) => {\n    const {peer, msg_id, reactions} = update;\n    const mid = generateMessageId(msg_id);\n    const peerId = getPeerId(peer);\n    const message: MyMessage = this.getMessageByPeer(peerId, mid);\n\n    if(message?._ !== 'message') {\n      return;\n    }\n\n    const recentReactions = reactions?.recent_reactions;\n    if(recentReactions?.length && message.pFlags.out) {\n      const recentReaction = recentReactions[recentReactions.length - 1];\n      const previousReactions = message.reactions;\n      const previousRecentReactions = previousReactions?.recent_reactions;\n      if(\n        getPeerId(recentReaction.peer_id) !== this.appPeersManager.peerId && (\n          !previousRecentReactions ||\n          previousRecentReactions.length <= recentReactions.length\n        ) && (\n          !previousRecentReactions || \n          !deepEqual(recentReaction, previousRecentReactions[previousRecentReactions.length - 1])\n        )\n      ) {\n        this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n          if(/* muted ||  */!peerTypeNotifySettings.show_previews) return;\n          this.notifyAboutMessage(message, {\n            peerReaction: recentReaction,\n            peerTypeNotifySettings\n          });\n        });\n      }\n    }\n    \n    const key = message.peerId + '_' + message.mid;\n    this.pushBatchUpdate('messages_reactions', this.batchUpdateReactions, key, () => copy(message.reactions));\n\n    message.reactions = reactions;\n\n    if(!update.local) {\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\n    //this.log('updateDialogUnreadMark', update);\n    const peerId = getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    if(!dialog) {\n      this.scheduleHandleNewDialogs(peerId);\n    } else {\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(!update.pFlags.unread) {\n        delete dialog.pFlags.unread_mark;\n      } else {\n        dialog.pFlags.unread_mark = true;\n      }\n\n      releaseUnreadCount();\n      this.rootScope.dispatchEvent('dialogs_multiupdate', {[peerId]: dialog});\n      this.dialogsStorage.setDialogToState(dialog);\n    }\n  };\n\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const mid = generateMessageId(message.id);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    // console.trace(dT(), 'edit message', message)\n    \n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage});\n    const newMessage: Message = this.getMessageFromStorage(storage, mid);\n\n    this.handleEditedMessage(oldMessage, newMessage, storage);\n\n    const dialog = this.getDialogOnly(peerId);\n\n    // if sender erased mention\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\n      --dialog.unread_mentions_count;\n      this.modifyCachedMentions(peerId, mid, false);\n    } */\n\n    const isTopMessage = dialog && dialog.top_message === mid;\n    if((message as Message.messageService).clear_history) {\n      if(isTopMessage) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog});\n      }\n    } else {\n      // no sense in dispatching message_edit since only reactions have changed\n      if(oldMessage?._ === 'message' && !deepEqual(oldMessage.reactions, (newMessage as Message.message).reactions)) {\n        const newReactions = (newMessage as Message.message).reactions;\n        (newMessage as Message.message).reactions = oldMessage.reactions;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateMessageReactions',\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          msg_id: message.id,\n          reactions: newReactions\n        });\n\n        return;\n      }\n\n      this.rootScope.dispatchEvent('message_edit', {\n        storageKey: storage.key,\n        peerId,\n        mid,\n        message\n      });\n\n      if(isTopMessage || (message as Message.message).grouped_id) {\n        const updatedDialogs: {[peerId: PeerId]: Dialog} = {};\n        updatedDialogs[peerId] = dialog;\n        this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox \n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox \n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\n    const maxId = generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id);\n    const threadId = generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id);\n    const peerId = channelId ? channelId.toPeerId(true) : getPeerId((update as Update.updateReadHistoryInbox).peer);\n\n    const isOut = update._ === 'updateReadHistoryOutbox' || update._ === 'updateReadChannelOutbox' || update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const history = getObjectKeysAndSort(storage, 'desc');\n    const foundDialog = this.getDialogOnly(peerId);\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\n    let newUnreadCount = 0;\n    let newUnreadMentionsCount = 0;\n    let foundAffected = false;\n\n    //this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(peerId.isUser() && isOut) {\n      this.appUsersManager.forceUserOnline(peerId);\n    }\n\n    if(threadId) {\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\n      if(repliesKey) {\n        const [peerId, mid] = repliesKey.split('_');\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n      }\n    }\n\n    const releaseUnreadCount = !threadId && foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n\n    for(let i = 0, length = history.length; i < length; i++) {\n      const mid = history[i];\n      if(mid > maxId) {\n        continue;\n      }\n      \n      const message: MyMessage = storage.get(mid);\n\n      if(message.pFlags.out !== isOut) {\n        continue;\n      }\n\n      if(!message.pFlags.unread) {\n        break;\n      }\n\n      if(threadId) {\n        const replyTo = message.reply_to;\n        if(!replyTo || (replyTo.reply_to_top_id || replyTo.reply_to_msg_id) !== threadId) {\n          continue;\n        }\n      }\n      \n      // this.log.warn('read', messageId, message.pFlags.unread, message)\n      if(message.pFlags.unread) {\n        delete message.pFlags.unread;\n        if(!foundAffected) {\n          foundAffected = true;\n        }\n\n        if(!message.pFlags.out && !threadId && foundDialog) {\n          if(stillUnreadCount === undefined) {\n            newUnreadCount = --foundDialog.unread_count;\n          }\n\n          if(message.pFlags.mentioned) {\n            newUnreadMentionsCount = --foundDialog.unread_mentions_count;\n            this.modifyCachedMentions(peerId, message.mid, false);\n          }\n        }\n        \n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n      }\n    }\n\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\n    else historyStorage.readMaxId = maxId;\n\n    if(!threadId && foundDialog) {\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\n      else foundDialog.read_inbox_max_id = maxId;\n\n      if(!isOut) {\n        let setCount: number;\n        if(stillUnreadCount !== undefined) {\n          setCount = stillUnreadCount;\n        } else if(newUnreadCount < 0 || !this.getReadMaxIdIfUnread(peerId)) {\n          setCount = 0;\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\n          setCount = newUnreadCount;\n        }\n\n        if(setCount !== undefined) {\n          foundDialog.unread_count = setCount;\n        }\n\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\n          foundDialog.unread_mentions_count = 0;\n        }\n      }\n\n      if(releaseUnreadCount) {\n        releaseUnreadCount();\n      }\n\n      this.dialogsStorage.processDialogForFilters(foundDialog);\n      \n      this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      this.dialogsStorage.setDialogToState(foundDialog);\n    }\n\n    if(foundAffected) {\n      this.rootScope.dispatchEvent('messages_read');\n    }\n\n    if(!threadId && channelId) {\n      const threadKeyPart = peerId + '_';\n      for(const threadKey in this.threadsToReplies) {\n        if(threadKey.indexOf(threadKeyPart) === 0) {\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\n          this.rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid) as Message.message);\n        }\n      }\n    }\n  };\n\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\n    const mids = (update as Update.updateReadMessagesContents).messages.map((id) => generateMessageId(id));\n    const peerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(mids);\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\n      if(message) {\n        if(message.pFlags.media_unread) {\n          delete message.pFlags.media_unread;\n          this.setDialogToStateIfMessageIsTop(message);\n  \n          if(!message.pFlags.out && message.pFlags.mentioned) {\n            this.modifyCachedMentions(peerId, mid, false);\n          }\n        }\n      } else {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('messages_media_read', {peerId, mids});\n  };\n\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\n    const peerId = update.channel_id.toPeerId(true);\n    const history = this.getHistoryStorage(peerId).history.slice;\n    const availableMinId = generateMessageId(update.available_min_id);\n    const messages = history.filter((mid) => mid <= availableMinId);\n\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\n  };\n\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\n    //const messages = (update as any as Update.updateDeleteChannelMessages).messages;\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map((id) => generateMessageId(id));\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(messages);\n    \n    if(!peerId) {\n      return;\n    }\n\n    this.apiManager.clearCache('messages.getSearchCounters', (params) => {\n      return getPeerId(params.peer) === peerId;\n    });\n\n    const threadKeys: Set<string> = new Set();\n    for(const mid of messages) {\n      const message = this.getMessageByPeer(peerId, mid);\n      const threadKey = this.getThreadKey(message);\n      if(threadKey && this.threadsStorage[peerId] && this.threadsStorage[peerId][+threadKey.split('_')[1]]) {\n        threadKeys.add(threadKey);\n      }\n    }\n    \n    const historyUpdated = this.handleDeletedMessages(peerId, this.getHistoryMessagesStorage(peerId), messages);\n\n    const threadsStorages = Array.from(threadKeys).map((threadKey) => {\n      const [peerId, mid] = threadKey.split('_');\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\n    });\n\n    const historyStorage = this.getHistoryStorage(peerId);\n    [historyStorage].concat(threadsStorages).forEach((historyStorage) => {\n      for(const mid of historyUpdated.msgs) {\n        historyStorage.history.delete(mid);\n      }\n      \n      if(historyUpdated.count && historyStorage.count) {\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\n      }\n    });\n\n    this.rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\n\n    const foundDialog = this.getDialogOnly(peerId);\n    if(foundDialog) {\n      const affected = historyUpdated.unreadMentions || historyUpdated.unread;\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n      \n      if(historyUpdated.unread) {\n        foundDialog.unread_count = Math.max(0, foundDialog.unread_count - historyUpdated.unread);\n      }\n\n      if(historyUpdated.unreadMentions) {\n        foundDialog.unread_mentions_count = !foundDialog.unread_count ? 0 : Math.max(0, foundDialog.unread_mentions_count - historyUpdated.unreadMentions);\n      }\n\n      if(affected) {\n        releaseUnreadCount();\n        this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      }\n\n      if(historyUpdated.msgs.has(foundDialog.top_message)) {\n        const slice = historyStorage.history.first;\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n          const mid = slice[0];\n          const message = this.getMessageByPeer(peerId, mid);\n          this.setDialogTopMessage(message, foundDialog);\n        } else {\n          this.reloadConversation(peerId);\n        }\n      }\n    }\n  };\n\n  private onUpdateChannel = (update: Update.updateChannel) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const channel: Chat.channel = this.appChatsManager.getChat(channelId);\n\n    const needDialog = this.appChatsManager.isInChat(channelId);\n    \n    const canViewHistory = !!channel.username || !channel.pFlags.left;\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\n    \n    if(canViewHistory !== hasHistory) {\n      delete this.historiesStorage[peerId];\n      this.rootScope.dispatchEvent('history_forbidden', peerId);\n    }\n    \n    const dialog = this.getDialogOnly(peerId);\n    if(!!dialog !== needDialog) {\n      if(needDialog) {\n        this.reloadConversation(peerId);\n      } else {\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('channel_update', channelId);\n  };\n\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\n    const peerId = update.channel_id.toPeerId(true);\n\n    this.dialogsStorage.dropDialog(peerId);\n\n    delete this.historiesStorage[peerId];\n    this.reloadConversation(peerId).then(() => {\n      this.rootScope.dispatchEvent('history_reload', peerId);\n    });\n  };\n  \n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\n    const views = update.views;\n    const peerId = update.channel_id.toPeerId(true);\n    const mid = generateMessageId(update.id);\n    const message = this.getMessageByPeer(peerId, mid) as Message.message;\n    if(message?.views !== undefined && message.views < views) {\n      message.views = views;\n      this.pushBatchUpdate('messages_views', this.batchUpdateViews, message.peerId + '_' + message.mid);\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\n    //this.log('updateServiceNotification', update);\n    if(update.pFlags?.popup) {\n      this.rootScope.dispatchEvent('service_notification', update);\n      return;\n    }\n    \n    const fromId = SERVICE_PEER_ID;\n    const peerId = fromId;\n    const messageId = this.generateTempMessageId(peerId);\n    const message: Message.message = {\n      _: 'message',\n      id: messageId,\n      from_id: this.appPeersManager.getOutputPeer(fromId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      pFlags: {unread: true},\n      date: (update.inbox_date || tsNow(true)) + this.timeManager.getServerTimeOffset(),\n      message: update.message,\n      media: update.media,\n      entities: update.entities\n    };\n    if(!this.appUsersManager.hasUser(fromId)) {\n      this.appUsersManager.saveApiUsers([{\n        _: 'user',\n        id: fromId,\n        pFlags: {verified: true},\n        access_hash: '0',\n        first_name: 'Telegram',\n        phone: '42777'\n      }]);\n    }\n    this.saveMessages([message], {isOutgoing: true});\n\n    if(update.inbox_date) {\n      this.pendingTopMsgs[peerId] = messageId;\n      this.onUpdateNewMessage({\n        _: 'updateNewMessage',\n        message,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n  };\n\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\n    const peerId = channelId ? channelId.toPeerId(true) : getPeerId((update as Update.updatePinnedMessages).peer);\n\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\n    if(storage.count !== storage.history.length) {\n      if(storage.count !== undefined) {\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];  \n      }\n\n      rootScope.broadcast('peer_pinned_messages', peerId);\n      break;\n    } */\n\n    const messages = update.messages.map((id) => generateMessageId(id)); \n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const missingMessages = messages.filter((mid) => !storage.has(mid));\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map((mid) => this.wrapSingleMessage(peerId, mid))) : Promise.resolve();\n    getMissingPromise.finally(() => {\n      const werePinned = update.pFlags?.pinned;\n      if(werePinned) {\n        for(const mid of messages) {\n          //storage.history.push(mid);\n          const message = storage.get(mid) as Message.message;\n          message.pFlags.pinned = true;\n        }\n\n        /* if(this.pinnedMessages[peerId]?.maxId) {\n          const maxMid = Math.max(...messages);\n          this.pinnedMessages\n        } */\n\n        //storage.history.sort((a, b) => b - a);\n      } else {\n        for(const mid of messages) {\n          //storage.history.findAndSplice((_mid) => _mid === mid);\n          const message = storage.get(mid) as Message.message;\n          delete message.pFlags.pinned;\n        }\n      }\n\n      /* const info = this.pinnedMessages[peerId];\n      if(info) {\n        info.count += messages.length * (werePinned ? 1 : -1);\n      } */\n  \n      delete this.pinnedMessages[peerId];\n      this.appStateManager.getState().then((state) => {\n        delete state.hiddenPinnedMessages[peerId];\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\n      });\n    });\n  };\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer, notify_settings} = update;\n    if(peer._ === 'notifyPeer') {\n      const peerId = getPeerId((peer as NotifyPeer.notifyPeer).peer);\n    \n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        dialog.notify_settings = notify_settings;\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n    }\n  };\n\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(!storage) {\n      return;\n    }\n\n    const mid = generateMessageId(message.id);\n\n    const oldMessage = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage, isScheduled: true});\n    const newMessage = this.getMessageFromStorage(storage, mid);\n\n    if(oldMessage) {\n      this.handleEditedMessage(oldMessage, newMessage, storage);\n      this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId, mid: message.mid, message});\n    } else {\n      const pendingMessage = this.checkPendingMessage(message);\n      if(!pendingMessage) {\n        this.rootScope.dispatchEvent('scheduled_new', message as Message.message);\n      }\n    }\n  };\n\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\n    const peerId = getPeerId(update.peer);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mids = update.messages.map((id) => generateMessageId(id));\n      this.handleDeletedMessages(peerId, storage, mids);\n\n      this.rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\n    }\n  };\n\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\n    if(this.isMessageIsTopMessage(message)) {\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\n    }\n  }\n\n  public isMessageIsTopMessage(message: MyMessage) {\n    const dialog = this.getDialogOnly(message.peerId);\n    return dialog && dialog.top_message === message.mid;\n  }\n\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\n    try { // * на всякий случай, скорее всего это не понадобится\n      const threadKey = this.getThreadKey(threadMessage);\n      if(threadKey) {\n        const repliesKey = this.threadsToReplies[threadKey];\n        if(repliesKey) {\n          const [peerId, mid] = repliesKey.split('_');\n\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n        }\n      }\n    } catch(err) {\n      this.log.error('incrementMessageReplies err', err, threadMessage);\n    }\n  }\n\n  private getThreadKey(threadMessage: MyMessage) {\n    let threadKey = '';\n    if(threadMessage?.reply_to && threadMessage.peerId?.isAnyChat()) {\n      const threadId = threadMessage.reply_to.reply_to_top_id || threadMessage.reply_to.reply_to_msg_id;\n      threadKey = threadMessage.peerId + '_' + threadId;\n    }\n\n    return threadKey;\n  }\n\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\n    const promise: Promise<Message.message> = this.wrapSingleMessage(peerId, mid, true).then(() => {\n      const message = this.getMessageByPeer(peerId, mid) as Message.message;\n      if(!message) {\n        return;\n      }\n\n      if(broadcastEventName) {\n        this.rootScope.dispatchEvent(broadcastEventName, message);\n      }\n\n      return message;\n    });\n    \n    return promise;\n  }\n\n  private checkPendingMessage(message: MyMessage) {\n    const randomId = this.pendingByMessageId[message.mid];\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\n    if(randomId) {\n      const pendingData = this.pendingByRandomId[randomId];\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\n        this.rootScope.dispatchEvent('history_update', {storageKey: pendingData.storage.key, message, sequential: pendingData.sequential});\n      }\n\n      delete this.pendingByMessageId[message.mid];\n    }\n\n    return pendingMessage;\n  }\n\n  public mutePeer(peerId: PeerId, muteUntil: number) {\n    const settings: InputPeerNotifySettings = {\n      _: 'inputPeerNotifySettings'\n    };\n\n    settings.mute_until = muteUntil;\n\n    return this.appNotificationsManager.updateNotifySettings({\n      _: 'inputNotifyPeer',\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }, settings);\n  }\n\n  public togglePeerMute(peerId: PeerId, mute?: boolean) {\n    if(mute === undefined) {\n      mute = !this.appNotificationsManager.isPeerLocalMuted(peerId, false);\n    }\n\n    return this.mutePeer(peerId, mute ? MUTE_UNTIL : 0);\n  }\n\n  private findPeerIdByMids(mids: number[]) {\n    for(let length = mids.length, i = length - 1; i >= 0; --i) {\n      const mid = mids[i];\n      const message = this.getMessageById(mid);\n      if(message) {\n        return message.peerId;\n      }\n    }\n  }\n\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return false;\n    }\n    \n    if(peerId.isAnyChat()) {\n      //const isChannel = appPeersManager.isChannel(peerId);\n      const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\n      const hasRights = /* isChannel &&  */this.appChatsManager.hasRights(peerId.toChatId(), action, undefined, !!threadId); \n      return /* !isChannel ||  */hasRights && (!chat.pFlags.left || !!threadId);\n    } else {\n      return this.appUsersManager.canSendToUser(peerId);\n    }\n  }\n\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\n    const pendingData = this.pendingByRandomId[randomId];\n    // this.log('pdata', randomID, pendingData)\n\n    if(pendingData) {\n      const {peerId, tempId, threadId, storage} = pendingData;\n\n      [this.getHistoryStorage(peerId), threadId ? this.getHistoryStorage(peerId, threadId) : undefined]\n      .filter(Boolean)\n      .forEach((storage) => {\n        storage.history.delete(tempId);\n      });\n\n      // this.log('pending', randomID, historyStorage.pending)\n\n      const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\n      if(tempMessage) {\n        delete finalMessage.pFlags.is_outgoing;\n        delete finalMessage.pending;\n        delete finalMessage.error;\n        delete finalMessage.random_id;\n        delete finalMessage.send;\n      }\n\n      this.rootScope.dispatchEvent('messages_pending');\n      \n      delete this.pendingByRandomId[randomId];\n\n      this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\n\n      return tempMessage;\n    }\n  }\n\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\n    const callbacks = this.tempFinalizeCallbacks[tempId];\n    //this.log.warn(callbacks, tempId);\n    if(callbacks !== undefined) {\n      for(const name in callbacks) {\n        const {deferred, callback} = callbacks[name];\n        //this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\n        callback(message).then(deferred.resolve, deferred.reject);\n      }\n\n      delete this.tempFinalizeCallbacks[tempId];\n    }\n\n    // set cached url to media\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      const {photo: newPhoto, document: newDoc} = message.media as any;\n      if(newPhoto) {\n        const photo = this.appPhotosManager.getPhoto('' + tempId);\n        if(/* photo._ !== 'photoEmpty' */photo) {\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\n          const cacheContext = this.thumbsStorage.getCacheContext(newPhoto, newPhotoSize.type);\n          const oldCacheContext = this.thumbsStorage.getCacheContext(photo, 'full');\n          Object.assign(cacheContext, oldCacheContext);\n\n          const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\n\n          const downloadOptions = getPhotoDownloadOptions(newPhoto, photoSize);\n          const fileName = getFileNameByLocation(downloadOptions.location);\n          // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n        }\n      } else if(newDoc) {\n        const oldDoc = this.appDocsManager.getDoc('' + tempId);\n        if(oldDoc) {\n          const oldCacheContext = this.thumbsStorage.getCacheContext(oldDoc);\n          if(\n            /* doc._ !== 'documentEmpty' &&  */\n            oldDoc.type && \n            oldDoc.type !== 'sticker' && \n            oldDoc.mime_type !== 'image/gif' && \n            oldCacheContext.url\n          ) {\n            const cacheContext = this.thumbsStorage.getCacheContext(newDoc);\n            Object.assign(cacheContext, oldCacheContext);\n\n            const fileName = getDocumentInputFileName(newDoc);\n            // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n          }\n        }\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\n        delete this.appPollsManager.polls[tempId];\n        delete this.appPollsManager.results[tempId];\n      }\n    }\n\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\n    storage.delete(tempId);\n    \n    this.handleReleasingMessage(tempMessage, storage);\n\n    this.rootScope.dispatchEvent('message_sent', {storageKey: storage.key, tempId, tempMessage, mid: message.mid, message});\n  }\n\n  public incrementMaxSeenId(maxId: number) {\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\n      return false;\n    }\n\n    this.maxSeenId = maxId;\n    this.appStateManager.pushToState('maxSeenMsgId', maxId);\n\n    this.apiManager.invokeApi('messages.receivedMessages', {\n      max_id: getServerMessageId(maxId)\n    });\n  }\n\n  public async getMessageReactionsListAndReadParticipants(\n    message: Message.message, \n    limit?: number, \n    reaction?: string, \n    offset?: string,\n    skipReadParticipants?: boolean,\n    skipReactionsList?: boolean\n  ) {\n    const emptyMessageReactionsList = {\n      reactions: [] as MessagePeerReaction[],\n      count: 0,\n      next_offset: undefined as string\n    };\n\n    const canViewMessageReadParticipants = await this.canViewMessageReadParticipants(message);\n    if(canViewMessageReadParticipants && limit === undefined) {\n      limit = 100;\n    } else if(limit === undefined) {\n      limit = 50;\n    }\n\n    return Promise.all([\n      canViewMessageReadParticipants && !reaction && !skipReadParticipants ? this.getMessageReadParticipants(message.peerId, message.mid).catch(() => [] as UserId[]) : [] as UserId[],\n\n      message.reactions?.recent_reactions?.length && !skipReactionsList ? this.appReactionsManager.getMessageReactionsList(message.peerId, message.mid, limit, reaction, offset).catch((err) => emptyMessageReactionsList) : emptyMessageReactionsList\n    ]).then(([userIds, messageReactionsList]) => {\n      const readParticipantsPeerIds = userIds.map((userId) => userId.toPeerId());\n      \n      const filteredReadParticipants = readParticipantsPeerIds.slice();\n      forEachReverse(filteredReadParticipants, (peerId, idx, arr) => {\n        if(messageReactionsList.reactions.some((reaction) => getPeerId(reaction.peer_id) === peerId)) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      let combined: {peerId: PeerId, reaction?: string}[] = messageReactionsList.reactions.map((reaction) => ({peerId: getPeerId(reaction.peer_id), reaction: reaction.reaction}));\n      combined = combined.concat(filteredReadParticipants.map((readPeerId) => ({peerId: readPeerId})));\n      \n      return {\n        reactions: messageReactionsList.reactions,\n        reactionsCount: messageReactionsList.count,\n        readParticipants: readParticipantsPeerIds,\n        combined: combined,\n        nextOffset: messageReactionsList.next_offset\n      };\n    });\n  }\n\n  public getMessageReadParticipants(peerId: PeerId, mid: number): Promise<UserId[]> {\n    return this.apiManager.invokeApiSingle('messages.getMessageReadParticipants', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((userIds) => { // ! convert long to number\n      return userIds.map((userId) => userId.toUserId());\n    });\n  }\n\n  public async canViewMessageReadParticipants(message: Message) {\n    if(\n      message?._ !== 'message' || \n      message.pFlags.is_outgoing || \n      !message.pFlags.out || \n      !this.appPeersManager.isAnyGroup(message.peerId)\n    ) {\n      return false;\n    }\n\n    const chat: Chat.chat | Chat.channel = this.appChatsManager.getChat(message.peerId.toChatId());\n    const appConfig = await this.apiManager.getAppConfig(); \n    return chat.participants_count <= appConfig.chat_read_mark_size_threshold && \n      (tsNow(true) - message.date) < appConfig.chat_read_mark_expire_period;\n  }\n\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\n    if(!mids.length) {\n      return;\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getMessagesViews', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      increment: true\n    }).then((views) => {\n      const updates: Update[] = new Array(mids.length);\n      const channelId = peerId.toChatId();\n      for(let i = 0, length = mids.length; i < length; ++i) {\n        updates[i] = {\n          _: 'updateChannelMessageViews',\n          channel_id: channelId,\n          id: mids[i],\n          views: views.views[i].views\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updates',\n        updates,\n        chats: views.chats,\n        users: views.users\n      });\n    });\n  }\n\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\n    fwdCount: number,\n    peerReaction: MessagePeerReaction,\n    peerTypeNotifySettings: PeerNotifySettings\n  }> = {}) {\n    const peerId = this.getMessagePeer(message);\n\n    if(this.appPeersManager.isRestricted(peerId)) {\n      return;\n    }\n\n    const tabs = appTabsManager.getTabs();\n    let tab = tabs.find((tab) => {\n      const {chatPeerIds} = tab.state;\n      return chatPeerIds[chatPeerIds.length - 1] === peerId;\n    });\n\n    if(!tab) {\n      tabs.sort((a, b) => a.state.idleStartTime - b.state.idleStartTime);\n      tab = !tabs[0].state.idleStartTime ? tabs[0] : tabs[tabs.length - 1];\n    }\n\n    const port = MTProtoMessagePort.getInstance<false>();\n    port.invokeVoid('notificationBuild', {\n      message,\n      ...options\n    }, tab.source);\n  }\n\n  public getScheduledMessagesStorage(peerId: PeerId) {\n    return this.scheduledMessagesStorage[peerId] ?? (this.scheduledMessagesStorage[peerId] = this.createMessageStorage(peerId, 'scheduled'));\n  }\n\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\n  }\n\n  public getScheduledMessages(peerId: PeerId) {\n    if(!this.canSendToPeer(peerId)) return;\n\n    const storage = this.getScheduledMessagesStorage(peerId);\n    if(storage.size) {\n      return [...storage.keys()];\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getScheduledHistory', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      hash: ''\n    }).then((historyResult) => {\n      if(historyResult._ !== 'messages.messagesNotModified') {\n        this.appUsersManager.saveApiUsers(historyResult.users);\n        this.appChatsManager.saveApiChats(historyResult.chats);\n        \n        const storage = this.getScheduledMessagesStorage(peerId);\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\n        return [...storage.keys()];\n      }\n      \n      return [];\n    });\n  }\n\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.sendScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.deleteScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getMessageWithReplies(message: Message.message) {\n    return this.filterMessages(message, (message) => !!(message as Message.message).replies)[0] as any;\n  }\n\n  public getMessageWithCommentReplies(message: Message.message) {\n    if(message.peerId !== REPLIES_PEER_ID) {\n      message = this.getMessageWithReplies(message);\n      const replies = message?.replies;\n      if(!(replies && replies.pFlags.comments && replies.channel_id.toChatId() !== REPLIES_HIDDEN_CHANNEL_ID)) {\n        return;\n      }\n    }\n\n    return message;\n  }\n\n  public isFetchIntervalNeeded(peerId: PeerId) {\n    return peerId.isAnyChat() && !this.appChatsManager.isInChat(peerId.toChatId());\n  }\n\n  public async getNewHistory(peerId: PeerId, threadId?: number) {\n    if(!this.isFetchIntervalNeeded(peerId)) {\n      return;\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(!slice.isEnd(SliceEnd.Bottom)) {\n      return;\n    }\n\n    delete historyStorage.maxId;\n    slice.unsetEnd(SliceEnd.Bottom);\n\n    // if there is no id - then request by first id because cannot request by id 0 with backLimit\n    const historyResult = await this.getHistory(peerId, slice[0] ?? 1, 0, 50, threadId);\n    for(let i = 0, length = historyResult.history.length; i < length; ++i) {\n      this.handleNewMessage(this.getMessageByPeer(peerId, historyResult.history[i]));\n    }\n\n    return {isBottomEnd: historyStorage.history.slice.isEnd(SliceEnd.Bottom)};\n  }\n\n  /**\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\n   */\n  // public getHistory(peerId: PeerId, maxId?: number, limit?: number, backLimit?: number, threadId?: number, onlyCache?: false): Promise<HistoryResult> | HistoryResult;\n  // public getHistory(peerId: PeerId, maxId?: number, limit?: number, backLimit?: number, threadId?: number, onlyCache?: true): HistoryResult;\n  public getHistory(peerId: PeerId, maxId: number = 0, limit?: number, backLimit?: number, threadId?: number/* , onlyCache?: boolean */): Promise<HistoryResult> | HistoryResult {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(this.appPeersManager.isRestricted(peerId)) {\n      const first = historyStorage.history.first;\n      first.setEnd(SliceEnd.Both);\n\n      const slice = first.slice(0, 0);\n      slice.setEnd(SliceEnd.Both);\n      \n      return {\n        count: 0,\n        history: Array.from(slice),\n        isEnd: slice.getEnds(),\n        offsetIdOffset: 0\n      };\n    }\n\n    let offset = 0;\n    /* \n    let offsetFound = true;\n\n    if(maxId) {\n      offsetFound = false;\n      for(; offset < historyStorage.history.length; offset++) {\n        if(maxId > historyStorage.history.slice[offset]) {\n          offsetFound = true;\n          break;\n        }\n      }\n    }\n\n    if(offsetFound && (\n      historyStorage.count !== null && historyStorage.history.length === historyStorage.count ||\n      historyStorage.history.length >= offset + limit\n      )) {\n      if(backLimit) {\n        backLimit = Math.min(offset, backLimit);\n        offset = Math.max(0, offset - backLimit);\n        limit += backLimit;\n      } else {\n        limit = limit;\n      }\n\n      const history = historyStorage.history.slice.slice(offset, offset + limit);\n      return {\n        count: historyStorage.count,\n        history: history,\n        offsetIdOffset: offset\n      };\n    }\n\n    if(offsetFound) {\n      offset = 0;\n    } */\n\n    if(backLimit) {\n      offset = -backLimit;\n      limit += backLimit;\n\n      /* return this.requestHistory(reqPeerId, maxId, limit, offset, undefined, threadId).then((historyResult) => {\n        historyStorage.count = (historyResult as MessagesMessages.messagesMessagesSlice).count || historyResult.messages.length;\n\n        const history = (historyResult.messages as MyMessage[]).map((message) => message.mid);\n        return {\n          count: historyStorage.count,\n          history,\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0\n        };\n      }); */\n    }\n\n    const haveSlice = historyStorage.history.sliceMe(maxId, offset, limit);\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\n      return {\n        count: historyStorage.count,\n        history: Array.from(haveSlice.slice),\n        isEnd: haveSlice.slice.getEnds(),\n        offsetIdOffset: haveSlice.offsetIdOffset\n      }; \n    }\n\n    // if(onlyCache) {\n    //   return;\n    // }\n\n    return this.fillHistoryStorage(peerId, maxId, limit, offset, historyStorage, threadId).then(() => {\n      const slice = historyStorage.history.sliceMe(maxId, offset, limit);\n      const f = slice?.slice || historyStorage.history.constructSlice();\n      return {\n        count: historyStorage.count,\n        history: Array.from(f),\n        isEnd: f.getEnds(),\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\n      };\n    });\n  }\n\n  public isHistoryResultEnd(historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>, limit: number, add_offset: number) {\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\n    const offsetIdOffset = offset_id_offset || 0;\n\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\n\n    const isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\n    const isBottomEnd = !offsetIdOffset || (add_offset < 0 && (offsetIdOffset + add_offset) <= 0);\n\n    return {count, offsetIdOffset, isTopEnd, isBottomEnd};\n  }\n\n  public mergeHistoryResult(slicedArray: SlicedArray<number>, \n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0], \n    offset_id: number, \n    limit: number, \n    add_offset: number) {\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n    const isEnd = this.isHistoryResultEnd(historyResult, limit, add_offset);\n    const {count, offsetIdOffset, isTopEnd, isBottomEnd} = isEnd;\n    const mids = messages.map((message) => {\n      return (message as MyMessage).mid;\n    });\n\n    // * add bound manually. \n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\n    // * check that offset_id is not 0\n    if(offset_id && getServerMessageId(offset_id) && !mids.includes(offset_id) && offsetIdOffset < count) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offset_id > mids[i]) {\n          break;\n        }\n      }\n\n      mids.splice(i, 0, offset_id);\n    }\n\n    const slice = slicedArray.insertSlice(mids) || slicedArray.slice;\n    if(isTopEnd) {\n      slice.setEnd(SliceEnd.Top);\n    }\n  \n    if(isBottomEnd) {\n      slice.setEnd(SliceEnd.Bottom);\n    }\n\n    return {slice, mids, messages, ...isEnd};\n  }\n\n  public fillHistoryStorage(peerId: PeerId, offset_id: number, limit: number, add_offset: number, historyStorage: HistoryStorage, threadId?: number): Promise<void> {\n    const wasMaxId = historyStorage.maxId;\n    return this.requestHistory(peerId, offset_id, limit, add_offset, undefined, threadId).then((historyResult) => {\n      const {count, isBottomEnd, slice, messages} = this.mergeHistoryResult(historyStorage.history, historyResult, offset_id, limit, add_offset);\n\n      historyStorage.count = count;\n\n      /* if(!maxId && historyResult.messages.length) {\n        maxId = this.incrementMessageId((historyResult.messages[0] as MyMessage).mid, 1);\n      }\n\n      const wasTotalCount = historyStorage.history.length; */\n\n      for(let i = 0, length = messages.length; i < length; ++i) {\n        const message = messages[i] as MyMessage;\n        if(this.mergeReplyKeyboard(historyStorage, message)) {\n          this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n        }\n      }\n\n      if(isBottomEnd) {\n        const newMaxId = slice[0];\n\n        if(historyStorage.maxId === wasMaxId) {\n          const first = historyStorage.history.first;\n          if(first !== slice) {\n            historyStorage.history.deleteSlice(first);\n          }\n\n          if(historyStorage.maxId !== newMaxId) {\n            historyStorage.maxId = slice[0]; // ! WARNING\n\n            this.reloadConversation(peerId); // when top_message is deleted but cached\n          }\n        }\n      }\n      \n      /* const isBackLimit = offset < 0 && -offset !== fullLimit;\n      if(isBackLimit) {\n        return;\n      }\n\n      const totalCount = historyStorage.history.length;\n      fullLimit -= (totalCount - wasTotalCount);\n\n      const migratedNextPeer = this.migratedFromTo[peerId];\n      const migratedPrevPeer = this.migratedToFrom[peerId]\n      const isMigrated = migratedNextPeer !== undefined || migratedPrevPeer !== undefined;\n\n      if(isMigrated) {\n        historyStorage.count = Math.max(historyStorage.count, totalCount) + 1;\n      }\n\n      if(fullLimit > 0) {\n        maxId = historyStorage.history.slice[totalCount - 1];\n        if(isMigrated) {\n          if(!historyResult.messages.length) {\n            if(migratedPrevPeer) {\n              maxId = 0;\n              peerId = migratedPrevPeer;\n            } else {\n              historyStorage.count = totalCount;\n              return true;\n            }\n          }\n\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, historyStorage, threadId);\n        } else if(totalCount < historyStorage.count) {\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, offset, historyStorage, threadId);\n        }\n      } */\n    });\n  }\n\n  public requestHistory(peerId: PeerId, maxId: number, limit = 0, offset = 0, offsetDate = 0, threadId = 0): Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>> {\n    //console.trace('requestHistory', peerId, maxId, limit, offset);\n\n    //rootScope.broadcast('history_request');\n\n    const options: any = {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: getServerMessageId(maxId) || 0,\n      offset_date: offsetDate,\n      add_offset: offset,\n      limit,\n      max_id: 0,\n      min_id: 0,\n      hash: 0\n    };\n\n    if(threadId) {\n      options.msg_id = getServerMessageId(threadId) || 0;\n    }\n\n    const promise: ReturnType<AppMessagesManager['requestHistory']> = this.apiManager.invokeApiSingle(threadId ? 'messages.getReplies' : 'messages.getHistory', options, {\n      //timeout: APITIMEOUT,\n      noErrorBox: true\n    }) as any;\n\n    return promise.then((historyResult) => {\n      if(DEBUG) {\n        this.log('requestHistory result:', peerId, historyResult, maxId, limit, offset);\n      }\n\n      this.appUsersManager.saveApiUsers(historyResult.users);\n      this.appChatsManager.saveApiChats(historyResult.chats);\n      this.saveMessages(historyResult.messages);\n\n      if(this.appPeersManager.isChannel(peerId)) {\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), (historyResult as MessagesMessages.messagesChannelMessages).pts);\n      }\n\n      let length = historyResult.messages.length, count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\n      if(length && !historyResult.messages[length - 1]) {\n        historyResult.messages.splice(length - 1, 1);\n        length--;\n        count--;\n      }\n\n      // will load more history if last message is album grouped (because it can be not last item)\n      // historyResult.messages: desc sorted\n      const historyStorage = this.getHistoryStorage(peerId, threadId);\n      const oldestMessage: Message.message = historyResult.messages[length - 1] as any;\n      if(length && oldestMessage.grouped_id) {\n        const foundSlice = historyStorage.history.findSlice(oldestMessage.mid);\n        if(foundSlice && (foundSlice.slice.length + historyResult.messages.length) < count) {\n          return this.requestHistory(peerId, oldestMessage.mid, 10, 0, offsetDate, threadId).then((_historyResult) => {\n            return historyResult;\n          });\n        }\n      }\n\n      return historyResult;\n    }, (error) => {\n      switch (error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = this.appChatsManager.getChat(peerId.toChatId());\n          channel = {_: 'channelForbidden', access_hash: channel.access_hash, title: channel.title};\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: peerId.toChatId()\n            }],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      throw error;\n    });\n  }\n\n  public fetchSingleMessages() {\n    if(this.fetchSingleMessagesPromise) {\n      return this.fetchSingleMessagesPromise;\n    }\n\n    return this.fetchSingleMessagesPromise = pause(0).then(() => {\n      const requestPromises: Promise<void>[] = [];\n      \n      for(const [peerId, map] of this.needSingleMessages) {\n        const mids = [...map.keys()];\n        const msgIds: InputMessage[] = mids.map((mid) => {\n          return {\n            _: 'inputMessageID',\n            id: getServerMessageId(mid)\n          };\n        });\n  \n        let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\n        if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n          promise = this.apiManager.invokeApiSingle('channels.getMessages', {\n            channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n            id: msgIds\n          });\n        } else {\n          promise = this.apiManager.invokeApiSingle('messages.getMessages', {\n            id: msgIds\n          });\n        }\n\n        const after = promise.then((getMessagesResult) => {\n          assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\n\n          this.appUsersManager.saveApiUsers(getMessagesResult.users);\n          this.appChatsManager.saveApiChats(getMessagesResult.chats);\n          const messages = this.saveMessages(getMessagesResult.messages);\n\n          for(let i = 0; i < messages.length; ++i) {\n            const message = messages[i];\n            if(!message) {\n              continue;\n            }\n\n            const mid = generateMessageId(message.id);\n            const promise = map.get(mid);\n            promise.resolve(message);\n            map.delete(mid);\n          }\n\n          if(map.size) {\n            for(const [mid, promise] of map) {\n              promise.resolve(this.generateEmptyMessage(mid));\n            }\n          }\n        }).finally(() => {\n          this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\n        });\n  \n        requestPromises.push(after);\n      }\n\n      this.needSingleMessages.clear();\n\n      return Promise.all(requestPromises).then(noop, noop).then(() => {\n        this.fetchSingleMessagesPromise = null;\n        if(this.needSingleMessages.size) this.fetchSingleMessages();\n      });\n    });\n  }\n\n  public wrapSingleMessage(peerId: PeerId, mid: number, overwrite = false) {\n    const message = this.getMessageByPeer(peerId, mid);\n    if(message && !overwrite) {\n      this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\n      return Promise.resolve(message);\n    } else {\n      let map = this.needSingleMessages.get(peerId);\n      if(!map) {\n        this.needSingleMessages.set(peerId, map = new Map());\n      }\n\n      let promise = map.get(mid);\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      map.set(mid, promise);\n      this.fetchSingleMessages();\n      return promise;\n    }\n  }\n\n  public fetchMessageReplyTo(message: MyMessage) {\n    if(!message.reply_to_mid) return Promise.resolve(this.generateEmptyMessage(0));\n    const replyToPeerId = message.reply_to.reply_to_peer_id ? getPeerId(message.reply_to.reply_to_peer_id) : message.peerId;\n    return this.wrapSingleMessage(replyToPeerId, message.reply_to_mid).then((originalMessage) => {\n      if(!originalMessage) { // ! break the infinite loop\n        message = this.getMessageByPeer(message.peerId, message.mid); // message can come from other thread\n        delete message.reply_to_mid; // ! WARNING!\n      }\n\n      return originalMessage;\n    });\n  }\n\n  public setTyping(peerId: PeerId, action: SendMessageAction, force?: boolean): Promise<boolean> {\n    let typing = this.typings[peerId];\n    if(\n      !peerId || \n      !this.canSendToPeer(peerId) || \n      peerId === this.appPeersManager.peerId ||\n      // (!force && deepEqual(typing?.action, action))\n      (!force && typing?.action?._ === action._)\n    ) {\n      return Promise.resolve(false);\n    }\n\n    if(typing?.timeout) {\n      clearTimeout(typing.timeout);\n    }\n\n    typing = this.typings[peerId] = {\n      action\n    };\n\n    return this.apiManager.invokeApi('messages.setTyping', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      action\n    }).finally(() => {\n      if(typing === this.typings[peerId]) {\n        typing.timeout = ctx.setTimeout(() => {\n          delete this.typings[peerId];\n        }, 6000);\n      }\n    });\n  }\n\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\n    const media = (message as Message.message).media;\n    if(media) {\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\n\n      if(smth?.file_reference) {\n        this.referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\n      }\n\n      if('webpage' in media && media.webpage) {\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\n        this.appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\n      }\n\n      if((media as MessageMedia.messageMediaPoll).poll) {\n        this.appPollsManager.updatePollToMessage(message as Message.message, false);\n      }\n    }\n  }\n\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\n    const history: {\n      count: number, \n      unread: number, \n      unreadMentions: number, \n      msgs: Set<number>,\n      albums?: {[groupId: string]: Set<number>},\n    } = {\n      count: 0, \n      unread: 0, \n      unreadMentions: 0, \n      msgs: new Set()\n    };\n\n    for(const mid of messages) {\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\n      if(!message) {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n        continue;\n      }\n\n      this.handleReleasingMessage(message, storage);\n\n      this.updateMessageRepliesIfNeeded(message);\n\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\n        ++history.unread;\n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n\n        if(message.pFlags.mentioned) {\n          ++history.unreadMentions;\n          this.modifyCachedMentions(peerId, mid, false);\n        }\n      }\n\n      ++history.count;\n      history.msgs.add(mid);\n\n      message.deleted = true;\n\n      const groupedId = (message as Message.message).grouped_id;\n      if(groupedId) {\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\n        if(groupedStorage) {\n          groupedStorage.delete(mid);\n\n          if(!history.albums) history.albums = {};\n          (history.albums[groupedId] || (history.albums[groupedId] = new Set())).add(mid);\n\n          if(!groupedStorage.size) {\n            delete history.albums;\n            delete this.groupedMessagesStorage[groupedId];\n          }\n        }\n      }\n\n      storage.delete(mid);\n    }\n\n    if(history.albums) {\n      for(const groupedId in history.albums) {\n        this.dispatchAlbumEdit(groupedId, storage, [...history.albums[groupedId]]);\n        /* const mids = this.getMidsByAlbum(groupId);\n        if(mids.length) {\n          const mid = Math.max(...mids);\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\n        } */\n      }\n    }\n\n    return history;\n  }\n  \n  private handleEditedMessage(oldMessage: Message, newMessage: Message, storage: MessagesStorage) {\n    if(oldMessage._ === 'message') {\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\n        this.appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\n      }\n\n      const groupedId = oldMessage.grouped_id;\n      if(groupedId) {\n        this.dispatchAlbumEdit(groupedId, storage, []);\n      }\n    }\n  }\n\n  private dispatchAlbumEdit(groupedId: string, storage: MessagesStorage, deletedMids?: number[]) {\n    const mids = this.getMidsByAlbum(groupedId);\n    const messages = mids.map((mid) => this.getMessageFromStorage(storage, mid)) as Message.message[];\n    this.rootScope.dispatchEvent('album_edit', {peerId: messages[0].peerId, groupId: groupedId, deletedMids: deletedMids || [], messages});\n  }\n\n  public getDialogUnreadCount(dialog: Dialog) {\n    return dialog.unread_count || +!!dialog.pFlags.unread_mark;\n  }\n\n  public isDialogUnread(dialog: Dialog) {\n    return !!this.getDialogUnreadCount(dialog);\n  }\n\n  public canForward(message: Message.message | Message.messageService) {\n    return message?._ === 'message' && !(message as Message.message).pFlags.noforwards && !this.appPeersManager.noForwards(message.peerId);\n  }\n\n  private pushBatchUpdate<E extends keyof BatchUpdates, C extends BatchUpdates[E]>(\n    event: E, \n    callback: C, \n    key: string, \n    getElementCallback?: () => MapValueType<ArgumentTypes<C>[0]>\n  ) {\n    let details = this.batchUpdates[event];\n    if(!details) {\n      // @ts-ignore\n      details = this.batchUpdates[event] = {\n        callback,\n        batch: new Map()\n      };\n    }\n\n    if(!details.batch.has(key)) {\n      // @ts-ignore\n      details.batch.set(key, getElementCallback ? getElementCallback() : undefined);\n      this.batchUpdatesDebounced();\n    }\n  }\n\n  private getMessagesFromMap<T extends Map<any, any>>(map: T) {\n    const newMap: Map<Message.message, MapValueType<T>> = new Map();\n    for(const [key, value] of map) {\n      const [peerIdStr, mid] = key.split('_');\n      const message = this.getMessageByPeer(peerIdStr.toPeerId(), +mid) as Message.message;\n      if(!message) {\n        continue;\n      }\n\n      newMap.set(message, value);\n    }\n\n    return newMap;\n  }\n\n  private batchUpdateViews = (batch: Map<string, undefined>) => {\n    const toDispatch: {peerId: PeerId, mid: number, views: number}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message] of map) {\n      toDispatch.push({\n        peerId: message.peerId,\n        mid: message.mid,\n        views: message.views\n      })\n    }\n\n    return toDispatch;\n  };\n\n  private batchUpdateReactions = (batch: Map<string, MessageReactions>) => {\n    const toDispatch: {message: Message.message, changedResults: ReactionCount.reactionCount[]}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message, previousReactions] of map) {\n      const results = message.reactions?.results ?? [];\n      const previousResults = previousReactions?.results ?? [];\n      const changedResults = results.filter((reactionCount) => {\n        const previousReactionCount = previousResults.find((_reactionCount) => _reactionCount.reaction === reactionCount.reaction);\n        return (\n          message.pFlags.out && (\n            !previousReactionCount || \n            reactionCount.count > previousReactionCount.count\n          )\n        ) || (\n          reactionCount.pFlags.chosen && (\n            !previousReactionCount || \n            !previousReactionCount.pFlags.chosen\n          )\n        );\n      });\n\n      toDispatch.push({message, changedResults});\n    }\n\n    return toDispatch;\n  };\n\n  public saveDefaultSendAs(peerId: PeerId, sendAsPeerId: PeerId) {\n    const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n    channelFull.default_send_as = this.appPeersManager.getOutputPeer(sendAsPeerId);\n    return this.apiManager.invokeApi('messages.saveDefaultSendAs', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      send_as: this.appPeersManager.getInputPeerById(sendAsPeerId)\n    });\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { getFileNameByLocation } from \"../../../../helpers/fileName\";\r\nimport { Document } from \"../../../../layer\";\r\nimport getDocumentInput from \"./getDocumentInput\";\r\n\r\nexport default function getDocumentInputFileName(doc: Document.document, thumbSize?: string) {\r\n  return getFileNameByLocation(getDocumentInput(doc, thumbSize), {fileName: doc.file_name});\r\n}\r\n","export default function convertInputKeyToKey<T extends string>(inputKey: string) {\n  const str = inputKey.replace('input', '');\n  return (str[0].toLowerCase() + str.slice(1)) as T;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport tsNow from \"../../helpers/tsNow\";\r\nimport { InputNotifyPeer, InputPeerNotifySettings, NotifyPeer, PeerNotifySettings, Update } from \"../../layer\";\r\nimport { MUTE_UNTIL } from \"../mtproto/mtproto_config\";\r\nimport throttle from \"../../helpers/schedulers/throttle\";\r\nimport convertInputKeyToKey from \"../../helpers/string/convertInputKeyToKey\";\r\nimport { AppManager } from \"./manager\";\r\nimport getPeerId from \"./utils/peers/getPeerId\";\r\nimport ctx from \"../../environment/ctx\";\r\nimport assumeType from \"../../helpers/assumeType\";\r\n\r\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\r\nexport class AppNotificationsManager extends AppManager {\r\n  private peerSettings = {\r\n    notifyPeer: {} as {[peerId: PeerId]: ImSadAboutIt},\r\n    notifyUsers: null as ImSadAboutIt,\r\n    notifyChats: null as ImSadAboutIt,\r\n    notifyBroadcasts: null as ImSadAboutIt\r\n  };\r\n  //private exceptions: {[peerId: string]: PeerNotifySettings} = {};\r\n  \r\n  private getNotifyPeerTypePromise: Promise<any>;\r\n\r\n  private checkMuteUntilTimeout: number;\r\n  private checkMuteUntilThrottled: () => void;\r\n\r\n  private notifyContactsSignUp: Promise<boolean>;\r\n\r\n  protected after() {\r\n    this.checkMuteUntilThrottled = throttle(this.checkMuteUntil, 1000, false);\r\n\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateNotifySettings: (update) => {\r\n        const peerId = update.peer._ === 'notifyPeer' && getPeerId(update.peer.peer);\r\n        const key = update.peer._ !== 'notifyPeer' ? update.peer._ : undefined;\r\n        this.savePeerSettings({\r\n          key,\r\n          peerId, \r\n          settings: update.notify_settings\r\n        });\r\n        this.rootScope.dispatchEvent('notify_settings', update);\r\n      }\r\n    });\r\n\r\n    return this.appStateManager.getState().then((state) => {\r\n      if(state.notifySettings) {\r\n        for(const key in state.notifySettings) {\r\n          assumeType<Exclude<NotifyPeer['_'], 'notifyPeer'>>(key);\r\n          this.savePeerSettings({\r\n            key,\r\n            settings: state.notifySettings[key]\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\r\n    let key: any = convertInputKeyToKey(peer._);\r\n    let obj: any = this.peerSettings[key as NotifyPeer['_']];\r\n\r\n    let peerId: PeerId;\r\n    if(peer._ === 'inputNotifyPeer') {\r\n      peerId = key = getPeerId(peer.peer);\r\n      obj = obj[key];\r\n    }\r\n\r\n    if(obj) {\r\n      return obj;\r\n    }\r\n\r\n    return (obj || this.peerSettings)[key] = this.apiManager.invokeApi('account.getNotifySettings', {peer})\r\n    .then((settings) => {\r\n      this.savePeerSettings({\r\n        key,\r\n        peerId, \r\n        settings\r\n      });\r\n      \r\n      return settings;\r\n    });\r\n  }\r\n\r\n  public getNotifyPeerTypeSettings() {\r\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\r\n\r\n    const promises = (['inputNotifyBroadcasts', 'inputNotifyUsers', 'inputNotifyChats'] as Exclude<InputNotifyPeer['_'], 'inputNotifyPeer'>[])\r\n    .map((inputKey) => {\r\n      return this.getNotifySettings({_: inputKey});\r\n    });\r\n\r\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\r\n  }\r\n\r\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\r\n    //this.savePeerSettings(peerId, settings);\r\n\r\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\r\n    inputSettings._ = 'inputPeerNotifySettings'; */\r\n\r\n    return this.apiManager.invokeApi('account.updateNotifySettings', {\r\n      peer,\r\n      settings\r\n    }).then((value) => {\r\n      if(value) {\r\n        this.apiUpdatesManager.processLocalUpdate({\r\n          _: 'updateNotifySettings', \r\n          peer: {\r\n            ...peer as any,\r\n            _: convertInputKeyToKey(peer._)\r\n          }, \r\n          notify_settings: { // ! WOW, IT WORKS !\r\n            ...settings,\r\n            _: 'peerNotifySettings',\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // public getNotifyExceptions() {\r\n  //   apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\r\n  //   .then((updates) => {\r\n  //     apiUpdatesManager.processUpdateMessage(updates);\r\n  //   });\r\n  // }\r\n\r\n  public getContactSignUpNotification() {\r\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\r\n    return this.notifyContactsSignUp = this.apiManager.invokeApi('account.getContactSignUpNotification');\r\n  }\r\n\r\n  public setContactSignUpNotification(silent: boolean) {\r\n    this.apiManager.invokeApi('account.setContactSignUpNotification', {silent})\r\n    .then((value) => {\r\n      this.notifyContactsSignUp = Promise.resolve(!silent);\r\n    });\r\n  }\r\n\r\n  private checkMuteUntil = () => {\r\n    if(this.checkMuteUntilTimeout !== undefined) {\r\n      clearTimeout(this.checkMuteUntilTimeout);\r\n      this.checkMuteUntilTimeout = undefined;\r\n    }\r\n\r\n    const timestamp = tsNow(true);\r\n    let closestMuteUntil = MUTE_UNTIL;\r\n    for(const peerId in this.peerSettings.notifyPeer) {\r\n      const peerNotifySettings = this.peerSettings.notifyPeer[peerId];\r\n      if(peerNotifySettings instanceof Promise) {\r\n        continue;\r\n      }\r\n\r\n      const muteUntil = peerNotifySettings.mute_until;\r\n      if(!muteUntil) {\r\n        continue;\r\n      }\r\n\r\n      if(muteUntil <= timestamp) {\r\n        // ! do not delete it because peer's unique settings will be overwritten in getPeerLocalSettings with type's settings\r\n        peerNotifySettings.mute_until = 0;\r\n\r\n        this.apiUpdatesManager.saveUpdate({\r\n          _: 'updateNotifySettings',\r\n          peer: {\r\n            _: 'notifyPeer',\r\n            peer: this.appPeersManager.getOutputPeer(peerId.toPeerId())\r\n          },\r\n          notify_settings: peerNotifySettings\r\n        });\r\n      } else if(muteUntil < closestMuteUntil) {\r\n        closestMuteUntil = muteUntil;\r\n      }\r\n    }\r\n\r\n    const timeout = Math.min(1800e3, (closestMuteUntil - timestamp) * 1000);\r\n    this.checkMuteUntilTimeout = ctx.setTimeout(this.checkMuteUntil, timeout);\r\n  };\r\n\r\n  public savePeerSettings({key, peerId, settings}: {\r\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\r\n    peerId?: PeerId, \r\n    settings: PeerNotifySettings\r\n  }) {\r\n    let obj: any;\r\n    if(peerId) {\r\n      key = peerId as any;\r\n      obj = this.peerSettings['notifyPeer'];\r\n    }\r\n    \r\n    (obj || this.peerSettings)[key] = settings;\r\n\r\n    if(!peerId) {\r\n      this.rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\r\n      this.appStateManager.getState().then((state) => {\r\n        const notifySettings = state.notifySettings;\r\n        notifySettings[key] = settings;\r\n        this.appStateManager.pushToState('notifySettings', notifySettings);\r\n      });\r\n    } else {\r\n      this.checkMuteUntilThrottled();\r\n    }\r\n\r\n    //rootScope.broadcast('notify_settings', {peerId: peerId});\r\n  }\r\n\r\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\r\n    return peerNotifySettings._ === 'peerNotifySettings' &&\r\n      (peerNotifySettings.silent || (peerNotifySettings.mute_until !== undefined && (peerNotifySettings.mute_until * 1000) > tsNow()));\r\n  }\r\n\r\n  private getPeerMuted(peerId: PeerId) {\r\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: this.appPeersManager.getInputPeerById(peerId)});\r\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\r\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\r\n  }\r\n\r\n  private getPeerLocalSettings(peerId: PeerId, respectType = true): PeerNotifySettings {\r\n    const n: PeerNotifySettings = {\r\n      _: 'peerNotifySettings'\r\n    };\r\n\r\n    const notifySettings = this.peerSettings['notifyPeer'][peerId];\r\n    //if(!notifySettings || (notifySettings instanceof Promise)) return false;\r\n    if(notifySettings && !(notifySettings instanceof Promise)) {\r\n      Object.assign(n, notifySettings);\r\n    }\r\n\r\n    if(respectType) {\r\n      const inputNotify = this.appPeersManager.getInputNotifyPeerById(peerId, true);\r\n      const key = convertInputKeyToKey(inputNotify._);\r\n      const typeNotifySettings = this.peerSettings[key as NotifyPeer['_']];\r\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\r\n        for(let i in typeNotifySettings) {\r\n          // @ts-ignore\r\n          if(n[i] === undefined) {\r\n            // @ts-ignore\r\n            n[i] = typeNotifySettings[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n  public isPeerLocalMuted(peerId: PeerId, respectType = true) {\r\n    if(peerId === this.appPeersManager.peerId) return false;\r\n\r\n    const notifySettings = this.getPeerLocalSettings(peerId, respectType);\r\n    return this.isMuted(notifySettings);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto } from \"../../layer\";\r\nimport type { LangPackKey } from \"../langPack\";\r\nimport { getRestrictionReason } from \"../../helpers/restrictions\";\r\nimport isObject from \"../../helpers/object/isObject\";\r\nimport { AppManager } from \"./manager\";\r\nimport getPeerId from \"./utils/peers/getPeerId\";\r\nimport isUser from \"./utils/peers/isUser\";\r\nimport isAnyChat from \"./utils/peers/isAnyChat\";\r\n\r\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\r\nexport class AppPeersManager extends AppManager {\r\n  public get peerId() {\r\n    return this.appUsersManager.userId.toPeerId();\r\n  }\r\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\r\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\r\n    else appUsersManager.saveApiUser(instance);\r\n  } */\r\n\r\n  public canPinMessage(peerId: PeerId) {\r\n    return peerId.isUser() || this.appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\r\n  }\r\n\r\n  public getPeerPhoto(peerId: PeerId): UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto {\r\n    if(this.isRestricted(peerId)) {\r\n      return;\r\n    }\r\n\r\n    const photo = peerId.isUser() \r\n      ? this.appUsersManager.getUserPhoto(peerId.toUserId())\r\n      : this.appChatsManager.getChatPhoto(peerId.toChatId());\r\n\r\n    return photo._ !== 'chatPhotoEmpty' && photo._ !== 'userProfilePhotoEmpty' ? photo : undefined;\r\n  }\r\n\r\n  public getPeerMigratedTo(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return false;\r\n    }\r\n\r\n    const chat: Chat.chat = this.appChatsManager.getChat(peerId.toChatId());\r\n    if(chat && chat.migrated_to && chat.pFlags.deactivated) {\r\n      return getPeerId(chat.migrated_to as InputChannel.inputChannel);\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  public getOutputPeer(peerId: PeerId): Peer {\r\n    if(peerId.isUser()) {\r\n      return {_: 'peerUser', user_id: peerId.toUserId()};\r\n    }\r\n\r\n    const chatId = peerId.toChatId();\r\n    if(this.appChatsManager.isChannel(chatId)) {\r\n      return {_: 'peerChannel', channel_id: chatId};\r\n    }\r\n\r\n    return {_: 'peerChat', chat_id: chatId};\r\n  }\r\n\r\n  public getPeerString(peerId: PeerId) {\r\n    if(peerId.isUser()) {\r\n      return this.appUsersManager.getUserString(peerId.toUserId());\r\n    }\r\n    return this.appChatsManager.getChatString(peerId.toChatId());\r\n  }\r\n\r\n  public getPeerUsername(peerId: PeerId): string {\r\n    return this.getPeer(peerId).username || '';\r\n  }\r\n\r\n  public getPeer(peerId: PeerId) {\r\n    return peerId.isUser()\r\n      ? this.appUsersManager.getUser(peerId.toUserId())\r\n      : this.appChatsManager.getChat(peerId.toChatId());\r\n  }\r\n\r\n  public getDialogPeer(peerId: PeerId): DialogPeer {\r\n    return {\r\n      _: 'dialogPeer',\r\n      peer: this.getOutputPeer(peerId)\r\n    };\r\n  }\r\n\r\n  public isChannel(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && this.appChatsManager.isChannel(peerId.toChatId());\r\n  }\r\n\r\n  public isMegagroup(peerId: PeerId) {\r\n    return !peerId.isUser() && this.appChatsManager.isMegagroup(peerId.toChatId());\r\n  }\r\n\r\n  public isAnyGroup(peerId: PeerId): boolean {\r\n    return !peerId.isUser() && !this.appChatsManager.isBroadcast(peerId.toChatId());\r\n  }\r\n\r\n  public isBroadcast(peerId: PeerId): boolean {\r\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\r\n  }\r\n\r\n  public isBot(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isBot(peerId.toUserId());\r\n  }\r\n\r\n  public isContact(peerId: PeerId): boolean {\r\n    return peerId.isUser() && this.appUsersManager.isContact(peerId.toUserId());\r\n  }\r\n\r\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\r\n    return isUser(peerId);\r\n  }\r\n  \r\n  public isAnyChat(peerId: PeerId) {\r\n    return isAnyChat(peerId);\r\n  }\r\n\r\n  public isRestricted(peerId: PeerId) {\r\n    return peerId.isUser() ? this.appUsersManager.isRestricted(peerId.toUserId()) : this.appChatsManager.isRestricted(peerId.toChatId());\r\n  }\r\n\r\n  public getRestrictionReasonText(peerId: PeerId) {\r\n    const peer: Chat.channel | User.user = this.getPeer(peerId);\r\n    const reason = peer.restriction_reason ? getRestrictionReason(peer.restriction_reason) : undefined;\r\n    if(reason) {\r\n      return reason.text;\r\n    } else {\r\n      return peerId.isUser() ? 'This user is restricted' : 'This chat is restricted';\r\n    }\r\n  }\r\n\r\n  /* public getInputPeer(peerString: string): InputPeer {\r\n    var firstChar = peerString.charAt(0);\r\n    var peerParams = peerString.substr(1).split('_');\r\n    let id = +peerParams[0];\r\n\r\n    if(firstChar === 'u') {\r\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\r\n\r\n      return {\r\n        _: 'inputPeerUser',\r\n        user_id: id,\r\n        access_hash: peerParams[1]\r\n      };\r\n    } else if(firstChar === 'c' || firstChar === 's') {\r\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\r\n      if(firstChar === 's') {\r\n        appChatsManager.saveIsMegagroup(id);\r\n      }\r\n\r\n      return {\r\n        _: 'inputPeerChannel',\r\n        channel_id: id,\r\n        access_hash: peerParams[1] || '0'\r\n      };\r\n    } else {\r\n      return {\r\n        _: 'inputPeerChat',\r\n        chat_id: id\r\n      };\r\n    }\r\n  } */\r\n\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\r\n  public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\r\n    if(ignorePeerId) {\r\n      if(peerId.isUser()) {\r\n        return {_: 'inputNotifyUsers'};\r\n      } else {\r\n        if(this.isBroadcast(peerId)) {\r\n          return {_: 'inputNotifyBroadcasts'};\r\n        } else {\r\n          return {_: 'inputNotifyChats'};\r\n        }\r\n      }\r\n    } else {\r\n      return {\r\n        _: 'inputNotifyPeer', \r\n        peer: this.getInputPeerById(peerId)\r\n      };\r\n    }\r\n  }\r\n\r\n  public getInputPeerById(peerId: PeerId): InputPeer {\r\n    if(!peerId) {\r\n      return {_: 'inputPeerEmpty'};\r\n    }\r\n\r\n    if(!peerId.isUser()) {\r\n      const chatId = peerId.toChatId();\r\n      return this.appChatsManager.getInputPeer(chatId);\r\n    }\r\n\r\n    const userId = peerId.toUserId();\r\n    return this.appUsersManager.getUserInputPeer(userId);\r\n  }\r\n\r\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\r\n    return {_: 'inputPeerSelf'};\r\n  }\r\n\r\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\r\n    return {\r\n      _: 'inputDialogPeer',\r\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\r\n    };\r\n  }\r\n\r\n  public getPeerSearchText(peerId: PeerId) {\r\n    let text: string;\r\n    if(this.isUser(peerId)) {\r\n      text = '%pu ' + this.appUsersManager.getUserSearchText(peerId.toUserId());\r\n    } else {\r\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\r\n      text = '%pg ' + (chat.title || '');\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  public getDialogType(peerId: PeerId): PeerType {\r\n    if(this.isMegagroup(peerId)) {\r\n      return 'megagroup';\r\n    } else if(this.isChannel(peerId)) {\r\n      return 'channel';\r\n    } else if(!this.isUser(peerId)) {\r\n      return 'group';\r\n    } else {\r\n      return peerId === this.peerId ? 'saved' : 'chat';\r\n    }\r\n  }\r\n\r\n  public getDeleteButtonText(peerId: PeerId): LangPackKey {\r\n    switch(this.getDialogType(peerId)) {\r\n      case 'channel':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\r\n\r\n      case 'megagroup':\r\n      case 'group':\r\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\r\n      \r\n      default:\r\n        return 'ChatList.Context.DeleteChat';\r\n    }\r\n  }\r\n\r\n  public noForwards(peerId: PeerId) {\r\n    if(peerId.isUser()) return false;\r\n    else {\r\n      const chat = this.appChatsManager.getChatTyped(peerId.toChatId());\r\n      return !!(chat as Chat.chat).pFlags?.noforwards;\r\n    }\r\n  }\r\n}\r\n\r\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat';\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { Photo, PhotoSize, PhotosPhotos } from \"../../layer\";\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport isObject from \"../../helpers/object/isObject\";\nimport safeReplaceArrayInObject from \"../../helpers/object/safeReplaceArrayInObject\";\nimport { AppManager } from \"./manager\";\n\nexport type MyPhoto = Photo.photo;\n\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\n//let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\n\nexport class AppPhotosManager extends AppManager {\n  private photos: {\n    [id: string]: MyPhoto\n  } = {};\n\n  public savePhoto(photo: Photo, context?: ReferenceContext) {\n    if(photo._ === 'photoEmpty') return undefined;\n\n    /* if(photo.id === TEST_FILE_REFERENCE) {\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\n      //photo.file_reference = new Uint8Array(bytes);\n      photo.file_reference = bytes;\n      if(!--TEST_FILE_REFERENCE_TIMES) {\n        TEST_FILE_REFERENCE = '';\n      }\n    } */\n\n    const oldPhoto = this.photos[photo.id];\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\n      this.referenceDatabase.saveContext(photo.file_reference, context);\n    }\n\n    if(photo.sizes?.length) {\n      const size = photo.sizes[photo.sizes.length - 1];\n      if(size._ === 'photoSizeProgressive') {\n        size.size = size.sizes[size.sizes.length - 1];\n      }\n    }\n\n    if(oldPhoto) {\n      return Object.assign(oldPhoto, photo);\n    }\n\n    return this.photos[photo.id] = photo;\n  }\n  \n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\n    const inputUser = this.appUsersManager.getUserInput(userId);\n    return this.apiManager.invokeApiCacheable('photos.getUserPhotos', {\n      user_id: inputUser,\n      offset: 0,\n      limit,\n      max_id: maxId\n    }, {cacheSeconds: 60}).then((photosResult) => {\n      this.appUsersManager.saveApiUsers(photosResult.users);\n      const photoIds = photosResult.photos.map((photo, idx) => {\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\n        return photo.id;\n      });\n\n      // ! WARNING !\n      if(maxId !== '0' && maxId) {\n        const idx = photoIds.indexOf(maxId);\n        if(idx !== -1) {\n          photoIds.splice(idx, 1);\n        }\n      }\n      \n      return {\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\n        photos: photoIds\n      };\n    });\n  }\n\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\n\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\n  } */\n\n  /* public isDownloaded(media: any) {\n    const isPhoto = media._ === 'photo';\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\n    let isDownloaded: boolean;\n    if(photo) {\n      isDownloaded = photo.downloaded > 0;\n    } else {\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\n      isDownloaded = cachedThumb?.downloaded > 0;\n    }\n\n    return isDownloaded;\n  } */\n  \n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport copy from \"../../helpers/object/copy\";\r\nimport { InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults } from \"../../layer\";\r\nimport { logger, LogTypes } from \"../logger\";\r\nimport parseMarkdown from \"../richTextProcessor/parseMarkdown\";\r\nimport { AppManager } from \"./manager\";\r\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\r\n\r\nexport class AppPollsManager extends AppManager {\r\n  public polls: {[id: string]: Poll} = {};\r\n  public results: {[id: string]: PollResults} = {};\r\n  public pollToMessages: {[id: string]: Set<string>} = {};\r\n\r\n  private log = logger('POLLS', LogTypes.Error);\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateMessagePoll: (update) => {\r\n        this.log('updateMessagePoll:', update);\r\n\r\n        let poll: Poll = update.poll || this.polls[update.poll_id];\r\n        if(!poll) {\r\n          return;\r\n        }\r\n\r\n        let results = update.results;\r\n        const ret = this.savePoll(poll, results as any);\r\n        poll = ret.poll;\r\n        results = ret.results;\r\n        \r\n        this.rootScope.dispatchEvent('poll_update', {poll, results: results as any});\r\n      }\r\n    });\r\n  }\r\n\r\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\r\n    if(message) {\r\n      this.updatePollToMessage(message, true);\r\n    }\r\n\r\n    const id = poll.id;\r\n    if(this.polls[id]) {\r\n      poll = Object.assign(this.polls[id], poll);\r\n      results = this.saveResults(poll, results);\r\n    } else {\r\n      this.polls[id] = poll;\r\n\r\n      poll.chosenIndexes = [];\r\n      results = this.saveResults(poll, results);\r\n    }\r\n\r\n    return {poll, results};\r\n  }\r\n\r\n  public saveResults(poll: Poll, results: PollResults) {\r\n    if(this.results[poll.id]) {\r\n      results = Object.assign(this.results[poll.id], results);\r\n    } else {\r\n      this.results[poll.id] = results;\r\n    }\r\n\r\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\r\n      poll.chosenIndexes.length = 0;\r\n      if(results?.results?.length) {\r\n        results.results.forEach((answer, idx) => {\r\n          if(answer.pFlags?.chosen) {\r\n            poll.chosenIndexes.push(idx);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  public getPoll(pollId: string): {poll: Poll, results: PollResults} {\r\n    return {\r\n      poll: this.polls[pollId], \r\n      results: this.results[pollId]\r\n    };\r\n  }\r\n\r\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\r\n    if(solution) {\r\n      if(!solutionEntities) {\r\n        solutionEntities = [];\r\n      }\r\n\r\n      solution = parseMarkdown(solution, solutionEntities);\r\n    } else {\r\n      solution = undefined; // can be string here\r\n    }\r\n\r\n    return {\r\n      _: 'inputMediaPoll',\r\n      poll,\r\n      correct_answers: correctAnswers,\r\n      solution,\r\n      solution_entities: solution ? solutionEntities : undefined\r\n    };\r\n  }\r\n\r\n  public updatePollToMessage(message: Message.message, add: boolean) {\r\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\r\n    let set = this.pollToMessages[id];\r\n    \r\n    if(!add && !set) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = this.pollToMessages[id] = new Set();\r\n    }\r\n\r\n    const key = message.peerId + '_' + message.mid;\r\n    if(add) set.add(key);\r\n    else set.delete(key);\r\n\r\n    if(!add && !set.size) {\r\n      delete this.polls[id];\r\n      delete this.results[id];\r\n      delete this.pollToMessages[id];\r\n    }\r\n  }\r\n\r\n  public sendVote(message: any, optionIds: number[]): Promise<void> {\r\n    const poll: Poll = message.media.poll;\r\n\r\n    const options: Uint8Array[] = optionIds.map((index) => {\r\n      return poll.answers[index].option;\r\n    });\r\n    \r\n    const messageId = message.mid;\r\n    const peerId = message.peerId;\r\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\r\n\r\n    if(message.pFlags.is_outgoing) {\r\n      return this.appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\r\n        this.log('invoke sendVote callback');\r\n        return this.sendVote(message, optionIds);\r\n      });\r\n    }\r\n\r\n    return this.apiManager.invokeApi('messages.sendVote', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid),\r\n      options\r\n    }).then((updates) => {\r\n      this.log('sendVote updates:', updates);\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n    });\r\n  }\r\n\r\n  public getResults(message: any) {\r\n    const inputPeer = this.appPeersManager.getInputPeerById(message.peerId);\r\n\r\n    return this.apiManager.invokeApi('messages.getPollResults', {\r\n      peer: inputPeer,\r\n      msg_id: getServerMessageId(message.mid)\r\n    }).then((updates) => {\r\n      this.apiUpdatesManager.processUpdateMessage(updates);\r\n      this.log('getResults updates:', updates);\r\n    });\r\n  }\r\n\r\n  public getVotes(message: any, option?: Uint8Array, offset?: string, limit = 20) {\r\n    return this.apiManager.invokeApi('messages.getPollVotes', {\r\n      peer: this.appPeersManager.getInputPeerById(message.peerId),\r\n      id: getServerMessageId(message.mid),\r\n      option,\r\n      offset,\r\n      limit\r\n    }).then((votesList) => {\r\n      this.log('getPollVotes messages:', votesList);\r\n\r\n      this.appUsersManager.saveApiUsers(votesList.users);\r\n\r\n      return votesList;\r\n    });\r\n  }\r\n\r\n  public stopPoll(message: any) {\r\n    const poll: Poll = message.media.poll;\r\n    \r\n    if(poll.pFlags.closed) return Promise.resolve();\r\n\r\n    const newPoll = copy(poll);\r\n    newPoll.pFlags.closed = true;\r\n    return this.appMessagesManager.editMessage(message, undefined, {\r\n      newMedia: this.getInputMediaPoll(newPoll)\r\n    }).then(() => {\r\n      //console.log('stopped poll');\r\n    }, err => {\r\n      this.log.error('stopPoll error:', err);\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { InputPrivacyKey, InputPrivacyRule, PrivacyRule, PrivacyKey } from \"../../layer\";\r\nimport convertInputKeyToKey from \"../../helpers/string/convertInputKeyToKey\";\r\nimport { AppManager } from \"./manager\";\r\n\r\nexport class AppPrivacyManager extends AppManager {\r\n  private privacy: Partial<{\r\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\r\n  }> = {};\r\n\r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updatePrivacy: (update) => {\r\n        const key = update.key._;\r\n        this.privacy[key] = update.rules;\r\n        this.rootScope.dispatchEvent('privacy_update', update);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\r\n    return this.apiManager.invokeApi('account.setPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      },\r\n      rules\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      this.apiUpdatesManager.processLocalUpdate({\r\n        _: 'updatePrivacy',\r\n        key: {\r\n          _: convertInputKeyToKey(inputKey)\r\n        },\r\n        rules: rules.map((inputRule) => {\r\n          const rule: PrivacyRule = {} as any;\r\n          Object.assign(rule, inputRule);\r\n          rule._ = convertInputKeyToKey(rule._) as any;\r\n          return rule;\r\n        })\r\n      });\r\n\r\n      //console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return privacyRules.rules;\r\n    });\r\n  }\r\n\r\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\r\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\r\n    const rules = this.privacy[privacyKey];\r\n    if(rules) {\r\n      return Promise.resolve(rules);\r\n    }\r\n    \r\n    return this.privacy[privacyKey] = this.apiManager.invokeApi('account.getPrivacy', {\r\n      key: {\r\n        _: inputKey\r\n      }\r\n    }).then((privacyRules) => {\r\n      this.appUsersManager.saveApiUsers(privacyRules.users);\r\n      this.appChatsManager.saveApiChats(privacyRules.chats);\r\n\r\n      //console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\r\n\r\n      return this.privacy[privacyKey] = privacyRules.rules;\r\n    });\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { MyTopPeer } from \"./appUsersManager\";\nimport tsNow from \"../../helpers/tsNow\";\nimport { ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull, Photo, PhotoSize, Updates } from \"../../layer\";\nimport SearchIndex from \"../searchIndex\";\nimport { AppManager } from \"./manager\";\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\nimport getPeerId from \"./utils/peers/getPeerId\";\nimport getPhotoInput from \"./utils/photos/getPhotoInput\";\nimport getParticipantPeerId from \"./utils/chats/getParticipantPeerId\";\nimport ctx from \"../../environment/ctx\";\n\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\n\nexport class AppProfileManager extends AppManager {\n  //private botInfos: any = {};\n  private usersFull: {[id: UserId]: UserFull.userFull} = {};\n  private chatsFull: {[id: ChatId]: ChatFull} = {};\n  private typingsInPeer: {[peerId: PeerId]: UserTyping[]};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateChatParticipants: (update) => {\n        const participants = update.participants;\n        if(participants._ === 'chatParticipants') {\n          const chatId = participants.chat_id;\n          const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\n          if(chatFull !== undefined) {\n            chatFull.participants = participants;\n            this.rootScope.dispatchEvent('chat_full_update', chatId);\n          }\n        }\n      },\n\n      updateChatParticipantAdd: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              return;\n            }\n          }\n\n          participants.push({\n            _: 'chatParticipant',\n            user_id: update.user_id,\n            inviter_id: update.inviter_id,\n            date: tsNow(true)\n          });\n\n          _participants.version = update.version;\n          this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n        }\n      },\n\n      updateChatParticipantDelete: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              participants.splice(i, 1);\n              _participants.version = update.version;\n              this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n              return;\n            }\n          }\n        }\n      },\n\n      updateUserTyping: this.onUpdateUserTyping,\n      updateChatUserTyping: this.onUpdateUserTyping,\n      updateChannelUserTyping: this.onUpdateUserTyping,\n\n      updatePeerBlocked: this.onUpdatePeerBlocked\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const fullChat = this.chatsFull[chatId];\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = this.appChatsManager.getChat(chatId);\n      if(!fullChat || !chat) {\n        return;\n      }\n\n      let updated = false;\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\n        updated = true;\n      }\n\n      const {photo} = chat as Chat.chat;\n      if(photo) {\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\n        const hasFullChatPhoto = !!(fullChat.chat_photo && fullChat.chat_photo._ !== 'photoEmpty'); // chat_photo can be missing\n        if(\n          hasChatPhoto !== hasFullChatPhoto || (\n            hasChatPhoto && \n            photo.photo_id !== fullChat.chat_photo?.id\n          )\n        ) {\n          updated = true;\n        }\n      }\n\n      if(updated) {\n        this.refreshFullPeer(chatId.toPeerId(true));\n      }\n    });\n\n    this.rootScope.addEventListener('channel_update', (chatId) => {\n      this.refreshFullPeer(chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('chat_full_update', (chatId) => {\n      this.rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\n    });\n    \n    // * genius\n    this.rootScope.addEventListener('user_full_update', (userId) => {\n      this.rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\n    });\n\n    this.rootScope.addEventListener('invalidate_participants', (chatId) => {\n      this.invalidateChannelParticipants(chatId);\n    });\n\n    this.typingsInPeer = {};\n  }\n\n  /* public saveBotInfo(botInfo: any) {\n    const botId = botInfo && botInfo.user_id;\n    if(!botId) {\n      return null;\n    }\n\n    const commands: any = {};\n    botInfo.commands.forEach((botCommand: any) => {\n      commands[botCommand.command] = botCommand.description;\n    });\n\n    return this.botInfos[botId] = {\n      id: botId,\n      version: botInfo.version,\n      shareText: botInfo.share_text,\n      description: botInfo.description,\n      commands: commands\n    };\n  } */\n\n  public getProfile(id: UserId, override?: true) {\n    if(this.usersFull[id] && !override) {\n      return this.usersFull[id];\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'users.getFullUser', \n      params: {\n        id: this.appUsersManager.getUserInput(id)\n      },\n      processResult: (usersUserFull) => {\n        this.appChatsManager.saveApiChats(usersUserFull.chats, true);\n        this.appUsersManager.saveApiUsers(usersUserFull.users);\n\n        const userFull = usersUserFull.full_user;\n        const peerId = id.toPeerId(false);\n        if(userFull.profile_photo) {\n          userFull.profile_photo = this.appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: userFull.notify_settings\n        });\n\n        this.usersFull[id] = userFull;\n\n        /* if(userFull.bot_info) {\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\n        } */\n\n        //appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\n\n        this.rootScope.dispatchEvent('user_full_update', id);\n        return userFull;\n      }\n    });\n  }\n\n  public getProfileByPeerId(peerId: PeerId, override?: true) {\n    if(this.appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\n    else return this.getProfile(peerId.toUserId(), override);\n  }\n\n  public getCachedFullChat(chatId: ChatId) {\n    return this.chatsFull[chatId];\n  }\n\n  public getCachedFullUser(userId: UserId) {\n    return this.usersFull[userId];\n  }\n\n  public getCachedProfileByPeerId(peerId: PeerId) {\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\n  }\n\n  public async getFullPhoto(peerId: PeerId) {\n    const profile = await this.getProfileByPeerId(peerId);\n    switch(profile._) {\n      case 'userFull':\n        return profile.profile_photo;\n      case 'channelFull':\n      case 'chatFull':\n        return profile.chat_photo;\n    }\n  }\n\n  /* public getPeerBots(peerId: PeerId) {\n    var peerBots: any[] = [];\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\n      return Promise.resolve(peerBots);\n    }\n    if(peerId >= 0) {\n      return this.getProfile(peerId).then((userFull: any) => {\n        var botInfo = userFull.bot_info;\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\n          peerBots.push(botInfo);\n        }\n        return peerBots;\n      });\n    }\n\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\n      chatFull.bot_info.forEach((botInfo: any) => {\n        peerBots.push(this.saveBotInfo(botInfo))\n      });\n      return peerBots;\n    });\n  } */\n\n  public getChatFull(id: ChatId, override?: true) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelFull(id, override);\n    }\n\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\n    if(fullChat && !override) {\n      const chat = this.appChatsManager.getChat(id);\n      if(chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version ||\n        chat.pFlags.left) {\n        return fullChat as ChatFull;\n      }\n    }\n    \n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getFullChat', \n      params: {\n        chat_id: id\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const chatFull = result.full_chat as ChatFull.chatFull;\n        const peerId = id.toPeerId(true);\n        if(chatFull && chatFull.chat_photo && chatFull.chat_photo.id) {\n          chatFull.chat_photo = this.appPhotosManager.savePhoto(chatFull.chat_photo, {type: 'profilePhoto', peerId});\n        }\n\n        if(chatFull.call) {\n          this.appGroupCallsManager.saveGroupCall(chatFull.call, id);\n        }\n\n        //appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\n        this.appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: chatFull.notify_settings\n        });\n        \n        this.chatsFull[id] = chatFull;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return chatFull;\n      }\n    });\n  }\n\n  public async getChatInviteLink(id: ChatId, force?: boolean) {\n    const chatFull = await this.getChatFull(id);\n    if(!force &&\n      chatFull.exported_invite &&\n      chatFull.exported_invite._ == 'chatInviteExported') {\n      return chatFull.exported_invite.link;\n    }\n    \n    return this.apiManager.invokeApi('messages.exportChatInvite', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true))\n    }).then((exportedInvite) => {\n      if(this.chatsFull[id] !== undefined) {\n        this.chatsFull[id].exported_invite = exportedInvite;\n      }\n\n      return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\n    });\n  }\n\n  public getChannelParticipants(id: ChatId, filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'}, limit = 200, offset = 0) {\n    if(filter._ === 'channelParticipantsRecent') {\n      const chat = this.appChatsManager.getChat(id);\n      if(chat &&\n          chat.pFlags && (\n            // chat.pFlags.kicked ||\n            chat.pFlags.broadcast && !chat.pFlags.creator && !chat.admin_rights\n          )) {\n        return Promise.reject();\n      }\n    }\n\n    return this.apiManager.invokeApiCacheable('channels.getParticipants', {\n      channel: this.appChatsManager.getChannelInput(id),\n      filter,\n      offset,\n      limit,\n      hash: '0'\n    }, {cacheSeconds: 60}).then((result) => {\n      this.appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\n    });\n    /* let maybeAddSelf = (participants: any[]) => {\n      let chat = appChatsManager.getChat(id);\n      let selfMustBeFirst = filter._ === 'channelParticipantsRecent' &&\n                            !offset &&\n                            !chat.pFlags.kicked &&\n                            !chat.pFlags.left;\n\n      if(selfMustBeFirst) {\n        participants = copy(participants);\n        let myID = appUsersManager.getSelf().id;\n        let myIndex = participants.findIndex((p) => p.user_id === myID);\n        let myParticipant;\n\n        if(myIndex !== -1) {\n          myParticipant = participants[myIndex];\n          participants.splice(myIndex, 1);\n        } else {\n          myParticipant = {_: 'channelParticipantSelf', user_id: myID};\n        }\n\n        participants.unshift(myParticipant);\n      }\n\n      return participants;\n    } */\n  }\n\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\n    return this.apiManager.invokeApiSingle('channels.getParticipant', {\n      channel: this.appChatsManager.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId),\n    }).then((channelParticipant) => {\n      this.appUsersManager.saveApiUsers(channelParticipant.users);\n      return channelParticipant.participant;\n    });\n  }\n\n  public getChannelFull(id: ChatId, override?: true) {\n    if(this.chatsFull[id] !== undefined && !override) {\n      return this.chatsFull[id] as ChatFull.channelFull;\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getFullChannel', \n      params: {\n        channel: this.appChatsManager.getChannelInput(id)\n      }, \n      processResult: (result) => {\n        const peerId = id.toPeerId(true);\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const fullChannel = result.full_chat as ChatFull.channelFull;\n        if(fullChannel && fullChannel.chat_photo.id) {\n          fullChannel.chat_photo = this.appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\n          //appPhotosManager.savePhoto(fullChannel.chat_photo);\n        }\n\n        if(fullChannel.call) {\n          this.appGroupCallsManager.saveGroupCall(fullChannel.call, id);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId, \n          settings: fullChannel.notify_settings\n        });\n\n        this.chatsFull[id] = fullChannel;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChannel;\n      }, \n      processError: (error) => {\n        switch(error.type) {\n          case 'CHANNEL_PRIVATE':\n            const channel: Chat.channel | Chat.channelForbidden = this.appChatsManager.getChat(id);\n            this.apiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: [{\n                _: 'updateChannel',\n                channel_id: id\n              }],\n              chats: [{\n                _: 'channelForbidden',\n                id,\n                access_hash: channel.access_hash,\n                title: channel.title,\n                pFlags: channel.pFlags\n              }],\n              users: []\n            } as Updates.updates);\n            break;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public getMentions(chatId: ChatId, query: string, threadId?: number): Promise<PeerId[]> {\n    const processUserIds = (topPeers: MyTopPeer[]) => {\n      const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      /* const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      \n      const index = new SearchIndex<number>(!startsWithAt, !startsWithAt); */\n      const index = new SearchIndex<PeerId>({\n        ignoreCase: true\n      });\n\n      const ratingMap: Map<PeerId, number> = new Map();\n      topPeers.forEach((peer) => {\n        index.indexObject(peer.id, this.appUsersManager.getUserSearchText(peer.id));\n        ratingMap.set(peer.id, peer.rating);\n      });\n\n      const peerIds = Array.from(index.search(query));\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\n      return peerIds;\n    };\n\n    let promise: Promise<PeerId[]>;\n    if(this.appChatsManager.isChannel(chatId)) {\n      promise = this.getChannelParticipants(chatId, {\n        _: 'channelParticipantsMentions',\n        q: query,\n        top_msg_id: getServerMessageId(threadId)\n      }, 50, 0).then((cP) => {\n        return cP.participants.map((p) => getParticipantPeerId(p));\n      });\n    } else if(chatId) {\n      promise = Promise.resolve(this.getChatFull(chatId)).then((chatFull) => {\n        return ((chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants).participants.map((p) => p.user_id.toPeerId());\n      });\n    } else {\n      promise = Promise.resolve([]);\n    }\n\n    return Promise.all([\n      // [],\n      this.appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]), \n      promise\n    ]).then((results) => {\n      const peers = results[0].concat(results[1].map((peerId) => ({id: peerId, rating: 0})));\n\n      return processUserIds(peers);\n    });\n  }\n\n  private invalidateChannelParticipants(id: ChatId) {\n    this.apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\n    this.refreshFullPeer(id.toPeerId(true));\n  }\n\n  private refreshFullPeer(peerId: PeerId) {\n    if(peerId.isUser()) {\n      const userId = peerId.toUserId();\n      delete this.usersFull[userId];\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    } else {\n      const chatId = peerId.toChatId();\n      delete this.chatsFull[chatId];\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\n    }\n\n    // ! эта строчка будет создавать race condition:\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\n    // this.getProfileByPeerId(peerId, true);\n  }\n\n  public updateProfile(first_name?: string, last_name?: string, about?: string) {\n    return this.apiManager.invokeApi('account.updateProfile', {\n      first_name,\n      last_name,\n      about\n    }).then((user) => {\n      this.appUsersManager.saveApiUser(user);\n\n      if(about !== undefined) {\n        const peerId = user.id.toPeerId();\n        const userFull = this.usersFull[user.id];\n        if(userFull) {\n          userFull.about = about;\n        }\n  \n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n      \n      return this.getProfile(this.appPeersManager.peerId, true);\n    });\n  }\n\n  public uploadProfilePhoto(inputFile: InputFile) {\n    return this.apiManager.invokeApi('photos.uploadProfilePhoto', {\n      file: inputFile\n    }).then((updateResult) => {\n      // ! sometimes can have no user in users\n      const photo = updateResult.photo as Photo.photo;\n      if(!updateResult.users.length) {\n        const strippedThumb = photo.sizes.find((size) => size._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n        updateResult.users.push({\n          ...this.appUsersManager.getSelf(), \n          photo: {\n            _: 'userProfilePhoto',\n            dc_id: photo.dc_id,\n            photo_id: photo.id,\n            stripped_thumb: strippedThumb?.bytes,\n            pFlags: {\n\n            }\n          }\n        });\n      }\n      this.appUsersManager.saveApiUsers(updateResult.users);\n\n      const myId = this.appPeersManager.peerId;\n      this.appPhotosManager.savePhoto(updateResult.photo, {\n        type: 'profilePhoto',\n        peerId: myId\n      });\n\n      const userId = myId.toUserId();\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateUserPhoto',\n        user_id: userId,\n        date: tsNow(true),\n        photo: this.appUsersManager.getUser(userId).photo,\n        previous: true\n      });\n    });\n  }\n\n  public deletePhotos(photoIds: string[]) {\n    return this.apiManager.invokeApiSingle('photos.deletePhotos', {\n      id: photoIds.map((photoId) => {\n        const photo = this.appPhotosManager.getPhoto(photoId);\n        return getPhotoInput(photo);\n      })\n    }).then((deletedList) => {\n      \n    });\n  }\n\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\n    const user = this.appUsersManager.getUser(participant.user_id);\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\n  }\n\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\n    return participants.reduce((acc, participant) => {\n      return acc + +this.verifyParticipantForOnlineCount(participant);\n    }, 0);\n  }\n\n  public async getOnlines(id: ChatId): Promise<number> {\n    const minOnline = 1;\n    if(this.appChatsManager.isBroadcast(id)) {\n      return minOnline;\n    }\n    \n    const chatInfo = await this.getChatFull(id);\n    if(this.appChatsManager.isMegagroup(id)) {\n      if((chatInfo as ChatFull.channelFull).participants_count <= 100) {\n        const channelParticipants = await this.getChannelParticipants(id, {_: 'channelParticipantsRecent'}, 100);\n        return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\n      }\n\n      const res = await this.apiManager.invokeApiCacheable('messages.getOnlines', {\n        peer: this.appChatsManager.getChannelInputPeer(id)\n      }, {cacheSeconds: 60});\n\n      const onlines = res.onlines ?? minOnline;\n      return onlines;\n    }\n\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\n    if(_participants?.participants) {\n      return this.reduceParticipantsForOnlineCount(_participants.participants);\n    } else {\n      return minOnline;\n    }\n  }\n\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\n    const fromId = (update as Update.updateUserTyping).user_id ? \n      (update as Update.updateUserTyping).user_id.toPeerId() : \n      getPeerId((update as Update.updateChatUserTyping).from_id);\n    if(this.appPeersManager.peerId === fromId || update.action._ === 'speakingInGroupCallAction') {\n      return;\n    }\n    \n    const peerId = getPeerId(update);\n    const typings = this.typingsInPeer[peerId] ?? (this.typingsInPeer[peerId] = []);\n    let typing = typings.find((t) => t.userId === fromId);\n\n    const cancelAction = () => {\n      delete typing.timeout;\n      //typings.findAndSplice((t) => t === typing);\n      const idx = typings.indexOf(typing);\n      if(idx !== -1) {\n        typings.splice(idx, 1);\n      }\n\n      this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n\n      if(!typings.length) {\n        delete this.typingsInPeer[peerId];\n      }\n    };\n\n    if(typing && typing.timeout !== undefined) {\n      clearTimeout(typing.timeout);\n    }\n\n    if(update.action._ === 'sendMessageCancelAction') {\n      if(!typing) {\n        return;\n      }\n\n      cancelAction();\n      return;\n    }\n\n    if(!typing) {\n      typing = {\n        userId: fromId\n      };\n\n      typings.push(typing);\n    }\n\n    //console.log('updateChatUserTyping', update, typings);\n    \n    typing.action = update.action;\n    \n    const hasUser = this.appUsersManager.hasUser(fromId);\n    if(!hasUser) {\n      // let's load user here\n      if(update._ === 'updateChatUserTyping') {\n        if(update.chat_id && this.appChatsManager.hasChat(update.chat_id) && !this.appChatsManager.isChannel(update.chat_id)) {\n          Promise.resolve(this.getChatFull(update.chat_id)).then(() => {\n            if(typing.timeout !== undefined && this.appUsersManager.hasUser(fromId)) {\n              this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n            }\n          });\n        }\n      }\n      \n      //return;\n    } else {\n      this.appUsersManager.forceUserOnline(fromId);\n    }\n\n    typing.timeout = ctx.setTimeout(cancelAction, 6000);\n    if(hasUser) {\n      this.rootScope.dispatchEvent('peer_typings', {peerId, typings});\n    }\n  };\n\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\n    const peerId = getPeerId(update.peer_id);\n    if(this.appPeersManager.isUser(peerId)) {\n      const userId = peerId.toUserId();\n      const userFull = this.usersFull[userId];\n      if(userFull) {\n        if(update.blocked) userFull.pFlags.blocked = true;\n        else delete userFull.pFlags.blocked;\n      }\n\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    }\n\n    this.rootScope.dispatchEvent('peer_block', {peerId, blocked: update.blocked});\n  };\n\n  public getPeerTypings(peerId: PeerId) {\n    return this.typingsInPeer[peerId];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { Awaited } from '../types';\n\nexport default function callbackifyAll<T extends readonly unknown[] | [], R extends any>(\n  values: T, \n  callback: (result: { -readonly [P in keyof T]: Awaited<T[P]> }) => R\n): PromiseLike<R> | R {\n  if(values.some((value) => value instanceof Promise)) {\n    return Promise.all(values).then(callback as any);\n  } else {\n    return callback(values as any);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport findAndSplice from \"../../helpers/array/findAndSplice\";\nimport assumeType from \"../../helpers/assumeType\";\nimport callbackify from \"../../helpers/callbackify\";\nimport callbackifyAll from \"../../helpers/callbackifyAll\";\nimport copy from \"../../helpers/object/copy\";\nimport { AvailableReaction, Message, MessagePeerReaction, MessagesAvailableReactions, Update, Updates } from \"../../layer\";\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\nimport { AppManager } from \"./manager\";\nimport getServerMessageId from \"./utils/messageId/getServerMessageId\";\nimport getPeerId from \"./utils/peers/getPeerId\";\n\nconst SAVE_DOC_KEYS = [\n  'static_icon' as const,\n  'appear_animation' as const,\n  'select_animation' as const,\n  'activate_animation' as const,\n  'effect_animation' as const,\n  'around_animation' as const,\n  'center_icon' as const\n];\n\nconst REFERENCE_CONTEXT: ReferenceContext = {\n  type: 'reactions'\n};\n\nexport class AppReactionsManager extends AppManager {\n  private availableReactions: AvailableReaction[];\n  private sendReactionPromises: Map<string, Promise<any>>;\n  private lastSendingTimes: Map<string, number>;\n\n  protected after() {\n    this.rootScope.addEventListener('language_change', () => {\n      this.availableReactions = undefined;\n      this.getAvailableReactions();\n    });\n\n    this.sendReactionPromises = new Map();\n    this.lastSendingTimes = new Map();\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        Promise.resolve(this.getAvailableReactions()).then(async(availableReactions) => {\n          for(const availableReaction of availableReactions) {\n            await Promise.all([\n              availableReaction.around_animation && this.apiFileManager.downloadMedia({media: availableReaction.around_animation}),\n              availableReaction.static_icon && this.apiFileManager.downloadMedia({media: availableReaction.static_icon}),\n              availableReaction.appear_animation && this.apiFileManager.downloadMedia({media: availableReaction.appear_animation}),\n              availableReaction.center_icon && this.apiFileManager.downloadMedia({media: availableReaction.center_icon})\n            ]);\n          }\n        });\n      }, 7.5e3);\n    });\n  }\n\n  public getAvailableReactions() {\n    if(this.availableReactions) return this.availableReactions;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAvailableReactions',\n      processResult: (messagesAvailableReactions) => {\n        assumeType<MessagesAvailableReactions.messagesAvailableReactions>(messagesAvailableReactions);\n\n        const availableReactions = this.availableReactions = messagesAvailableReactions.reactions;\n        for(const reaction of availableReactions) {\n          for(const key of SAVE_DOC_KEYS) {\n            if(!reaction[key]) {\n              continue;\n            }\n            \n            reaction[key] = this.appDocsManager.saveDoc(reaction[key], REFERENCE_CONTEXT);\n          }\n        }\n\n        return availableReactions;\n      },\n      params: {\n        hash: 0\n      }\n    });\n  }\n\n  public getActiveAvailableReactions() {\n    return callbackify(this.getAvailableReactions(), (availableReactions) => {\n      return availableReactions.filter((availableReaction) => !availableReaction.pFlags.inactive);\n    });\n  }\n\n  public getAvailableReactionsForPeer(peerId: PeerId) {\n    const activeAvailableReactions = this.getActiveAvailableReactions();\n    if(peerId.isUser()) {\n      return this.unshiftQuickReaction(activeAvailableReactions);\n    }\n\n    const chatFull = this.appProfileManager.getChatFull(peerId.toChatId());\n    return callbackifyAll([activeAvailableReactions, chatFull, this.getQuickReaction()], ([activeAvailableReactions, chatFull, quickReaction]) => {\n      const chatAvailableReactions = chatFull.available_reactions ?? [];\n\n      const filteredChatAvailableReactions = chatAvailableReactions.map((reaction) => {\n        return activeAvailableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n      }).filter(Boolean);\n\n      return this.unshiftQuickReactionInner(filteredChatAvailableReactions, quickReaction);\n    });\n  }\n\n  private unshiftQuickReactionInner(availableReactions: AvailableReaction.availableReaction[], quickReaction: AvailableReaction.availableReaction) {\n    const availableReaction = findAndSplice(availableReactions, availableReaction => availableReaction.reaction === quickReaction.reaction);\n    if(availableReaction) {\n      availableReactions.unshift(availableReaction);\n    }\n\n    return availableReactions;\n  }\n\n  private unshiftQuickReaction(\n    availableReactions: AvailableReaction.availableReaction[] | PromiseLike<AvailableReaction.availableReaction[]>, \n    quickReaction: ReturnType<AppReactionsManager['getQuickReaction']> = this.getQuickReaction()\n  ) {\n    return callbackifyAll([\n      availableReactions,\n      quickReaction\n    ], ([availableReactions, quickReaction]) => {\n      return this.unshiftQuickReactionInner(availableReactions, quickReaction);\n    });\n  }\n\n  public getAvailableReactionsByMessage(message: Message.message) {\n    if(!message) return [];\n    const peerId = (message.fwd_from?.channel_post && this.appPeersManager.isMegagroup(message.peerId) && message.fwdFromId) || message.peerId;\n    return this.getAvailableReactionsForPeer(peerId);\n  }\n\n  public isReactionActive(reaction: string) {\n    if(!this.availableReactions) return false;\n    return !!this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getQuickReaction() {\n    return callbackifyAll([\n      this.apiManager.getAppConfig(),\n      this.getAvailableReactions()\n    ], ([appConfig, availableReactions]) => {\n      return availableReactions.find((reaction) => reaction.reaction === appConfig.reactions_default);\n    });\n  }\n\n  public getReactionCached(reaction: string) {\n    return this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getReaction(reaction: string) {\n    return callbackify(this.getAvailableReactions(), () => {\n      return this.getReactionCached(reaction);\n    });\n  }\n\n  public getMessagesReactions(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessagesReactions',\n      params: {\n        id: mids.map((mid) => getServerMessageId(mid)),\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateMessageReactions') as Update.updateMessageReactions;\n        // return update.reactions;\n      }\n    });\n  }\n\n  public getMessageReactionsList(peerId: PeerId, mid: number, limit: number, reaction?: string, offset?: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessageReactionsList',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: getServerMessageId(mid),\n        limit,\n        reaction,\n        offset\n      },\n      processResult: (messageReactionsList) => {\n        this.appUsersManager.saveApiUsers(messageReactionsList.users);\n        return messageReactionsList;\n      }\n    });\n  }\n\n  public setDefaultReaction(reaction: string) {\n    return this.apiManager.invokeApi('messages.setDefaultReaction', {reaction}).then(async(value) => {\n      if(value) {\n        const appConfig = await this.apiManager.getAppConfig();\n        if(appConfig) {\n          appConfig.reactions_default = reaction;\n        }/*  else { // if no config or loading it - overwrite\n          this.apiManager.getAppConfig(true);\n        } */\n\n        this.rootScope.dispatchEvent('quick_reaction', reaction);\n      }\n\n      return value;\n    });\n  }\n\n  public sendReaction(message: Message.message, reaction?: string, onlyLocal?: boolean) {\n    const lastSendingTimeKey = message.peerId + '_' + message.mid;\n    const lastSendingTime = this.lastSendingTimes.get(lastSendingTimeKey);\n    if(lastSendingTime) {\n      return;\n    } else {\n      this.lastSendingTimes.set(lastSendingTimeKey, Date.now());\n      setTimeout(() => {\n        this.lastSendingTimes.delete(lastSendingTimeKey);\n      }, 333);\n    }\n\n    const {peerId, mid} = message;\n    const myPeerId = this.appPeersManager.peerId;\n\n    let reactions = onlyLocal ? message.reactions : copy(message.reactions);\n    let chosenReactionIdx = reactions ? reactions.results.findIndex((reactionCount) => reactionCount.pFlags.chosen) : -1;\n    let chosenReaction = chosenReactionIdx !== -1 && reactions.results[chosenReactionIdx];\n    if(chosenReaction) { // clear current reaction\n      --chosenReaction.count;\n      delete chosenReaction.pFlags.chosen;\n\n      if(reaction === chosenReaction.reaction) {\n        reaction = undefined;\n      }\n\n      if(!chosenReaction.count) {\n        reactions.results.splice(chosenReactionIdx, 1);\n      }/*  else {\n        insertInDescendSortedArray(reactions.results, chosenReaction, 'count', chosenReactionIdx);\n      } */\n\n      if(reactions.recent_reactions) {\n        findAndSplice(reactions.recent_reactions, (recentReaction) => getPeerId(recentReaction.peer_id) === myPeerId);\n      }\n\n      if(!reactions.results.length) {\n        reactions = undefined;\n      }\n    }\n\n    if(reaction) {\n      if(!reactions) {\n        reactions/*  = message.reactions */ = {\n          _: 'messageReactions',\n          results: [],\n          pFlags: {}\n        };\n\n        if(!this.appPeersManager.isBroadcast(message.peerId)) {\n          reactions.pFlags.can_see_list = true;\n        }\n      }\n\n      let reactionCountIdx = reactions.results.findIndex((reactionCount) => reactionCount.reaction === reaction);\n      let reactionCount = reactionCountIdx !== -1 && reactions.results[reactionCountIdx];\n      if(!reactionCount) {\n        reactionCount = {\n          _: 'reactionCount',\n          count: 0,\n          reaction,\n          pFlags: {}\n        };\n\n        reactionCountIdx = reactions.results.push(reactionCount) - 1;\n      }\n\n      ++reactionCount.count;\n      reactionCount.pFlags.chosen = true;\n\n      if(!reactions.recent_reactions && reactions.pFlags.can_see_list) {\n        reactions.recent_reactions = [];\n      }\n\n      if(reactions.recent_reactions) {\n        const userReaction: MessagePeerReaction = {\n          _: 'messagePeerReaction',\n          reaction,\n          peer_id: this.appPeersManager.getOutputPeer(myPeerId)\n        };\n\n        if(!this.appPeersManager.isMegagroup(peerId)) {\n          reactions.recent_reactions.push(userReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(-3);\n        } else {\n          reactions.recent_reactions.unshift(userReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(0, 3);\n        }\n      }\n\n      // insertInDescendSortedArray(reactions.results, reactionCount, 'count', reactionCountIdx);\n    }\n\n    const availableReactions = this.availableReactions;\n    if(reactions && availableReactions?.length) {\n      const indexes: Map<string, number> = new Map();\n      availableReactions.forEach((availableReaction, idx) => {\n        indexes.set(availableReaction.reaction, idx);\n      });\n\n      reactions.results.sort((a, b) => {\n        return (b.count - a.count) || (indexes.get(a.reaction) - indexes.get(b.reaction));\n      });\n    }\n\n    if(onlyLocal) {\n      message.reactions = reactions;\n      this.rootScope.dispatchEvent('messages_reactions', [{message, changedResults: []}]);\n      return Promise.resolve();\n    }\n\n    this.apiUpdatesManager.processLocalUpdate({\n      _: 'updateMessageReactions',\n      peer: message.peer_id,\n      msg_id: message.id,\n      reactions: reactions,\n      local: true\n    });\n\n    const promiseKey = [peerId, mid].join('-');\n    const msgId = getServerMessageId(mid);\n    const promise = this.apiManager.invokeApi('messages.sendReaction', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: msgId,\n      reaction\n    }).then((updates) => {\n      assumeType<Updates.updates>(updates);\n      \n      const editMessageUpdateIdx = updates.updates.findIndex((update) => update._ === 'updateEditMessage' || update._ === 'updateEditChannelMessage');\n      if(editMessageUpdateIdx !== -1) {\n        const editMessageUpdate = updates.updates[editMessageUpdateIdx] as Update.updateEditMessage | Update.updateEditChannelMessage;\n        updates.updates[editMessageUpdateIdx] = {\n          _: 'updateMessageReactions',\n          msg_id: msgId,\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          reactions: (editMessageUpdate.message as Message.message).reactions,\n          pts: editMessageUpdate.pts,\n          pts_count: editMessageUpdate.pts_count\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }).catch((err) => {\n      if(err.type === 'REACTION_INVALID' && this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReaction(message, chosenReaction?.reaction, true);\n      }\n    }).finally(() => {\n      if(this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReactionPromises.delete(promiseKey);\n      }\n    });\n    \n    this.sendReactionPromises.set(promiseKey, promise);\n    return promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { MyDocument } from './appDocsManager';\nimport { Document, InputFileLocation, InputStickerSet, MessagesAllStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered } from '../../layer';\nimport { Modify } from '../../types';\nimport AppStorage from '../storage';\nimport DATABASE_STATE from '../../config/databases/state';\nimport assumeType from '../../helpers/assumeType';\nimport fixBase64String from '../../helpers/fixBase64String';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport { AppManager } from './manager';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport ctx from '../../environment/ctx';\nimport { getEnvironment } from '../../environment/utils';\n\nconst CACHE_TIME = 3600e3;\n\nconst EMOJI_SET_LOCAL_ID = 'emoji';\nconst EMOJI_ANIMATIONS_SET_LOCAL_ID = 'emojiAnimations';\nconst LOCAL_IDS_SET = new Set([\n  EMOJI_SET_LOCAL_ID,\n  EMOJI_ANIMATIONS_SET_LOCAL_ID\n]);\n\n// let TEST_FILE_REFERENCE_REFRESH = true;\n\nexport type MyStickerSetInput = {\n  id: StickerSet.stickerSet['id'],\n  access_hash?: StickerSet.stickerSet['access_hash']\n};\n\nexport type MyMessagesStickerSet = MessagesStickerSet.messagesStickerSet;\n\nexport class AppStickersManager extends AppManager {\n  private storage = new AppStorage<Record<Long, MyMessagesStickerSet>, typeof DATABASE_STATE>(DATABASE_STATE, 'stickerSets');\n\n  private getStickerSetPromises: {[setId: Long]: Promise<MyMessagesStickerSet>};\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<Document[]>};\n\n  private greetingStickers: Document.document[];\n  private getGreetingStickersTimeout: number;\n  private getGreetingStickersPromise: Promise<void>;\n\n  private sounds: Record<string, MyDocument>;\n  private getAnimatedEmojiSoundsPromise: Promise<void>;\n  \n  protected after() {\n    this.getStickerSetPromises = {};\n    this.getStickersByEmoticonsPromises = {};\n    this.sounds = {};\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        this.getAnimatedEmojiStickerSet();\n      }, 1000);\n\n      if(!this.getGreetingStickersPromise && this.getGreetingStickersTimeout === undefined) {\n        this.getGreetingStickersTimeout = ctx.setTimeout(() => {\n          this.getGreetingStickersTimeout = undefined;\n          this.getGreetingSticker(true);\n        }, 5000);\n      }\n    });\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateNewStickerSet: (update) => {\n        const stickerSet = update.stickerset as MyMessagesStickerSet;\n        this.saveStickerSet(stickerSet, stickerSet.set.id);\n        this.rootScope.dispatchEvent('stickers_installed', stickerSet.set);\n      }\n    });\n  }\n\n  public getGreetingSticker(justPreload = false) {\n    if(this.getGreetingStickersTimeout) {\n      clearTimeout(this.getGreetingStickersTimeout);\n      this.getGreetingStickersTimeout = undefined;\n    }\n\n    if(!this.getGreetingStickersPromise) {\n      this.getGreetingStickersPromise = this.getStickersByEmoticon('👋⭐️', false).then((docs) => {\n        if(!docs.length) throw 'NO_STICKERS';\n        this.greetingStickers = docs.slice() as Document.document[];\n        this.greetingStickers.sort((a, b) => Math.random() - Math.random());\n      });\n    }\n    \n    return this.getGreetingStickersPromise.then(() => {\n      let doc: Document.document;\n      if(!justPreload) {\n        doc = this.greetingStickers.shift();\n        this.greetingStickers.push(doc);\n      }\n\n      this.apiFileManager.downloadMedia({media: this.greetingStickers[0]}); // preload next sticker\n\n      return doc;\n    });\n  }\n\n  public saveStickers(docs: Document[]) {\n    forEachReverse(docs, (doc, idx) => {\n      doc = this.appDocsManager.saveDoc(doc);\n\n      if(!doc) docs.splice(idx, 1);\n      else docs[idx] = doc;\n    });\n  }\n\n  public async getStickerSet(set: MyStickerSetInput, params: Partial<{\n    overwrite: boolean,\n    useCache: boolean,\n    saveById: boolean\n  }> = {}): Promise<MyMessagesStickerSet> {\n    const id = set.id;\n    if(this.getStickerSetPromises[id]) {\n      return this.getStickerSetPromises[id];\n    }\n\n    return this.getStickerSetPromises[id] = new Promise(async(resolve) => {\n      if(!params.overwrite) {\n        // const perf = performance.now();\n        const cachedSet = await this.storage.get(id);\n        if(cachedSet && cachedSet.documents?.length && ((Date.now() - cachedSet.refreshTime) < CACHE_TIME || params.useCache)) {\n          this.saveStickers(cachedSet.documents);\n          resolve(cachedSet);\n          delete this.getStickerSetPromises[id];\n          // console.log('get sticker set from cache time', id, performance.now() - perf);\n          return;\n        }\n      }\n\n      try {\n        const stickerSet = await this.apiManager.invokeApi('messages.getStickerSet', {\n          stickerset: this.getStickerSetInput(set),\n          hash: 0\n        }) as MyMessagesStickerSet;\n  \n        const saveById = params.saveById ? id : stickerSet.set.id;\n        this.saveStickerSet(stickerSet, saveById);\n  \n        resolve(stickerSet);\n      } catch(err) {\n        resolve(null);\n      }\n      \n      delete this.getStickerSetPromises[id];\n    });\n  }\n\n  public getAnimatedEmojiStickerSet() {\n    return Promise.all([\n      this.getStickerSet({id: EMOJI_SET_LOCAL_ID}, {saveById: true}),\n      this.getStickerSet({id: EMOJI_ANIMATIONS_SET_LOCAL_ID}, {saveById: true}),\n      this.getAnimatedEmojiSounds()\n    ]).then(([emoji, animations]) => {\n      return {emoji, animations};\n    });\n  }\n\n  public getAnimatedEmojiSounds(overwrite?: boolean) {\n    if(this.getAnimatedEmojiSoundsPromise && !overwrite) return this.getAnimatedEmojiSoundsPromise;\n    const promise = this.getAnimatedEmojiSoundsPromise = Promise.all([\n      this.apiManager.getAppConfig(overwrite),\n      this.apiManager.getConfig()\n    ]).then(([appConfig, config]) => {\n      if(this.getAnimatedEmojiSoundsPromise !== promise) {\n        return;\n      }\n\n      for(const emoji in appConfig.emojies_sounds) {\n        const sound = appConfig.emojies_sounds[emoji];\n        const bytesStr = atob(fixBase64String(sound.file_reference_base64, false));\n        const bytes = new Uint8Array(bytesStr.length);\n        for(let i = 0, length = bytes.length; i < length; ++i) {\n          bytes[i] = bytesStr[i].charCodeAt(0);\n        }\n\n        // if(TEST_FILE_REFERENCE_REFRESH) {\n        //   bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4] = 0;\n        //   sound.access_hash += '999';\n        // }\n        \n        const doc = this.appDocsManager.saveDoc({\n          _: 'document',\n          pFlags: {},\n          flags: 0,\n          id: sound.id,\n          access_hash: sound.access_hash,\n          attributes: [{\n            _: 'documentAttributeAudio',\n            duration: 1,\n            pFlags: {\n              voice: true\n            }\n          }],\n          date: 0,\n          dc_id: config.this_dc,\n          file_reference: bytes,\n          mime_type: 'audio/ogg',\n          // size: 101010 // test loading everytime\n        }, {\n          type: 'emojiesSounds'\n        });\n\n        this.sounds[emoji] = doc;\n      }\n\n      // if(TEST_FILE_REFERENCE_REFRESH) {\n      //   TEST_FILE_REFERENCE_REFRESH = false;\n      // }\n    });\n\n    return promise;\n  }\n\n  public async getRecentStickers(): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\n    stickers: Document[]\n  }>> {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getRecentStickers',\n      processResult: (res) => {\n        assumeType<MessagesRecentStickers.messagesRecentStickers>(res);\n\n        this.saveStickers(res.stickers);\n        return res;\n      }\n    });\n\n    return res;\n  }\n\n  private cleanEmoji(emoji: string) {\n    return emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\n  }\n\n  public getAnimatedEmojiSticker(emoji: string, isAnimation?: boolean) {\n    const id = isAnimation ? EMOJI_ANIMATIONS_SET_LOCAL_ID : EMOJI_SET_LOCAL_ID;\n    const stickerSet = this.storage.getFromCache(id);\n    // const stickerSet = await this.getStickerSet({id});\n    if(!stickerSet || !stickerSet.documents) return;\n\n    if(isAnimation) {\n      if(['🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎'].includes(emoji)) {\n        emoji = '❤️';\n      }\n    }\n\n    emoji = this.cleanEmoji(emoji);\n    const pack = stickerSet.packs.find((p) => p.emoticon === emoji);\n    return pack ? this.appDocsManager.getDoc(pack.documents[0]) : undefined;\n  }\n\n  public getAnimatedEmojiSoundDocument(emoji: string) {\n    return this.sounds[this.cleanEmoji(emoji)];\n  }\n\n  public preloadAnimatedEmojiSticker(emoji: string) {\n    const preloadEmojiPromise = this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji);\n    });\n    \n    return Promise.all([\n      preloadEmojiPromise,\n      this.preloadAnimatedEmojiStickerAnimation(emoji)\n    ]).then(([doc, a]) => {\n      return {\n        doc: doc,\n        animation: a?.doc,\n        sound: a?.sound\n      };\n    });\n  }\n\n  public preloadAnimatedEmojiStickerAnimation(emoji: string) {\n    return this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji, true);\n    }).then((doc) => {\n      if(!doc) {\n        return;\n      }\n      \n      const sound = this.getAnimatedEmojiSoundDocument(emoji);\n      return Promise.all([\n        this.apiFileManager.downloadMedia({media: doc}),\n        sound ? this.apiFileManager.downloadMedia({media: sound}) : undefined\n      ]).then(() => {\n        return {doc, sound};\n      });\n    });\n  }\n  \n  public saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: DocId) {\n    //console.log('stickers save set', res);w\n\n    const newSet: MessagesStickerSet = {\n      _: 'messages.stickerSet',\n      set: res.set,\n      packs: res.packs,\n      documents: res.documents as Document[]\n    };\n    \n    let stickerSet = this.storage.getFromCache(id);\n    if(stickerSet) {\n      Object.assign(stickerSet, newSet);\n    } else {\n      stickerSet = this.storage.setToCache(id, newSet);\n    }\n\n    this.saveStickers(res.documents);\n    \n    //console.log('stickers wrote', this.stickerSets);\n    const needSave = stickerSet.set.installed_date || LOCAL_IDS_SET.has(id as any);\n    stickerSet.refreshTime = Date.now();\n    this.storage.set({[id]: stickerSet}, !needSave);\n  }\n\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet) {\n    const thumb = stickerSet.thumbs.find((thumb) => thumb._ === 'photoSize') as PhotoSize.photoSize;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: InputFileLocation.inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      thumb_version: stickerSet.thumb_version\n    };\n\n    return {dcId, location: input, size: thumb.size, mimeType: isAnimated ? 'application/x-tgsticker' : 'image/webp'};\n  }\n\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\n    const thumb = stickerSet.thumb;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      volume_id: thumb.location.volume_id,\n      local_id: thumb.location.local_id\n    };\n\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\n    return url;\n\n    //return promise;\n  } */\n\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\n    if(set.id === EMOJI_SET_LOCAL_ID) {\n      return {\n        _: 'inputStickerSetAnimatedEmoji'\n      };\n    } else if(set.id === EMOJI_ANIMATIONS_SET_LOCAL_ID) {\n      return {\n        _: 'inputStickerSetAnimatedEmojiAnimations'\n      };\n    } else if(!set.access_hash) {\n      return {\n        _: 'inputStickerSetShortName',\n        short_name: '' + set.id\n      };\n    } else {\n      return {\n        _: 'inputStickerSetID',\n        id: set.id,\n        access_hash: set.access_hash\n      };\n    }\n  }\n\n  public async getFeaturedStickers() {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getFeaturedStickers',\n      processResult: (res) => {\n        assumeType<MessagesFeaturedStickers.messagesFeaturedStickers>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    return res.sets;\n  }\n\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\n    if(set.installed_date) {\n      const res = await this.apiManager.invokeApi('messages.uninstallStickerSet', {\n        stickerset: this.getStickerSetInput(set)\n      });\n\n      if(res) {\n        delete set.installed_date;\n        this.rootScope.dispatchEvent('stickers_deleted', set);\n        this.storage.delete(set.id, true);\n        return true;\n      }\n    } else {\n      const res = await this.apiManager.invokeApi('messages.installStickerSet', {\n        stickerset: this.getStickerSetInput(set),\n        archived: false\n      });\n\n      if(res) {\n        set.installed_date = Date.now() / 1000 | 0;\n        this.rootScope.dispatchEvent('stickers_installed', set);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public async searchStickerSets(query: string, excludeFeatured = true) {\n    const flags = excludeFeatured ? 1 : 0;\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.searchStickerSets', \n      params: {\n        flags,\n        exclude_featured: excludeFeatured || undefined,\n        q: query\n      },\n      processResult: (res) => {\n        assumeType<MessagesFoundStickerSets.messagesFoundStickerSets>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    const foundSaved: StickerSetCovered[] = [];\n    const cache = this.storage.getCache();\n    for(let id in cache) {\n      const {set} = cache[id];\n\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find((c) => c.set.id === set.id)) {\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\n      }\n    }\n\n    return res.sets.concat(foundSaved);\n  }\n\n  public getAllStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getAllStickers', \n      processResult: (allStickers) => {\n        assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\n\n        forEachReverse(allStickers.sets, (stickerSet, idx, arr) => {\n          if(stickerSet.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        return allStickers;\n      }\n    });\n  }\n\n  public preloadStickerSets() {\n    return this.getAllStickers().then((allStickers) => {\n      return Promise.all((allStickers as MessagesAllStickers.messagesAllStickers).sets.map((set) => this.getStickerSet(set, {useCache: true})));\n    });\n  }\n\n  // TODO: detect \"🤷\" by \"🤷‍♂️\"\n  public getStickersByEmoticon(emoticon: string, includeOurStickers = true) {\n    emoticon = fixEmoji(emoticon);\n    if(this.getStickersByEmoticonsPromises[emoticon]) return this.getStickersByEmoticonsPromises[emoticon];\n\n    return this.getStickersByEmoticonsPromises[emoticon] = Promise.all([\n      this.apiManager.invokeApiHashable({\n        method: 'messages.getStickers', \n        params: {\n          emoticon\n        },\n        processResult: (stickers) => stickers\n      }),\n      includeOurStickers ? this.preloadStickerSets() : [],\n      includeOurStickers ? this.getRecentStickers() : undefined\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\n      const foundStickers = (messagesStickers as MessagesStickers.messagesStickers).stickers.map((sticker) => this.appDocsManager.saveDoc(sticker));\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\n\n      //console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\n\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\n        for(const pack of packs) {\n          const packEmoticon = fixEmoji(pack.emoticon);\n          if(packEmoticon.includes(emoticon)) {\n            for(const docId of pack.documents) {\n              const doc = this.appDocsManager.getDoc(docId);\n              (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\n            }\n          }\n        }\n      };\n\n      if(recentStickers) {\n        iteratePacks(recentStickers.packs);\n        const stickers = recentStickers.stickers;\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          s.sort((a, b) => stickers.indexOf(a) - stickers.indexOf(b));\n        });\n      }\n\n      for(const set of installedSets) {\n        iteratePacks(set.packs);\n      }\n\n      /* const entities = parseEntities(emoticon);\n      if(entities.length === 1) {\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          forEachReverse(s, (doc, idx) => {\n            const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n            if(docEmoticon !== emoticon) {\n              s.splice(idx, 1);\n            }\n          });\n        });\n      } */\n\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter((doc) => !doc.animated) */;\n\n      forEachReverse(stickers, (sticker, idx, arr) => {\n        if(sticker.sticker === 3 && !getEnvironment().IS_WEBM_SUPPORTED) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      return stickers;\n    });\n  }\n\n  public pushRecentSticker(doc: MyDocument) {\n    const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n    for(const emoticon in this.getStickersByEmoticonsPromises) {\n      const promise = this.getStickersByEmoticonsPromises[emoticon];\n      promise.then((stickers) => {\n        const _doc = findAndSplice(stickers, _doc => _doc.id === doc.id);\n        if(_doc) {\n          stickers.unshift(_doc);\n        } else if(emoticon.includes(docEmoticon)) {\n          stickers.unshift(doc);\n        }\n      });\n    }\n  }\n}\n","export default function fixBase64String(str: string, toUrl: boolean) {\n  if(toUrl) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n  } else {\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport default function cleanUsername(username: string) {\r\n  return username && username.toLowerCase() || '';\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport filterUnique from \"../../helpers/array/filterUnique\";\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\nimport deferredPromise, { CancellablePromise } from \"../../helpers/cancellablePromise\";\nimport cleanSearchText from \"../../helpers/cleanSearchText\";\nimport cleanUsername from \"../../helpers/cleanUsername\";\nimport tsNow from \"../../helpers/tsNow\";\nimport isObject from \"../../helpers/object/isObject\";\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\nimport { isRestricted } from \"../../helpers/restrictions\";\nimport { Chat, ContactsResolvedPeer, InputContact, InputGeoPoint, InputMedia, InputPeer, InputUser, User as MTUser, UserProfilePhoto, UserStatus } from \"../../layer\";\nimport parseEntities from \"../richTextProcessor/parseEntities\";\nimport wrapUrl from \"../richTextProcessor/wrapUrl\";\nimport SearchIndex from \"../searchIndex\";\nimport { AppManager } from \"./manager\";\nimport getPeerId from \"./utils/peers/getPeerId\";\nimport canSendToUser from \"./utils/users/canSendToUser\";\nimport { AppStoragesManager } from \"./appStoragesManager\";\n\nexport type User = MTUser.user;\nexport type TopPeerType = 'correspondents' | 'bots_inline';\nexport type MyTopPeer = {id: PeerId, rating: number};\n\nexport class AppUsersManager extends AppManager {\n  private storage: AppStoragesManager['storages']['users'];\n  \n  private users: {[userId: UserId]: User};\n  private usernames: {[username: string]: UserId};\n  private contactsIndex: SearchIndex<UserId>;\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\n  private contactsList: Set<UserId>;\n  private updatedContactsList: boolean;\n  \n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\n\n  protected after() {\n    this.clear(true);\n\n    setInterval(this.updateUsersStatuses, 60000);\n\n    this.rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateUserStatus: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          user.status = update.status;\n          if(user.status) {\n            if('expires' in user.status) {\n              user.status.expires -= this.timeManager.getServerTimeOffset();\n            }\n\n            if('was_online' in user.status) {\n              user.status.was_online -= this.timeManager.getServerTimeOffset();\n            }\n          }\n\n          //user.sortStatus = this.getUserStatusForSort(user.status);\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.setUserToStateIfNeeded(user);\n        } //////else console.warn('No user by id:', userId);\n      },\n\n      updateUserPhoto: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto)?.photo_id) {\n            return;\n          }\n\n          this.forceUserOnline(userId, update.date);\n\n          if(update.photo._ === 'userProfilePhotoEmpty') {\n            delete user.photo;\n          } else {\n            user.photo = safeReplaceObject(user.photo, update.photo);\n          }\n\n          this.setUserToStateIfNeeded(user);\n\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.rootScope.dispatchEvent('avatar_update', userId.toPeerId());\n        } else console.warn('No user by id:', userId);\n      },\n\n      updateUserName: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n          \n          this.saveApiUser({\n            ...user, \n            first_name: update.first_name,\n            last_name: update.last_name,\n            username: update.username\n          }, true);\n        }\n      }\n    });\n\n    /* case 'updateContactLink':\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\n    break; */\n\n    this.rootScope.addEventListener('language_change', (e) => {\n      const userId = this.getSelf().id;\n      this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('users')\n    ]).then(([state, {results: users, storage}]) => {\n      this.storage = storage;\n      \n      if(users.length) {\n        for(let i = 0, length = users.length; i < length; ++i) {\n          const user = users[i];\n          if(user) {\n            this.users[user.id] = user;\n            this.setUserNameToCache(user);\n\n            if(state.contactsListCachedTime && (user.pFlags.contact || user.pFlags.mutual_contact)) {\n              this.pushContact(user.id);\n\n              if(!this.contactsFillPromise) {\n                this.contactsFillPromise = deferredPromise();\n                this.contactsFillPromise.resolve(this.contactsList);\n              }\n            }\n          }\n        }\n      }\n\n      // const contactsList = state.contactsList;\n      // if(Array.isArray(contactsList)) {\n      //   contactsList.forEach((userId) => {\n      //     this.pushContact(userId);\n      //   });\n\n      //   if(contactsList.length) {\n      //     this.contactsFillPromise = deferredPromise();\n      //     this.contactsFillPromise.resolve(this.contactsList);\n      //   }\n      // }\n\n      const recentSearch = state.recentSearch || [];\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\n        this.peersStorage.requestPeer(recentSearch[i], 'recentSearch');\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n        \n        const userId = peerId.toUserId();\n        if(!this.storage.getFromCache(userId)) {\n          this.storage.set({\n            [userId]: this.getUser(userId)\n          });\n        }\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(this.storage.getFromCache(userId)) {\n          this.storage.delete(userId);\n        }\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const userId in this.users) {\n        // const userId = +userId;\n        if(!userId) continue;\n        const peerId = userId.toPeerId();\n        if(!this.peersStorage.isPeerNeeded(peerId)) {\n          const user = this.users[userId];\n          if(user.username) {\n            delete this.usernames[cleanUsername(user.username)];\n          }\n\n          this.storage.delete(userId);\n          delete this.users[userId];\n        }\n      }\n    } else {\n      this.users = {};\n      this.usernames = {};\n    }\n    \n    this.getTopPeersPromises = {};\n    this.contactsIndex = this.createSearchIndex();\n    this.contactsFillPromise = undefined;\n    this.contactsList = new Set();\n    this.updatedContactsList = false;\n  };\n\n  public get userId() {\n    return this.rootScope.myId.toUserId();\n  }\n\n  private onContactsModified(fromServer?: boolean) {\n    // const contactsList = [...this.contactsList];\n    // this.appStateManager.pushToState('contactsList', contactsList);\n\n    if(fromServer) {\n      this.appStateManager.pushToState('contactsListCachedTime', tsNow(true));\n    }\n  }\n\n  public pushRecentSearch(peerId: PeerId) {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      if(recentSearch[0] !== peerId) {\n        indexOfAndSplice(recentSearch, peerId);\n        recentSearch.unshift(peerId);\n        if(recentSearch.length > 20) {\n          recentSearch.length = 20;\n        }\n\n        this.appStateManager.pushToState('recentSearch', recentSearch);\n        for(const peerId of recentSearch) {\n          this.peersStorage.requestPeer(peerId, 'recentSearch');\n        }\n      }\n    });\n  }\n\n  public clearRecentSearch() {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      for(const peerId of recentSearch) {\n        this.peersStorage.releasePeer(peerId, 'recentSearch');\n      }\n\n      recentSearch.length = 0;\n      this.appStateManager.pushToState('recentSearch', recentSearch);\n    });\n  }\n\n  public fillContacts() {\n    if(this.contactsFillPromise && this.updatedContactsList) {\n      return {\n        cached: this.contactsFillPromise.isFulfilled,\n        promise: this.contactsFillPromise\n      };\n    }\n\n    this.updatedContactsList = true;\n\n    const promise = deferredPromise<Set<UserId>>();\n    this.apiManager.invokeApi('contacts.getContacts').then((result) => {\n      if(result._ === 'contacts.contacts') {\n        this.contactsList.clear();\n      \n        this.saveApiUsers(result.users);\n\n        result.contacts.forEach((contact) => {\n          this.pushContact(contact.user_id);\n        });\n\n        this.onContactsModified(true);\n\n        this.contactsFillPromise = promise;\n      }\n\n      promise.resolve(this.contactsList);\n    }, () => {\n      this.updatedContactsList = false;\n    });\n\n    return {\n      cached: this.contactsFillPromise?.isFulfilled,\n      promise: this.contactsFillPromise || (this.contactsFillPromise = promise)\n    };\n  }\n\n  public resolveUsername(username: string): Promise<Chat | User> | Chat | User {\n    if(username[0] === '@') {\n      username = username.slice(1);\n    }\n\n    username = username.toLowerCase();\n    const userId = this.usernames[username];\n    if(userId) {\n      return this.users[userId];\n    }\n\n    return this.apiManager.invokeApi('contacts.resolveUsername', {username}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer);\n    });\n  }\n\n  private processResolvedPeer(resolvedPeer: ContactsResolvedPeer.contactsResolvedPeer) {\n    this.saveApiUsers(resolvedPeer.users);\n    this.appChatsManager.saveApiChats(resolvedPeer.chats);\n\n    return this.appPeersManager.getPeer(getPeerId(resolvedPeer.peer)) as Chat | User;\n  }\n\n  public resolvePhone(phone: string) {\n    return this.apiManager.invokeApi('contacts.resolvePhone', {phone}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer) as User;\n    });\n  }\n\n  private pushContact(id: UserId) {\n    this.contactsList.add(id);\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\n    this.peersStorage.requestPeer(id.toPeerId(), 'contact');\n  }\n\n  private popContact(id: UserId) {\n    this.contactsList.delete(id);\n    this.contactsIndex.indexObject(id, ''); // delete search index\n    this.peersStorage.releasePeer(id.toPeerId(), 'contact');\n  }\n\n  public getUserSearchText(id: UserId) {\n    const user = this.users[id];\n    if(!user) {\n      return '';\n    }\n\n    const arr: string[] = [\n      user.first_name,\n      user.last_name,\n      user.phone,\n      user.username,\n      // user.pFlags.self ? I18n.format('SavedMessages', true) : '',\n      user.pFlags.self ? 'Saved Messages' : ''\n    ];\n\n    return arr.filter(Boolean).join(' ');\n  }\n\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' = 'name') {\n    return this.fillContacts().promise.then((_contactsList) => {\n      let contactsList = [..._contactsList];\n      if(query) {\n        const results = this.contactsIndex.search(query);\n        const filteredContactsList = [...contactsList].filter((id) => results.has(id));\n\n        contactsList = filteredContactsList;\n      }\n\n      if(sortBy === 'name') {\n        contactsList.sort((userId1, userId2) => {\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\n          return sortName1.localeCompare(sortName2);\n        });\n      } else if(sortBy === 'online') {\n        contactsList.sort((userId1, userId2) => {\n          const status1 = this.getUserStatusForSort(this.getUser(userId1).status);\n          const status2 = this.getUserStatusForSort(this.getUser(userId2).status);\n          return status2 - status1;\n        });\n      }\n\n      const myUserId = this.userId;\n      indexOfAndSplice(contactsList, myUserId);\n      if(includeSaved) {\n        if(this.testSelfSearch(query)) {\n          contactsList.unshift(myUserId);\n        }\n      }\n\n      return contactsList;\n    });\n  }\n\n  public getContactsPeerIds(\n    query?: Parameters<AppUsersManager['getContacts']>[0], \n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1], \n    sortBy?: Parameters<AppUsersManager['getContacts']>[2]\n  ) {\n    return this.getContacts(query, includeSaved, sortBy).then((userIds) => {\n      return userIds.map((userId) => userId.toPeerId(false));\n    });\n  }\n\n  public toggleBlock(peerId: PeerId, block: boolean) {\n    return this.apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\n      id: this.appPeersManager.getInputPeerById(peerId)\n    }).then((value) => {\n      if(value) {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updatePeerBlocked',\n          peer_id: this.appPeersManager.getOutputPeer(peerId),\n          blocked: block\n        });\n      }\n\n      return value;\n    });\n  }\n\n  public testSelfSearch(query: string) {\n    const user = this.getSelf();\n    const index = this.createSearchIndex();\n    index.indexObject(user.id, this.getUserSearchText(user.id));\n    return index.search(query).has(user.id);\n  }\n\n  private createSearchIndex() {\n    return new SearchIndex<UserId>({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n  }\n\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\n    if((apiUsers as any).saved) return;\n    (apiUsers as any).saved = true;\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\n  }\n\n  private setUserNameToCache(user: MTUser.user, oldUser?: MTUser.user) {\n    if(!oldUser || oldUser.username !== user.username) {\n      if(oldUser?.username) {\n        const oldSearchUsername = cleanUsername(oldUser.username);\n        delete this.usernames[oldSearchUsername];\n      }\n\n      if(user.username) {\n        const searchUsername = cleanUsername(user.username);\n        this.usernames[searchUsername] = user.id;\n      }\n    }\n  }\n\n  public saveApiUser(user: MTUser, override?: boolean) {\n    if(user._ === 'userEmpty') return;\n\n    const userId = user.id;\n    const oldUser = this.users[userId];\n\n    // ! commented block can affect performance !\n    // if(oldUser && !override) {\n    //   console.log('saveApiUser same');\n    //   return;\n    // }\n\n    if(user.pFlags === undefined) {\n      user.pFlags = {};\n    }\n\n    if(user.pFlags.min && oldUser !== undefined) {\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\n\n    this.setUserNameToCache(user, oldUser);\n\n    if(!oldUser \n      || oldUser.sortName === undefined \n      || oldUser.first_name !== user.first_name \n      || oldUser.last_name !== user.last_name) {\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);\n    } else {\n      user.sortName = oldUser.sortName;\n    }\n\n    if(user.status) {\n      if((user.status as UserStatus.userStatusOnline).expires) {\n        (user.status as UserStatus.userStatusOnline).expires -= this.timeManager.getServerTimeOffset();\n      }\n\n      if((user.status as UserStatus.userStatusOffline).was_online) {\n        (user.status as UserStatus.userStatusOffline).was_online -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    //user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\n\n    let changedPhoto = false, changedTitle = false;\n    if(oldUser === undefined) {\n      this.users[userId] = user;\n    } else {\n      if(user.first_name !== oldUser.first_name \n        || user.last_name !== oldUser.last_name \n        || user.username !== oldUser.username) {\n        changedTitle = true;\n      }\n\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      if(oldPhotoId !== newPhotoId) {\n        changedPhoto = true;\n      }\n\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\n        \n      } */\n\n      const wasContact = !!oldUser.pFlags.contact;\n      const newContact = !!user.pFlags.contact;\n\n      safeReplaceObject(oldUser, user);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      if(wasContact !== newContact) {\n        this.onContactUpdated(userId, newContact, wasContact);\n      }\n    }\n\n    if(changedPhoto) {\n      this.rootScope.dispatchEvent('avatar_update', user.id.toPeerId());\n    }\n\n    if(changedTitle) {\n      this.rootScope.dispatchEvent('peer_title_edit', user.id.toPeerId());\n    }\n\n    this.setUserToStateIfNeeded(user);\n  }\n\n  private setUserToStateIfNeeded(user: User) {\n    if(this.peersStorage.isPeerNeeded(user.id.toPeerId())) {\n      this.storage.set({\n        [user.id]: user\n      });\n    }\n  }\n\n  public isUserOnlineVisible(id: UserId) {\n    return this.getUserStatusForSort(id) > 3;\n  }\n\n  public getUserStatusForSort(status: User['status'] | UserId) {\n    if(typeof(status) !== 'object') {\n      status = this.getUser(status).status;\n    }\n\n    if(status) {\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\n      if(expires) {\n        return expires;\n      }\n\n      /* const timeNow = tsNow(true);\n      switch(status._) {\n        case 'userStatusRecently':\n          return timeNow - 86400 * 3;\n        case 'userStatusLastWeek':\n          return timeNow - 86400 * 7;\n        case 'userStatusLastMonth':\n          return timeNow - 86400 * 30;\n      } */\n      switch(status._) {\n        case 'userStatusRecently':\n          return 3;\n        case 'userStatusLastWeek':\n          return 2;\n        case 'userStatusLastMonth':\n          return 1;\n      }\n    }\n\n    return 0;\n  }\n\n  public getUser(id: User | UserId) {\n    if(isObject<User>(id)) {\n      return id;\n    }\n\n    return this.users[id] || {_: 'userEmpty', id, pFlags: {deleted: true}, access_hash: ''} as any as User;\n  }\n\n  public getSelf() {\n    return this.getUser(this.userId);\n  }\n\n  public isBot(id: UserId) {\n    return this.users[id] && !!this.users[id].pFlags.bot;\n  }\n\n  public isContact(id: UserId) {\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\n  }\n  \n  public isRegularUser(id: UserId) {\n    const user = this.users[id];\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\n  }\n\n  public isNonContactUser(id: UserId) {\n    return this.isRegularUser(id) && !this.isContact(id) && id !== this.userId;\n  }\n\n  public hasUser(id: UserId, allowMin?: boolean) {\n    const user = this.users[id];\n    return isObject(user) && (allowMin || !user.pFlags.min);\n  }\n\n  public getUserPhoto(id: UserId) {\n    const user = this.getUser(id);\n\n    return user && user.photo || {\n      _: 'userProfilePhotoEmpty'\n    };\n  }\n\n  public getUserString(id: UserId) {\n    const user = this.getUser(id);\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\n  }\n\n  public getUserInput(id: UserId): InputUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputUserSelf'};\n    }\n\n    return {\n      _: 'inputUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputPeerSelf'};\n    }\n\n    return {\n      _: 'inputPeerUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\n    const user = this.getUser(id);\n\n    return {\n      _: 'inputMediaContact',\n      first_name: user.first_name,\n      last_name: user.last_name,\n      phone_number: user.phone,\n      vcard: '',\n      user_id: id\n    };\n  }\n\n  private updateUsersStatuses = () => {\n    const timestampNow = tsNow(true);\n    for(const i in this.users) {\n      const user = this.users[i];\n      this.updateUserStatus(user, timestampNow);\n    }\n  };\n\n  private updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\n    if(user.status &&\n      user.status._ === 'userStatusOnline' &&\n      user.status.expires < timestampNow) {\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\n      this.rootScope.dispatchEvent('user_update', user.id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\n    if(this.isBot(id)) {\n      return;\n    }\n\n    const timestamp = tsNow(true);\n    const onlineTimeFor = 60;\n    if(eventTimestamp) {\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\n        return;\n      }\n    } else if(this.apiUpdatesManager.updatesState.syncLoading) {\n      return;\n    }\n\n    const user = this.getUser(id);\n    if(user?.status &&\n      user.status._ !== 'userStatusOnline' &&\n      user.status._ !== 'userStatusEmpty' &&\n      !user.pFlags.support &&\n      !user.pFlags.deleted) {\n\n      user.status = {\n        _: 'userStatusOnline',\n        expires: timestamp + onlineTimeFor\n      };\n      \n      //user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public importContact(first_name: string, last_name: string, phone: string) {\n    return this.importContacts([{\n      first_name,\n      last_name,\n      phones: [phone]\n    }]).then((userIds) => {\n      if(!userIds.length) {\n        const error = new Error();\n        (error as any).type = 'NO_USER';\n        throw error;\n      }\n\n      return userIds[0];\n    });\n  }\n\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\n    const inputContacts: InputContact[] = [];\n\n    for(let i = 0; i < contacts.length; ++i) {\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\n        inputContacts.push({\n          _: 'inputPhoneContact',\n          client_id: (i << 16 | j).toString(10),\n          phone: contacts[i].phones[j],\n          first_name: contacts[i].first_name,\n          last_name: contacts[i].last_name\n        });\n      }\n    }\n\n    return this.apiManager.invokeApi('contacts.importContacts', {\n      contacts: inputContacts\n    }).then((importedContactsResult) => {\n      this.saveApiUsers(importedContactsResult.users);\n\n      const userIds = importedContactsResult.imported.map((importedContact) => {\n        this.onContactUpdated(importedContact.user_id, true);\n        return importedContact.user_id;\n      });\n\n      return userIds;\n    });\n  }\n\n  public getTopPeers(type: TopPeerType) {\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\n\n    return this.getTopPeersPromises[type] = this.appStateManager.getState().then((state) => {\n      const cached = state.topPeersCache[type];\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) {\n        return cached.peers;\n      }\n\n      return this.apiManager.invokeApi('contacts.getTopPeers', {\n        [type]: true,\n        offset: 0,\n        limit: 15,\n        hash: '0'\n      }).then((result) => {\n        let topPeers: MyTopPeer[] = [];\n        if(result._ === 'contacts.topPeers') {\n          //console.log(result);\n          this.saveApiUsers(result.users);\n          this.appChatsManager.saveApiChats(result.chats);\n\n          if(result.categories.length) {\n            topPeers = result.categories[0].peers.map((topPeer) => {\n              const peerId = getPeerId(topPeer.peer);\n              this.peersStorage.requestPeer(peerId, 'topPeer');\n              return {id: peerId, rating: topPeer.rating};\n            });\n          }\n        }\n  \n        state.topPeersCache[type] = {\n          peers: topPeers,\n          cachedTime: Date.now()\n        };\n        this.appStateManager.pushToState('topPeersCache', state.topPeersCache);\n  \n        return topPeers;\n      });\n    });\n  }\n\n  public getBlocked(offset = 0, limit = 0) {\n    return this.apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then((contactsBlocked) => {\n      this.saveApiUsers(contactsBlocked.users);\n      this.appChatsManager.saveApiChats(contactsBlocked.chats);\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\n\n      const peerIds: PeerId[] = contactsBlocked.users.map((u) => u.id.toPeerId()).concat(contactsBlocked.chats.map((c) => c.id.toPeerId(true)));\n\n      return {count, peerIds};\n    });\n  }\n\n  public getLocated(\n    lat: number, \n    long: number,\n    accuracy_radius: number,\n    background: boolean = false,\n    self_expires: number = 0\n  ) {\n    const geo_point: InputGeoPoint = {\n      _: 'inputGeoPoint',\n      lat,\n      long,\n      accuracy_radius\n    };\n\n    return this.apiManager.invokeApi('contacts.getLocated', {\n      geo_point, \n      background\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      return updates;\n    });\n  }\n\n  /* public searchContacts(query: string, limit = 20) {\n    return Promise.all([\n      this.getContacts(query),\n      apiManager.invokeApi('contacts.search', {\n        q: query,\n        limit\n      })\n    ]).then((results) => {\n      const [myContacts, peers] = results;\n\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      // * contacts.search returns duplicates in my_results\n      const myResults = new Set(myContacts.concat(peers.my_results.map((p) => appPeersManager.getPeerID(p))));\n\n      const out = {\n        my_results: [...myResults].slice(0, limit),\n        results: peers.results.map((p) => appPeersManager.getPeerID(p))\n      };\n\n      return out;\n    });\n  } */\n  public searchContacts(query: string, limit = 20) {\n    // handle 't.me/username' as 'username'\n    const entities = parseEntities(query);\n    if(entities.length && entities[0].length === query.trim().length && entities[0]._ === 'messageEntityUrl') {\n      try {\n        const url = new URL(wrapUrl(query).url);\n        const path = url.pathname.slice(1);\n        if(path) {\n          query = path;\n        }\n      } catch(err) {}\n    }\n\n    return this.apiManager.invokeApiCacheable('contacts.search', {\n      q: query,\n      limit\n    }, {cacheSeconds: 60}).then((peers) => {\n      this.saveApiUsers(peers.users);\n      this.appChatsManager.saveApiChats(peers.chats);\n\n      const out = {\n        my_results: filterUnique(peers.my_results.map((p) => getPeerId(p))), // ! contacts.search returns duplicates in my_results\n        results: peers.results.map((p) => getPeerId(p))\n      };\n\n      return out;\n    });\n  }\n\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\n    if(isContact !== curIsContact) {\n      if(isContact) {\n        this.pushContact(userId);\n      } else {\n        this.popContact(userId);\n      }\n\n      this.onContactsModified();\n\n      this.rootScope.dispatchEvent('contacts_update', userId);\n    }\n  }\n\n  public updateUsername(username: string) {\n    return this.apiManager.invokeApi('account.updateUsername', {\n      username\n    }).then((user) => {\n      this.saveApiUser(user);\n    });\n  }\n\n  public setUserStatus(userId: UserId, offline: boolean) {\n    if(this.isBot(userId)) {\n      return;\n    }\n\n    const user = this.users[userId];\n    if(user) {\n      const status: UserStatus = offline ? {\n        _: 'userStatusOffline',\n        was_online: tsNow(true)\n      } : {\n        _: 'userStatusOnline',\n        expires: tsNow(true) + 50\n      };\n\n      user.status = status;\n      //user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public updateMyOnlineStatus(offline: boolean) {\n    this.setUserStatus(this.getSelf().id, offline);\n    return this.apiManager.invokeApiSingle('account.updateStatus', {offline});\n  }\n\n  public addContact(userId: UserId, first_name: string, last_name: string, phone: string, showPhone?: true) {\n    /* if(!userId) {\n      return this.importContacts([{\n        first_name,\n        last_name,\n        phones: [phone]\n      }]);\n    } */\n\n    return this.apiManager.invokeApi('contacts.addContact', {\n      id: this.getUserInput(userId),\n      first_name,\n      last_name,\n      phone,\n      add_phone_privacy_exception: showPhone\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      this.onContactUpdated(userId, true);\n    });\n  }\n\n  public deleteContacts(userIds: UserId[]) {\n    return this.apiManager.invokeApi('contacts.deleteContacts', {\n      id: userIds.map((userId) => this.getUserInput(userId))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      userIds.forEach((userId) => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  }\n\n  public isRestricted(userId: UserId) {\n    const user: MTUser.user = this.getUser(userId);\n    const restrictionReasons = user.restriction_reason;\n\n    return !!(user.pFlags.restricted && restrictionReasons && isRestricted(restrictionReasons));\n  }\n\n  public checkUsername(username: string) {\n    return this.apiManager.invokeApi('account.checkUsername', {username});\n  }\n\n  public canSendToUser(userId: UserId) {\n    return canSendToUser(this.getUser(userId));\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { ReferenceContext } from \"../mtproto/referenceDatabase\";\r\nimport { WebPage } from \"../../layer\";\r\nimport safeReplaceObject from \"../../helpers/object/safeReplaceObject\";\r\nimport { AppManager } from \"./manager\";\r\n\r\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\r\n\r\ntype WebPageMessageKey = `${PeerId}_${number}`;\r\n\r\nexport class AppWebPagesManager extends AppManager {\r\n  private webpages: {\r\n    [webPageId: string]: WebPage\r\n  } = {};\r\n  private pendingWebPages: {\r\n    [webPageId: string]: Set<WebPageMessageKey>\r\n  } = {};\r\n  \r\n  protected after() {\r\n    this.apiUpdatesManager.addMultipleEventsListeners({\r\n      updateWebPage: (update) => {\r\n        this.saveWebPage(update.webpage);\r\n      }\r\n    });\r\n  }\r\n  \r\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\r\n    if(apiWebPage._ === 'webPageNotModified') return;\r\n    const {id} = apiWebPage;\r\n\r\n    const oldWebPage = this.webpages[id];\r\n    const isUpdated = oldWebPage && \r\n      oldWebPage._ === apiWebPage._ && \r\n      (oldWebPage as WebPage.webPage).hash === (oldWebPage as WebPage.webPage).hash;\r\n\r\n    if(apiWebPage._ === 'webPage') {\r\n      if(apiWebPage.photo?._ === 'photo') {\r\n        apiWebPage.photo = this.appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\r\n      } else {\r\n        delete apiWebPage.photo;\r\n      }\r\n  \r\n      if(apiWebPage.document?._ === 'document') {\r\n        apiWebPage.document = this.appDocsManager.saveDoc(apiWebPage.document, mediaContext);\r\n      } else {\r\n        if(apiWebPage.type === 'document') {\r\n          delete apiWebPage.type;\r\n        }\r\n  \r\n        delete apiWebPage.document;\r\n      }\r\n\r\n      const siteName = apiWebPage.site_name;\r\n      let shortTitle = apiWebPage.title || apiWebPage.author || siteName || '';\r\n      if(siteName && shortTitle === siteName) {\r\n        delete apiWebPage.site_name;\r\n      }\r\n\r\n      // delete apiWebPage.description\r\n\r\n      if(!photoTypeSet.has(apiWebPage.type) &&\r\n        !apiWebPage.description &&\r\n        apiWebPage.photo) {\r\n        apiWebPage.type = 'photo';\r\n      }\r\n    }\r\n    \r\n    let pendingSet = this.pendingWebPages[id];\r\n    if(messageKey) {\r\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\r\n      pendingSet.add(messageKey);\r\n    }\r\n    \r\n    if(oldWebPage === undefined) {\r\n      this.webpages[id] = apiWebPage;\r\n    } else {\r\n      safeReplaceObject(oldWebPage, apiWebPage);\r\n    }\r\n    \r\n    if(!messageKey && pendingSet !== undefined && isUpdated) {\r\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\r\n      pendingSet.forEach((value) => {\r\n        const [peerId, mid, isScheduled] = value.split('_');\r\n        msgs.push({\r\n          peerId: peerId.toPeerId(), \r\n          mid: +mid, \r\n          isScheduled: !!isScheduled\r\n        });\r\n      });\r\n\r\n      this.rootScope.dispatchEvent('webpage_updated', {\r\n        id,\r\n        msgs\r\n      });\r\n    }\r\n\r\n    return apiWebPage;\r\n  }\r\n\r\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\r\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\r\n  }\r\n\r\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\r\n    const id = (webPage as WebPage.webPage).id;\r\n    if(!id) return;\r\n\r\n    const set = this.pendingWebPages[id];\r\n    if(set && set.has(messageKey)) {\r\n      set.delete(messageKey);\r\n\r\n      if(!set.size) {\r\n        delete this.pendingWebPages[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  public getCachedWebPage(id: WebPage.webPage['id']) {\r\n    return this.webpages[id];\r\n  }\r\n\r\n  public getWebPage(url: string) {\r\n    return this.apiManager.invokeApiHashable({\r\n      method: 'messages.getWebPage',\r\n      processResult: (webPage) => {\r\n        return this.saveWebPage(webPage);\r\n      },\r\n      params: {\r\n        url\r\n      },\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ReferenceBytes } from \"./referenceDatabase\";\r\nimport Modes from \"../../config/modes\";\r\nimport deferredPromise, { CancellablePromise } from \"../../helpers/cancellablePromise\";\r\nimport { getFileNameByLocation } from \"../../helpers/fileName\";\r\nimport { randomLong } from \"../../helpers/random\";\r\nimport { Document, InputFile, InputFileLocation, InputWebFileLocation, Photo, PhotoSize, UploadFile, UploadWebFile } from \"../../layer\";\r\nimport { DcId } from \"../../types\";\r\nimport CacheStorageController from \"../cacheStorage\";\r\nimport fileManager from \"../fileManager\";\r\nimport { logger, LogTypes } from \"../logger\";\r\nimport assumeType from \"../../helpers/assumeType\";\r\nimport ctx from \"../../environment/ctx\";\r\nimport noop from \"../../helpers/noop\";\r\nimport readBlobAsArrayBuffer from \"../../helpers/blob/readBlobAsArrayBuffer\";\r\nimport bytesToHex from \"../../helpers/bytes/bytesToHex\";\r\nimport findAndSplice from \"../../helpers/array/findAndSplice\";\r\nimport fixFirefoxSvg from \"../../helpers/fixFirefoxSvg\";\r\nimport { AppManager } from \"../appManagers/manager\";\r\nimport { getEnvironment } from \"../../environment/utils\";\r\nimport MTProtoMessagePort from \"./mtprotoMessagePort\";\r\nimport getFileNameForUpload from \"../../helpers/getFileNameForUpload\";\r\nimport type { Progress } from \"../appManagers/appDownloadManager\";\r\nimport getDownloadMediaDetails from \"../appManagers/utils/download/getDownloadMediaDetails\";\r\nimport networkStats from \"./networkStats\";\r\nimport pause from \"../../helpers/schedulers/pause\";\r\n\r\ntype Delayed = {\r\n  offset: number, \r\n  writeFilePromise: CancellablePromise<void>, \r\n  writeFileDeferred: CancellablePromise<void>\r\n};\r\n\r\nexport type DownloadOptions = {\r\n  dcId: DcId, \r\n  location: InputFileLocation | InputWebFileLocation, \r\n  size?: number,\r\n  fileName?: string,\r\n  mimeType?: string,\r\n  limitPart?: number,\r\n  queueId?: number,\r\n  onlyCache?: boolean,\r\n  // getFileMethod: Parameters<CacheStorageController['getFile']>[1]\r\n};\r\n\r\nexport type DownloadMediaOptions = {\r\n  media: Photo | Document.document,\r\n  thumb?: PhotoSize,\r\n  queueId?: number,\r\n  onlyCache?: boolean\r\n};\r\n\r\ntype DownloadPromise = CancellablePromise<Blob>;\r\n\r\nexport type MyUploadFile = UploadFile.uploadFile | UploadWebFile.uploadWebFile;\r\n\r\n// export interface RefreshReferenceTask extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n// };\r\n\r\n// export interface RefreshReferenceTaskResponse extends WorkerTaskVoidTemplate {\r\n//   type: 'refreshReference',\r\n//   payload: ReferenceBytes,\r\n//   originalPayload: ReferenceBytes\r\n// };\r\n\r\nconst MAX_FILE_SAVE_SIZE = 20 * 1024 * 1024;\r\n\r\nconst REGULAR_DOWNLOAD_DELTA = 36;\r\nconst PREMIUM_DOWNLOAD_DELTA = 72;\r\n\r\nexport class ApiFileManager extends AppManager {\r\n  private cacheStorage = new CacheStorageController('cachedFiles');\r\n\r\n  private downloadPromises: {\r\n    [fileName: string]: DownloadPromise\r\n  } = {};\r\n\r\n  private uploadPromises: {\r\n    [fileName: string]: CancellablePromise<InputFile>\r\n  } = {};\r\n\r\n  private downloadPulls: {\r\n    [dcId: string]: Array<{\r\n      id: number,\r\n      queueId: number,\r\n      cb: () => Promise<MyUploadFile | void>,\r\n      deferred: {\r\n        resolve: (...args: any[]) => void,\r\n        reject: (...args: any[]) => void\r\n      },\r\n      activeDelta: number\r\n    }>\r\n  } = {};\r\n  private downloadActives: {[dcId: string]: number} = {};\r\n\r\n  public refreshReferencePromises: {\r\n    [referenceHex: string]: {\r\n      deferred: CancellablePromise<ReferenceBytes>,\r\n      timeout: number\r\n    }\r\n  } = {};\r\n\r\n  private log: ReturnType<typeof logger> = logger('AFM', LogTypes.Error | LogTypes.Log);\r\n  private tempId = 0;\r\n  private queueId = 0;\r\n  private debug = Modes.debug;\r\n\r\n  protected after() {\r\n    setInterval(() => { // clear old promises\r\n      for(const hex in this.refreshReferencePromises) {\r\n        const {deferred} = this.refreshReferencePromises[hex];\r\n        if(deferred.isFulfilled || deferred.isRejected) {\r\n          delete this.refreshReferencePromises[hex];\r\n        }\r\n      }\r\n    }, 1800e3);\r\n  }\r\n\r\n  private downloadRequest(dcId: 'upload', id: number, cb: () => Promise<void>, activeDelta: number, queueId?: number): Promise<void>;\r\n  private downloadRequest(dcId: number, id: number, cb: () => Promise<MyUploadFile>, activeDelta: number, queueId?: number): Promise<MyUploadFile>;\r\n  private downloadRequest(dcId: number | string, id: number, cb: () => Promise<MyUploadFile | void>, activeDelta: number, queueId: number = 0) {\r\n    if(this.downloadPulls[dcId] === undefined) {\r\n      this.downloadPulls[dcId] = [];\r\n      this.downloadActives[dcId] = 0;\r\n    }\r\n\r\n    const downloadPull = this.downloadPulls[dcId];\r\n\r\n    const promise = new Promise<MyUploadFile | void>((resolve, reject) => {\r\n      downloadPull.push({id, queueId, cb, deferred: {resolve, reject}, activeDelta});\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.downloadCheck(dcId);\r\n    }, 0);\r\n\r\n    return promise;\r\n  }\r\n\r\n  private downloadCheck(dcId: string | number) {\r\n    const downloadPull = this.downloadPulls[dcId];\r\n    const downloadLimit = dcId === 'upload' ? 24 : (this.rootScope.premium ? PREMIUM_DOWNLOAD_DELTA : REGULAR_DOWNLOAD_DELTA);\r\n    //const downloadLimit = Infinity;\r\n\r\n    if(this.downloadActives[dcId] >= downloadLimit || !downloadPull || !downloadPull.length) {\r\n      return false;\r\n    }\r\n\r\n    //const data = downloadPull.shift();\r\n    const data = findAndSplice(downloadPull, d => d.queueId === 0) || findAndSplice(downloadPull, d => d.queueId === this.queueId) || downloadPull.shift();\r\n    const activeDelta = data.activeDelta || 1;\r\n\r\n    this.downloadActives[dcId] += activeDelta;\r\n\r\n    const promise = data.cb();\r\n    const networkPromise = networkStats.waitForChunk(dcId as DcId, activeDelta * 1024 * 128);\r\n    Promise.race([\r\n      promise,\r\n      networkPromise\r\n    ]).then(() => {\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n\r\n      networkPromise.resolve();\r\n    }, (error: Error) => {\r\n      // @ts-ignore\r\n      if(!error || !error.type || (error.type !== 'DOWNLOAD_CANCELED' && error.type !== 'UPLOAD_CANCELED')) {\r\n        this.log.error('downloadCheck error:', error);\r\n      }\r\n\r\n      this.downloadActives[dcId] -= activeDelta;\r\n      this.downloadCheck(dcId);\r\n      \r\n      networkPromise.reject(error);\r\n    }).finally(() => {\r\n      promise.then(data.deferred.resolve, data.deferred.reject);\r\n    });\r\n  }\r\n\r\n  public setQueueId(queueId: number) {\r\n    //this.log.error('setQueueId', queueId);\r\n    this.queueId = queueId;\r\n  }\r\n\r\n  private getFileStorage() {\r\n    return this.cacheStorage;\r\n  }\r\n\r\n  public cancelDownload(fileName: string) {\r\n    const promises = [this.downloadPromises[fileName], this.uploadPromises[fileName]].filter(Boolean);\r\n    let canceled = false;\r\n    for(let i = 0, length = promises.length; i < length; ++i) {\r\n      const promise = promises[i];\r\n      if(promise && !promise.isRejected && !promise.isFulfilled) {\r\n        promise.cancel();\r\n        canceled = true;\r\n      }\r\n    }\r\n\r\n    return canceled;\r\n  }\r\n\r\n  public requestWebFilePart(dcId: DcId, location: InputWebFileLocation, offset: number, limit: number, id = 0, queueId = 0, checkCancel?: () => void) {\r\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\r\n      checkCancel && checkCancel();\r\n\r\n      return this.apiManager.invokeApi('upload.getWebFile', {\r\n        location,\r\n        offset,\r\n        limit\r\n      }, {\r\n        dcId,\r\n        fileDownload: true\r\n      });\r\n    }, this.getDelta(limit), queueId);\r\n  }\r\n\r\n  public requestFilePart(dcId: DcId, location: InputFileLocation, offset: number, limit: number, id = 0, queueId = 0, checkCancel?: () => void) {\r\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\r\n      checkCancel && checkCancel();\r\n\r\n      const invoke = async(): Promise<MyUploadFile> => {\r\n        checkCancel && checkCancel(); // do not remove async, because checkCancel will throw an error\r\n\r\n        const promise = this.apiManager.invokeApi('upload.getFile', {\r\n          location,\r\n          offset,\r\n          limit\r\n        }, {\r\n          dcId,\r\n          fileDownload: true\r\n        }) as Promise<MyUploadFile>;\r\n\r\n        return promise.catch((err) => {\r\n          if(err.type === 'FILE_REFERENCE_EXPIRED') {\r\n            return this.refreshReference(location).then(invoke);\r\n          }\r\n\r\n          throw err;\r\n        });\r\n      };\r\n\r\n      assumeType<InputFileLocation.inputDocumentFileLocation>(location);\r\n      const reference = location.file_reference;\r\n      if(reference && !location.checkedReference) { // check stream's location because it's new every call\r\n        location.checkedReference = true;\r\n        const hex = bytesToHex(reference);\r\n        if(this.refreshReferencePromises[hex]) {\r\n          return this.refreshReference(location).then(invoke);\r\n        }\r\n      }\r\n\r\n      return invoke();\r\n    }, this.getDelta(limit), queueId);\r\n  }\r\n\r\n  /* private convertBlobToBytes(blob: Blob) {\r\n    return blob.arrayBuffer().then((buffer) => new Uint8Array(buffer));\r\n  } */\r\n\r\n  private getDelta(bytes: number) {\r\n    return bytes / 1024 / 128;\r\n  }\r\n\r\n  private getLimitPart(size: number): number {\r\n    let bytes = 128 * 1024;\r\n\r\n    while((size / bytes) > 2000) {\r\n      bytes *= 2;\r\n    }\r\n    /* if(size < 1e6 || !size) bytes = 512;\r\n    else if(size < 3e6) bytes = 256;\r\n    else bytes = 128; */\r\n\r\n    return bytes;\r\n  }\r\n\r\n  private uncompressTGS = (bytes: Uint8Array, fileName: string) => {\r\n    //this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', bytes.slice().buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private uncompressTGV = (bytes: Uint8Array, fileName: string) => {\r\n    //this.log('uncompressTGS', bytes, bytes.slice().buffer);\r\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\r\n    const buffer = bytes.slice().buffer;\r\n    if(getEnvironment().IS_FIREFOX) {\r\n      return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, true).then((text) => {\r\n        return fixFirefoxSvg(text as string);\r\n      }).then((text) => {\r\n        const textEncoder = new TextEncoder();\r\n        return textEncoder.encode(text);\r\n      });\r\n    }\r\n\r\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, false) as Promise<Uint8Array>;\r\n  };\r\n\r\n  private convertWebp = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertWebp', {fileName, bytes});\r\n  };\r\n\r\n  private convertOpus = (bytes: Uint8Array, fileName: string) => {\r\n    const instance = MTProtoMessagePort.getInstance<false>();\r\n    return instance.invoke('convertOpus', {fileName, bytes});\r\n  };\r\n\r\n  private refreshReference(inputFileLocation: InputFileLocation) {\r\n    const reference = (inputFileLocation as InputFileLocation.inputDocumentFileLocation).file_reference;\r\n    const hex = bytesToHex(reference);\r\n\r\n    let r = this.refreshReferencePromises[hex];\r\n    if(!r) {\r\n      const deferred = deferredPromise<ReferenceBytes>();\r\n\r\n      r = this.refreshReferencePromises[hex] = {\r\n        deferred,\r\n        timeout: ctx.setTimeout(() => {\r\n          this.log.error('Didn\\'t refresh the reference:', inputFileLocation);\r\n          deferred.reject('REFERENCE_IS_NOT_REFRESHED');\r\n        }, 60000)\r\n      };\r\n\r\n      deferred.catch(noop).finally(() => {\r\n        clearTimeout(r.timeout);\r\n      });\r\n\r\n      this.referenceDatabase.refreshReference(reference).then(deferred.resolve, deferred.reject);\r\n      // const task = {type: 'refreshReference', payload: reference};\r\n      // notifySomeone(task);\r\n    }\r\n\r\n    // have to replace file_reference in any way, because location can be different everytime if it's stream\r\n    return r.deferred.then((reference) => {\r\n      if(hex === bytesToHex(reference)) {\r\n        throw 'REFERENCE_IS_NOT_REFRESHED';\r\n      }\r\n\r\n      (inputFileLocation as InputFileLocation.inputDocumentFileLocation).file_reference = reference;\r\n    });\r\n  }\r\n\r\n  public isDownloading(fileName: string) {\r\n    return !!this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getDownload(fileName: string) {\r\n    return this.downloadPromises[fileName];\r\n  }\r\n\r\n  public getUpload(fileName: string) {\r\n    return this.uploadPromises[fileName];\r\n  }\r\n\r\n  public download(options: DownloadOptions): DownloadPromise {\r\n    if(!fileManager.isAvailable()) {\r\n      return Promise.reject({type: 'BROWSER_BLOB_NOT_SUPPORTED'});\r\n    }\r\n\r\n    const size = options.size ?? 0;\r\n    const {dcId, location} = options;\r\n\r\n    let process: ApiFileManager['uncompressTGS'] | ApiFileManager['convertWebp'];\r\n\r\n    if(options.mimeType === 'application/x-tgwallpattern') {\r\n      process = this.uncompressTGV;\r\n      options.mimeType = 'image/svg+xml';\r\n    } else if(options.mimeType === 'image/webp' && !getEnvironment().IS_WEBP_SUPPORTED) {\r\n      process = this.convertWebp;\r\n      options.mimeType = 'image/png';\r\n    } else if(options.mimeType === 'application/x-tgsticker') {\r\n      process = this.uncompressTGS;\r\n      options.mimeType = 'application/json';\r\n    } else if(options.mimeType === 'audio/ogg' && !getEnvironment().IS_OPUS_SUPPORTED) {\r\n      process = this.convertOpus;\r\n      options.mimeType = 'audio/wav';\r\n    }\r\n\r\n    const fileName = getFileNameByLocation(location, {fileName: options.fileName});\r\n    const cachedPromise = this.downloadPromises[fileName];\r\n    const fileStorage = this.getFileStorage();\r\n\r\n    this.debug && this.log('downloadFile', fileName, size, location, options.mimeType);\r\n\r\n    /* if(options.queueId) {\r\n      this.log.error('downloadFile queueId:', fileName, options.queueId);\r\n    } */\r\n\r\n    if(cachedPromise) {\r\n      //this.log('downloadFile cachedPromise');\r\n\r\n      if(size) {\r\n        return cachedPromise.then((blob) => {\r\n          if(blob instanceof Blob && blob.size < size) {\r\n            this.debug && this.log('downloadFile need to deleteFile, wrong size:', blob.size, size);\r\n\r\n            return this.delete(fileName).then(() => {\r\n              return this.download(options);\r\n            }).catch(() => {\r\n              return this.download(options);\r\n            });\r\n          } else {\r\n            return blob;\r\n          }\r\n        });\r\n      } else {\r\n        return cachedPromise;\r\n      }\r\n    }\r\n\r\n    const deferred: DownloadPromise = deferredPromise();\r\n    const mimeType = options.mimeType || 'image/jpeg';\r\n\r\n    let error: Error;\r\n    let resolved = false;\r\n    let cacheFileWriter: ReturnType<typeof fileManager['getFakeFileWriter']>;\r\n    let errorHandler = (_error: Error) => {\r\n      error = _error;\r\n      delete this.downloadPromises[fileName];\r\n      deferred.reject(error);\r\n      errorHandler = () => {};\r\n\r\n      if(cacheFileWriter && (!error || error.type !== 'DOWNLOAD_CANCELED')) {\r\n        cacheFileWriter.truncate();\r\n      }\r\n    };\r\n\r\n    const id = this.tempId++;\r\n\r\n    fileStorage.getFile(fileName).then(async(blob: Blob) => {\r\n      //this.log('maybe cached', fileName);\r\n      //throw '';\r\n\r\n      if(blob.size < size) {\r\n        //this.log('downloadFile need to deleteFile 2, wrong size:', blob.size, size);\r\n        if(!options.onlyCache) {\r\n          await this.delete(fileName);\r\n        }\r\n\r\n        throw false;\r\n      }\r\n\r\n      deferred.resolve(blob);\r\n    }).catch((err) => {\r\n      if(options.onlyCache) {\r\n        errorHandler(err);\r\n        return;\r\n      }\r\n\r\n      //this.log('not cached', fileName);\r\n      const limit = options.limitPart || this.getLimitPart(size);\r\n      const fileWriterPromise = fileStorage.getFileWriter(fileName, size || limit, mimeType);\r\n\r\n      fileWriterPromise.then((fileWriter) => {\r\n        cacheFileWriter = fileWriter;\r\n        let offset: number;\r\n        let startOffset = 0;\r\n        let writeFilePromise: CancellablePromise<void> = Promise.resolve(),\r\n          writeFileDeferred: CancellablePromise<void>;\r\n        //const maxRequests = 13107200 / limit; // * 100 Mb speed\r\n        const maxRequests = Infinity;\r\n\r\n        //console.error('maxRequests', maxRequests);\r\n\r\n        const processDownloaded = async(bytes: Uint8Array) => {\r\n          if(process) {\r\n            //const perf = performance.now();\r\n            const processed = await process(bytes, fileName);\r\n            //this.log('downloadFile process downloaded time', performance.now() - perf, mimeType, process);\r\n            return processed;\r\n          }\r\n  \r\n          return bytes;\r\n        };\r\n\r\n        const r = location._ === 'inputWebFileLocation' ? this.requestWebFilePart.bind(this) : this.requestFilePart.bind(this);\r\n\r\n        const delayed: Delayed[] = [];\r\n        offset = startOffset;\r\n        do {\r\n          ////this.log('offset:', startOffset);\r\n          writeFileDeferred = deferredPromise<void>();\r\n          delayed.push({offset, writeFilePromise, writeFileDeferred});\r\n          writeFilePromise = writeFileDeferred;\r\n          offset += limit;\r\n        } while(offset < size);\r\n\r\n        let done = 0;\r\n        const superpuper = async() => {\r\n          //if(!delayed.length) return;\r\n\r\n          const {offset, writeFilePromise, writeFileDeferred} = delayed.shift();\r\n          try {\r\n            checkCancel();\r\n\r\n            // @ts-ignore\r\n            const result = await r(dcId, location as any, offset, limit, id, options.queueId, checkCancel);\r\n\r\n            const bytes = result.bytes;\r\n\r\n            if(delayed.length) {\r\n              superpuper();\r\n            }\r\n\r\n            this.debug && this.log('downloadFile requestFilePart result:', fileName, result);\r\n            const isFinal = (offset + limit) >= size || !bytes.byteLength;\r\n            if(bytes.byteLength) {\r\n              //done += limit;\r\n              done += bytes.byteLength;\r\n\r\n              //if(!isFinal) {\r\n                ////this.log('deferred notify 2:', {done: offset + limit, total: size}, deferred);\r\n                const progress: Progress = {done, offset, total: size, fileName};\r\n                deferred.notify(progress);\r\n              //}\r\n\r\n              await writeFilePromise;\r\n              checkCancel();\r\n\r\n              await fileWriter.write(bytes, offset);\r\n            }\r\n\r\n            if(isFinal && process) {\r\n              const bytes = fileWriter.getParts();\r\n              const processedResult = await processDownloaded(bytes);\r\n              checkCancel();\r\n\r\n              fileWriter.replaceParts(processedResult);\r\n            }\r\n\r\n            writeFileDeferred.resolve();\r\n\r\n            if(isFinal) {\r\n              resolved = true;\r\n\r\n              const realSize = size || bytes.byteLength;\r\n              if(!size) {\r\n                fileWriter.trim(realSize);\r\n              }\r\n\r\n              deferred.resolve(fileWriter.finalize(realSize < MAX_FILE_SAVE_SIZE));\r\n            }\r\n          } catch(err) {\r\n            errorHandler(err as Error);\r\n          }\r\n        };\r\n\r\n        for(let i = 0, length = Math.min(maxRequests, delayed.length); i < length; ++i) {\r\n          superpuper();\r\n        }\r\n      }).catch((err) => {\r\n        if(!['STORAGE_OFFLINE'].includes(err)) {\r\n          this.log.error('saveFile error:', err);\r\n        }\r\n      });\r\n    });\r\n\r\n    const checkCancel = () => {\r\n      if(error) {\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    deferred.cancel = () => {\r\n      if(!error && !resolved) {\r\n        const error = new Error('Canceled');\r\n        error.type = 'DOWNLOAD_CANCELED';\r\n        errorHandler(error);\r\n      }\r\n    };\r\n\r\n    deferred.notify = (progress: Progress) => {\r\n      this.rootScope.dispatchEvent('download_progress', progress);\r\n    };\r\n\r\n    this.downloadPromises[fileName] = deferred;\r\n\r\n    deferred.catch(noop).finally(() => {\r\n      delete this.downloadPromises[fileName];\r\n    });\r\n\r\n    return deferred;\r\n  }\r\n\r\n  public downloadMedia(options: DownloadMediaOptions): DownloadPromise {\r\n    let {media, thumb} = options;\r\n    const isPhoto = media._ === 'photo';\r\n    if(media._ === 'photoEmpty' || (isPhoto && !thumb)) {\r\n      return Promise.reject('preloadPhoto photoEmpty!');\r\n    }\r\n\r\n    // get original instance with correct file_reference instead of using copies\r\n    const isDocument = media._ === 'document';\r\n    if(isDocument) media = this.appDocsManager.getDoc(media.id);\r\n    else if(isPhoto) media = this.appPhotosManager.getPhoto(media.id);\r\n\r\n    const {fileName, downloadOptions} = getDownloadMediaDetails(options);\r\n\r\n    let promise = this.getDownload(fileName);\r\n    if(!promise) {\r\n      promise = this.download(downloadOptions);\r\n      \r\n      if(isDocument && !thumb) {\r\n        this.rootScope.dispatchEvent('document_downloading', media.id);\r\n        promise.catch(noop).finally(() => {\r\n          this.rootScope.dispatchEvent('document_downloaded', media.id);\r\n        });\r\n      }\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  public downloadMediaURL(options: DownloadMediaOptions): Promise<string> {\r\n    const {media, thumb} = options;\r\n\r\n    let cacheContext = this.thumbsStorage.getCacheContext(media as any, thumb?.type);\r\n    if((thumb ? (cacheContext.downloaded >= ('size' in thumb ? thumb.size : 0)) : true) && cacheContext.url) {\r\n      return Promise.resolve(cacheContext.url);\r\n    }\r\n\r\n    return this.downloadMedia(options).then((blob) => {\r\n      if(!cacheContext.downloaded || cacheContext.downloaded < blob.size) {\r\n        const url = URL.createObjectURL(blob);\r\n        cacheContext = this.thumbsStorage.setCacheContextURL(media as any, cacheContext.type, url, blob.size);\r\n      }\r\n\r\n      return cacheContext.url;\r\n    });\r\n  }\r\n\r\n  public downloadMediaVoid(options: DownloadMediaOptions) {\r\n    return this.downloadMedia(options).then(noop);\r\n  }\r\n\r\n  private delete(fileName: string) {\r\n    //this.log('will delete file:', fileName);\r\n    delete this.downloadPromises[fileName];\r\n    return this.getFileStorage().delete(fileName);\r\n  }\r\n\r\n  public upload({file, fileName}: {file: Blob | File, fileName?: string}) {\r\n    const fileSize = file.size, \r\n      isBigFile = fileSize >= 10485760;\r\n\r\n    let canceled = false,\r\n      resolved = false,\r\n      doneParts = 0,\r\n      partSize = 262144; // 256 Kb\r\n\r\n    /* if(fileSize > (524288 * 3000)) {\r\n      partSize = 1024 * 1024;\r\n      activeDelta = 8;\r\n    } else  */if(fileSize > 67108864) {\r\n      partSize = 524288;\r\n    } else if(fileSize < 102400) {\r\n      partSize = 32768;\r\n    }\r\n\r\n    fileName ||= getFileNameForUpload(file);\r\n\r\n    const activeDelta = this.getDelta(partSize);\r\n\r\n    const totalParts = Math.ceil(fileSize / partSize);\r\n    const fileId = randomLong();\r\n\r\n    let _part = 0;\r\n\r\n    const resultInputFile: InputFile = {\r\n      _: isBigFile ? 'inputFileBig' : 'inputFile',\r\n      id: fileId as any,\r\n      parts: totalParts,\r\n      name: fileName,\r\n      md5_checksum: ''\r\n    };\r\n\r\n    const deferred = deferredPromise<typeof resultInputFile>();\r\n    if(totalParts > 4000) {\r\n      deferred.reject({type: 'FILE_TOO_BIG'});\r\n      return deferred;\r\n    }\r\n    \r\n    let errorHandler = (error: any) => {\r\n      if(error?.type !== 'UPLOAD_CANCELED') {\r\n        this.log.error('Up Error', error);\r\n      }\r\n\r\n      deferred.reject(error);\r\n      canceled = true;\r\n      errorHandler = () => {};\r\n    };\r\n\r\n    const method = isBigFile ? 'upload.saveBigFilePart' : 'upload.saveFilePart';\r\n\r\n    const id = this.tempId++;\r\n\r\n    /* setInterval(() => {\r\n      console.log(file);\r\n    }, 1e3); */\r\n\r\n    const self = this;\r\n    function* generator() {\r\n      for(let offset = 0; offset < fileSize; offset += partSize) {\r\n        const part = _part++; // 0, 1\r\n        yield self.downloadRequest('upload', id, () => {\r\n          const blob = file.slice(offset, offset + partSize);\r\n\r\n          return readBlobAsArrayBuffer(blob).then((buffer) => {\r\n            if(canceled) {\r\n              throw {type: 'UPLOAD_CANCELED'};\r\n            }\r\n\r\n            self.debug && self.log('Upload file part, isBig:', isBigFile, part, buffer.byteLength, new Uint8Array(buffer).length, new Uint8Array(buffer).slice().length);\r\n\r\n            /* const u = new Uint8Array(buffer.byteLength);\r\n            for(let i = 0; i < u.length; ++i) {\r\n              //u[i] = Math.random() * 255 | 0;\r\n              u[i] = 0;\r\n            }\r\n            buffer = u.buffer; */\r\n  \r\n            /* setTimeout(() => {\r\n              doneParts++;\r\n              uploadResolve();\r\n  \r\n              //////this.log('Progress', doneParts * partSize / fileSize);\r\n\r\n              self.log('done part', part, doneParts);\r\n  \r\n              deferred.notify({done: doneParts * partSize, total: fileSize});\r\n  \r\n              if(doneParts >= totalParts) {\r\n                deferred.resolve(resultInputFile);\r\n                resolved = true;\r\n              }\r\n            }, 1250);\r\n            return; */\r\n\r\n            return self.apiManager.invokeApi(method, {\r\n              file_id: fileId,\r\n              file_part: part,\r\n              file_total_parts: totalParts,\r\n              bytes: buffer/* new Uint8Array(buffer) */\r\n            } as any, {\r\n              //startMaxLength: partSize + 256,\r\n              fileUpload: true\r\n            }).then(() => {\r\n              if(canceled) {\r\n                return;\r\n              }\r\n\r\n              ++doneParts;\r\n              const progress: Progress = {done: doneParts * partSize, offset, total: fileSize, fileName};\r\n              deferred.notify(progress);\r\n  \r\n              if(doneParts >= totalParts) {\r\n                deferred.resolve(resultInputFile);\r\n                resolved = true;\r\n              }\r\n            }, errorHandler);\r\n          });\r\n        }, activeDelta).catch(errorHandler);\r\n      }\r\n    }\r\n\r\n    const it = generator();\r\n    const process = () => {\r\n      if(canceled) return;\r\n      const r = it.next();\r\n      if(r.done || canceled) return;\r\n      (r.value as Promise<void>).then(process);\r\n    };\r\n\r\n    const maxRequests = Infinity;\r\n    //const maxRequests = 10;\r\n    /* for(let i = 0; i < 10; ++i) {\r\n      process();\r\n    } */\r\n    for(let i = 0, length = Math.min(maxRequests, totalParts); i < length; ++i) {\r\n      process();\r\n    }\r\n\r\n    deferred.cancel = () => {\r\n      //this.log('cancel upload', canceled, resolved);\r\n      if(!canceled && !resolved) {\r\n        canceled = true;\r\n        errorHandler({type: 'UPLOAD_CANCELED'});\r\n      }\r\n    };\r\n\r\n    deferred.notify = (progress: Progress) => {\r\n      this.rootScope.dispatchEvent('download_progress', progress);\r\n    };\r\n\r\n    deferred.finally(() => {\r\n      delete this.uploadPromises[fileName];\r\n    });\r\n\r\n    return this.uploadPromises[fileName] = deferred;\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function fixFirefoxSvg(text: string) {\n  const svgIndex = text.indexOf('<svg');\n  if(svgIndex !== 0) {\n    text = text.slice(svgIndex);\n  }\n\n  const [_, __, width, height] = text.match(/viewBox=\"(.+?)\"/)[1].split(' ');\n  text = text.replace(/>/, ` width=\"${width}\" height=\"${height}\">`).replace(/[^\\x00-\\x7F]/g, '');\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAs from \"./readBlobAs\";\n\nexport default function readBlobAsArrayBuffer(blob: Blob) {\n  return readBlobAs(blob, 'readAsArrayBuffer');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { IS_WEB_WORKER } from \"../context\";\n\n// const id = IS_WEB_WORKER ? Math.random() * 0x1000 | 0 : 0;\nexport default function readBlobAs(blob: Blob, method: 'readAsText'): Promise<string>;\nexport default function readBlobAs(blob: Blob, method: 'readAsDataURL'): Promise<string>;\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer'): Promise<ArrayBuffer>;\nexport default function readBlobAs(blob: Blob, method: 'readAsArrayBuffer' | 'readAsText' | 'readAsDataURL'): Promise<any> {\n  // const perf = performance.now();\n  return new Promise<any>((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (e) => {\n      // console.log(`readBlobAs [${id}] ${method} time ${performance.now() - perf}`);\n      resolve(e.target.result);\n    });\n    reader[method](blob);\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from \"../../environment/ctx\";\nimport { ignoreRestrictionReasons } from \"../../helpers/restrictions\";\nimport { MethodDeclMap, User } from \"../../layer\";\nimport { InvokeApiOptions } from \"../../types\";\nimport { AppManager } from \"../appManagers/manager\";\nimport { ApiError } from \"./apiManager\";\nimport { MTAppConfig } from \"./appConfig\";\nimport { UserAuth } from \"./mtproto_config\";\nimport { MTMessage } from \"./networker\";\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport default abstract class ApiManagerMethods extends AppManager {\n  private afterMessageIdTemp: number;\n  private hashes: {[method: string]: HashOptions} = {};\n  private apiPromisesSingleProcess: {\n    [q: string]: Map<any, Promise<any>>\n  } = {};\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  private appConfig: MTAppConfig;\n  private getAppConfigPromise: Promise<MTAppConfig>;\n\n  constructor() {\n    super();\n    this.afterMessageIdTemp = 0;\n  }\n\n  abstract setUserAuth(userAuth: UserAuth | UserId): Promise<void>;\n\n  public setUser(user: User) {\n    // appUsersManager.saveApiUser(user);\n    return this.setUserAuth(user.id);\n  }\n\n  abstract invokeApi<T extends keyof MethodDeclMap>(method: T, params?: MethodDeclMap[T]['req'], options?: InvokeApiOptions): Promise<MethodDeclMap[T]['res']>;\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n    \n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    //console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap, R>(o: {\n    method: T, \n    processResult?: (response: MethodDeclMap[T]['res']) => R, \n    processError?: (error: ApiError) => any,\n    params?: Omit<MethodDeclMap[T]['req'], 'hash'>, \n    options?: InvokeApiOptions & {cacheKey?: string}\n  }) {\n    // @ts-ignore\n    o.params ??= {};\n    o.options ??= {};\n    //console.log('will invokeApi:', method, params, options);\n\n    const {params, options, method} = o;\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        (params as any).hash = cached.hash;\n      }\n    }\n\n    return this.invokeApiSingleProcess<T, R>({\n      method,\n      processResult: (result) => {\n        if(result._.includes('NotModified')) {\n          // this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n          return cached.result;\n        }\n        \n        if(result.hash/*  || result.messages */) {\n          const hash = result.hash/*  || this.computeHash(result.messages) */;\n          \n          if(!this.hashes[method]) this.hashes[method] = {};\n          this.hashes[method][queryJSON] = {\n            hash,\n            result\n          };\n        }\n\n        if(o.processResult) {\n          return o.processResult(result);\n        }\n  \n        return result;\n      },\n      params,\n      options\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    const cache = this.apiPromisesSingle;\n    if(cache[q]) {\n      return cache[q];\n    }\n\n    return cache[q] = this.invokeApi(method, params, options).finally(() => {\n      delete cache[q];\n    });\n  }\n\n  public invokeApiSingleProcess<T extends keyof MethodDeclMap, R>(o: {\n    method: T, \n    processResult: (response: MethodDeclMap[T]['res']) => R, \n    processError?: (error: ApiError) => any,\n    params?: MethodDeclMap[T]['req'], \n    options?: InvokeApiOptions & {cacheKey?: string}\n  }): Promise<Awaited<R>> {\n    o.params ??= {};\n    o.options ??= {};\n\n    const {method, processResult, processError, params, options} = o;\n    const cache = this.apiPromisesSingleProcess;\n    const cacheKey = options.cacheKey || JSON.stringify(params);\n    const map = cache[method] ?? (cache[method] = new Map());\n    const oldPromise = map.get(cacheKey);\n    if(oldPromise) {\n      return oldPromise;\n    }\n    \n    const originalPromise = this.invokeApi(method, params, options);\n    const newPromise: Promise<Awaited<R>> = originalPromise.then(processResult, processError);\n\n    const p = newPromise.finally(() => {\n      map.delete(cacheKey);\n      if(!map.size) {\n        delete cache[method];\n      }\n    });\n\n    map.set(cacheKey, p);\n    return p;\n  }\n\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\n    const queryJSON = JSON.stringify(params);\n    const item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item && item.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = ctx.setTimeout(() => {\n        delete cache[queryJSON];\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        try {\n          if(verify(item.params)) {\n            if(item.timeout) {\n              clearTimeout(item.timeout);\n            }\n  \n            delete cache[queryJSON];\n          }\n        } catch(err) {\n          // this.log.error('clearCache error:', err, queryJSON, item);\n        }\n      }\n    }\n  }\n\n  public getConfig() {\n    return this.invokeApiCacheable('help.getConfig');\n  }\n\n  public getAppConfig(overwrite?: boolean) {\n    if(this.appConfig && !overwrite) return this.appConfig;\n    if(this.getAppConfigPromise && !overwrite) return this.getAppConfigPromise;\n    const promise: Promise<MTAppConfig> = this.getAppConfigPromise = this.invokeApi('help.getAppConfig').then((config: MTAppConfig) => {\n      if(this.getAppConfigPromise !== promise) {\n        return this.getAppConfigPromise;\n      }\n      \n      this.appConfig = config;\n      ignoreRestrictionReasons(config.ignore_restriction_reasons ?? []);\n      return config;\n    });\n\n    return promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                       \n                                     \n          \n\n                    \nimport transportController from './transports/controller';\nimport MTTransport from './transports/transport';\n          \n\nimport type { UserAuth } from './mtproto_config';\nimport sessionStorage from '../sessionStorage';\nimport MTPNetworker, { MTMessage } from './networker';\n//import { telegramMeWebService } from './mtproto';\nimport { ConnectionType, DcConfigurator, TransportType } from './dcConfigurator';\nimport { logger } from '../logger';\nimport type { DcAuthKey, DcId, DcServerSalt, InvokeApiOptions } from '../../types';\nimport type { MethodDeclMap } from '../../layer';\nimport deferredPromise, { CancellablePromise } from '../../helpers/cancellablePromise';\n//import { clamp } from '../../helpers/number';\nimport App from '../../config/app';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport IDBStorage, { IDB } from '../idb';\nimport CryptoWorker from \"../crypto/cryptoMessagePort\";\nimport ctx from '../../environment/ctx';\nimport noop from '../../helpers/noop';\nimport Modes from '../../config/modes';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport pause from '../../helpers/schedulers/pause';\nimport ApiManagerMethods from './api_methods';\nimport { getEnvironment } from '../../environment/utils';\nimport AppStorage from '../storage';\nimport toggleStorages from '../../helpers/toggleStorages';\n\n/* var networker = apiManager.cachedNetworkers.websocket.upload[2];\nnetworker.wrapMtpMessage({\n  _: 'msgs_state_req',\n  msg_ids: [\"6888292542796810828\"]\n}, {\n  notContentRelated: true\n}).then((res) => {\n  console.log('status', res);\n}); */\n\n//console.error('apiManager included!');\n// TODO: если запрос словил флуд, нужно сохранять его параметры и возвращать тот же промис на новый такой же запрос, например - загрузка истории\n\nexport type ApiError = Partial<{\n  code: number,\n  type: string,\n  description: string,\n  originalError: any,\n  stack: string,\n  handled: boolean,\n  input: string,\n  message: ApiError\n}>;\n\n/* class RotatableArray<T> {\n  public array: Array<T> = [];\n  private lastIndex = -1;\n\n  public get() {\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\n    return this.array[this.lastIndex];\n  }\n} */\n\nconst PREMIUM_FILE_NETWORKERS_COUNT = 6;\nconst REGULAR_FILE_NETWORKERS_COUNT = 3;\n\nexport class ApiManager extends ApiManagerMethods {\n  private cachedNetworkers: {\n    [transportType in TransportType]: {\n      [connectionType in ConnectionType]: {\n        [dcId: DcId]: MTPNetworker[]\n      }\n    }\n  };\n  \n  private cachedExportPromise: {[x: number]: Promise<unknown>};\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\n  private baseDcId: DcId;\n  \n  //public telegramMeNotified = false;\n\n  private log: ReturnType<typeof logger>;\n\n  private afterMessageTempIds: {\n    [tempId: string]: {\n      messageId: string,\n      promise: Promise<any>\n    }\n  };\n\n  private transportType: TransportType;\n\n  private updatesProcessor: (obj: any) => void;\n\n  private loggingOut: boolean;\n\n  constructor() {\n    super();\n    this.log = logger('API');\n\n    this.cachedNetworkers = {} as any;\n    this.cachedExportPromise = {};\n    this.gettingNetworkers = {};\n    this.baseDcId = 0;\n    this.afterMessageTempIds = {};\n\n    this.transportType = Modes.transport;\n\n                        \n    transportController.addEventListener('transport', (transportType) => {\n      this.changeTransportType(transportType);\n    });\n              \n  }\n\n  //private lol = false;\n  \n  // constructor() {\n    //MtpSingleInstanceService.start();\n    \n    /* AppStorage.get<number>('dc').then((dcId) => {\n      if(dcId) {\n        this.baseDcId = dcId;\n      }\n    }); */\n  // }\n  \n  /* public telegramMeNotify(newValue: boolean) {\n    if(this.telegramMeNotified !== newValue) {\n      this.telegramMeNotified = newValue;\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\n    }\n  } */\n\n  private getTransportType(connectionType: ConnectionType) {\n                               \n                 \n                                                                                                                           \n                                                                                               \n             \n    // @ts-ignore\n    const transportType: TransportType = this.transportType;\n              \n\n    return transportType;\n  }\n\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\n    for(const transportType in this.cachedNetworkers) {\n      const connections = this.cachedNetworkers[transportType as TransportType];\n      for(const connectionType in connections) {\n        const dcs = connections[connectionType as ConnectionType];\n        for(const dcId in dcs) {\n          const networkers = dcs[dcId as any as DcId];\n          networkers.forEach((networker, idx, arr) => {\n            callback({\n              networker,\n              dcId: +dcId as DcId,\n              connectionType: connectionType as ConnectionType,\n              transportType: transportType as TransportType,\n              index: idx,\n              array: arr\n            });\n          });\n        }\n      }\n    }\n  }\n\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\n    return this.dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client', this.rootScope.premium);\n  }\n\n  public changeTransportType(transportType: TransportType) {\n    const oldTransportType = this.transportType;\n    if(oldTransportType === transportType) {\n      return;\n    }\n\n    this.log('changing transport from', oldTransportType, 'to', transportType);\n\n    const oldObject = this.cachedNetworkers[oldTransportType];\n    const newObject = this.cachedNetworkers[transportType];\n    this.cachedNetworkers[transportType] = oldObject;\n    this.cachedNetworkers[oldTransportType] = newObject;\n\n    this.transportType = transportType;\n\n    for(const oldGetKey in this.gettingNetworkers) {\n      const promise = this.gettingNetworkers[oldGetKey];\n      delete this.gettingNetworkers[oldGetKey];\n\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\n      this.gettingNetworkers[newGetKey] = promise;\n\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\n    }\n\n    this.iterateNetworkers((info) => {\n      const transportType = this.getTransportType(info.connectionType);\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\n      this.changeNetworkerTransport(info.networker, transport);\n    });\n  }\n\n  public async getBaseDcId() {\n    if(this.baseDcId) {\n      return this.baseDcId;\n    }\n\n    const baseDcId = await sessionStorage.get('dc');\n    if(!this.baseDcId) {\n      if(!baseDcId) {\n        this.setBaseDcId(App.baseDcId);\n      } else {\n        this.baseDcId = baseDcId;\n      }\n    }\n\n    return this.baseDcId;\n  }\n  \n  public async setUserAuth(userAuth: UserAuth | UserId) {\n    if(typeof(userAuth) === 'string' || typeof(userAuth) === 'number') {\n      userAuth = {dcID: 0, date: Date.now() / 1000 | 0, id: userAuth.toPeerId(false)};\n    }\n\n    this.rootScope.dispatchEvent('user_auth', userAuth);\n\n    if(!userAuth.dcID) {\n      const baseDcId = await this.getBaseDcId();\n      userAuth.dcID = baseDcId;\n    }\n\n    sessionStorage.set({\n      user_auth: userAuth\n    });\n    \n    //this.telegramMeNotify(true);\n  }\n\n  public setBaseDcId(dcId: DcId) {\n    const wasDcId = this.baseDcId;\n    if(wasDcId) { // if migrated set ondrain\n      this.getNetworker(wasDcId).then((networker) => {\n        this.setOnDrainIfNeeded(networker);\n      });\n    }\n\n    this.baseDcId = dcId;\n\n    sessionStorage.set({\n      dc: this.baseDcId\n    });\n  }\n  \n  public async logOut() {\n    if(this.loggingOut) {\n      return;\n    }\n\n    this.loggingOut = true;\n    const storageKeys: Array<DcAuthKey> = [];\n    \n    const prefix = 'dc';\n    for(let dcId = 1; dcId <= 5; dcId++) {\n      storageKeys.push(prefix + dcId + '_auth_key' as any);\n    }\n    \n    // WebPushApiManager.forceUnsubscribe(); // WARNING // moved to worker's master\n    const storageResult = await Promise.all(storageKeys.map((key) => sessionStorage.get(key)));\n    \n    const logoutPromises: Promise<any>[] = [];\n    for(let i = 0; i < storageResult.length; i++) {\n      if(storageResult[i]) {\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId: (i + 1) as DcId, ignoreErrors: true}));\n      }\n    }\n\n    const clear = async() => {\n      this.baseDcId = undefined;\n      //this.telegramMeNotify(false);\n      await toggleStorages(false, true);\n      IDB.closeDatabases();\n      this.rootScope.dispatchEvent('logging_out');\n    };\n\n    setTimeout(clear, 1e3);\n\n    //return;\n    \n    return Promise.all(logoutPromises).catch((error) => {\n      error.handled = true;\n    }).finally(clear)/* .then(() => {\n      location.pathname = '/';\n    }) */;\n  }\n\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\n    return [dcId, transportType, connectionType].join('-');\n  }\n  \n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\n    //const connectionType: ConnectionType = 'client';\n\n    const transportType = this.getTransportType(connectionType);\n    if(!this.cachedNetworkers[transportType]) {\n      this.cachedNetworkers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const cache = this.cachedNetworkers[transportType][connectionType];\n    if(!(dcId in cache)) {\n      cache[dcId] = [];\n    }\n    \n    const networkers = cache[dcId];\n    // @ts-ignore\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (this.rootScope.premium ? PREMIUM_FILE_NETWORKERS_COUNT : REGULAR_FILE_NETWORKERS_COUNT);\n    if(networkers.length >= maxNetworkers) {\n      let i = networkers.length - 1, found = false;\n      for(; i >= 0; --i) {\n        if(networkers[i].isOnline) {\n          found = true;\n          break;\n        }\n      }\n      \n      const networker = found ? networkers.splice(i, 1)[0] : networkers.pop();\n      networkers.unshift(networker);\n      return Promise.resolve(networker);\n    }\n    \n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\n    if(this.gettingNetworkers[getKey]) {\n      return this.gettingNetworkers[getKey];\n    }\n\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\n    \n    let transport = this.chooseServer(dcId, connectionType, transportType);\n    return this.gettingNetworkers[getKey] = Promise.all([ak, ss].map((key) => sessionStorage.get(key)))\n    .then(async([authKeyHex, serverSaltHex]) => {\n      let networker: MTPNetworker, error: any;\n      if(authKeyHex && authKeyHex.length === 512) {\n        if(!serverSaltHex || serverSaltHex.length !== 16) {\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\n        }\n        \n        const authKey = bytesFromHex(authKeyHex);\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1', authKey)).slice(-8);\n        const serverSalt = bytesFromHex(serverSaltHex);\n        \n        networker = this.networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\n      } else {\n        try { // if no saved state\n          const auth = await this.authorizer.auth(dcId);\n  \n          sessionStorage.set({\n            [ak]: bytesToHex(auth.authKey),\n            [ss]: bytesToHex(auth.serverSalt)\n          });\n          \n          networker = this.networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\n        } catch(_error) {\n          error = _error;\n        }\n      }\n\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\n      const newTransportType = this.getTransportType(connectionType);\n      if(newTransportType !== transportType) {\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\n        transport.destroy();\n        DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, transport);\n\n        if(networker) {\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\n        }\n\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\n      }\n\n      /* networker.onConnectionStatusChange = (online) => {\n        console.log('status:', online);\n      }; */\n      \n      delete this.gettingNetworkers[getKey];\n\n      if(error) {\n        this.log('get networker error', error, (error as Error).stack);\n        throw error;\n      }\n\n      this.changeNetworkerTransport(networker, transport);\n      networkers.unshift(networker);\n      this.setOnDrainIfNeeded(networker);\n      return networker;\n    });\n  }\n\n  public getNetworkerVoid(dcId: DcId) {\n    return this.getNetworker(dcId).then(noop, noop);\n  }\n\n  private changeNetworkerTransport(networker: MTPNetworker, transport?: MTTransport) {\n    const oldTransport = networker.transport;\n    if(oldTransport) {\n      DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, oldTransport);\n    }\n\n    networker.changeTransport(transport);\n  }\n\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\n    if(networker.onDrain) {\n      return;\n    }\n    \n    const checkPromise: Promise<boolean> = networker.isFileNetworker ? \n      Promise.resolve(true) : \n      this.getBaseDcId().then((baseDcId) => networker.dcId !== baseDcId);\n    checkPromise.then((canRelease) => {\n      if(networker.onDrain) {\n        return;\n      }\n      \n      if(canRelease) {\n        networker.onDrain = () => {\n          this.log('networker drain', networker.dcId);\n\n          networker.onDrain = undefined;\n          this.changeNetworkerTransport(networker);\n          networker.destroy();\n          this.networkerFactory.removeNetworker(networker);\n          DcConfigurator.removeTransport(this.cachedNetworkers, networker);\n        };\n\n        networker.setDrainTimeout();\n      }\n    });\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n    this.networkerFactory.setUpdatesProcessor(callback);\n  }\n  \n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T][\"res\"]> {\n    ///////this.log('Invoke api', method, params, options);\n\n    /* if(!this.lol) {\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\n      this.lol = true;\n    } */\n\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\n\n    let {afterMessageId, prepareTempMessageId} = options;\n    if(prepareTempMessageId) {\n      deferred.then(() => {\n        delete this.afterMessageTempIds[prepareTempMessageId];\n      });\n    }\n\n    if(MOUNT_CLASS_TO) {\n      const startTime = Date.now();\n      const interval = ctx.setInterval(() => {\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\n        }\n        //this.cachedUploadNetworkers[2].requestMessageStatus();\n      }, 5e3);\n\n      deferred.catch(noop).finally(() => {\n        clearInterval(interval);\n      });\n    }\n\n    const rejectPromise = async(error: ApiError) => {\n      if(!error) {\n        error = {type: 'ERROR_EMPTY'};\n      } else if(!isObject(error)) {\n        error = {message: error};\n      }\n\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') || \n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\n        this.logOut();\n      }\n\n      if(options.ignoreErrors) {\n        throw error;\n      }\n      \n      if(error.code === 406) {\n        error.handled = true;\n      }\n      \n      if(!options.noErrorBox) {\n        error.input = method;\n        error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\n        setTimeout(() => {\n          if(!error.handled) {\n            if(error.code === 401) {\n              this.logOut();\n            } else {\n              // ErrorService.show({error: error}); // WARNING\n            }\n            \n            error.handled = true;\n          }\n        }, 100);\n      }\n\n      throw error;\n    };\n    \n    let dcId: DcId;\n    \n    let cachedNetworker: MTPNetworker;\n    let stack = (new Error()).stack || 'empty stack';\n    const performRequest = (): Promise<any> => {\n      if(afterMessageId) {\n        const after = this.afterMessageTempIds[afterMessageId];\n        if(after) {\n          options.afterMessageId = after.messageId;\n        }\n      }\n\n      const promise = cachedNetworker.wrapApiCall(method, params, options);\n\n      if(prepareTempMessageId) {\n        this.afterMessageTempIds[prepareTempMessageId] = {\n          messageId: (options as MTMessage).messageId,\n          promise: deferred\n        };\n      }\n\n      return promise.catch((error: ApiError) => {\n        //if(!options.ignoreErrors) {\n        if(error.type !== 'FILE_REFERENCE_EXPIRED'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\n        }\n        \n        if(error.code === 401 && this.baseDcId === dcId) {\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\n            sessionStorage.delete('dc')\n            sessionStorage.delete('user_auth'); // ! возможно тут вообще не нужно это делать, но нужно проверить случай с USER_DEACTIVATED (https://core.telegram.org/api/errors)\n            //this.telegramMeNotify(false);\n          }\n          \n          throw error;\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\n          if(this.cachedExportPromise[dcId] === undefined) {\n            const promise = new Promise((exportResolve, exportReject) => {\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\n                this.invokeApi('auth.importAuthorization', {\n                  id: exportedAuth.id,\n                  bytes: exportedAuth.bytes\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\n              }, exportReject);\n            });\n            \n            this.cachedExportPromise[dcId] = promise;\n          }\n          \n          return this.cachedExportPromise[dcId].then(() => performRequest());\n        } else if(error.code === 303) {\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            if(options.dcId) {\n              options.dcId = newDcId;\n            } else {\n              this.setBaseDcId(newDcId);\n            }\n            \n            return this.invokeApi(method, params, options);\n          }\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            options.dcId = newDcId;\n            return this.invokeApi(method, params, options);\n          } else {\n            throw error;\n          }\n        } else if(error.code === 400 && error.type === 'CONNECTION_NOT_INITED') {\n          this.networkerFactory.unsetConnectionInited();\n          return performRequest();\n        } else if(!options.rawError && error.code === 420) {\n          const waitTime = +error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 1;\n          \n          if(waitTime > (options.floodMaxTimeout !== undefined ? options.floodMaxTimeout : 60) && !options.prepareTempMessageId) {\n            throw error;\n          }\n          \n          return pause(waitTime/* (waitTime + 5) */ * 1000).then(() => performRequest());\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\n          const after = this.afterMessageTempIds[afterMessageId];\n\n          afterMessageId = undefined;\n          delete options.afterMessageId;\n\n          if(after) return after.promise.then(() => performRequest());\n          else return performRequest();\n        } else if(!options.rawError && error.code === 500) {\n          const now = Date.now();\n          if(options.stopTime) {\n            if(now >= options.stopTime) {\n              throw error;\n            }\n          }\n          \n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\n          return pause(options.waitTime * 1000).then(() => performRequest());\n        } else if(error.type === 'UNKNOWN') {\n          return pause(1000).then(() => performRequest());\n        } else {\n          throw error;\n        }\n      });\n    }\n    \n    let p: Promise<MTPNetworker>;\n    if(dcId = (options.dcId || this.baseDcId)) {\n      p = this.getNetworker(dcId, options);\n    } else {\n      p = this.getBaseDcId().then((baseDcId) => this.getNetworker(dcId = baseDcId, options));\n    }\n\n    p.then((networker) => {\n      cachedNetworker = networker;\n      const promise = performRequest();\n      cachedNetworker.attachPromise(deferred, options as MTMessage);\n      return promise;\n    })\n    .then(deferred.resolve)\n    .catch(rejectPromise)\n    .catch(deferred.reject);\n\n    return deferred;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport applyMixins from \"../../helpers/applyMixins\";\nimport EventListenerBase from \"../../helpers/eventListenerBase\";\nimport { AppManager } from \"../appManagers/manager\";\n\nexport type StatePeerType = 'recentSearch' | 'topPeer' | 'dialog' | 'contact' | 'topMessage' | 'self';\n\ntype PeersStorageKey = `${StatePeerType}_${string | PeerId}` | StatePeerType;\n\nclass PeersStorage {\n  private neededPeers: Map<PeerId, Set<PeersStorageKey>> = new Map();\n  private singlePeerMap: Map<PeersStorageKey, Set<PeerId>> = new Map();\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  protected after() {\n    this.rootScope.addEventListener('user_auth', () => {\n      this.requestPeer(this.appPeersManager.peerId, 'self');\n    });\n  }\n\n  public requestPeer(peerId: PeerId, key: PeersStorageKey) {\n    let set = this.neededPeers.get(peerId);\n    if(set && set.has(key)) {\n      return;\n    }\n\n    if(!set) {\n      set = new Set();\n      this.neededPeers.set(peerId, set);\n    }\n\n    set.add(key);\n\n    this.dispatchEvent('peerNeeded', peerId);\n  }\n\n  public releasePeer(peerId: PeerId, key: PeersStorageKey) {\n    const set = this.neededPeers.get(peerId);\n    if(!set) {\n      return;\n    }\n\n    set.delete(key);\n\n    if(!set.size) {\n      this.neededPeers.delete(peerId);\n      this.dispatchEvent('peerUnneeded', peerId);\n    }\n  }\n\n  public requestPeersForKey(peerIds: Set<PeerId> | number[], key: PeersStorageKey) {\n    if(Array.isArray(peerIds)) {\n      peerIds = new Set(peerIds);\n    }\n\n    let set = this.singlePeerMap.get(key);\n    if(set) {\n      for(const peerId of set) {\n        if(peerIds.has(peerId)) {\n          continue;\n        }\n        \n        this.releasePeer(peerId, key);\n        set.delete(peerId);\n      }\n\n      if(!set.size && !peerIds.size) {\n        this.singlePeerMap.delete(key);\n        return;\n      }\n    }\n\n    if(peerIds.size) {\n      if(!set) {\n        set = new Set();\n        this.singlePeerMap.set(key, set);\n      }\n\n      for(const peerId of peerIds) {\n        if(set.has(peerId)) {\n          continue;\n        }\n\n        this.requestPeer(peerId, key);\n        set.add(peerId);\n      }\n    }\n  }\n\n  public isPeerNeeded(peerId: PeerId) {\n    return this.neededPeers.has(peerId);\n  }\n}\n\ninterface PeersStorage extends EventListenerBase<{\n  peerNeeded: (peerId: PeerId) => void,\n  peerUnneeded: (peerId: PeerId) => void,\n}>, AppManager {}\napplyMixins(PeersStorage, [EventListenerBase, AppManager]);\n\nexport default PeersStorage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { MyDocument } from \"../appManagers/appDocsManager\";\nimport type { MyPhoto } from \"../appManagers/appPhotosManager\";\n\nexport type ThumbCache = {\n  downloaded: number, \n  url: string,\n  type: string\n};\n\nexport type ThumbsCache = {\n  [key: string]: {\n    [size: string]: ThumbCache\n  }\n};\n\nconst thumbFullSize = 'full';\n\nexport default class ThumbsStorage {\n  private thumbsCache: ThumbsCache = {};\n\n  public getCacheContext(media: MyPhoto | MyDocument, thumbSize: string = thumbFullSize): ThumbCache {\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\n      thumbSize = thumbFullSize;\n    } */\n\n    const key = media._ + media.id;\n    const cache = this.thumbsCache[key] ??= {};\n    return cache[thumbSize] ??= {downloaded: 0, url: '', type: thumbSize};\n  }\n\n  public setCacheContextURL(media: MyPhoto | MyDocument, thumbSize: string = thumbFullSize, url: string, downloaded: number = 0) {\n    const cacheContext = this.getCacheContext(media, thumbSize);\n    cacheContext.url = url;\n    cacheContext.downloaded = downloaded;\n    return cacheContext;\n  }\n\n  public deleteCacheContext(media: MyPhoto | MyDocument, thumbSize: string = thumbFullSize) {\n    const key = media._ + media.id;\n    const cache = this.thumbsCache[key];\n    if(cache) {\n      delete cache[thumbSize];\n    }\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport type MTProtoConstructor = {\r\n  id: number,\r\n  predicate: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport type MTProtoMethod = {\r\n  id: number,\r\n  method: string,\r\n  params: Array<{\r\n    name: string,\r\n    type: string\r\n  }>,\r\n  type: string\r\n};\r\n\r\nexport default {\"MTProto\":{\"constructors\":[{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":85337187,\"predicate\":\"resPQ\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"server_public_key_fingerprints\",\"type\":\"Vector<long>\"}],\"type\":\"ResPQ\"},{\"id\":-1443537003,\"predicate\":\"p_q_inner_data_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":1459478408,\"predicate\":\"p_q_inner_data_temp_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"},{\"name\":\"expires_in\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":-790100132,\"predicate\":\"server_DH_params_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_answer\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-1249309254,\"predicate\":\"server_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"dh_prime\",\"type\":\"bytes\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"server_time\",\"type\":\"int\"}],\"type\":\"Server_DH_inner_data\"},{\"id\":1715713620,\"predicate\":\"client_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"retry_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"}],\"type\":\"Client_DH_Inner_Data\"},{\"id\":1003222836,\"predicate\":\"dh_gen_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash1\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1188831161,\"predicate\":\"dh_gen_retry\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash2\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":-1499615742,\"predicate\":\"dh_gen_fail\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash3\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1973679973,\"predicate\":\"bind_auth_key_inner\",\"params\":[{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"temp_auth_key_id\",\"type\":\"long\"},{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"temp_session_id\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"}],\"type\":\"BindAuthKeyInner\"},{\"id\":-212046591,\"predicate\":\"rpc_result\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"Object\"}],\"type\":\"RpcResult\"},{\"id\":558156313,\"predicate\":\"rpc_error\",\"params\":[{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"error_message\",\"type\":\"string\"}],\"type\":\"RpcError\"},{\"id\":1579864942,\"predicate\":\"rpc_answer_unknown\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-847714938,\"predicate\":\"rpc_answer_dropped_running\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-1539647305,\"predicate\":\"rpc_answer_dropped\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seq_no\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"}],\"type\":\"RpcDropAnswer\"},{\"id\":155834844,\"predicate\":\"future_salt\",\"params\":[{\"name\":\"valid_since\",\"type\":\"int\"},{\"name\":\"valid_until\",\"type\":\"int\"},{\"name\":\"salt\",\"type\":\"long\"}],\"type\":\"FutureSalt\"},{\"id\":-1370486635,\"predicate\":\"future_salts\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"now\",\"type\":\"int\"},{\"name\":\"salts\",\"type\":\"vector<future_salt>\"}],\"type\":\"FutureSalts\"},{\"id\":880243653,\"predicate\":\"pong\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-501201412,\"predicate\":\"destroy_session_ok\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":1658015945,\"predicate\":\"destroy_session_none\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1631450872,\"predicate\":\"new_session_created\",\"params\":[{\"name\":\"first_msg_id\",\"type\":\"long\"},{\"name\":\"unique_id\",\"type\":\"long\"},{\"name\":\"server_salt\",\"type\":\"long\"}],\"type\":\"NewSession\"},{\"id\":1945237724,\"predicate\":\"msg_container\",\"params\":[{\"name\":\"messages\",\"type\":\"vector<%Message>\"}],\"type\":\"MessageContainer\"},{\"id\":1538843921,\"predicate\":\"message\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seqno\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"body\",\"type\":\"Object\"}],\"type\":\"Message\"},{\"id\":-530561358,\"predicate\":\"msg_copy\",\"params\":[{\"name\":\"orig_message\",\"type\":\"Message\"}],\"type\":\"MessageCopy\"},{\"id\":812830625,\"predicate\":\"gzip_packed\",\"params\":[{\"name\":\"packed_data\",\"type\":\"bytes\"}],\"type\":\"Object\"},{\"id\":1658238041,\"predicate\":\"msgs_ack\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsAck\"},{\"id\":-1477445615,\"predicate\":\"bad_msg_notification\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"}],\"type\":\"BadMsgNotification\"},{\"id\":-307542917,\"predicate\":\"bad_server_salt\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"new_server_salt\",\"type\":\"long\"}],\"type\":\"BadMsgNotification\"},{\"id\":2105940488,\"predicate\":\"msg_resend_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgResendReq\"},{\"id\":-630588590,\"predicate\":\"msgs_state_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsStateReq\"},{\"id\":81704317,\"predicate\":\"msgs_state_info\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsStateInfo\"},{\"id\":-1933520591,\"predicate\":\"msgs_all_info\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsAllInfo\"},{\"id\":661470918,\"predicate\":\"msg_detailed_info\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-2137147681,\"predicate\":\"msg_new_detailed_info\",\"params\":[{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-161422892,\"predicate\":\"destroy_auth_key_ok\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":178201177,\"predicate\":\"destroy_auth_key_none\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":-368010477,\"predicate\":\"destroy_auth_key_fail\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}],\"methods\":[{\"id\":-1099002127,\"method\":\"req_pq_multi\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"}],\"type\":\"ResPQ\"},{\"id\":-686627650,\"method\":\"req_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"public_key_fingerprint\",\"type\":\"long\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-184262881,\"method\":\"set_client_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1491380032,\"method\":\"rpc_drop_answer\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"}],\"type\":\"RpcDropAnswer\"},{\"id\":-1188971260,\"method\":\"get_future_salts\",\"params\":[{\"name\":\"num\",\"type\":\"int\"}],\"type\":\"FutureSalts\"},{\"id\":2059302892,\"method\":\"ping\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-213746804,\"method\":\"ping_delay_disconnect\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"},{\"name\":\"disconnect_delay\",\"type\":\"int\"}],\"type\":\"Pong\"},{\"id\":-414113498,\"method\":\"destroy_session\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1835453025,\"method\":\"http_wait\",\"params\":[{\"name\":\"max_delay\",\"type\":\"int\"},{\"name\":\"wait_after\",\"type\":\"int\"},{\"name\":\"max_wait\",\"type\":\"int\"}],\"type\":\"HttpWait\"},{\"id\":-784117408,\"method\":\"destroy_auth_key\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}]},\"API\":{\"constructors\":[{\"id\":-1132882121,\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1720552011,\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":1072550713,\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":-994444869,\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":1450380236,\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":2134579434,\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":2107670217,\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":900291769,\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1182234929,\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-138301121,\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-208488460,\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":-181407105,\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-1771768449,\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":505969924,\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1279654347,\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-104578748,\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":-122978821,\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":480546647,\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":-968723890,\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"InputChatPhoto\"},{\"id\":-1991004873,\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":-457104426,\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":1210199983,\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"InputGeoPoint\"},{\"id\":483901197,\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":1001634122,\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":-539317279,\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":1498486562,\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":918946202,\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1432995067,\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1086091090,\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":8322574,\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-891180321,\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":172975040,\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1373745011,\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1384777335,\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1258941372,\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1278304028,\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":276907596,\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-742634630,\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"User\"},{\"id\":1326562017,\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":-2100168954,\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":164646985,\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-306628279,\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":9203775,\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":693512293,\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Chat\"},{\"id\":1103884886,\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.25?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":1704108455,\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":-779165146,\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.13?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"call\",\"type\":\"flags.12?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.15?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.16?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.17?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.17?Vector<long>\"},{\"name\":\"available_reactions\",\"type\":\"flags.18?Vector<string>\"}],\"type\":\"ChatFull\"},{\"id\":-1070776313,\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-2023500831,\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":1018991608,\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":935395612,\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":476978193,\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":-1868117372,\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"peer_id\",\"type\":\"flags.0?Peer\"}],\"type\":\"Message\"},{\"id\":940666592,\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"pinned\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"forwards\",\"type\":\"flags.10?int\"},{\"name\":\"replies\",\"type\":\"flags.23?MessageReplies\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":721967202,\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":1038967584,\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":1766936791,\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1457575028,\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":1882335561,\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageMedia\"},{\"id\":-1618676578,\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":-1230047312,\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1119368275,\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1247687078,\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":2144015272,\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-1780220945,\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":365886720,\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1539362612,\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1460809483,\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"}],\"type\":\"Dialog\"},{\"id\":590459437,\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":-82216347,\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"video_sizes\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":236446268,\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":1976012384,\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":35527382,\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":286776671,\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":-1297942941,\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"GeoPoint\"},{\"id\":1577067778,\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":872119224,\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"setup_password_required\",\"type\":\"flags.1?true\"},{\"name\":\"otherwise_relogin_days\",\"type\":\"flags.1?int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":-1271602504,\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1195615476,\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":423314455,\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":1251338318,\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-551616469,\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?NotificationSound\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":-1472527322,\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"ios_sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"android_sound\",\"type\":\"flags.4?NotificationSound\"},{\"name\":\"other_sound\",\"type\":\"flags.5?NotificationSound\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-1525149427,\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"},{\"name\":\"autoarchived\",\"type\":\"flags.7?true\"},{\"name\":\"invite_members\",\"type\":\"flags.8?true\"},{\"name\":\"request_chat_broadcast\",\"type\":\"flags.10?true\"},{\"name\":\"geo_distance\",\"type\":\"flags.6?int\"},{\"name\":\"request_chat_title\",\"type\":\"flags.9?string\"},{\"name\":\"request_chat_date\",\"type\":\"flags.9?int\"}],\"type\":\"PeerSettings\"},{\"id\":-1539849235,\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1490799288,\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":505595789,\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":777640226,\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1376497949,\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1041980751,\"predicate\":\"inputReportReasonOther\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1938625919,\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"video_calls_available\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.15?string\"},{\"name\":\"private_forward_name\",\"type\":\"flags.16?string\"},{\"name\":\"bot_group_admin_rights\",\"type\":\"flags.17?ChatAdminRights\"},{\"name\":\"bot_broadcast_admin_rights\",\"type\":\"flags.18?ChatAdminRights\"}],\"type\":\"UserFull\"},{\"id\":341499403,\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":-1052885936,\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":383348795,\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":-1219778094,\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":-353862078,\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":2010127419,\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":182326673,\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":-513392236,\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":364538944,\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":1910543603,\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1938715001,\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":978610270,\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1694474197,\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-438840932,\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1269012015,\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1474492012,\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1777752804,\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1614803355,\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1458172132,\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1629621880,\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2129714567,\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-3644025,\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":522914557,\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1318109142,\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1576161051,\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1071741569,\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-2092401936,\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":125178264,\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":-440534818,\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":-1007549728,\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-232290676,\"predicate\":\"updateUserPhoto\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"photo\",\"type\":\"UserProfilePhoto\"},{\"name\":\"previous\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-1519637954,\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":1567990072,\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":16030880,\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-1459938943,\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-484987010,\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":826001400,\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":1299050149,\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":2027216577,\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1918567619,\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1957577280,\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1916114267,\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":352657236,\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":539045032,\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":157948117,\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":414687501,\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":856375399,\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phonecalls_enabled\",\"type\":\"flags.1?true\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"ignore_phone_entities\",\"type\":\"flags.5?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"pfs_enabled\",\"type\":\"flags.13?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"saved_gifs_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"stickers_faved_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"pinned_dialogs_count_max\",\"type\":\"int\"},{\"name\":\"pinned_infolder_count_max\",\"type\":\"int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"}],\"type\":\"Config\"},{\"id\":-1910892683,\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":-860107216,\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"sticker\",\"type\":\"flags.3?Document\"}],\"type\":\"help.AppUpdate\"},{\"id\":-1000708810,\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":415997816,\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":314359194,\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":386986326,\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1264392051,\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":956179895,\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1417756512,\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":1722964307,\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":1223809356,\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1643173063,\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":505183301,\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"history_deleted\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":-247351839,\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":-1038136962,\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":1248893260,\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":406307684,\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":1690108678,\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1511503333,\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":-182231723,\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-317144808,\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":594758406,\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":-1058912715,\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":740433629,\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":1443858741,\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-1802240206,\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-95482955,\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":767652808,\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1037718609,\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-483443337,\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1906403213,\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":1530447553,\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"force_file\",\"type\":\"flags.4?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":860303448,\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"query\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-1666158377,\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1928391342,\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":448771445,\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":-1160743548,\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":922273905,\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":512177195,\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"video_thumbs\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":398898678,\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":-1613493288,\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":-1261946036,\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1073230141,\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1094555409,\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":381645902,\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-44119819,\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1584933265,\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-378127636,\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-718310409,\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-212740181,\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-774682074,\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1441998364,\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":393186209,\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1653390447,\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1290580579,\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":-337352679,\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":-496024847,\"predicate\":\"userStatusRecently\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":129960444,\"predicate\":\"userStatusLastWeek\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":2011940674,\"predicate\":\"userStatusLastMonth\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-298113238,\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":1335282456,\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1137792208,\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":218751099,\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":407582158,\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":320652927,\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":195371015,\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-697604407,\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-1877932953,\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-123988,\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1698855810,\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1198497870,\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-125240806,\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1955338397,\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-463335103,\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1352683077,\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1194283041,\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":88680979,\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1815593308,\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":297109817,\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1662637586,\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":250621158,\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1739392570,\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":358154344,\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-244016606,\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":816245886,\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":313694676,\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":-395967805,\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":-843329861,\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":-1667805217,\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":791617983,\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-2066640507,\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":2139689491,\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-350980120,\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"WebPage\"},{\"id\":-981018084,\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-392411726,\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":-1557277184,\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":-1392388579,\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.3?true\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.4?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":1275039392,\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"},{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":408623183,\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"},{\"name\":\"pending_reset_date\",\"type\":\"flags.5?int\"}],\"type\":\"account.Password\"},{\"id\":-1705233435,\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1036572727,\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":326715557,\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":-1052959727,\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":784356159,\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1551583367,\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":179611673,\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"permanent\",\"type\":\"flags.5?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"start_date\",\"type\":\"flags.4?int\"},{\"name\":\"expire_date\",\"type\":\"flags.1?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.2?int\"},{\"name\":\"usage\",\"type\":\"flags.3?int\"},{\"name\":\"requested\",\"type\":\"flags.7?int\"},{\"name\":\"title\",\"type\":\"flags.8?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1516793212,\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":806110401,\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"flags.5?string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"}],\"type\":\"ChatInvite\"},{\"id\":51520707,\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":1757493555,\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-4838507,\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1645763991,\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":-2044933984,\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":-673242758,\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"animated\",\"type\":\"flags.5?true\"},{\"name\":\"videos\",\"type\":\"flags.6?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumbs\",\"type\":\"flags.4?Vector<PhotoSize>\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_version\",\"type\":\"flags.4?int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":-1240849242,\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":1073147056,\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"apply_min_photo\",\"type\":\"flags.25?true\"},{\"name\":\"fake\",\"type\":\"flags.26?true\"},{\"name\":\"bot_attach_menu\",\"type\":\"flags.27?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"}],\"type\":\"User\"},{\"id\":-1032140601,\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":-468280483,\"predicate\":\"botInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"},{\"name\":\"menu_button\",\"type\":\"BotMenuButton\"}],\"type\":\"BotInfo\"},{\"id\":-1560655744,\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":2002815875,\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":-1606526075,\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2035021048,\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2049074735,\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-571955892,\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-233744186,\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":-1148011883,\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-100378723,\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1868782349,\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1827637959,\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1859134776,\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1692693954,\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1117713463,\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-2106619040,\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":681706865,\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1938967520,\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":1990644519,\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":-1877614335,\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":-292807034,\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":-212145112,\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1566230754,\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":666680316,\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-2107528095,\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"fake\",\"type\":\"flags.25?true\"},{\"name\":\"gigagroup\",\"type\":\"flags.26?true\"},{\"name\":\"noforwards\",\"type\":\"flags.27?true\"},{\"name\":\"join_to_send\",\"type\":\"flags.28?true\"},{\"name\":\"join_request\",\"type\":\"flags.29?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"}],\"type\":\"Chat\"},{\"id\":399807445,\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":2131196633,\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-362240487,\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.20?true\"},{\"name\":\"blocked\",\"type\":\"flags.22?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"can_delete_channel\",\"type\":\"flags2.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.23?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?long\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?long\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"call\",\"type\":\"flags.21?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.24?int\"},{\"name\":\"pending_suggestions\",\"type\":\"flags.25?Vector<string>\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.26?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.27?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.28?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.28?Vector<long>\"},{\"name\":\"default_send_as\",\"type\":\"flags.29?Peer\"},{\"name\":\"available_reactions\",\"type\":\"flags.30?Vector<string>\"}],\"type\":\"ChatFull\"},{\"id\":182649427,\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":1682413576,\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":-1781355374,\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":277713951,\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1666927625,\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1656358105,\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1842450928,\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1020437742,\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-232346616,\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1041346555,\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1531132162,\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":543450958,\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1798033689,\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":-847783593,\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":-1072953408,\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":900251559,\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_request\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":803602899,\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":-566281095,\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1268741783,\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1548400251,\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1699676497,\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-541588713,\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":-462696732,\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"ChatParticipant\"},{\"id\":-1600962725,\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-674602590,\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-519864430,\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-365344535,\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1328445861,\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":2013922064,\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":1753886890,\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":196268545,\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":1135492588,\"predicate\":\"updateStickerSets\",\"params\":[],\"type\":\"Update\"},{\"id\":-402498398,\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":-2069878259,\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":-1821035490,\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":864077702,\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1036876423,\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2000710887,\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1984755728,\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1937807902,\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":295067450,\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1803769784,\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":1232025500,\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"peer_type\",\"type\":\"flags.1?InlineQueryPeerType\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":317794823,\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":1358283666,\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":928101534,\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1107622874,\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1343122938,\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1571494644,\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1601666510,\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"imported\",\"type\":\"flags.7?true\"},{\"name\":\"from_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"psa_type\",\"type\":\"flags.6?string\"}],\"type\":\"MessageFwdHeader\"},{\"id\":457133559,\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1799538451,\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1923290508,\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1948046307,\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":577556219,\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1035688326,\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1073693790,\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1398007207,\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1425815847,\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":629866245,\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":901503851,\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requires_password\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":-1318425559,\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-59151553,\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":90744648,\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1218642516,\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":911761060,\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-1177566067,\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":649453030,\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-469536605,\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1768777083,\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1098628881,\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1494368259,\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":85477117,\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1970903652,\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":416402882,\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1462213465,\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-459324,\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":400266251,\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1995686519,\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":1763610706,\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":1008755359,\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":863093588,\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-305282981,\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":-1419371685,\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":344356834,\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":104314861,\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1122524854,\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":371037736,\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-75283823,\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":-567906571,\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":1891070632,\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":-595914432,\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":546203849,\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":975236280,\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1218471511,\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-299124375,\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":453805082,\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":-40996577,\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"DraftMessage\"},{\"id\":-1615153660,\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-958657434,\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-2067782896,\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1461528386,\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":186120336,\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":-1999405994,\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":-1706939360,\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1338747336,\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":946083368,\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":904138920,\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":1678812626,\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1574314746,\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":861169551,\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":-440664550,\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-78455655,\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":872932635,\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1361650766,\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":-1744710921,\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1251549527,\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":70813275,\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":-1107729093,\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":1336154098,\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1262639204,\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-38694904,\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":-750828557,\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":53231223,\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":-1020139510,\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":1358175439,\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1834538890,\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1940093419,\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":-1707344487,\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":1258196845,\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":791390623,\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1663561404,\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-599948721,\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":1950782688,\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":1730456516,\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-653089380,\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1054465340,\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1678197867,\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1816074681,\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1009288385,\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":-564523562,\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":2120376535,\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":324435594,\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":1890305021,\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1879401953,\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1162877472,\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":-1076861716,\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-248793375,\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1182402406,\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1066346178,\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":1216809369,\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-618614392,\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":-837994576,\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":-454524911,\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":641563686,\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1329878739,\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":391759200,\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":2089805750,\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":972174080,\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":-1468953147,\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-229005301,\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1705048653,\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":52401552,\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1930545681,\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":-88417185,\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1030105979,\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-580219064,\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-2048646399,\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-527056480,\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1471006352,\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-84416311,\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1852826908,\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-99664734,\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":2104790276,\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":-2095595325,\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-1684914010,\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-886477832,\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":215516896,\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"},{\"name\":\"max_tip_amount\",\"type\":\"flags.8?long\"},{\"name\":\"suggested_tip_amounts\",\"type\":\"flags.8?Vector<long>\"}],\"type\":\"Invoice\"},{\"id\":-646342540,\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-368917890,\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":-1892568281,\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":-2074799289,\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":512535275,\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":-1868808300,\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":-1344716869,\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1080663248,\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-842892769,\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":475467473,\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-1678949555,\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":-1036396922,\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":568808380,\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":378828315,\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?PaymentSavedCredentials\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-784000893,\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":1314881805,\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1891958275,\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"tip_amount\",\"type\":\"flags.3?long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-74456004,\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":-1056001329,\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":873977640,\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-614138572,\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":-1239335713,\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":-1246823043,\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":-1934976362,\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-6249322,\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"InputStickerSetItem\"},{\"id\":-1425052898,\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":506920429,\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":1399245077,\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":-987599081,\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"}],\"type\":\"PhoneCall\"},{\"id\":347139340,\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":912311057,\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":-1770029977,\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"}],\"type\":\"PhoneCall\"},{\"id\":1355435489,\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"PhoneCall\"},{\"id\":-1655957568,\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":-58224696,\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":-326966976,\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":-2134272152,\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":-2132731265,\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":2054952868,\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1253451181,\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1997373508,\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":608050278,\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-242427324,\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":-290921362,\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1449145777,\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-914167110,\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":1462101002,\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":-283684427,\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":-892239370,\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":1816636575,\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":695856818,\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":-209337866,\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":-288727837,\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":1180041828,\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1442983757,\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":885242707,\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?long\"},{\"name\":\"promoted_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":1844969806,\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"kicked_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":338142689,\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":106343499,\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-421545947,\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1427671598,\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1783299128,\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1129042607,\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":460916654,\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":648939889,\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-370660328,\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1889215493,\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1121994683,\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":405815507,\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-124291086,\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-484690728,\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-422036098,\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-714643696,\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":531458253,\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":-309659827,\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-368018716,\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"},{\"name\":\"group_call\",\"type\":\"flags.14?true\"},{\"name\":\"invites\",\"type\":\"flags.15?true\"},{\"name\":\"send\",\"type\":\"flags.16?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":511092620,\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-2143067670,\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1558266229,\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":1200788123,\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1634752813,\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":750063767,\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-451831443,\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1153291573,\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-1040652646,\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1887741886,\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":-1312568665,\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-85549226,\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":178373535,\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-419271411,\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-530392189,\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1304443240,\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1599903217,\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1759532989,\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.2?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":-1186937242,\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.1?int\"}],\"type\":\"MessageMedia\"},{\"id\":1189204285,\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1188296222,\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1294306862,\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-347535331,\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1140172836,\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":235081943,\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-266911767,\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":1951620897,\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":482797855,\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":-1493633966,\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":-313079300,\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":-1502174430,\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-1160215659,\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-2037963464,\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":-1687559349,\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1280209983,\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1410748418,\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-55902537,\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":-445792507,\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":223655517,\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1963942446,\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":1648543603,\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":-104284986,\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":1968737087,\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":-483352705,\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":686618977,\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":859091184,\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":1399317950,\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":-876089816,\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":1679398724,\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":-534283678,\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":-1964327229,\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":2103482845,\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":569137759,\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":-1658158621,\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":1034709504,\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":115615172,\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1596951477,\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1717268701,\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-874308058,\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-63531698,\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1995211763,\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1954007928,\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1713143702,\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-368907213,\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1289704741,\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1908627474,\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":411017418,\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":-618540889,\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":-316748368,\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":-391902247,\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":12467706,\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2037765467,\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-449327402,\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":2054162547,\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":1717706985,\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":871426631,\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":-1389486888,\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-2128640689,\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":455635795,\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":-648257196,\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":1722786150,\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":1783556146,\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":289586518,\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":1304052993,\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":700340377,\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":-513517117,\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-253500010,\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1625153079,\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":-1255369827,\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":-1685456582,\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-732254058,\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":4883767,\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-1141711456,\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-2042159726,\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":354925740,\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":982592842,\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":-1736378792,\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-763367294,\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-2036501105,\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-1592506512,\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":878931416,\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2103600678,\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":41187252,\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":-1078332329,\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":-1600596305,\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":488313413,\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":-1059185703,\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":1064139624,\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":-952869270,\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":736157604,\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":-1222740358,\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":-146520221,\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1715350371,\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1311015810,\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-703403793,\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-311786236,\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-939827711,\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":55281185,\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":483104362,\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":136105807,\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":504660880,\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":878078826,\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":-524237339,\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":-1085412734,\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":1869903447,\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":-1188055347,\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":635466748,\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":1577484359,\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1730311882,\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1702174239,\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":1987480557,\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1282352120,\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":370236054,\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":-1538310410,\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-1738178803,\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":-610373422,\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":961092808,\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":894777186,\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":-1945767479,\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":-206688531,\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":32192344,\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":-202219658,\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1398708869,\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":1823064809,\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":-2032041631,\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"string\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":997055186,\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":-591909213,\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<long>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":261416433,\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":1272375192,\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":-264117680,\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":1202287072,\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":-525288402,\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":1605510357,\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"},{\"name\":\"anonymous\",\"type\":\"flags.10?true\"},{\"name\":\"manage_call\",\"type\":\"flags.11?true\"},{\"name\":\"other\",\"type\":\"flags.12?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":-1626209256,\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":1421875280,\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-433014407,\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":1913199744,\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":-1150621555,\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":771095562,\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1895328189,\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":471437699,\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":-842824308,\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":-1973130814,\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"},{\"name\":\"allow_missed_call\",\"type\":\"flags.5?true\"},{\"name\":\"logout_tokens\",\"type\":\"flags.6?Vector<bytes>\"}],\"type\":\"CodeSettings\"},{\"id\":499236004,\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"third_background_color\",\"type\":\"flags.5?int\"},{\"name\":\"fourth_background_color\",\"type\":\"flags.6?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"}],\"type\":\"WallPaperSettings\"},{\"id\":-532532493,\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"int\"},{\"name\":\"file_size_max\",\"type\":\"int\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":1674235686,\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":-709641735,\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":594408994,\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":1556570557,\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":-1519029347,\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":-1275374751,\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":-1529000952,\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1777096355,\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1461304012,\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1777000467,\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1075322878,\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-667654413,\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":925204121,\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1652231205,\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb_version\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":-11252123,\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":1908216652,\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":1684014375,\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":1363483106,\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":-70073706,\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":-373643672,\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":422972864,\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":497305826,\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":1536380829,\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1468331492,\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1121318848,\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":55761658,\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-778378131,\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1472172887,\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-68239120,\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":84703944,\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-398136321,\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":280464681,\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":-802258988,\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":-1831650802,\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1886646706,\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1445536993,\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":-2079962673,\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-380694650,\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":1796427406,\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1103656293,\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-1672577397,\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1090087980,\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":34469328,\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1786671974,\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":-1078612597,\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":547062491,\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":-901375139,\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-1263546448,\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":241923758,\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-606798099,\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":1401984889,\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1148485274,\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":-666824391,\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":42402760,\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":967122427,\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":-1870238482,\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-797791052,\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":1012306921,\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":-175567375,\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":-1609668650,\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"for_chat\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<ThemeSettings>\"},{\"name\":\"emoticon\",\"type\":\"flags.6?string\"},{\"name\":\"installs_count\",\"type\":\"flags.4?int\"}],\"type\":\"Theme\"},{\"id\":-199313886,\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":-1707242387,\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":-2112423005,\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":-786326563,\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1124062251,\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-2027964103,\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1448076945,\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":1654593920,\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":110008598,\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":957176926,\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":1474462241,\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":-1456996667,\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":-1012849566,\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-69724536,\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1212997976,\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1834973166,\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1527845466,\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1770371538,\"predicate\":\"inputWallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":-528465642,\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":-1881255857,\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":-94849324,\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":1421174295,\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":274961865,\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":886196148,\"predicate\":\"messageUserVote\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":1017491692,\"predicate\":\"messageUserVoteInputOption\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":-1973033641,\"predicate\":\"messageUserVoteMultiple\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":136574537,\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessageUserVote>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":-1144565411,\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1981704948,\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-177732982,\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":1042605427,\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":-118740917,\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":1949890536,\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":2004110666,\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":654302845,\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":-1512627963,\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":889491791,\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":-1237848657,\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":-884757282,\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":-875679776,\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":1244130093,\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1092839390,\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1901828938,\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":-1387279939,\"predicate\":\"messageInteractionCounters\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"MessageInteractionCounters\"},{\"id\":-1107852396,\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_message_interactions\",\"type\":\"Vector<MessageInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":-428884101,\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":1065280907,\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-427863538,\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":-1728664459,\"predicate\":\"help.promoDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.PromoData\"},{\"id\":-1942390465,\"predicate\":\"help.promoData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"proxy\",\"type\":\"flags.0?true\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"psa_type\",\"type\":\"flags.1?string\"},{\"name\":\"psa_message\",\"type\":\"flags.2?string\"}],\"type\":\"help.PromoData\"},{\"id\":-567037804,\"predicate\":\"videoSize\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.0?double\"}],\"type\":\"VideoSize\"},{\"id\":643940105,\"predicate\":\"updatePhoneCallSignalingData\",\"params\":[{\"name\":\"phone_call_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Update\"},{\"id\":1634294960,\"predicate\":\"chatInvitePeek\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":-1660637285,\"predicate\":\"statsGroupTopPoster\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"int\"},{\"name\":\"avg_chars\",\"type\":\"int\"}],\"type\":\"StatsGroupTopPoster\"},{\"id\":-682079097,\"predicate\":\"statsGroupTopAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"deleted\",\"type\":\"int\"},{\"name\":\"kicked\",\"type\":\"int\"},{\"name\":\"banned\",\"type\":\"int\"}],\"type\":\"StatsGroupTopAdmin\"},{\"id\":1398765469,\"predicate\":\"statsGroupTopInviter\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"invitations\",\"type\":\"int\"}],\"type\":\"StatsGroupTopInviter\"},{\"id\":-276825834,\"predicate\":\"stats.megagroupStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"members\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"messages\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"viewers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"posters\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"members_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_members_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"messages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"actions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"weekdays_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_posters\",\"type\":\"Vector<StatsGroupTopPoster>\"},{\"name\":\"top_admins\",\"type\":\"Vector<StatsGroupTopAdmin>\"},{\"name\":\"top_inviters\",\"type\":\"Vector<StatsGroupTopInviter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-1096616924,\"predicate\":\"globalPrivacySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archive_and_mute_new_noncontact_peers\",\"type\":\"flags.0?Bool\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":1667228533,\"predicate\":\"phoneConnectionWebrtc\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"turn\",\"type\":\"flags.0?true\"},{\"name\":\"stun\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"type\":\"PhoneConnection\"},{\"id\":1107543535,\"predicate\":\"help.countryCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_code\",\"type\":\"string\"},{\"name\":\"prefixes\",\"type\":\"flags.0?Vector<string>\"},{\"name\":\"patterns\",\"type\":\"flags.1?Vector<string>\"}],\"type\":\"help.CountryCode\"},{\"id\":-1014526429,\"predicate\":\"help.country\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"iso2\",\"type\":\"string\"},{\"name\":\"default_name\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.1?string\"},{\"name\":\"country_codes\",\"type\":\"Vector<help.CountryCode>\"}],\"type\":\"help.Country\"},{\"id\":-1815339214,\"predicate\":\"help.countriesListNotModified\",\"params\":[],\"type\":\"help.CountriesList\"},{\"id\":-2016381538,\"predicate\":\"help.countriesList\",\"params\":[{\"name\":\"countries\",\"type\":\"Vector<help.Country>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":1163625789,\"predicate\":\"messageViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"views\",\"type\":\"flags.0?int\"},{\"name\":\"forwards\",\"type\":\"flags.1?int\"},{\"name\":\"replies\",\"type\":\"flags.2?MessageReplies\"}],\"type\":\"MessageViews\"},{\"id\":-761649164,\"predicate\":\"updateChannelMessageForwards\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-96535659,\"predicate\":\"photoSizeProgressive\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<int>\"}],\"type\":\"PhotoSize\"},{\"id\":-1228606141,\"predicate\":\"messages.messageViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<MessageViews>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.MessageViews\"},{\"id\":-693004986,\"predicate\":\"updateReadChannelDiscussionInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"},{\"name\":\"broadcast_id\",\"type\":\"flags.0?long\"},{\"name\":\"broadcast_post\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1767677564,\"predicate\":\"updateReadChannelDiscussionOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1506535550,\"predicate\":\"messages.discussionMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"max_id\",\"type\":\"flags.0?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"flags.1?int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"flags.2?int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-1495959709,\"predicate\":\"messageReplyHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_scheduled\",\"type\":\"flags.2?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"reply_to_top_id\",\"type\":\"flags.1?int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":-2083123262,\"predicate\":\"messageReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"comments\",\"type\":\"flags.0?true\"},{\"name\":\"replies\",\"type\":\"int\"},{\"name\":\"replies_pts\",\"type\":\"int\"},{\"name\":\"recent_repliers\",\"type\":\"flags.1?Vector<Peer>\"},{\"name\":\"channel_id\",\"type\":\"flags.0?long\"},{\"name\":\"max_id\",\"type\":\"flags.2?int\"},{\"name\":\"read_max_id\",\"type\":\"flags.3?int\"}],\"type\":\"MessageReplies\"},{\"id\":610945826,\"predicate\":\"updatePeerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"blocked\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-386039788,\"predicate\":\"peerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PeerBlocked\"},{\"id\":-1937192669,\"predicate\":\"updateChannelUserTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-1392895362,\"predicate\":\"inputMessageCallbackQuery\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"InputMessage\"},{\"id\":453242886,\"predicate\":\"channelParticipantLeft\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"ChannelParticipant\"},{\"id\":-531931925,\"predicate\":\"channelParticipantsMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-309990731,\"predicate\":\"updatePinnedMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1538885128,\"predicate\":\"updatePinnedChannelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":464520273,\"predicate\":\"inputMessagesFilterPinned\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1986399595,\"predicate\":\"stats.messageStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.MessageStats\"},{\"id\":-1730095465,\"predicate\":\"messageActionGeoProximityReached\",\"params\":[{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-668906175,\"predicate\":\"photoPathSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-651419003,\"predicate\":\"speakingInGroupCallAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":2004925620,\"predicate\":\"groupCallDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-711498484,\"predicate\":\"groupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join_muted\",\"type\":\"flags.1?true\"},{\"name\":\"can_change_join_muted\",\"type\":\"flags.2?true\"},{\"name\":\"join_date_asc\",\"type\":\"flags.6?true\"},{\"name\":\"schedule_start_subscribed\",\"type\":\"flags.8?true\"},{\"name\":\"can_start_video\",\"type\":\"flags.9?true\"},{\"name\":\"record_video_active\",\"type\":\"flags.11?true\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.12?true\"},{\"name\":\"listeners_hidden\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.3?string\"},{\"name\":\"stream_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"record_start_date\",\"type\":\"flags.5?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.7?int\"},{\"name\":\"unmuted_video_count\",\"type\":\"flags.10?int\"},{\"name\":\"unmuted_video_limit\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-659913713,\"predicate\":\"inputGroupCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGroupCall\"},{\"id\":2047704898,\"predicate\":\"messageActionGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"duration\",\"type\":\"flags.0?int\"}],\"type\":\"MessageAction\"},{\"id\":1345295095,\"predicate\":\"messageActionInviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-341428482,\"predicate\":\"groupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.1?true\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.2?true\"},{\"name\":\"just_joined\",\"type\":\"flags.4?true\"},{\"name\":\"versioned\",\"type\":\"flags.5?true\"},{\"name\":\"min\",\"type\":\"flags.8?true\"},{\"name\":\"muted_by_you\",\"type\":\"flags.9?true\"},{\"name\":\"volume_by_admin\",\"type\":\"flags.10?true\"},{\"name\":\"self\",\"type\":\"flags.12?true\"},{\"name\":\"video_joined\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"active_date\",\"type\":\"flags.3?int\"},{\"name\":\"source\",\"type\":\"int\"},{\"name\":\"volume\",\"type\":\"flags.7?int\"},{\"name\":\"about\",\"type\":\"flags.11?string\"},{\"name\":\"raise_hand_rating\",\"type\":\"flags.13?long\"},{\"name\":\"video\",\"type\":\"flags.6?GroupCallParticipantVideo\"},{\"name\":\"presentation\",\"type\":\"flags.14?GroupCallParticipantVideo\"}],\"type\":\"GroupCallParticipant\"},{\"id\":-124097970,\"predicate\":\"updateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-219423922,\"predicate\":\"updateGroupCallParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":347227392,\"predicate\":\"updateGroupCall\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"call\",\"type\":\"GroupCall\"}],\"type\":\"Update\"},{\"id\":-1636664659,\"predicate\":\"phone.groupCall\",\"params\":[{\"name\":\"call\",\"type\":\"GroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"participants_next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.GroupCall\"},{\"id\":-193506890,\"predicate\":\"phone.groupParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":813821341,\"predicate\":\"inlineQueryPeerTypeSameBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-2093215828,\"predicate\":\"inlineQueryPeerTypePM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-681130742,\"predicate\":\"inlineQueryPeerTypeChat\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1589952067,\"predicate\":\"inlineQueryPeerTypeMegagroup\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1664413338,\"predicate\":\"inlineQueryPeerTypeBroadcast\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":589338437,\"predicate\":\"channelAdminLogEventActionStartGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-610299584,\"predicate\":\"channelAdminLogEventActionDiscardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-115071790,\"predicate\":\"channelAdminLogEventActionParticipantMute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-431740480,\"predicate\":\"channelAdminLogEventActionParticipantUnmute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1456906823,\"predicate\":\"channelAdminLogEventActionToggleGroupCallSetting\",\"params\":[{\"name\":\"join_muted\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1966921727,\"predicate\":\"inputPaymentCredentialsGooglePay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":375566091,\"predicate\":\"messages.historyImport\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"messages.HistoryImport\"},{\"id\":-606432698,\"predicate\":\"sendMessageHistoryImportAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":1578088377,\"predicate\":\"messages.historyImportParsed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pm\",\"type\":\"flags.0?true\"},{\"name\":\"group\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"flags.2?string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":-170010905,\"predicate\":\"inputReportReasonFake\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-275956116,\"predicate\":\"messages.affectedFoundMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":-1441072131,\"predicate\":\"messageActionSetMessagesTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-1147422299,\"predicate\":\"updatePeerHistoryTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-796432838,\"predicate\":\"updateChatParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChatParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChatParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1738720581,\"predicate\":\"updateChannelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChannelParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-997782967,\"predicate\":\"updateBotStopped\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"stopped\",\"type\":\"Bool\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1940201511,\"predicate\":\"chatInviteImporter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"flags.2?string\"},{\"name\":\"approved_by\",\"type\":\"flags.1?long\"}],\"type\":\"ChatInviteImporter\"},{\"id\":-1111085620,\"predicate\":\"messages.exportedChatInvites\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"invites\",\"type\":\"Vector<ExportedChatInvite>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":410107472,\"predicate\":\"messages.exportedChatInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":572915951,\"predicate\":\"messages.exportedChatInviteReplaced\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-2118733814,\"predicate\":\"messages.chatInviteImporters\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"importers\",\"type\":\"Vector<ChatInviteImporter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-219353309,\"predicate\":\"chatAdminWithInvites\",\"params\":[{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"invites_count\",\"type\":\"int\"},{\"name\":\"revoked_invites_count\",\"type\":\"int\"}],\"type\":\"ChatAdminWithInvites\"},{\"id\":-1231326505,\"predicate\":\"messages.chatAdminsWithInvites\",\"params\":[{\"name\":\"admins\",\"type\":\"Vector<ChatAdminWithInvites>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":1557846647,\"predicate\":\"channelAdminLogEventActionParticipantJoinByInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1515256996,\"predicate\":\"channelAdminLogEventActionExportedInviteDelete\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1091179342,\"predicate\":\"channelAdminLogEventActionExportedInviteRevoke\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-384910503,\"predicate\":\"channelAdminLogEventActionExportedInviteEdit\",\"params\":[{\"name\":\"prev_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1048537159,\"predicate\":\"channelAdminLogEventActionParticipantVolume\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1855199800,\"predicate\":\"channelAdminLogEventActionChangeHistoryTTL\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1571952873,\"predicate\":\"messages.checkedHistoryImportPeer\",\"params\":[{\"name\":\"confirm_text\",\"type\":\"string\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":93890858,\"predicate\":\"inputGroupCallStream\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"time_ms\",\"type\":\"long\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"video_channel\",\"type\":\"flags.0?int\"},{\"name\":\"video_quality\",\"type\":\"flags.0?int\"}],\"type\":\"InputFileLocation\"},{\"id\":-1343921601,\"predicate\":\"phone.joinAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":541839704,\"predicate\":\"phone.exportedGroupCallInvite\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":-672693723,\"predicate\":\"inputBotInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":894081801,\"predicate\":\"botInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1281329567,\"predicate\":\"messageActionGroupCallScheduled\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"schedule_date\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-592373577,\"predicate\":\"groupCallParticipantVideoSourceGroup\",\"params\":[{\"name\":\"semantics\",\"type\":\"string\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"GroupCallParticipantVideoSourceGroup\"},{\"id\":1735736008,\"predicate\":\"groupCallParticipantVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"paused\",\"type\":\"flags.0?true\"},{\"name\":\"endpoint\",\"type\":\"string\"},{\"name\":\"source_groups\",\"type\":\"Vector<GroupCallParticipantVideoSourceGroup>\"},{\"name\":\"audio_source\",\"type\":\"flags.1?int\"}],\"type\":\"GroupCallParticipantVideo\"},{\"id\":192428418,\"predicate\":\"updateGroupCallConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"presentation\",\"type\":\"flags.0?true\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-2046910401,\"predicate\":\"stickers.suggestedShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":795652779,\"predicate\":\"botCommandScopeDefault\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1011811544,\"predicate\":\"botCommandScopeUsers\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1877059713,\"predicate\":\"botCommandScopeChats\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-1180016534,\"predicate\":\"botCommandScopeChatAdmins\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-610432643,\"predicate\":\"botCommandScopePeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":1071145937,\"predicate\":\"botCommandScopePeerAdmins\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":169026035,\"predicate\":\"botCommandScopePeerUser\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotCommandScope\"},{\"id\":-478701471,\"predicate\":\"account.resetPasswordFailedWait\",\"params\":[{\"name\":\"retry_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-370148227,\"predicate\":\"account.resetPasswordRequestedWait\",\"params\":[{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-383330754,\"predicate\":\"account.resetPasswordOk\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1299263278,\"predicate\":\"updateBotCommands\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Update\"},{\"id\":-1434950843,\"predicate\":\"messageActionSetChatTheme\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1336228175,\"predicate\":\"sendMessageChooseStickerAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":981691896,\"predicate\":\"sponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"from_id\",\"type\":\"flags.3?Peer\"},{\"name\":\"chat_invite\",\"type\":\"flags.4?ChatInvite\"},{\"name\":\"chat_invite_hash\",\"type\":\"flags.4?string\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"start_param\",\"type\":\"flags.0?string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"SponsoredMessage\"},{\"id\":1705297877,\"predicate\":\"messages.sponsoredMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<SponsoredMessage>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":215889721,\"predicate\":\"inputStickerSetAnimatedEmojiAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":630664139,\"predicate\":\"sendMessageEmojiInteraction\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"interaction\",\"type\":\"DataJSON\"}],\"type\":\"SendMessageAction\"},{\"id\":-1234857938,\"predicate\":\"sendMessageEmojiInteractionSeen\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"SendMessageAction\"},{\"id\":-1227287081,\"predicate\":\"inputBotInlineMessageID64\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":-911191137,\"predicate\":\"searchResultsCalendarPeriod\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"max_msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SearchResultsCalendarPeriod\"},{\"id\":343859772,\"predicate\":\"messages.searchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.1?int\"},{\"name\":\"periods\",\"type\":\"Vector<SearchResultsCalendarPeriod>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":2137295719,\"predicate\":\"searchResultPosition\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"SearchResultsPosition\"},{\"id\":1404185519,\"predicate\":\"messages.searchResultsPositions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"positions\",\"type\":\"Vector<SearchResultsPosition>\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":-339958837,\"predicate\":\"messageActionChatJoinedByRequest\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1885586395,\"predicate\":\"updatePendingJoinRequests\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"requests_pending\",\"type\":\"int\"},{\"name\":\"recent_requesters\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":299870598,\"predicate\":\"updateBotChatInviteRequester\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1347021750,\"predicate\":\"channelAdminLogEventActionParticipantJoinByRequest\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"approved_by\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-376962181,\"predicate\":\"inputKeyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":814112961,\"predicate\":\"keyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"KeyboardButton\"},{\"id\":-2091463255,\"predicate\":\"channels.sendAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-886388890,\"predicate\":\"channelAdminLogEventActionToggleNoForwards\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-738646805,\"predicate\":\"messages.stickerSetNotModified\",\"params\":[],\"type\":\"messages.StickerSet\"},{\"id\":997004590,\"predicate\":\"users.userFull\",\"params\":[{\"name\":\"full_user\",\"type\":\"UserFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.UserFull\"},{\"id\":1753266509,\"predicate\":\"messages.peerSettings\",\"params\":[{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PeerSettings\"},{\"id\":663693416,\"predicate\":\"channelAdminLogEventActionSendMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-702884114,\"predicate\":\"auth.codeTypeMissedCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-2113903484,\"predicate\":\"auth.sentCodeTypeMissedCall\",\"params\":[{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1012759713,\"predicate\":\"auth.loggedOut\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"future_auth_token\",\"type\":\"flags.0?bytes\"}],\"type\":\"auth.LoggedOut\"},{\"id\":357013699,\"predicate\":\"updateMessageReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"MessageReactions\"}],\"type\":\"Update\"},{\"id\":1873957073,\"predicate\":\"reactionCount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"ReactionCount\"},{\"id\":1328256121,\"predicate\":\"messageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"can_see_list\",\"type\":\"flags.2?true\"},{\"name\":\"results\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"recent_reactions\",\"type\":\"flags.1?Vector<MessagePeerReaction>\"}],\"type\":\"MessageReactions\"},{\"id\":834488621,\"predicate\":\"messages.messageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<MessagePeerReaction>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-1065882623,\"predicate\":\"availableReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"static_icon\",\"type\":\"Document\"},{\"name\":\"appear_animation\",\"type\":\"Document\"},{\"name\":\"select_animation\",\"type\":\"Document\"},{\"name\":\"activate_animation\",\"type\":\"Document\"},{\"name\":\"effect_animation\",\"type\":\"Document\"},{\"name\":\"around_animation\",\"type\":\"flags.1?Document\"},{\"name\":\"center_icon\",\"type\":\"flags.1?Document\"}],\"type\":\"AvailableReaction\"},{\"id\":-1626924713,\"predicate\":\"messages.availableReactionsNotModified\",\"params\":[],\"type\":\"messages.AvailableReactions\"},{\"id\":1989032621,\"predicate\":\"messages.availableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<AvailableReaction>\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":852137487,\"predicate\":\"messageEntitySpoiler\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1661470870,\"predicate\":\"channelAdminLogEventActionChangeAvailableReactions\",\"params\":[{\"name\":\"prev_value\",\"type\":\"Vector<string>\"},{\"name\":\"new_value\",\"type\":\"Vector<string>\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1741309751,\"predicate\":\"messages.translateNoResult\",\"params\":[],\"type\":\"messages.TranslatedText\"},{\"id\":-1575684144,\"predicate\":\"messages.translateResultText\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":1370914559,\"predicate\":\"messagePeerReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"unread\",\"type\":\"flags.1?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reaction\",\"type\":\"string\"}],\"type\":\"MessagePeerReaction\"},{\"id\":-2132064081,\"predicate\":\"groupCallStreamChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"last_timestamp_ms\",\"type\":\"long\"}],\"type\":\"GroupCallStreamChannel\"},{\"id\":-790330702,\"predicate\":\"phone.groupCallStreamChannels\",\"params\":[{\"name\":\"channels\",\"type\":\"Vector<GroupCallStreamChannel>\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":177124030,\"predicate\":\"inputReportReasonIllegalDrugs\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1631091139,\"predicate\":\"inputReportReasonPersonalDetails\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":767505458,\"predicate\":\"phone.groupCallStreamRtmpUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":1165423600,\"predicate\":\"attachMenuBotIconColor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"AttachMenuBotIconColor\"},{\"id\":-1297663893,\"predicate\":\"attachMenuBotIcon\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"icon\",\"type\":\"Document\"},{\"name\":\"colors\",\"type\":\"flags.0?Vector<AttachMenuBotIconColor>\"}],\"type\":\"AttachMenuBotIcon\"},{\"id\":-381896846,\"predicate\":\"attachMenuBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"icons\",\"type\":\"Vector<AttachMenuBotIcon>\"}],\"type\":\"AttachMenuBot\"},{\"id\":-237467044,\"predicate\":\"attachMenuBotsNotModified\",\"params\":[],\"type\":\"AttachMenuBots\"},{\"id\":1011024320,\"predicate\":\"attachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bots\",\"type\":\"Vector<AttachMenuBot>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBots\"},{\"id\":-1816172929,\"predicate\":\"attachMenuBotsBot\",\"params\":[{\"name\":\"bot\",\"type\":\"AttachMenuBot\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":397910539,\"predicate\":\"updateAttachMenuBots\",\"params\":[],\"type\":\"Update\"},{\"id\":202659196,\"predicate\":\"webViewResultUrl\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":-2010155333,\"predicate\":\"simpleWebViewResultUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":211046684,\"predicate\":\"webViewMessageSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"msg_id\",\"type\":\"flags.0?InputBotInlineMessageID\"}],\"type\":\"WebViewMessageSent\"},{\"id\":361936797,\"predicate\":\"updateWebViewResultSent\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":326529584,\"predicate\":\"keyboardButtonWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1598009252,\"predicate\":\"keyboardButtonSimpleWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1205698681,\"predicate\":\"messageActionWebViewDataSentMe\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1262252875,\"predicate\":\"messageActionWebViewDataSent\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":347625491,\"predicate\":\"updateBotMenuButton\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Update\"},{\"id\":1966318984,\"predicate\":\"botMenuButtonDefault\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":1113113093,\"predicate\":\"botMenuButtonCommands\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":-944407322,\"predicate\":\"botMenuButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"BotMenuButton\"},{\"id\":-67704655,\"predicate\":\"account.savedRingtonesNotModified\",\"params\":[],\"type\":\"account.SavedRingtones\"},{\"id\":-1041683259,\"predicate\":\"account.savedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"ringtones\",\"type\":\"Vector<Document>\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1960361625,\"predicate\":\"updateSavedRingtones\",\"params\":[],\"type\":\"Update\"},{\"id\":-1746354498,\"predicate\":\"notificationSoundDefault\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":1863070943,\"predicate\":\"notificationSoundNone\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":-2096391452,\"predicate\":\"notificationSoundLocal\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"NotificationSound\"},{\"id\":-9666487,\"predicate\":\"notificationSoundRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"NotificationSound\"},{\"id\":-1222230163,\"predicate\":\"account.savedRingtone\",\"params\":[],\"type\":\"account.SavedRingtone\"},{\"id\":523271863,\"predicate\":\"account.savedRingtoneConverted\",\"params\":[{\"name\":\"document\",\"type\":\"Document\"}],\"type\":\"account.SavedRingtone\"}],\"methods\":[{\"id\":-878758099,\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1036301552,\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1502141361,\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":-2131827673,\"method\":\"auth.signUp\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1126886015,\"method\":\"auth.signIn\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":1047706137,\"method\":\"auth.logOut\",\"params\":[],\"type\":\"auth.LoggedOut\"},{\"id\":-1616179942,\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-440401971,\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1518699091,\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":-841733627,\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-326762118,\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":1779249670,\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-2067899501,\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":313765169,\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-612493497,\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":2018596725,\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":1713919532,\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":127302966,\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.WallPapers\"},{\"id\":-977650298,\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":227648840,\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":-1240508136,\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"users.UserFull\"},{\"id\":2061264541,\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Vector<int>\"},{\"id\":-995929106,\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":1574346258,\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.Contacts\"},{\"id\":746589157,\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":157945344,\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":269745566,\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1758204945,\"method\":\"contacts.block\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1096393392,\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-176409329,\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":1673946374,\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":-1594569905,\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Dialogs\"},{\"id\":1143203525,\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1593989278,\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":238054714,\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-1332768214,\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-443640366,\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":94983360,\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":1486110434,\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":228423076,\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-497026848,\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-869258997,\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"drop_author\",\"type\":\"flags.11?true\"},{\"name\":\"drop_media_captions\",\"type\":\"flags.12?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-820669733,\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-270948702,\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1991005362,\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1240027791,\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-1364194508,\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"messages.ChatFull\"},{\"id\":1937260541,\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":903730804,\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":-230206493,\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1575461717,\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":164303470,\"method\":\"messages.createChat\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-304838614,\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":630429265,\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":1926525996,\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"photos.Photo\"},{\"id\":-1980559511,\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"photos.Photo\"},{\"id\":-2016444625,\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":-1291540959,\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1319462148,\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":-990308245,\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":531836966,\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":1378703997,\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":1295590211,\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":-1848823128,\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":651135312,\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":-162681021,\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1035731989,\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":-208425312,\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2031374829,\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2135648522,\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1157265941,\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1431914525,\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":852769188,\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1436924774,\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1259113487,\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":-562337987,\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1043505495,\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1663104819,\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":916930423,\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":655677548,\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1040964988,\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":301470424,\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":-623130288,\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-906486552,\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":1099779595,\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"reason\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":150761757,\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":608323678,\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":-627372787,\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-113456221,\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-2108208411,\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1891839707,\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-710552671,\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Stickers\"},{\"id\":-1197432408,\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":954152242,\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1738800940,\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1956073268,\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"MessageMedia\"},{\"id\":-484392616,\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":-545786948,\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1418342645,\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":-1663767815,\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1516564433,\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":-779399914,\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":-661144474,\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":923364464,\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"new_settings\",\"type\":\"flags.0?account.PasswordInputSettings\"}],\"type\":\"auth.Authorization\"},{\"id\":-1080796745,\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1607670315,\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"legacy_revoke_permanent\",\"type\":\"flags.2?true\"},{\"name\":\"request_needed\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1051570619,\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":1817183516,\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-928977804,\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-946871200,\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":-110209570,\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-421563528,\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1877938321,\"method\":\"help.getAppChangelog\",\"params\":[{\"name\":\"prev_app_version\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1468322785,\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"messages.MessageViews\"},{\"id\":-871347913,\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-2067661490,\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-196443371,\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1383294429,\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":2010044880,\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-1599378234,\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":176122811,\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":141781513,\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":1029681423,\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"for_import\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"}],\"type\":\"Updates\"},{\"id\":-751007486,\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1450044624,\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-248621111,\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":283557164,\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":890549214,\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":615851205,\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-130635115,\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":429865580,\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":-1072619549,\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":51854712,\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1470377534,\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1568189671,\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1271290010,\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":2016638777,\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":864953444,\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1559270965,\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedGifs\"},{\"id\":846868683,\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1364105629,\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":-346119674,\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"}],\"type\":\"Bool\"},{\"id\":2057376407,\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-432034325,\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"grouped\",\"type\":\"flags.0?true\"},{\"name\":\"thread\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedMessageLink\"},{\"id\":527021574,\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1056025023,\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":520357240,\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-39416522,\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":1224152952,\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"}],\"type\":\"Updates\"},{\"id\":-2091549254,\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":-1824339449,\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"password\",\"type\":\"flags.2?InputCheckPasswordSRP\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-712043766,\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1758168906,\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.TopPeers\"},{\"id\":451113900,\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-462373635,\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1137057461,\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":1782549861,\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":1685588756,\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1527873830,\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1649852357,\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.RecentStickers\"},{\"id\":958863608,\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1986437075,\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":1475442322,\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":457157256,\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1596029123,\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-122669393,\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"}],\"type\":\"messages.Chats\"},{\"id\":1678738104,\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-866424884,\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":-1907842680,\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1896289088,\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":363700068,\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-400399203,\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":258170395,\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":-468934396,\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-2023787330,\"method\":\"messages.getAllChats\",\"params\":[{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-333262899,\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":852135825,\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-1489903017,\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":991616823,\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":-692498958,\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1440257555,\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":-434028723,\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":619086221,\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":-1976353651,\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"payments.PaymentForm\"},{\"id\":611897804,\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-619695760,\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":818134173,\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"},{\"name\":\"tip_amount\",\"type\":\"flags.2?long\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1151208273,\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":578650699,\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":-667062079,\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":-436833542,\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":163765653,\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":-1876841625,\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"animated\",\"type\":\"flags.1?true\"},{\"name\":\"videos\",\"type\":\"flags.4?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"},{\"name\":\"software\",\"type\":\"flags.3?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-143257775,\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":-4795190,\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2041315650,\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":1369162417,\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":1430593449,\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":1124046573,\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1003664544,\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":788404002,\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":399855457,\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":-1295269440,\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1508562471,\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":662363518,\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":536919235,\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1691921240,\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":1375900482,\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":-219008246,\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":-269862909,\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":-845657435,\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":1120311183,\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":-1763259007,\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":870184064,\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":1302676017,\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-914493408,\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":-359881479,\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":82946729,\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-1174420133,\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-357180360,\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-2020263951,\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":1180140658,\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1683319225,\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_everyone\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1036054804,\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-356796084,\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":251759059,\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1881817312,\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-134016113,\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1347929239,\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":405695855,\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":755087855,\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1747789204,\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":896555914,\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-956147407,\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"Vector<FileHash>\"},{\"id\":749019089,\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":-294455398,\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":-1299661699,\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":1936088002,\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":-1986010339,\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":-1199522741,\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":-1865902923,\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":-1456907910,\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-202552205,\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":-1516022023,\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1305716726,\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1880182943,\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":-323339813,\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1072547679,\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":-2098076769,\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":-2092831552,\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-262453244,\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?int\"}],\"type\":\"account.Takeout\"},{\"id\":489050862,\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":486505992,\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":911373810,\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1398145746,\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1031349873,\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":585256482,\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":-2062238246,\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2119757468,\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1735311088,\"method\":\"help.getAppConfig\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":1862465352,\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":-966677240,\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":1784243458,\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":-760547348,\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"unpin\",\"type\":\"flags.1?true\"},{\"name\":\"pm_oneside\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1881204448,\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":2055154197,\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1043606090,\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-748624084,\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":59377875,\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":1723407216,\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":-1626880216,\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":-806076575,\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1398240377,\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":283795844,\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":1941660731,\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1848369232,\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":-554301545,\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1517917375,\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":-57811990,\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":-578472351,\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1817860919,\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-18000023,\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-1153722364,\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":1457130303,\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":1995661875,\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":899735650,\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":352892591,\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":1318675378,\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":-709817306,\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":1749536939,\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":472471681,\"method\":\"folders.deleteFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1932455680,\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":-170208392,\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":1079520178,\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":428848198,\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1322487515,\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":1336717624,\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-386636848,\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-130964977,\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-1892102881,\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":-750207932,\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":1491484525,\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304832784,\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-183077365,\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1111817116,\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":-1120369398,\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1504586518,\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":473805619,\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1697530880,\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":737414348,\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":-229175188,\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-953697477,\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"},{\"name\":\"format\",\"type\":\"flags.2?string\"},{\"name\":\"base_theme\",\"type\":\"flags.3?BaseTheme\"}],\"type\":\"Bool\"},{\"id\":-1919060949,\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Theme\"},{\"id\":1913054296,\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1210022402,\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"auth.LoginToken\"},{\"id\":-1783866140,\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":-392909491,\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":-1250643605,\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1952756306,\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":300429806,\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":1705865692,\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":-1200736242,\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":-1257951254,\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":779736953,\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":-241247891,\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilter>\"},{\"id\":-1566780372,\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":450142282,\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":-983318044,\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1421720550,\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":1646092192,\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":-1707717072,\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":85399130,\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":2127598753,\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1063816159,\"method\":\"help.getPromoData\",\"params\":[],\"type\":\"help.PromoData\"},{\"id\":505748629,\"method\":\"help.hidePromoData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-8744061,\"method\":\"phone.sendSignalingData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-589330937,\"method\":\"stats.getMegagroupStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-349483786,\"method\":\"account.getGlobalPrivacySettings\",\"params\":[],\"type\":\"GlobalPrivacySettings\"},{\"id\":517647042,\"method\":\"account.setGlobalPrivacySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"GlobalPrivacySettings\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":-183649631,\"method\":\"help.dismissSuggestion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"suggestion\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1935116200,\"method\":\"help.getCountriesList\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":584962828,\"method\":\"messages.getReplies\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1147761405,\"method\":\"messages.getDiscussionMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-147740172,\"method\":\"messages.readDiscussion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":698914348,\"method\":\"contacts.blockFromReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_message\",\"type\":\"flags.0?true\"},{\"name\":\"delete_history\",\"type\":\"flags.1?true\"},{\"name\":\"report_spam\",\"type\":\"flags.2?true\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1445996571,\"method\":\"stats.getMessagePublicForwards\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1226791947,\"method\":\"stats.getMessageStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"stats.MessageStats\"},{\"id\":-265962357,\"method\":\"messages.unpinAllMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1221445336,\"method\":\"phone.createGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"schedule_date\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-1322057861,\"method\":\"phone.joinGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"video_stopped\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"},{\"name\":\"invite_hash\",\"type\":\"flags.1?string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":1342404601,\"method\":\"phone.leaveGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"source\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":2067345760,\"method\":\"phone.inviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":2054648117,\"method\":\"phone.discardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1958458429,\"method\":\"phone.toggleGroupCallSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reset_invite_hash\",\"type\":\"flags.1?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_muted\",\"type\":\"flags.0?Bool\"}],\"type\":\"Updates\"},{\"id\":68699611,\"method\":\"phone.getGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupCall\"},{\"id\":-984033109,\"method\":\"phone.getGroupParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"ids\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":-1248003721,\"method\":\"phone.checkGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":1540419152,\"method\":\"messages.deleteChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-104078327,\"method\":\"messages.deletePhoneCallHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1140726259,\"method\":\"messages.checkHistoryImport\",\"params\":[{\"name\":\"import_head\",\"type\":\"string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":873008187,\"method\":\"messages.initHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"media_count\",\"type\":\"int\"}],\"type\":\"messages.HistoryImport\"},{\"id\":713433234,\"method\":\"messages.uploadImportedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-1271008444,\"method\":\"messages.startHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-1565154314,\"method\":\"messages.getExportedChatInvites\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":1937010524,\"method\":\"messages.getExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-1110823051,\"method\":\"messages.editExportedChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"request_needed\",\"type\":\"flags.3?Bool\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":1452833749,\"method\":\"messages.deleteRevokedExportedChatInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-731601877,\"method\":\"messages.deleteExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":958457583,\"method\":\"messages.getAdminsWithInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-553329330,\"method\":\"messages.getChatInviteImporters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"},{\"name\":\"q\",\"type\":\"flags.2?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_user\",\"type\":\"InputUser\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-1207017500,\"method\":\"messages.setHistoryTTL\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-91437323,\"method\":\"account.reportProfilePhoto\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"InputPhoto\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":187239529,\"method\":\"channels.convertToGigagroup\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":1573261059,\"method\":\"messages.checkHistoryImportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-248985848,\"method\":\"phone.toggleGroupCallRecord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"start\",\"type\":\"flags.0?true\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"video_portrait\",\"type\":\"flags.2?Bool\"}],\"type\":\"Updates\"},{\"id\":-1524155713,\"method\":\"phone.editGroupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"muted\",\"type\":\"flags.0?Bool\"},{\"name\":\"volume\",\"type\":\"flags.1?int\"},{\"name\":\"raise_hand\",\"type\":\"flags.2?Bool\"},{\"name\":\"video_stopped\",\"type\":\"flags.3?Bool\"},{\"name\":\"video_paused\",\"type\":\"flags.4?Bool\"},{\"name\":\"presentation_paused\",\"type\":\"flags.5?Bool\"}],\"type\":\"Updates\"},{\"id\":480685066,\"method\":\"phone.editGroupCallTitle\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-277077702,\"method\":\"phone.getGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":-425040769,\"method\":\"phone.exportGroupCallInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.0?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":563885286,\"method\":\"phone.toggleGroupCallStartSubscription\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"subscribed\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1451287362,\"method\":\"phone.startScheduledGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1465786252,\"method\":\"phone.saveDefaultGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-873829436,\"method\":\"phone.joinGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":475058500,\"method\":\"phone.leaveGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":676017721,\"method\":\"stickers.checkShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1303364867,\"method\":\"stickers.suggestShortName\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":1032708345,\"method\":\"bots.resetBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-481554986,\"method\":\"bots.getBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Vector<BotCommand>\"},{\"id\":-1828139493,\"method\":\"account.resetPassword\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1284770294,\"method\":\"account.declinePasswordReset\",\"params\":[],\"type\":\"Bool\"},{\"id\":221691769,\"method\":\"auth.checkRecoveryPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-700916087,\"method\":\"account.getChatThemes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-432283329,\"method\":\"messages.setChatTheme\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1095836780,\"method\":\"channels.viewSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-333377601,\"method\":\"channels.getSponsoredMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":745510839,\"method\":\"messages.getMessageReadParticipants\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1240514025,\"method\":\"messages.getSearchResultsCalendar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":1855292323,\"method\":\"messages.getSearchResultsPositions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":2145904661,\"method\":\"messages.hideChatJoinRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-528091926,\"method\":\"messages.hideAllChatJoinRequests\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"}],\"type\":\"Updates\"},{\"id\":-1323389022,\"method\":\"messages.toggleNoForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-855777386,\"method\":\"messages.saveDefaultSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"send_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":231174382,\"method\":\"channels.getSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-1081501024,\"method\":\"account.setAuthorizationTTL\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1089766498,\"method\":\"account.changeAuthorizationSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.0?Bool\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Bool\"},{\"id\":913655003,\"method\":\"channels.deleteParticipantHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":627641572,\"method\":\"messages.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?string\"}],\"type\":\"Updates\"},{\"id\":-1950707482,\"method\":\"messages.getMessagesReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":-521245833,\"method\":\"messages.getMessageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?string\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":335875750,\"method\":\"messages.setChatAvailableReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"available_reactions\",\"type\":\"Vector<string>\"}],\"type\":\"Updates\"},{\"id\":417243308,\"method\":\"messages.getAvailableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":-647969580,\"method\":\"messages.setDefaultReaction\",\"params\":[{\"name\":\"reaction\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":617508334,\"method\":\"messages.translateText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"text\",\"type\":\"flags.1?string\"},{\"name\":\"from_lang\",\"type\":\"flags.2?string\"},{\"name\":\"to_lang\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":-396644838,\"method\":\"messages.getUnreadReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-2099097129,\"method\":\"messages.readReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-1963375804,\"method\":\"contacts.resolvePhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":447879488,\"method\":\"phone.getGroupCallStreamChannels\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":-558650433,\"method\":\"phone.getGroupCallStreamRtmpUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"revoke\",\"type\":\"Bool\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":276705696,\"method\":\"messages.searchSentMedia\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":385663691,\"method\":\"messages.getAttachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"AttachMenuBots\"},{\"id\":1998676370,\"method\":\"messages.getAttachMenuBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":451818415,\"method\":\"messages.toggleBotInAttachMenu\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":262163967,\"method\":\"messages.requestWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_bot_menu\",\"type\":\"flags.4?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"start_param\",\"type\":\"flags.3?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"WebViewResult\"},{\"id\":-768945848,\"method\":\"messages.prolongWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"Bool\"},{\"id\":1790652275,\"method\":\"messages.requestSimpleWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":172168437,\"method\":\"messages.sendWebViewResultMessage\",\"params\":[{\"name\":\"bot_query_id\",\"type\":\"string\"},{\"name\":\"result\",\"type\":\"InputBotInlineResult\"}],\"type\":\"WebViewMessageSent\"},{\"id\":-603831608,\"method\":\"messages.sendWebViewData\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"button_text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1157944655,\"method\":\"bots.setBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Bool\"},{\"id\":-1671369944,\"method\":\"bots.getBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotMenuButton\"},{\"id\":-510647672,\"method\":\"account.getSavedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1038768899,\"method\":\"account.saveRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"account.SavedRingtone\"},{\"id\":-2095414366,\"method\":\"account.uploadRingtone\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":2021942497,\"method\":\"bots.setBotBroadcastDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":-1839281686,\"method\":\"bots.setBotGroupDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"}]},\"layer\":140} as {\r\n  MTProto: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  API: {\r\n    constructors: MTProtoConstructor[],\r\n    methods: MTProtoMethod[],\r\n    constructorsIndex?: {[id: number]: number}\r\n  },\r\n  layer: number,\r\n};","export default function intToUint(val: number) {\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\n}\n","import bigInt from \"big-integer\";\nimport intToUint from \"../number/intToUint\";\n\nexport default function longFromInts(high: number, low: number): string {\n  high = intToUint(high), low = intToUint(low);\n  return bigInt(high).shiftLeft(32).add(bigInt(low)).toString(10);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Schema, { MTProtoConstructor } from './schema';\nimport { JSONValue } from '../../layer';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport gzipUncompress from '../../helpers/gzipUncompress';\nimport bigInt from 'big-integer';\nimport longFromInts from '../../helpers/long/longFromInts';\n\n// @ts-ignore\n/* import {BigInteger} from 'jsbn';\n\nexport function bigint(num: number) {\n  return new BigInteger(num.toString(16), 16);\n}\n\nfunction bigStringInt(strNum: string) {\n  return new BigInteger(strNum, 10)\n} */\n\nconst boolFalse = +Schema.API.constructors.find((c) => c.predicate === 'boolFalse').id;\nconst boolTrue = +Schema.API.constructors.find((c) => c.predicate === 'boolTrue').id;\nconst vector = +Schema.API.constructors.find((c) => c.predicate === 'vector').id;\nconst gzipPacked = +Schema.MTProto.constructors.find((c) => c.predicate === 'gzip_packed').id;\n\n//console.log('boolFalse', boolFalse === 0xbc799737);\n\nclass TLSerialization {\n  private maxLength = 2048; // 2Kb\n  private offset = 0; // in bytes\n  private mtproto = false;\n  private debug = false;//Modes.debug;\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\n    this.mtproto = options.mtproto || false;\n    this.createBuffer();\n  }\n\n  public createBuffer() {\n    this.buffer = new ArrayBuffer(this.maxLength);\n    this.intView = new Int32Array(this.buffer);\n    this.byteView = new Uint8Array(this.buffer);\n  }\n\n  public getArray() {\n    const resultBuffer = new ArrayBuffer(this.offset);\n\n    //let perf = performance.now();\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\n    //console.log('perf uint8', performance.now() - perf);\n\n    //perf = performance.now();\n    const resultInt32 = new Int32Array(resultBuffer);\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\n    //console.log('perf int32', performance.now() - perf);\n\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\n      console.error(resultUint8, resultInt32);\n    } */\n  \n    return resultInt32;\n  }\n\n  public getBuffer() {\n    return this.getArray().buffer;\n  }\n\n  public getBytes(typed: true): Uint8Array;\n  public getBytes(typed?: false): number[];\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\n    if(typed) {\n      const resultBuffer = new ArrayBuffer(this.offset);\n      const resultArray = new Uint8Array(resultBuffer);\n  \n      resultArray.set(this.byteView.subarray(0, this.offset));\n  \n      return resultArray;\n    }\n  \n    const bytes: number[] = new Array(this.offset);\n    for(let i = 0; i < this.offset; i++) {\n      bytes[i] = this.byteView[i];\n    }\n    return bytes;\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public checkLength(needBytes: number) {\n    if(this.offset + needBytes < this.maxLength) {\n      return;\n    }\n  \n    //console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\n    const previousBuffer = this.buffer;\n    //const previousByteView = this.byteView;\n    const previousArray = new Int32Array(previousBuffer);\n    \n    this.createBuffer();\n    \n    new Int32Array(this.buffer).set(previousArray);\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32), \n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\n  }\n\n  public writeInt(i: number, field: string) {\n    this.debug && console.log('>>>', i.toString(16), i, field);\n  \n    const offset = this.offset / 4;\n    this.checkLength(4);\n    this.intView[offset] = i;\n    this.offset += 4;\n\n    return offset;\n  }\n  \n  public storeInt(i: number, field?: string) {\n    return this.writeInt(i, (field || '') + ':int');\n  }\n  \n  public storeBool(i: boolean, field?: string) {\n    if(i) {\n      this.writeInt(boolTrue, (field || '') + ':bool');\n    } else {\n      this.writeInt(boolFalse, (field || '') + ':bool');\n    }\n  }\n  \n  public storeLongP(iHigh: number, iLow: number, field?: string) {\n    this.writeInt(iLow, (field || '') + ':long[low]');\n    this.writeInt(iHigh, (field || '') + ':long[high]');\n  }\n\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\n    if(Array.isArray(sLong)) {\n      if(sLong.length === 2) {\n        return this.storeLongP(sLong[0], sLong[1], field);\n      } else {\n        return this.storeIntBytes(sLong, 64, field);\n      }\n    }\n  \n    if(typeof sLong !== 'string') {\n      sLong = sLong ? sLong.toString() : '0';\n    }\n\n    const {quotient, remainder} = bigInt(sLong).divmod(0x100000000);\n    const high = quotient.toJSNumber();\n    const low = remainder.toJSNumber();\n\n    this.writeInt(low, (field || '') + ':long[low]');\n    this.writeInt(high, (field || '') + ':long[high]');\n  }\n  \n  public storeDouble(f: any, field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n  \n    doubleView[0] = f;\n  \n    this.writeInt(intView[0], (field || '') + ':double[low]');\n    this.writeInt(intView[1], (field || '') + ':double[high]');\n  }\n  \n  public storeString(s: string, field?: string) {\n    this.debug && console.log('>>>', s, (field || '') + ':string');\n  \n    if(s === undefined) {\n      s = '';\n    }\n    const sUTF8 = unescape(encodeURIComponent(s));\n  \n    this.checkLength(sUTF8.length + 8);\n  \n    const len = sUTF8.length;\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n    for(let i = 0; i < len; i++) {\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\n    }\n  \n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n  \n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    } else if(bytes === undefined) {\n      bytes = [];\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\n  \n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\n    const len = (bytes as Uint8Array).length;\n    this.checkLength(len + 8);\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n  \n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  \n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n  \n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = (bytes as Uint8Array).length;\n    if((bits % 32) || (len * 8) !== bits) {\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\n      console.error(error, bytes, field);\n      throw error;\n    }\n  \n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\n    this.checkLength(len);\n  \n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  }\n  \n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = bytes.length;\n  \n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\n    this.checkLength(len);\n  \n    this.byteView.set(bytes, this.offset);\n    this.offset += len;\n  }\n  \n  public storeMethod(methodName: string, params: any) {\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const methodData = schema.methods.find((m) => m.method === methodName);\n\n    if(!methodData) {\n      throw new Error('No method ' + methodName + ' found');\n    }\n  \n    this.storeInt(methodData.id, methodName + '[id]');\n\n    const pFlags = params.pFlags || params; // * support pFlags, though am not expecting it to be there\n    const flagsOffsets: {[paramName: string]: number} = {};\n    //console.log('storeMethod', len, methodData);\n    for(const param of methodData.params) {\n      let type = param.type;\n\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        if(!(params[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags[param.name] : params[param.name] !== undefined) {\n            //console.log('storeMethod autocompleting', methodName, param.name, params[param.name], type);\n            params[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n        \n        //console.log('storeMethod', methodName, fieldBit, params[fieldBit[0]], params, param, condType, !!(params[fieldBit[0]] & (1 << +fieldBit[1])));\n        type = condType[1];\n      }\n      \n      //console.log('storeMethod', methodName, param.name, params[param.name], type);\n      const result = this.storeObject(params[param.name], type, methodName + '[' + param.name + ']');\n\n      if(type === '#') {\n        params[param.name] = params[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(let paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = params[paramName];\n    }\n\n    return methodData.type;\n  }\n  \n  public storeObject(obj: any, type: string, field?: string) {\n    //console.log('storeObject', obj, type, field, this.offset, this.getBytes(true).hex);\n    switch(type) {\n      case '#':\n        obj = obj || 0;\n      case 'int':\n        return this.storeInt(obj, field);\n      case 'long':\n        return this.storeLong(obj, field);\n      case 'int128':\n        return this.storeIntBytes(obj, 128, field);\n      case 'int256':\n        return this.storeIntBytes(obj, 256, field);\n      case 'int512':\n        return this.storeIntBytes(obj, 512, field);\n      case 'string':\n        return this.storeString(obj, field);\n      case 'bytes':\n        return this.storeBytes(obj, field);\n      case 'double':\n        return this.storeDouble(obj, field);\n      case 'Bool':\n        return this.storeBool(obj, field);\n      case 'true':\n        return\n    }\n  \n    if(Array.isArray(obj)) {\n      if(type.substr(0, 6) === 'Vector') {\n        this.writeInt(vector, field + '[id]');\n      } else if (type.substr(0, 6) !== 'vector') {\n        throw new Error('Invalid vector type ' + type);\n      }\n\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      this.writeInt(obj.length, field + '[count]');\n      for(let i = 0; i < obj.length; i++) {\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\n      }\n\n      return true;\n    } else if (type.substr(0, 6).toLowerCase() === 'vector') {\n      throw new Error('Invalid vector object');\n    }\n    \n    if(!isObject(obj)) {\n      throw new Error('Invalid object for type ' + type);\n    }\n  \n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const predicate = obj['_'];\n    let isBare = false;\n    const constructorData: MTProtoConstructor = schema.constructors.find((c) => c.predicate === predicate);\n  \n    if(isBare = (type.charAt(0) === '%')) {\n      type = type.substr(1);\n    }\n\n    if(!constructorData) {\n      throw new Error('No predicate ' + predicate + ' found');\n    }\n  \n    if(predicate === type) {\n      isBare = true;\n    }\n  \n    if(!isBare) {\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\n    }\n\n    const pFlags = obj.pFlags;\n    const flagsOffsets: {[paramName: string]: number} = {};\n    //console.log('storeObject', len, constructorData);\n    for(const param of constructorData.params) {\n      let type = param.type;\n\n      //console.log('storeObject', param, type);\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        //console.log('storeObject fieldBit', fieldBit, obj[fieldBit[0]]);\n\n        if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags && pFlags[param.name] : obj[param.name] !== undefined) {\n            //console.log('storeObject autocompleting', param.name, obj[param.name], type);\n            obj[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n\n        type = condType[1];\n      }\n      //console.log('storeObject', param, type);\n  \n      const result = this.storeObject(obj[param.name], type, field + '[' + predicate + '][' + param.name + ']');\n\n      if(type === '#') {\n        obj[param.name] = obj[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(let paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = obj[paramName];\n    }\n  \n    return constructorData.type;\n  }\n}\n\nclass TLDeserialization<FetchLongAs extends Long> {\n  private offset = 0; // in bytes\n  private override: {[key: string]: (result: any, field: string) => void};\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  // this.debug = \n  private mtproto: boolean = false;\n  private debug: boolean;\n\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\n    //buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\n    if(buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.intView = new Int32Array(buffer);\n      this.byteView = new Uint8Array(this.buffer);\n    } else {\n      this.buffer = buffer.buffer;\n      this.intView = new Int32Array(buffer.buffer);\n      this.byteView = buffer;\n    }\n\n    //console.log(this.intView);\n\n    this.override = options.override || {};\n    this.mtproto = !!options.mtproto;\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\n  }\n\n  /* public setMtproto(mtproto: boolean) {\n    this.mtproto = mtproto;\n  } */\n\n  private readInt(field: string) {\n    //if(this.offset >= this.intView.length * 4) {\n    if((this.byteView.length - this.offset) < 4) {\n      console.error(this.byteView, this.offset);\n      throw new Error('Nothing to fetch: ' + field);\n    }\n  \n    const i = this.intView[this.offset / 4];\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\n  \n    this.debug/*  || field.includes('[dialog][read_outbox_max_id]') */ \n      && console.log('<<<', i.toString(16), i, field, \n      this.byteView.slice(this.offset - 16, this.offset + 16), \n      bytesToHex(this.byteView.slice(this.offset - 16, this.offset + 16)));\n  \n    this.offset += 4;\n  \n    return i;\n  }\n  \n  public fetchInt(field?: string) {\n    return this.readInt((field || '') + ':int');\n  }\n  \n  public fetchDouble(field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n  \n    intView[0] = this.readInt((field || '') + ':double[low]'),\n    intView[1] = this.readInt((field || '') + ':double[high]');\n  \n    return doubleView[0];\n  }\n  \n  public fetchLong(field?: string): FetchLongAs {\n    const iLow = this.readInt((field || '') + ':long[low]');\n    const iHigh = this.readInt((field || '') + ':long[high]');\n  \n    //const longDec = bigint(iHigh).shiftLeft(32).add(bigint(iLow)).toString();\n    const longDec = longFromInts(iHigh, iLow);\n\n    if(!this.mtproto) {\n      const num = +longDec;\n      if(Number.isSafeInteger(num)) {\n        // @ts-ignore\n        return num;\n      }\n    }\n  \n    // @ts-ignore\n    return longDec;\n  }\n  \n  public fetchBool(field?: string): boolean {\n    const i = this.readInt((field || '') + ':bool');\n    if(i === boolTrue) {\n      return true;\n    } else if(i === boolFalse) {\n      return false;\n    }\n\n    this.offset -= 4;\n    return this.fetchObject('Object', field);\n  }\n  \n  public fetchString(field?: string): string {\n    let len = this.byteView[this.offset++];\n  \n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n  \n    let sUTF8 = '';\n    for(let i = 0; i < len; i++) {\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\n    }\n  \n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n  \n    let s: string;\n    try {\n      s = decodeURIComponent(escape(sUTF8));\n    } catch (e) {\n      s = sUTF8;\n    }\n  \n    this.debug && console.log('<<<', s, (field || '') + ':string');\n  \n    return s;\n  }\n  \n  public fetchBytes(field?: string) {\n    let len = this.byteView[this.offset++];\n  \n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n  \n    const bytes = this.byteView.subarray(this.offset, this.offset + len);\n    this.offset += len;\n  \n    // Padding\n    while(this.offset % 4) {\n      this.offset++;\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\n  \n    return bytes;\n  }\n  \n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\n    if(bits % 32) {\n      throw new Error('Invalid bits: ' + bits);\n    }\n  \n    const len = bits / 8;\n    if(typed) {\n      const result = this.byteView.subarray(this.offset, this.offset + len);\n      this.offset += len;\n      return result;\n    }\n  \n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\n  \n    return bytes;\n  }\n  \n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\n    if(len === false) {\n      len = this.readInt((field || '') + '_length');\n      if(len > this.byteView.byteLength) {\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\n      }\n    }\n  \n    if(typed) {\n      const bytes = new Uint8Array(len);\n      bytes.set(this.byteView.subarray(this.offset, this.offset + len));\n      this.offset += len;\n      return bytes;\n    }\n  \n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; i++) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n  \n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\n  \n    return bytes;\n  }\n\n  private fetchVector(type: string, field?: string) {\n    const len = this.readInt(field + '[count]');\n    const result: any[] = new Array(len);\n    if(len > 0) {\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      for(let i = 0; i < len; ++i) {\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\n      }\n    }\n  \n    return result;\n  }\n  \n  public fetchObject(type: string, field?: string): any {\n    switch(type) {\n      case '#':\n      case 'int':\n        return this.fetchInt(field);\n      case 'long':\n        return this.fetchLong(field);\n      case 'int128':\n        return this.fetchIntBytes(128, true, field);\n      case 'int256':\n        return this.fetchIntBytes(256, true, field);\n      case 'int512':\n        return this.fetchIntBytes(512, true, field);\n      case 'string':\n        return this.fetchString(field);\n      case 'bytes':\n        return this.fetchBytes(field);\n      case 'double':\n        return this.fetchDouble(field);\n      case 'Bool':\n        return this.fetchBool(field);\n      case 'true':\n        return true;\n    }\n  \n    field = field || type || 'Object';\n  \n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\n      return this.fetchVector(type, field);\n    }\n  \n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    let constructorData: MTProtoConstructor = null;\n    let fallback = false;\n  \n    if(type.charAt(0) === '%') {\n      const checkType = type.substr(1);\n      constructorData = schema.constructors.find((c) => c.type === checkType);\n      if(!constructorData) {\n        throw new Error('Constructor not found for type: ' + type);\n      }\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\n      constructorData = schema.constructors.find((c) => c.predicate === type);\n      if(!constructorData) {\n        throw new Error('Constructor not found for predicate: ' + type);\n      }\n    } */ else {\n      const constructorCmp = this.readInt(field + '[id]');\n  \n      if(constructorCmp === gzipPacked) { // Gzip packed\n        const compressed = this.fetchBytes(field + '[packed_string]');\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\n  \n        return newDeserializer.fetchObject(type, field);\n      }\n\n      if(constructorCmp === vector) {\n        return this.fetchVector(type, field);\n      }\n  \n      let index = schema.constructorsIndex;\n      if(!index) {\n        schema.constructorsIndex = index = {};\n        for(let i = 0, len = schema.constructors.length; i < len; i++) {\n          index[schema.constructors[i].id] = i;\n        }\n      }\n\n      const i = index[constructorCmp];\n      if(i !== undefined) {\n        constructorData = schema.constructors[i];\n      }\n  \n      if(!constructorData && this.mtproto) {\n        const schemaFallback = Schema.API;\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; i++) {\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\n            constructorData = schemaFallback.constructors[i];\n  \n            delete this.mtproto;\n            fallback = true;\n            break;\n          }\n        }\n      }\n\n      if(!constructorData) {\n        console.error('Constructor not found:', constructorCmp);\n        \n        let int1: number, int2: number;\n        try {\n          int1 = this.fetchInt(field);\n          int2 = this.fetchInt(field);\n        } catch(err) {\n\n        }\n\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\n      }\n    }\n  \n    const predicate = constructorData.predicate;\n  \n    const result: any = {'_': predicate};\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\n    if(this.override[overrideKey]) {\n      this.override[overrideKey](result, field + '[' + predicate + ']');\n    } else {\n      for(let i = 0, len = constructorData.params.length; i < len; i++) {\n        const param = constructorData.params[i];\n        let type = param.type;\n\n        if(type === '#' && result.pFlags === undefined) {\n          result.pFlags = {};\n        }\n\n        const isCond = (type.indexOf('?') !== -1);\n        if(isCond) {\n          const condType = type.split('?');\n          const fieldBit = condType[0].split('.');\n\n          if(!(result[fieldBit[0]] & (1 << +fieldBit[1]))) {\n            //console.log('fetchObject bad', constructorData, result[fieldBit[0]], fieldBit);\n            continue;\n          }\n\n          //console.log('fetchObject good', constructorData, result[fieldBit[0]], fieldBit);\n\n          type = condType[1];\n        }\n  \n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\n  \n        if(isCond && type === 'true') {\n          result.pFlags[param.name] = value;\n        } else {\n          /* if(param.name === 'read_outbox_max_id') {\n            console.log(result, param.name, value, field + '[' + predicate + '][' + param.name + ']');\n          } */\n            \n          result[param.name] = value;\n        }\n      }\n    }\n  \n    if(fallback) {\n      this.mtproto = true;\n    }\n\n    if(type === 'JSONValue') {\n      return this.formatJSONValue(result);\n    }\n  \n    return result;\n  }\n\n  private formatJSONValue(jsonValue: JSONValue): any {\n    if(!jsonValue._) return jsonValue;\n    switch(jsonValue._) {\n      case 'jsonNull':\n        return null;\n      case 'jsonObject': {\n        const out: any = {};\n        const objectValues = jsonValue.value;\n        for(let i = 0, length = objectValues.length; i < length; ++i) {\n          const objectValue = objectValues[i];\n          out[objectValue.key] = this.formatJSONValue(objectValue.value);\n        }\n        return out;\n      }\n      default:\n        return jsonValue.value;\n    }\n  }\n  \n  public getOffset() {\n    return this.offset;\n  }\n\n  public setOffset(offset: number) {\n    this.offset = offset;\n  }\n  \n  /* public fetchEnd() {\n    if(this.offset !== this.byteView.length) {\n      throw new Error('Fetch end with non-empty buffer');\n    }\n\n    return true;\n  } */\n}\n\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\nexport { TLDeserialization, TLSerialization };\n","//export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\n\n// @ts-ignore\nimport pako from 'pako/dist/pako_inflate.min.js';\n// import dT from './dT';\n\n//export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\nexport default function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\n  // console.log(dT(), 'Gzip uncompress start');\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\n  // console.log(dT(), 'Gzip uncompress finish'/* , result */);\n  return result;\n}\n","import randomize from \"../array/randomize\";\nimport bufferConcats from \"./bufferConcats\";\n\nexport default function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\n  bytes: T, \n  blockSize: number = 16, \n  zeroes?: boolean, \n  blockSizeAsTotalLength = false, \n  prepend = false\n): T {\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\n  if(needPadding > 0 && needPadding < blockSize) {\n    ////console.log('addPadding()', len, blockSize, needPadding);\n    const padding = new Uint8Array(needPadding);\n    if(zeroes) {\n      for(let i = 0; i < needPadding; ++i) {\n        padding[i] = 0;\n      }\n    } else {\n      randomize(padding);\n    }\n\n    if(bytes instanceof ArrayBuffer) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\n    } else if(bytes instanceof Uint8Array) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\n    } else {\n      // @ts-ignore\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\n    }\n  }\n\n  return bytes;\n}\n","import bigInt from 'big-integer';\n\nexport function bigIntFromBytes(bytes: Uint8Array | number[], base = 256) {\n  return bigInt.fromArray(bytes instanceof Uint8Array ? [...bytes] : bytes, base);\n}\n\nexport function bigIntToBytes(bigInt: bigInt.BigInteger) {\n  return new Uint8Array(bigInt.toArray(256).value);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { TLDeserialization, TLSerialization } from './tl_utils';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport sessionStorage from '../sessionStorage';\nimport Schema from './schema';\nimport { NetworkerFactory } from './networkerFactory';\nimport { logger, LogTypes } from '../logger';\nimport { InvokeApiOptions } from '../../types';\nimport longToBytes from '../../helpers/long/longToBytes';\nimport MTTransport from './transports/transport';\nimport { nextRandomUint, randomLong } from '../../helpers/random';\nimport App from '../../config/app';\nimport DEBUG from '../../config/debug';\nimport Modes from '../../config/modes';\nimport noop from '../../helpers/noop';\n\n                        \nimport HTTP from './transports/http';\n          \n\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport bigInt from 'big-integer';\nimport { ConnectionStatus } from './connectionStatus';\nimport ctx from '../../environment/ctx';\nimport bufferConcats from '../../helpers/bytes/bufferConcats';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport convertToUint8Array from '../../helpers/bytes/convertToUint8Array';\nimport isObject from '../../helpers/object/isObject';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport sortLongsArray from '../../helpers/long/sortLongsArray';\nimport randomize from '../../helpers/array/randomize';\nimport deferredPromise, { CancellablePromise } from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\nimport { getEnvironment } from '../../environment/utils';\nimport { TimeManager } from './timeManager';\n\n//console.error('networker included!', new Error().stack);\n\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\n  noResponse: true, // http_wait\n  longPoll: true,\n  \n  notContentRelated: true, // ACK\n  noSchedule: true,\n  // withResult: true,\n  messageId: MTLong,\n}>;\n\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\n  msg_id: MTLong,\n  seq_no: number,\n  body?: Uint8Array | number[],\n  isAPI?: boolean,\n  // only these four are important\n\n  acked?: boolean,\n\n  deferred?: CancellablePromise<void>,\n\n  container?: boolean,\n  inner?: MTLong[],\n\n  // below - options\n\n  notContentRelated?: true,\n  noSchedule?: true,\n\n  resultType?: string,\n\n  longPoll?: true,\n  noResponse?: true, // only with http (http_wait for longPoll)\n};\n\nconst DRAIN_TIMEOUT = 10000;\nconst delays: {\n  [k in 'client' | 'file']: {\n    disconnectDelayMin: number,\n    disconnectDelayMax: number,\n    pingInterval: number,\n    pingMaxTime: number,\n    connectionTimeout: number\n  }\n} = {\n  client: {\n    disconnectDelayMin: 7,\n    disconnectDelayMax: 20,\n    pingInterval: 2000,\n    pingMaxTime: 5,\n    connectionTimeout: 5000\n  },\n  file: {\n    disconnectDelayMin: 10,\n    disconnectDelayMax: 24,\n    pingInterval: 3000,\n    pingMaxTime: 7,\n    connectionTimeout: 7500\n  }\n};\nconst RESEND_OPTIONS: MTMessageOptions = {\n  noSchedule: true,\n  notContentRelated: true\n};\nlet invokeAfterMsgConstructor: number;\n\nexport default class MTPNetworker {\n  private authKeyUint8: Uint8Array;\n\n  public isFileNetworker: boolean;\n  private isFileUpload: boolean;\n  private isFileDownload: boolean;\n\n  private lastServerMessages: Array<MTLong> = [];\n\n  private sentMessages: {\n    [msgId: MTLong]: MTMessage\n  } = {};\n\n  private pendingMessages: {[msgId: MTLong]: number} = {};\n  private pendingAcks: Array<MTLong> = [];\n  private pendingResendReq: MTLong[] = [];\n  // private pendingResendAnsReq: MTLong[] = [];\n  public connectionInited: boolean;\n\n  private nextReqTimeout: number;\n  private nextReq: number = 0;\n  \n                          \n  private longPollInterval: number;\n  private longPollPending: number;\n  private checkConnectionRetryAt: number;\n  private checkConnectionTimeout: number;\n  private checkConnectionPeriod = 0;\n  private sleepAfter: number;\n  private offline = false;\n  private sendingLongPoll: boolean;\n            \n\n  private seqNo: number;\n  private prevSessionId: Uint8Array;\n  private sessionId: Uint8Array;\n  private serverSalt: Uint8Array;\n\n  private lastResendReq: {\n    reqMsgId: MTLong,\n    msgIds: MTPNetworker['pendingResendReq']\n  };\n  // private lastResendAnsReq: MTPNetworker['lastResendReq'];\n\n  private name: string;\n  private log: ReturnType<typeof logger>;\n  \n  public isOnline = false;\n  private status: ConnectionStatus = ConnectionStatus.Closed;\n  private lastResponseTime = 0;\n\n  private debug = DEBUG /* && false */ || Modes.debug;\n\n  public activeRequests = 0;\n\n  public onDrain: () => void;\n  private onDrainTimeout: number;\n\n  public transport: MTTransport;\n\n                        \n  private pingDelayDisconnectDeferred: CancellablePromise<string>;\n  private pingPromise: Promise<void>;\n  // private pingInterval: number;\n  private lastPingTime: number;\n  private lastPingDelayDisconnectId: string;\n            \n  //public onConnectionStatusChange: (online: boolean) => void;\n\n  //private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\n\n  private delays: typeof delays[keyof typeof delays];\n  // private getNewTimeOffset: boolean;\n\n  constructor(\n    private networkerFactory: NetworkerFactory,\n    private timeManager: TimeManager,\n    public dcId: number, \n    private authKey: Uint8Array, \n    private authKeyId: Uint8Array,\n    serverSalt: Uint8Array, \n    options: InvokeApiOptions = {}\n  ) {\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\n    this.serverSalt = convertToUint8Array(serverSalt);\n\n    this.isFileUpload = !!options.fileUpload;\n    this.isFileDownload = !!options.fileDownload;\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\n    this.delays = this.isFileNetworker ? delays.file : delays.client;\n\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\n    this.name = 'NET-' + dcId + suffix;\n    //this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\n    this.log = logger(this.name, LogTypes.Log | LogTypes.Debug | LogTypes.Error | LogTypes.Warn, undefined);\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\n\n    // Test resend after bad_server_salt\n    /* if(this.dcId === 2 && this.upload) {\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\n      this.serverSalt[0] = 0;\n    } */\n\n    this.updateSession();\n\n    // if(!NetworkerFactory.offlineInited) {\n    //   NetworkerFactory.offlineInited = true;\n    //   /* rootScope.offline = true\n    //   rootScope.offlineConnecting = true */\n    // }\n  }\n\n  private updateSession() {\n    this.seqNo = 0;\n    this.prevSessionId = this.sessionId;\n    this.sessionId = randomize(new Uint8Array(8));\n  }\n\n  /* private clearContainers() {\n    for(const messageId in this.sentMessages) {\n      const message = this.sentMessages[messageId];\n      if(message.container) {\n        delete this.sentMessages[messageId];\n      }\n    }\n  } */\n\n  private updateSentMessage(sentMessageId: string) {\n    const sentMessage = this.sentMessages[sentMessageId];\n    if(!sentMessage) {\n      return false;\n    }\n\n    if(sentMessage.container) {\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\n        if(!innerSentMessage) {\n          sentMessage.inner.splice(idx, 1);\n        } else {\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\n        }\n      });\n    }\n  \n    sentMessage.msg_id = this.timeManager.generateId();\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated || sentMessage.container);\n\n    if(this.debug) {\n      this.log(`updateSentMessage, old=${sentMessageId}, new=${sentMessage.msg_id}`);\n    }\n\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\n    delete this.sentMessages[sentMessageId];\n  \n    return sentMessage;\n  }\n\n  private generateSeqNo(notContentRelated?: boolean) {\n    let seqNo = this.seqNo * 2;\n  \n    if(!notContentRelated) {\n      seqNo++;\n      this.seqNo++;\n    }\n  \n    return seqNo;\n  }\n\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n  \n    serializer.storeMethod(method, params);\n  \n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n  \n    if(Modes.debug) {\n      this.log('MT call', method, params, messageId, seqNo);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n  \n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n    serializer.storeObject(object, 'Object');\n  \n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo(options.notContentRelated);\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n  \n    if(Modes.debug) {\n      this.log('MT message', object, messageId, seqNo);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\n    const serializer = new TLSerialization(options);\n  \n    if(!this.connectionInited) { // this will call once for each new session\n      ///////this.log('Wrap api call !this.connectionInited');\n\n      const invokeWithLayer = Schema.API.methods.find((m) => m.method === 'invokeWithLayer');\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\n\n      // @ts-ignore\n      serializer.storeInt(Schema.layer, 'layer');\n  \n      const initConnection = Schema.API.methods.find((m) => m.method === 'initConnection');\n      if(!initConnection) throw new Error('no initConnection!');\n  \n      serializer.storeInt(+initConnection.id, 'initConnection');\n      serializer.storeInt(0x0, 'flags');\n      serializer.storeInt(App.id, 'api_id');\n      serializer.storeString(getEnvironment().USER_AGENT || 'Unknown UserAgent', 'device_model');\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\n      serializer.storeString(App.langPack, 'lang_pack');\n      serializer.storeString(this.networkerFactory.language, 'lang_code');\n      //serializer.storeInt(0x0, 'proxy');\n      /* serializer.storeMethod('initConnection', {\n        'flags': 0,\n        'api_id': App.id,\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\n        'system_version': navigator.platform || 'Unknown Platform',\n        'app_version': App.version,\n        'system_lang_code': navigator.language || 'en',\n        'lang_pack': '',\n        'lang_code': navigator.language || 'en'\n      }); */\n    }\n  \n    if(options.afterMessageId) {\n      if(invokeAfterMsgConstructor === undefined) {\n        const m = Schema.API.methods.find((m) => m.method === 'invokeAfterMsg');\n        invokeAfterMsgConstructor = m ? +m.id : 0;\n      }\n      \n      if(invokeAfterMsgConstructor) {\n        // if(this.debug) {\n        //   this.log('invokeApi: store invokeAfterMsg');\n        // }\n    \n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\n        serializer.storeLong(options.afterMessageId, 'msg_id');\n      } else {\n        this.log.error('no invokeAfterMsg!');\n      }\n    }\n  \n    options.resultType = serializer.storeMethod(method, params);\n\n    /* if(method === 'account.updateNotifySettings') {\n      this.log('api call body:', serializer.getBytes(true));\n    } */\n  \n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true),\n      isAPI: true\n    };\n  \n    if(Modes.debug/*  || true */) {\n      this.log('Api call', method, message, params, options);\n    } else if(this.debug) {\n      this.log('Api call', method, params, options);\n    }\n  \n    return this.pushMessage(message, options);\n  }\n\n  public changeTransport(transport?: MTTransport) {\n    const oldTransport = this.transport;\n    if(oldTransport) {\n      oldTransport.destroy();\n\n      if(this.nextReqTimeout) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n      }\n\n      this.connectionInited = false;\n\n                              \n      if(this.longPollInterval !== undefined) {\n        clearInterval(this.longPollInterval);\n        this.longPollInterval = undefined;\n      }\n\n      this.clearCheckConnectionTimeout();\n                \n    }\n\n    this.log('change transport', transport, oldTransport);\n\n                          \n    this.clearPingDelayDisconnect();\n\n    // if(this.pingInterval !== undefined) {\n    //   clearInterval(this.pingInterval);\n    //   this.pingInterval = undefined;\n    // }\n\n    // this.clearPing();\n              \n\n    this.transport = transport;\n    if(!transport) {\n      return;\n    }\n\n    transport.networker = this;\n\n                            \n                          \n    if(transport instanceof HTTP) {\n              \n      this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\n      this.checkLongPoll();\n      this.checkConnection('changed transport');\n                          \n    }\n              \n              \n\n                          \n    // * handle outcoming dead socket, server will close the connection\n    if((transport as TcpObfuscated).connection) {\n      // this.sendPingDelayDisconnect();\n\n      if(transport.connected) {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n      }\n\n      // this.pingInterval = ctx.setInterval(this.sendPing, PING_INTERVAL);\n      // this.sendPing();\n    }\n              \n\n    this.resend();\n  }\n\n  public destroy() {\n    this.log('destroy');\n  }\n\n  public forceReconnectTimeout() {\n    if((this.transport as TcpObfuscated).reconnect) {\n      (this.transport as TcpObfuscated).reconnect();\n    } else {\n      this.resend();\n    }\n  }\n\n  public forceReconnect() {\n    if((this.transport as TcpObfuscated).forceReconnect) {\n      (this.transport as TcpObfuscated).forceReconnect();\n    } else {\n      this.checkConnection('force reconnect');\n    }\n  }\n\n  /* private clearPing() {\n    if(this.pingPromise) {\n      this.pingPromise = undefined;\n    }\n\n    this.lastPingTime = undefined;\n  }\n  \n  private sendPing = () => {\n    // return;\n    \n    // if(!(this.transport as TcpObfuscated).connected) {\n    //   this.clearPing();\n    //   return;\n    // }\n\n    if(this.pingPromise) {\n      return;\n    }\n\n    const startTime = Date.now();\n    this.log('sendPing: ping', startTime);\n    const promise = this.pingPromise = this.wrapMtpCall('ping', {\n      ping_id: randomLong()\n    }, {\n      notContentRelated: true\n    }).then(() => {\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.log('sendPing: pong', elapsedTime);\n      \n      setTimeout(() => {\n        if(this.pingPromise !== promise) {\n          return;\n        }\n        \n        this.pingPromise = undefined;\n        this.sendPing();\n      }, Math.max(0, PING_INTERVAL - elapsedTime));\n    });\n  }; */\n\n  private clearPingDelayDisconnect() {\n    const deferred = this.pingDelayDisconnectDeferred;\n    this.pingDelayDisconnectDeferred = undefined;\n    this.lastPingDelayDisconnectId = undefined;\n\n    if(deferred) {\n      deferred.reject();\n    }\n  }\n\n  private sendPingDelayDisconnect = () => {\n    // return;\n\n    if(this.pingDelayDisconnectDeferred || !this.transport || !this.transport.connected) return;\n\n    /* if(!this.isOnline) {\n      if((this.transport as TcpObfuscated).connected) {\n        (this.transport as TcpObfuscated).connection.close();\n      }\n\n      return;\n    } */\n\n    const deferred = this.pingDelayDisconnectDeferred = deferredPromise();\n    const delays = this.delays;\n    const pingMaxTime = this.delays.pingMaxTime;\n    const lastPingTime = Math.min(this.lastPingTime ?? 0, pingMaxTime);\n    const disconnectDelay = Math.round(delays.disconnectDelayMin + lastPingTime / pingMaxTime * (delays.disconnectDelayMax - delays.disconnectDelayMin));\n    const timeoutTime = disconnectDelay * 1000;\n    const startTime = Date.now();\n    const pingId = this.lastPingDelayDisconnectId = randomLong();\n    const options: MTMessageOptions = {notContentRelated: true};\n    this.wrapMtpCall('ping_delay_disconnect', {\n      ping_id: pingId,\n      disconnect_delay: disconnectDelay\n    }, options);\n    \n    this.debug && this.log.debug(`sendPingDelayDisconnect: ping, timeout=${timeoutTime}, lastPingTime=${this.lastPingTime}, msgId=${options.messageId}`);\n    const rejectTimeout = ctx.setTimeout(deferred.reject, timeoutTime);\n\n    const onResolved = (reason: string) => {\n      clearTimeout(rejectTimeout);\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.debug && this.log.debug(`sendPingDelayDisconnect: pong, reason='${reason}', time=${lastPingTime}, msgId=${options.messageId}`);\n      if(elapsedTime > timeoutTime) {\n        throw undefined;\n      } else {\n        return pause(Math.max(0, this.delays.pingInterval - elapsedTime/* timeoutTime - elapsedTime - PING_INTERVAL */));\n      }\n    };\n    \n    const onTimeout = () => {\n      clearTimeout(rejectTimeout);\n      const transport = this.transport as TcpObfuscated;\n      if(this.pingDelayDisconnectDeferred !== deferred || !transport?.connection) {\n        return;\n      }\n\n      this.log.error('sendPingDelayDisconnect: catch, closing connection', this.lastPingTime, options.messageId);\n      transport.connection.close();\n    };\n\n    const onFinally = () => {\n      if(this.pingDelayDisconnectDeferred !== deferred) {\n        return;\n      }\n\n      this.pingDelayDisconnectDeferred = undefined;\n      this.sendPingDelayDisconnect();\n    };\n\n    deferred\n    .then(onResolved)\n    .catch(onTimeout)\n    .finally(onFinally);\n  };\n\n                          \n  private checkLongPoll = () => {\n    const isClean = this.cleanupSent();\n    //this.log.error('Check lp', this.longPollPending, this.dcId, isClean, this);\n    if((this.longPollPending && Date.now() < this.longPollPending) ||\n      this.offline ||\n      this.isStopped() ||\n      this.isFileNetworker) {\n      //this.log('No lp this time');\n      return false;\n    }\n\n    sessionStorage.get('dc').then((baseDcId) => {\n      if(isClean && (\n          baseDcId !== this.dcId ||\n          (this.sleepAfter && Date.now() > this.sleepAfter)\n        )) {\n        //console.warn(dT(), 'Send long-poll for DC is delayed', this.dcId, this.sleepAfter);\n        return;\n      }\n\n      this.sendLongPoll();\n    });\n  };\n\n  private sendLongPoll() {\n    if(this.sendingLongPoll) return;\n    this.sendingLongPoll = true;\n    const maxWait = 25000;\n\n    this.longPollPending = Date.now() + maxWait;\n    this.debug && this.log.debug('sendLongPoll', this.longPollPending);\n  \n    this.wrapMtpCall('http_wait', {\n      max_delay: 500,\n      wait_after: 150,\n      max_wait: maxWait\n    }, {\n      noResponse: true,\n      // notContentRelated: true,\n      longPoll: true\n    }).then(() => {\n      this.longPollPending = undefined;\n      setTimeout(this.checkLongPoll, 0);\n    }, (error: ErrorEvent) => {\n      this.log('Long-poll failed', error);\n    }).finally(() => {\n      this.sendingLongPoll = undefined;\n    });\n  }\n\n  private checkConnection = (event: Event | string) => {\n    this.debug && this.log('Check connection', event);\n    this.clearCheckConnectionTimeout();\n\n    if(!this.transport) {\n      this.log.warn('No transport for checkConnection');\n      return;\n    }\n  \n    const serializer = new TLSerialization({mtproto: true});\n    const pingId = randomLong();\n  \n    serializer.storeMethod('ping', {\n      ping_id: pingId\n    });\n  \n    const pingMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      body: serializer.getBytes(true)\n    };\n\n    if(this.offline) {\n      this.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.sendEncryptedRequest(pingMessage).then(() => {\n      this.toggleOffline(false);\n    }, () => {\n      this.debug && this.log('Delay', this.checkConnectionPeriod * 1000);\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\n      this.checkConnectionPeriod = Math.min(60, this.checkConnectionPeriod * 1.5);\n    });\n  };\n\n  private clearCheckConnectionTimeout() {\n    if(this.checkConnectionTimeout !== undefined) {\n      clearTimeout(this.checkConnectionTimeout);\n      this.checkConnectionTimeout = undefined;\n    }\n  }\n\n  private toggleOffline(offline: boolean) {\n    if(this.offline !== offline) {\n      this.offline = offline;\n\n      this.clearCheckConnectionTimeout();\n      if(offline) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n        \n        if(this.checkConnectionPeriod < 1.5) {\n          this.checkConnectionPeriod = 0;\n        }\n        \n        const delay = this.checkConnectionPeriod * 1000 | 0;\n        this.checkConnectionRetryAt = Date.now() + delay;\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOfline'), delay);\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5);\n    \n                               \n                                                                              \n                                                                             \n                  \n      } else {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n        this.checkLongPoll();\n\n        this.scheduleRequest();\n    \n                               \n                                                                          \n                                                                         \n                  \n      }\n    }\n\n    this.setConnectionStatus(offline ? ConnectionStatus.Closed : ConnectionStatus.Connected, offline ? this.checkConnectionRetryAt : undefined);\n  }\n\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\n    // let timeout = setTimeout(() => {\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\n    // }, 5e3);\n\n    promise.then((result) => {\n      this.toggleOffline(false);\n      // this.log('parse for', message);\n      return this.parseResponse(result).then((response) => {\n        this.debug && this.log.debug('Server response', response);\n  \n        this.processMessage(response.response, response.messageId, response.sessionId);\n\n        this.checkLongPoll();\n        this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\n\n        return true;\n      });\n    }, (error) => {\n      this.log.error('Encrypted request failed', error, message);\n  \n      this.pushResend(message.msg_id);\n      this.toggleOffline(true);\n\n      return false;\n    }).then((shouldResolve) => {\n      // clearTimeout(timeout);\n      const sentMessages = this.sentMessages;\n      noResponseMsgs.forEach((msgId) => {\n        const sentMessage = sentMessages[msgId];\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          delete sentMessages[msgId];\n          delete this.pendingMessages[msgId];\n          shouldResolve ? deferred.resolve() : deferred.reject();\n        }\n      });\n    });\n  }\n            \n\n  // тут можно сделать таймаут и выводить дисконнект\n  private pushMessage(message: {\n    msg_id: string,\n    seq_no: number,\n    body: Uint8Array | number[],\n    isAPI?: boolean\n  }, options: MTMessageOptions) {\n    let promise: CancellablePromise<void>;\n    if(!options.notContentRelated || options.noResponse) {\n      promise = deferredPromise();\n    }\n    \n    this.sentMessages[message.msg_id] = Object.assign(\n      message, \n      options, \n      promise ? {deferred: promise} : undefined\n    );\n\n    //this.log.error('Networker pushMessage:', this.sentMessages[message.msg_id]);\n\n    this.pendingMessages[message.msg_id] = 0;\n  \n    if(!options.noSchedule) {\n      this.scheduleRequest();\n    }\n\n    if(isObject(options)) {\n      options.messageId = message.msg_id;\n    }\n\n    return promise;\n  }\n\n  public attachPromise(promise: Promise<any>, message: MTMessage) {\n    const canIncrement = true;\n    const timeout = setTimeout(() => {\n      if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < this.delays.connectionTimeout) {\n        return;\n      }\n\n      this.log.error('timeout', message);\n      if(this.isOnline) {\n        this.setConnectionStatus(ConnectionStatus.TimedOut);\n      }\n\n      /* this.getEncryptedOutput(message).then((bytes) => {\n        this.log.error('timeout encrypted', bytes);\n      }); */\n    }, this.delays.connectionTimeout);\n\n    promise.catch(noop).finally(() => {\n      clearTimeout(timeout);\n      this.setConnectionStatus(ConnectionStatus.Connected);\n\n      if(canIncrement) {\n        --this.activeRequests;\n        this.setDrainTimeout();\n      }\n    });\n    \n    if(canIncrement) {\n      ++this.activeRequests;\n      if(this.onDrainTimeout !== undefined) {\n        clearTimeout(this.onDrainTimeout);\n        this.onDrainTimeout = undefined;\n      }\n    }\n  }\n\n  public setDrainTimeout() {\n    if(!this.activeRequests && this.onDrain && this.onDrainTimeout === undefined) {\n      this.onDrainTimeout = ctx.setTimeout(() => {\n        this.onDrainTimeout = undefined;\n        this.log('drain');\n        this.onDrain();\n      }, DRAIN_TIMEOUT);\n    }\n  }\n\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number) {\n    const isOnline = status === ConnectionStatus.Connected;\n    const willChange = this.status !== status;\n    this.isOnline = isOnline;\n    this.status = status;\n\n    if(willChange) {\n      if(this.networkerFactory.onConnectionStatusChange) {\n        this.networkerFactory.onConnectionStatusChange({\n          _: 'networkerStatus',\n          status,\n          dcId: this.dcId,\n          name: this.name,\n          isFileNetworker: this.isFileNetworker,\n          isFileDownload: this.isFileDownload,\n          isFileUpload: this.isFileUpload,\n          retryAt\n        });\n      }\n\n      if(this.isOnline) {\n        this.scheduleRequest();\n      }\n\n      if((this.transport as TcpObfuscated)?.connection) {\n        this.clearPingDelayDisconnect();\n        this.sendPingDelayDisconnect();\n      }\n\n      // this.getNewTimeOffset = true;\n    }\n    /* if(this.onConnectionStatusChange) {\n      this.onConnectionStatusChange(this.isOnline);\n    } */\n  }\n\n  private pushResend(messageId: string, delay = 100) {\n    const value = delay ? Date.now() + delay : 0;\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage.container) {\n      for(const innerMsgId of sentMessage.inner) {\n        this.pendingMessages[innerMsgId] = value;\n      }\n    } else {\n      this.pendingMessages[messageId] = value;\n    }\n\n    if(sentMessage.acked) {\n      this.log.error('pushResend: acked message?', sentMessage);\n    }\n  \n    if(this.debug) {\n      this.log.debug('pushResend:', messageId, sentMessage, this.pendingMessages, delay);\n    }\n  \n    this.scheduleRequest(delay);\n  }\n\n  // * correct, fully checked\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\n    const x = isOut ? 0 : 8;\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\n\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256', msgKeyLargePlain);\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\n    return msgKey;\n  };\n\n  // * correct, fully checked\n  private getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\n    const x = isOut ? 0 : 8;\n    const sha2aText = new Uint8Array(52);\n    const sha2bText = new Uint8Array(52);\n    const promises: Array<Promise<Uint8Array>> = [];\n  \n    sha2aText.set(msgKey, 0);\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2aText));\n  \n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\n    sha2bText.set(msgKey, 36);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2bText));\n\n    return Promise.all(promises).then((results) => {\n      const aesKey = new Uint8Array(32);\n      const aesIv = new Uint8Array(32);\n      const sha2a = new Uint8Array(results[0]);\n      const sha2b = new Uint8Array(results[1]);\n  \n      aesKey.set(sha2a.subarray(0, 8));\n      aesKey.set(sha2b.subarray(8, 24), 8);\n      aesKey.set(sha2a.subarray(24, 32), 24);\n  \n      aesIv.set(sha2b.subarray(0, 8));\n      aesIv.set(sha2a.subarray(8, 24), 8);\n      aesIv.set(sha2b.subarray(24, 32), 24);\n  \n      return [aesKey, aesIv];\n    });\n  }\n\n  public isStopped() {\n    return this.networkerFactory.akStopped && !this.isFileNetworker;\n  }\n\n  private performScheduledRequest() {\n    if(this.isStopped()) {\n      return false;\n    }\n\n    if(this.pendingAcks.length) {\n      const ackMsgIds = this.pendingAcks.slice();\n\n      // this.log('acking messages', ackMsgIDs)\n      this.wrapMtpMessage({\n        _: 'msgs_ack',\n        msg_ids: ackMsgIds\n      }, {\n        notContentRelated: true,\n        noSchedule: true\n      });\n    }\n  \n    const pendingResendReqLength = this.pendingResendReq.length;\n    if(pendingResendReqLength) {\n      const options: MTMessageOptions = {...RESEND_OPTIONS};\n      const msgIds = this.pendingResendReq.splice(0, pendingResendReqLength);\n      this.wrapMtpMessage({\n        _: 'msg_resend_req',\n        msg_ids: msgIds\n      }, options);\n\n      this.log('resend: resending requests', options.messageId, msgIds);\n      /* this.lastResendReq = {\n        reqMsgId: options.messageId,\n        msgIds: msgIds\n      }; */\n\n      // this.pendingResendReq.length = 0;\n    }\n\n    // if(this.pendingResendAnsReq.length) {\n    //   const options: MTMessageOptions = {...RESEND_OPTIONS};\n    //   const msgIds = this.pendingResendAnsReq.slice();\n    //   this.wrapMtpMessage({\n    //     _: 'msg_resend_ans_req',\n    //     msg_ids: msgIds\n    //   }, options);\n\n    //   this.log('resend: requesting answers', options.messageId, msgIds);\n    //   this.lastResendAnsReq = {\n    //     reqMsgId: options.messageId,\n    //     msgIds: msgIds\n    //   };\n\n    //   // this.pendingResendAnsReq.length = 0;\n    // }\n  \n    let outMessage: MTMessage;\n    const messages: typeof outMessage[] = [];\n      \n    //const currentTime = Date.now();\n    let messagesByteLen = 0;\n\n                            \n    let hasApiCall = false;\n    let hasHttpWait = false;\n              \n\n    let lengthOverflow = false;\n\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\n    for(const messageId of keys) {\n      //const value = this.pendingMessages[messageId];\n\n      //if(!value || value <= currentTime) {\n        const message = this.sentMessages[messageId];\n        if(message && message.body) {\n          /* if(message.fileUpload) {\n            this.log('performScheduledRequest message:', message, message.body.length, (message.body as Uint8Array).byteLength, (message.body as Uint8Array).buffer.byteLength);\n          } */\n\n          const messageByteLength = message.body.length + 32;\n\n          if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\n            this.log.warn('lengthOverflow', message, messages);\n            lengthOverflow = true;\n\n            if(outMessage) { // if it's not a first message\n              break;\n            }\n          }\n\n          messages.push(message);\n          messagesByteLen += messageByteLength;\n\n                                  \n          if(message.isAPI) {\n            hasApiCall = true;\n          } else if(message.longPoll) {\n            hasHttpWait = true;\n          }\n                    \n\n          outMessage = message;\n        } else {\n          // this.log(message, messageId)\n        }\n\n        delete this.pendingMessages[messageId];\n      //}\n    }\n  \n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    if(hasApiCall && !hasHttpWait) {\n      const serializer = new TLSerialization({mtproto: true});\n      serializer.storeMethod('http_wait', {\n        max_delay: 500,\n        wait_after: 150,\n        max_wait: 3000\n      });\n\n      messages.push({\n        msg_id: this.timeManager.generateId(),\n        seq_no: this.generateSeqNo(),\n        body: serializer.getBytes(true)\n      });\n    }\n              \n  \n    if(!messages.length) {\n      // this.log('no scheduled messages')\n      return;\n    }\n  \n                            \n    const noResponseMsgs: Array<string> = messages.filter((message) => message.noResponse).map((message) => message.msg_id);\n              \n  \n    if(messages.length > 1) {\n      const container = this.generateContainerMessage(messagesByteLen, messages);\n      outMessage = container.messageWithBody;\n  \n      this.sentMessages[outMessage.msg_id] = container.message;\n    } else {\n      this.sentMessages[outMessage.msg_id] = outMessage;\n    }\n  \n    this.pendingAcks = [];\n\n    const promise = this.sendEncryptedRequest(outMessage);\n\n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\n              \n\n                          \n                            \n    if(!(this.transport instanceof HTTP))\n              \n    this.cleanupSent(); // ! WARNING\n              \n  \n    if(lengthOverflow) {\n      this.scheduleRequest();\n    }\n  }\n\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\n    const container = new TLSerialization({\n      mtproto: true,\n      startMaxLength: messagesByteLen + 64\n    });\n\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\n    container.storeInt(messages.length, 'CONTAINER[count]');\n\n    const innerMessages: string[] = [];\n    messages.forEach((message, i) => {\n      innerMessages.push(message.msg_id);\n      // this.log('Pushing to container:', message.msg_id);\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\n    });\n\n    const message: MTMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      container: true,\n      inner: innerMessages\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log.warn('Container', innerMessages, message.msg_id, message.seq_no);\n    }\n\n    return {\n      message,\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message),\n    };\n  }\n\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\n    const keyIv = await this.getAesKeyIv(msgKey, true);\n    // this.log('after msg key iv')\n\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\n    // this.log('Finish encrypt')\n\n    return {\n      bytes: encryptedBytes,\n      msgKey\n    };\n  }\n\n  private getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\n    // this.log('get decrypted start')\n    return this.getAesKeyIv(msgKey, false).then((keyIv) => {\n      // this.log('after msg key iv')\n      return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\n    });\n  }\n\n  private getEncryptedOutput(message: MTMessage) {\n    /* if(DEBUG) {\n      this.log.debug('Send encrypted', message, this.authKeyId);\n    } */\n    /* if(!this.isOnline) {\n      this.log('trying to send message when offline:', Object.assign({}, message));\n      //debugger;\n    } */\n\n    const data = new TLSerialization({\n      startMaxLength: message.body.length + 2048\n    });\n\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\n  \n    data.storeLong(message.msg_id, 'message_id');\n    data.storeInt(message.seq_no, 'seq_no');\n\n    data.storeInt(message.body.length, 'message_data_length');\n    data.storeRawBytes(message.body, 'message_data');\n\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\n    const desSalt = des.fetchLong();\n    const desSessionId = des.fetchLong();\n\n    if(!this.isOnline) {\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\n    } */\n\n    /* const messageDataLength = message.body.length;\n    let canBeLength = 0; // bytes\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 4;\n    canBeLength += 4;\n    canBeLength += message.body.length; */\n  \n    const dataBuffer = data.getBuffer();\n\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\n    } */\n\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\n    const padding = /* (message as any).padding ||  */randomize(new Uint8Array(paddingLength))/* .fill(0) */;\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157, \n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150, \n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157, \n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150, \n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\n\n    //(message as any).padding = padding;\n\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\n\n    /* if(dataWithPadding.byteLength % 16) {\n      this.log.error('aaa', dataWithPadding, paddingLength);\n    }\n\n    if(message.fileUpload) {\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\n    } */\n\n    // * full next block is correct\n    return this.getEncryptedMessage(dataWithPadding).then((encryptedResult) => {\n      /* if(DEBUG) {\n        this.log('Got encrypted out message', encryptedResult);\n      } */\n\n      const request = new TLSerialization({\n        startMaxLength: encryptedResult.bytes.length + 256\n      });\n      request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\n  \n      const requestData = request.getBytes(true);\n\n      // if(this.isFileNetworker) {\n      //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\n      //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\n      //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\n      //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\n      // }\n\n      return requestData;\n    });\n  }\n\n  private async sendEncryptedRequest(message: MTMessage) {\n    const requestData = await this.getEncryptedOutput(message);\n\n    if(!this.transport) {\n      this.log.error('trying to send something when offline', this.transport, this);\n    }\n\n    this.debug && this.log.debug('sending:', message, [message.msg_id].concat(message.inner || []), requestData.length);\n    const promise: Promise<Uint8Array> = this.transport ? this.transport.send(requestData) as any : Promise.reject({});\n    // this.debug && this.log.debug('sendEncryptedRequest: launched message into space:', message, promise);\n    \n                             \n                   \n             \n    \n                          \n    if(!(this.transport instanceof HTTP)) return promise;\n              \n    \n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE',\n      transport: this.transport\n    };\n    \n    return promise.then((result) => {\n      if(!result?.byteLength) {\n        throw baseError;\n      }\n      \n      // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\n      return result;\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          type: 'NETWORK_BAD_REQUEST',\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n              \n  }\n\n  public parseResponse(responseBuffer: Uint8Array) {\n    //const perf = performance.now();\n    /* if(this.debug) {\n      this.log.debug('Start parsing response', responseBuffer);\n    } */\n\n    this.lastResponseTime = Date.now();\n\n    const deserializer = new TLDeserialization(responseBuffer);\n  \n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\n      throw new Error('[MT] Invalid server auth_key_id: ' + bytesToHex(authKeyId));\n    }\n\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\n  \n    return this.getDecryptedMessage(msgKey, encryptedData).then((dataWithPadding) => {\n      // this.log('after decrypt')\n      return this.getMsgKey(dataWithPadding, false).then((calcMsgKey) => {\n        if(!bytesCmp(msgKey, calcMsgKey)) {\n          this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\n          this.updateSession(); // fix 28.01.2020\n          throw new Error('[MT] server msgKey mismatch, updating session');\n        }\n        // this.log('after msgKey check')\n  \n        let deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\n  \n        /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\n        const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\n        const messageId = deserializer.fetchLong('message_id');\n  \n        if(!bytesCmp(sessionId, this.sessionId) &&\n          (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\n          this.log.warn('Sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\n          //this.updateSession();\n          //this.sessionID = sessionID;\n          throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\n        }\n  \n        const seqNo = deserializer.fetchInt('seq_no');\n  \n        const totalLength = dataWithPadding.byteLength;\n  \n        const messageBodyLength = deserializer.fetchInt('message_data[length]');\n        let offset = deserializer.getOffset();\n  \n        if((messageBodyLength % 4) ||\n          messageBodyLength > totalLength - offset) {\n          throw new Error('[MT] Invalid body length: ' + messageBodyLength);\n        }\n        const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\n  \n        offset = deserializer.getOffset();\n        const paddingLength = totalLength - offset;\n        if(paddingLength < 12 || paddingLength > 1024) {\n          throw new Error('[MT] Invalid padding length: ' + paddingLength);\n        }\n  \n        //let buffer = bytesToArrayBuffer(messageBody);\n        deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\n          mtproto: true, \n          override: {\n            mt_message: (result: any, field: string) => {\n              result.msg_id = deserializer.fetchLong(field + '[msg_id]');\n              result.seqno = deserializer.fetchInt(field + '[seqno]');\n              result.bytes = deserializer.fetchInt(field + '[bytes]');\n  \n              const offset = deserializer.getOffset();\n  \n              //self.log('mt_message!!!!!', result, field);\n  \n              try {\n                result.body = deserializer.fetchObject('Object', field + '[body]');\n              } catch(e) {\n                this.log.error('parse error', (e as Error).message, (e as Error).stack);\n                result.body = {\n                  _: 'parse_error',\n                  error: e\n                };\n              }\n\n              if(deserializer.getOffset() !== offset + result.bytes) {\n                // console.warn(dT(), 'set offset', this.offset, offset, result.bytes)\n                // this.log(result)\n                deserializer.setOffset(offset + result.bytes);\n              }\n              // this.log('override message', result)\n            },\n            mt_rpc_result: (result: any, field: any) => {\n              result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\n  \n              const sentMessage = this.sentMessages[result.req_msg_id];\n              const type = sentMessage && sentMessage.resultType || 'Object';\n  \n              if(result.req_msg_id && !sentMessage) {\n                // console.warn(dT(), 'Result for unknown message', result);\n                return;\n              }\n  \n              // deserializer.setMtproto(false);\n              result.result = deserializer.fetchObject(type, field + '[result]');\n              // deserializer.setMtproto(true);\n              // self.log(dT(), 'override rpc_result', sentMessage, type, result);\n            }\n          }\n        });\n\n        const response = deserializer.fetchObject('', 'INPUT');\n        //this.log.error('Parse response time:', performance.now() - perf);\n        return {\n          response,\n          messageId,\n          sessionId,\n          seqNo\n        };\n      });\n    });\n  }\n\n  private applyServerSalt(newServerSalt: string) {\n    const serverSalt = longToBytes(newServerSalt);\n  \n    sessionStorage.set({\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\n    });\n  \n    this.serverSalt = new Uint8Array(serverSalt);\n  }\n\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой) \n  public scheduleRequest(delay?: number) {\n    /* if(!this.isOnline) {\n      return;\n    } */\n\n                            \n                          \n    if(this.transport instanceof HTTP) {\n              \n      if(this.offline) {\n        this.checkConnection('forced schedule');\n      }\n\n      delay ||= 0; // set zero timeout to pack other messages too\n                          \n    }\n              \n              \n\n    const nextReq = Date.now() + (delay || 0);\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\n      //this.debug && this.log('scheduleRequest: nextReq', this.nextReq, nextReq);\n      return;\n    }\n  \n    //this.debug && this.log('scheduleRequest: delay', delay);\n\n    /* if(this.nextReqTimeout) {\n      return;\n    } */\n    \n    //const perf = performance.now();\n    if(this.nextReqTimeout) {\n      clearTimeout(this.nextReqTimeout);\n    }\n\n    const cb = () => {\n      //this.debug && this.log('scheduleRequest: timeout delay was:', performance.now() - perf);\n\n      this.nextReqTimeout = 0;\n      this.nextReq = 0;\n\n                              \n                            \n      if(this.transport instanceof HTTP)\n                \n      if(this.offline) {\n        //this.log('Cancel scheduled');\n        return;\n      }\n                \n\n      this.performScheduledRequest();\n    };\n\n    this.nextReq = nextReq;\n\n    if(delay !== undefined) {\n      this.nextReqTimeout = ctx.setTimeout(cb, delay);\n    } else {\n      cb();\n    }\n  }\n\n  private ackMessage(msgId: MTLong) {\n    // this.log('ack message', msgID)\n    this.pendingAcks.push(msgId);\n\n    let delay: number;\n\n                            \n                          \n    if(this.transport instanceof HTTP)\n              \n    delay = 30000;\n              \n\n    this.scheduleRequest(delay);\n  }\n  \n  private reqResend(msgId: MTLong/* , isAnswer?: boolean */) {\n    if(this.debug) {\n      this.log.debug('Req resend', msgId/* , isAnswer */);\n    }\n\n    // (isAnswer ? this.pendingResendAnsReq : this.pendingResendReq).push(msgId);\n    this.pendingResendReq.push(msgId);\n    this.scheduleRequest(100);\n  }\n\n  public cleanupSent() {\n    let notEmpty = false;\n    const sentMessages = this.sentMessages;\n    // this.log('clean start', this.dcId/*, sentMessages*/)\n    Object.keys(sentMessages).forEach((msgId) => {\n      const message = sentMessages[msgId];\n    \n      // this.log('clean iter', msgID, message)\n      if(message.notContentRelated && this.pendingMessages[msgId] === undefined) {\n        // this.log('clean notContentRelated', msgID)\n        delete sentMessages[msgId];\n      } else if(message.container) {\n        for(const innerMsgId of message.inner) {\n          if(sentMessages[innerMsgId] !== undefined) {\n            // this.log('clean failed, found', msgID, message.inner[i], sentMessages[message.inner[i]].seq_no)\n            notEmpty = true;\n            return;\n          }\n        }\n        // this.log('clean container', msgID)\n        delete sentMessages[msgId];\n      } else {\n        notEmpty = true;\n      }\n    });\n  \n    return !notEmpty;\n  }\n\n  private processMessageAck(messageId: Long) {\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage && !sentMessage.acked) {\n      //delete sentMessage.body;\n      sentMessage.acked = true;\n    }\n  }\n\n  private processError(rawError: {error_message: string, error_code: number}) {\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\n    rawError.error_code = rawError.error_code;\n  \n    return {\n      code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\n      type: matches[1] || 'UNKNOWN',\n      description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\n      originalError: rawError\n    };\n  }\n\n  /**\n   * * только для сокета\n   * TODO: consider about containers resend\n   */\n  public resend() {\n    const sentMessages = this.sentMessages;\n    for(const id in sentMessages) {\n      const msg = sentMessages[id];\n      if(msg.body || msg.container) {\n        this.pushResend(id);\n      }\n    }\n\n    if((this.transport as TcpObfuscated).connection) {\n      this.clearPingDelayDisconnect();\n      this.sendPingDelayDisconnect();\n    }\n  }\n\n  /* public requestMessageStatus() {\n    const ids: string[] = [];\n    for(const id in this.sentMessages) {\n      const message = this.sentMessages[id];\n      if(message.isAPI && message.fileUpload) {\n        ids.push(message.msg_id);\n      }\n    }\n\n    this.wrapMtpMessage({\n      _: 'msgs_state_req',\n      msg_ids: ids\n    }, {\n      notContentRelated: true\n    }).then((res) => {\n      this.log('status', res);\n    });\n  } */\n\n  private applyServerTime(messageId: string) {\n    const serverTime = bigInt(messageId).shiftRight(32).toJSNumber();\n    this.log('applying server time', serverTime);\n    return this.timeManager.applyServerTime(serverTime);\n  }\n\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[]) {\n    if(message._ === 'messageEmpty') {\n      this.log.warn('processMessage: messageEmpty', message, messageId);\n      return;\n    }\n\n    // messageId = messageId.toString();\n\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\n    if(msgidInt % 2) {\n      this.log.warn('Server even message id: ', messageId, message);\n      return;\n    }\n\n    if(this.debug) {\n      this.log.debug('process message', message, messageId);\n    }\n\n    if(this.pingDelayDisconnectDeferred) {\n      this.pingDelayDisconnectDeferred.resolve('any message');\n    }\n\n    // let changedTimeOffset: boolean;\n    // if(this.getNewTimeOffset) {\n    //   changedTimeOffset = this.applyServerTime(messageId);\n    //   this.getNewTimeOffset = undefined;\n    // }\n\n    switch(message._) {\n      case 'msg_container': {\n        for(const innerMessage of message.messages) {\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\n        }\n\n        break;\n      }\n  \n      case 'bad_server_salt': {\n        this.log('Bad server salt', message);\n\n        this.applyServerSalt(message.new_server_salt);\n\n        if(this.sentMessages[message.bad_msg_id]) {\n          this.pushResend(message.bad_msg_id);\n        }\n        \n        this.ackMessage(messageId);\n        \n        // simulate disconnect\n        /* try {\n          this.log('networker state:', this);\n          // @ts-ignore\n          this.transport.ws.close(1000);\n        } catch(err) {\n          this.log.error('transport', this.transport, err);\n        } */\n\n        break;\n      }\n  \n      case 'bad_msg_notification': {\n        this.log.error('Bad msg notification', message);\n\n        switch(message.error_code) {\n          case 16:    // * msg_id too low\n          case 17:    // * msg_id too high\n          case 32:    // * msg_seqno too low\n          case 33:    // * msg_seqno too high\n          case 64: {  // * invalid container\n            // if(changedTimeOffset === undefined) {\n            //   changedTimeOffset = this.applyServerTime(messageId);\n            // }\n\n            const changedTimeOffset = this.applyServerTime(messageId);\n            if(message.error_code === 17 || changedTimeOffset) {\n              this.log('Update session');\n              this.updateSession();\n            }\n\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\n            if(badMessage) this.pushResend(badMessage.msg_id); // fix 23.01.2020\n            //this.ackMessage(messageId);\n          }\n\n          // * invalid container\n          /* case 64: {\n            const badMessage = this.sentMessages[message.bad_msg_id];\n            if(badMessage) {\n              for(const msgId of badMessage.inner) {\n                if(this.sentMessages[msgId] !== undefined) {\n                  this.updateSentMessage\n                }\n              }\n              const inner = badMessage.inner;\n            }\n          } */\n        }\n\n        break;\n      }\n  \n      case 'message': {\n        if(this.lastServerMessages.indexOf(messageId) !== -1) {\n          // console.warn('[MT] Server same messageId: ', messageId)\n          this.ackMessage(messageId);\n          return;\n        }\n\n        this.lastServerMessages.push(messageId);\n        if(this.lastServerMessages.length > 100) {\n          this.lastServerMessages.shift();\n        }\n\n        this.processMessage(message.body, message.msg_id, sessionId);\n        break;\n      }\n        \n      case 'new_session_created': {\n        this.ackMessage(messageId);\n\n        if(this.debug) {\n          this.log.debug('new_session_created', message);\n        }\n        //this.updateSession();\n  \n        this.processMessageAck(message.first_msg_id);\n        this.applyServerSalt(message.server_salt);\n  \n        sessionStorage.get('dc').then((baseDcId) => {\n          if(baseDcId === this.dcId && !this.isFileNetworker && this.networkerFactory.updatesProcessor) {\n            this.networkerFactory.updatesProcessor(message);\n          }\n        });\n        break;\n      }\n        \n      case 'msgs_ack': {\n        for(const msgId of message.msg_ids) {\n          this.processMessageAck(msgId);\n        }\n\n        break;\n      }\n  \n      case 'msg_detailed_info': {\n        const sentMessage = this.sentMessages[message.msg_id];\n        if(!sentMessage) {\n          this.ackMessage(message.answer_msg_id);\n          break;\n        }/*  else if(sentMessage.acked) {\n          this.reqResend(message.answer_msg_id, true);\n        }\n\n        break; */\n      }\n\n      case 'msg_new_detailed_info': {\n        if(this.pendingAcks.indexOf(message.answer_msg_id) !== -1) {\n          break;\n        }\n\n        this.reqResend(message.answer_msg_id);\n        break;\n      }\n  \n      case 'msgs_state_info': {\n        this.ackMessage(message.answer_msg_id);\n        const arr = [\n          [this.lastResendReq, this.pendingResendReq] as const\n          // [this.lastResendAnsReq, this.pendingResendAnsReq] as const\n        ];\n\n        for(const [lastResend, pendingResend] of arr) {\n          if(lastResend?.reqMsgId === message.req_msg_id && pendingResend.length) {\n            for(const badMsgId of lastResend.msgIds) {\n              const pos = pendingResend.indexOf(badMsgId);\n              if(pos !== -1) {\n                pendingResend.splice(pos, 1);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 'rpc_result': {\n        this.ackMessage(messageId);\n  \n        const sentMessageId = message.req_msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        // if(this.debug) {\n        //   this.log.debug('Rpc response', message.result, sentMessage);\n        // }\n\n        this.processMessageAck(sentMessageId);\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          if(message.result._ === 'rpc_error') {\n            const error = this.processError(message.result);\n            this.log('Rpc error', error);\n            if(deferred) {\n              deferred.reject(error);\n            }\n          } else {\n            if(deferred) {\n              deferred.resolve(message.result);\n            }\n\n            if(sentMessage.isAPI && !this.connectionInited) {\n              this.connectionInited = true;\n            }\n          }\n  \n          delete this.sentMessages[sentMessageId];\n        } else {\n          if(this.debug) {\n            this.log('Rpc result for unknown message:', sentMessageId, message);\n          }\n        }\n\n        break;\n      }\n\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\n        /* const sentMessageId = message.msg_id;\n        const sentMessage = this.sentMessages[sentMessageId]; \n\n        if(sentMessage) {\n          sentMessage.deferred.resolve(message);\n          delete this.sentMessages[sentMessageId];\n        } */\n        const pingId = message.ping_id;\n        if(this.lastPingDelayDisconnectId === pingId) {\n          this.pingDelayDisconnectDeferred.resolve('pong');\n        }\n\n        break;\n      }\n  \n      default:\n        this.ackMessage(messageId);\n\n        /* if(this.debug) {\n          this.log.debug('Update', message);\n        } */\n        \n        if(this.networkerFactory.updatesProcessor !== null) {\n          this.networkerFactory.updatesProcessor(message);\n        }\n        break;\n    }\n  }\n}\n","import bigInt from \"big-integer\";\n\nexport default function sortLongsArray(arr: string[]) {\n  return arr.map((long) => {\n    return bigInt(long);\n  }).sort((a, b) => {\n    return a.compare(b);\n  }).map((bigInt) => {\n    return bigInt.toString(10);\n  });\n}\n","import addPadding from '../bytes/addPadding';\nimport bigInt from 'big-integer';\nimport { bigIntToBytes } from '../bigInt/bigIntConversion';\n\nexport default function longToBytes(sLong: string) {\n  const bigIntBytes = bigIntToBytes(bigInt(sLong)).reverse();\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\n  // console.log('longToBytes', bytes, bigIntBytes);\n  \n  return bytes;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ConnectionStatusChange } from \"./connectionStatus\";\r\nimport MTPNetworker from \"./networker\";\r\nimport { InvokeApiOptions } from \"../../types\";\r\nimport App from \"../../config/app\";\r\nimport indexOfAndSplice from \"../../helpers/array/indexOfAndSplice\";\r\nimport { AppManager } from \"../appManagers/manager\";\r\n\r\nexport class NetworkerFactory extends AppManager {\r\n  private networkers: MTPNetworker[] = [];\r\n  public language = navigator.language || App.langPackCode;\r\n  public updatesProcessor: (obj: any) => void = null;\r\n  // public onConnectionStatusChange: (status: ConnectionStatusChange) => void = null;\r\n  public akStopped = false;\r\n\r\n  public onConnectionStatusChange(status: ConnectionStatusChange) {\r\n    this.rootScope.dispatchEvent('connection_status_change', status);\r\n    //  ({type: 'connectionStatusChange', payload: status});\r\n  }\r\n\r\n  public removeNetworker(networker: MTPNetworker) {\r\n    indexOfAndSplice(this.networkers, networker);\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\r\n    //console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\r\n    const networker = new MTPNetworker(this, this.timeManager, dcId, authKey, authKeyId, serverSalt, options);\r\n    this.networkers.push(networker);\r\n    return networker;\r\n  }\r\n\r\n  public startAll() {\r\n    if(this.akStopped) {\r\n      const stoppedNetworkers = this.networkers.filter((networker) => networker.isStopped());\r\n\r\n      this.akStopped = false;\r\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\r\n      \r\n      for(const networker of stoppedNetworkers) {\r\n        networker.scheduleRequest();\r\n      }\r\n    }\r\n  }\r\n\r\n  public stopAll() {\r\n    this.akStopped = true;\r\n  }\r\n\r\n  public setLanguage(langCode: string) {\r\n    this.language = langCode;\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.connectionInited = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public unsetConnectionInited() {\r\n    for(const networker of this.networkers) {\r\n      networker.connectionInited = false;\r\n    }\r\n  }\r\n\r\n  public forceReconnectTimeout() {\r\n    for(const networker of this.networkers) {\r\n      networker.forceReconnectTimeout();\r\n    }\r\n  }\r\n\r\n  public forceReconnect() {\r\n    for(const networker of this.networkers) {\r\n      if(!networker.isFileNetworker) {\r\n        networker.forceReconnect();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { TLSerialization } from \"./tl_utils\";\r\nimport cryptoWorker from '../crypto/cryptoMessagePort';\r\nimport Modes from \"../../config/modes\";\r\nimport bytesFromHex from \"../../helpers/bytes/bytesFromHex\";\r\nimport bytesToHex from \"../../helpers/bytes/bytesToHex\";\r\nimport bigInt from 'big-integer';\r\n\r\nexport type RSAPublicKeyHex = {\r\n  modulus: string,\r\n  exponent: string\r\n};\r\n\r\nexport class RSAKeysManager {\r\n\r\n  /**\r\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\r\n   * \r\n   * \r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\r\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\r\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\r\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\r\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\r\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   *  -----BEGIN RSA PUBLIC KEY-----\r\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\r\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\r\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\r\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\r\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\r\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\r\n   *  -----END RSA PUBLIC KEY-----\r\n   *\r\n   * Bytes can be got via \r\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\r\n   * $ openssl rsa -pubin -in pub.pem -text -noout\r\n   */\r\n\r\n  /* private publisKeysHex = [{\r\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\r\n    exponent: '010001'\r\n  }, {\r\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\r\n    exponent: '010001'\r\n  }]; */\r\n\r\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\r\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publisKeysHex: RSAPublicKeyHex[] = [{\r\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\r\n    exponent: '010001'\r\n  }];\r\n\r\n  private publicKeysParsed: {\r\n    [hex: string]: RSAPublicKeyHex\r\n  } = {};\r\n  private prepared = false;\r\n  private preparePromise: Promise<void> = null;\r\n\r\n  constructor() {\r\n    if(Modes.test) {\r\n      this.publisKeysHex = this.testPublicKeysHex;\r\n    }\r\n  }\r\n\r\n  public prepare(): Promise<void> {\r\n    if(this.preparePromise) return this.preparePromise;\r\n    else if(this.prepared) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this.preparePromise = Promise.all(this.publisKeysHex.map((keyParsed) => {\r\n      const RSAPublicKey = new TLSerialization();\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\r\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\r\n\r\n      const buffer = RSAPublicKey.getBuffer();\r\n\r\n      return cryptoWorker.invokeCrypto('sha1', buffer).then((bytes) => {\r\n        const fingerprintBytes = bytes.slice(-8);\r\n        fingerprintBytes.reverse();\r\n  \r\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\r\n          modulus: keyParsed.modulus,\r\n          exponent: keyParsed.exponent\r\n        };\r\n      });\r\n    })).then(() => {\r\n      this.prepared = true;\r\n\r\n      //console.log('[MT] Prepared keys');\r\n      this.preparePromise = null;\r\n    });\r\n  }\r\n\r\n  public async select(fingerprints: Array<string>) {\r\n    await this.prepare();\r\n\r\n    for(let i = 0; i < fingerprints.length; ++i) {\r\n      let fingerprintHex = bigInt(fingerprints[i]).toString(16).toLowerCase();\r\n\r\n      if(fingerprintHex.length < 16) {\r\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\r\n      }\r\n\r\n      //console.log(fingerprintHex, this.publicKeysParsed);\r\n      const foundKey = this.publicKeysParsed[fingerprintHex];\r\n      if(foundKey) {\r\n        return Object.assign({\r\n          fingerprint: fingerprints[i]\r\n        }, foundKey);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RSAKeysManager();\r\n","export default function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\n  const len = bytes1.length;\n  const bytes = new Uint8Array(len);\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = bytes1[i] ^ bytes2[i];\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                    \nimport transportController from \"./transports/controller\";\n          \n\nimport { TLSerialization, TLDeserialization } from \"./tl_utils\";\nimport { TransportType } from \"./dcConfigurator\";\nimport rsaKeysManager from \"./rsaKeysManager\";\n\nimport CryptoWorker from \"../crypto/cryptoMessagePort\";\n\nimport { logger, LogTypes } from \"../logger\";\nimport DEBUG from \"../../config/debug\";\nimport { Awaited, DcId } from \"../../types\";\nimport { ApiError } from \"./apiManager\";\nimport addPadding from \"../../helpers/bytes/addPadding\";\nimport bytesCmp from \"../../helpers/bytes/bytesCmp\";\nimport bytesFromHex from \"../../helpers/bytes/bytesFromHex\";\nimport bytesToHex from \"../../helpers/bytes/bytesToHex\";\nimport bytesXor from \"../../helpers/bytes/bytesXor\";\nimport { bigIntFromBytes } from \"../../helpers/bigInt/bigIntConversion\";\nimport bigInt from \"big-integer\";\nimport randomize from \"../../helpers/array/randomize\";\nimport { AppManager } from \"../appManagers/manager\";\n\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\n\nfNewNonce = false;\nfNonce = false;\nfResult = false; */\n\ntype AuthOptions = {\n  dcId: number,\n  nonce: Uint8Array,\n  \n  serverNonce?: Uint8Array,\n  pq?: Uint8Array,\n  fingerprints?: string[],\n  publicKey?: {\n    modulus: string,\n    exponent: string,\n    fingerprint: string\n  },\n  \n  // good\n  p?: Uint8Array,\n  q?: Uint8Array,\n  \n  newNonce?: Uint8Array,\n  \n  retry?: number,\n  \n  b?: Uint8Array,\n  g?: number,\n  gA?: Uint8Array,\n  dhPrime?: Uint8Array,\n  \n  tmpAesKey?: Uint8Array,\n  tmpAesIv?: Uint8Array,\n  \n  authKeyId?: Uint8Array,\n  authKey?: Uint8Array,\n  serverSalt?: Uint8Array,\n\n  localTime?: number,\n  serverTime?: any,\n};\n\ntype ResPQ = {\n  _: 'resPQ';\n  nonce: Uint8Array;\n  pq: Uint8Array;\n  server_nonce: Uint8Array;\n  server_public_key_fingerprints: string[];\n};\n\ntype P_Q_inner_data = {\n  _: 'p_q_inner_data_dc';\n  pq: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  new_nonce: Uint8Array;\n  dc: number;\n};\n\ntype req_DH_params = {\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  public_key_fingerprint: string;\n  encrypted_data: Uint8Array;\n};\n\nexport class Authorizer extends AppManager {\n  private cached: {\n    [dcId: DcId]: Promise<AuthOptions>\n  };\n  \n  private log: ReturnType<typeof logger>;\n\n  private transportType: TransportType;\n\n                      \n  private getTransportTypePromise: Promise<void>;\n            \n  \n  protected after() {\n    this.cached = {};\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\n  }\n  \n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\n    const requestLength = requestArray.byteLength;\n    \n    const header = new TLSerialization();\n    header.storeLongP(0, 0, 'auth_key_id');\n    header.storeLong(this.timeManager.generateId(), 'msg_id');\n    header.storeInt(requestLength, 'request_length');\n    \n    const headerArray = header.getBytes(true) as Uint8Array;\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\n    resultArray.set(headerArray);\n    resultArray.set(requestArray, headerArray.length);\n\n    const transport = this.dcConfigurator.chooseServer(dcId, 'client', this.transportType);\n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE'\n    };\n    \n    if(DEBUG) {\n      this.log('mtpSendPlainRequest: creating requestPromise');\n    }\n    \n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\n    return promise.then((result) => {\n      if(DEBUG) {\n        this.log('mtpSendPlainRequest: in good sector', result);\n      }\n      \n      if(!result || !result.byteLength) {\n        throw baseError;\n      }\n      \n      try {\n        /* result = fResult ? fResult : result;\n        fResult = new Uint8Array(0); */\n        \n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\n\n        if(result.length === 4) {\n          const errorCode = deserializer.fetchInt();\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\n          throw errorCode;\n        }\n\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\n        \n        const msg_id = deserializer.fetchLong('msg_id');\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\n        \n        const msg_len = deserializer.fetchInt('msg_len');\n        if(!msg_len) this.log.error('no msg_len', msg_len);\n        \n        return deserializer;\n      } catch(e) {\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\n        const error = Object.assign(baseError, {originalError: e});\n        throw error;\n      }\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          originalError: error\n        });\n      }\n      \n      throw error;\n    });\n  }\n  \n  private async sendReqPQ(auth: AuthOptions) {\n    const request = new TLSerialization({mtproto: true});\n    \n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\n\n    if(DEBUG) {\n      this.log('Send req_pq', bytesToHex(auth.nonce));\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\n      rsaKeysManager.prepare();\n      deserializer = await promise;\n    } catch(error) {\n      this.log.error('req_pq error', (error as Error).message);\n      throw error;\n    }\n    \n    const response: ResPQ = deserializer.fetchObject('ResPQ');\n\n    if(response._ !== 'resPQ') {\n      throw new Error('[MT] resPQ response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      this.log.error(auth.nonce, response.nonce);\n      throw new Error('[MT] resPQ nonce mismatch');\n    }\n    \n    auth.serverNonce = response.server_nonce; // need\n    auth.pq = response.pq;\n    auth.fingerprints = response.server_public_key_fingerprints;\n    \n    if(DEBUG) {\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\n    }\n    \n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\n    if(!publicKey) {\n      throw new Error('[MT] No public key found');\n    }\n    \n    auth.publicKey = publicKey;\n    \n    if(DEBUG) {\n      this.log('PQ factorization start', auth.pq);\n    }\n    \n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\n    try {\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\n    } catch(error) {\n      this.log.error('worker error factorize', error);\n      throw error;\n    }\n    \n    auth.p = pAndQ[0];\n    auth.q = pAndQ[1];\n    \n    if(DEBUG) {\n      this.log('PQ factorization done', pAndQ);\n    }\n    \n    return this.sendReqDhParams(auth);\n  }\n  \n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    auth.newNonce = randomize(new Uint8Array(32));\n\n    const p_q_inner_data_dc: P_Q_inner_data = {\n      _: 'p_q_inner_data_dc',\n      pq: auth.pq,\n      p: auth.p,\n      q: auth.q,\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      new_nonce: auth.newNonce,\n      dc: 0\n    };\n    \n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\n\n    const data = pQInnerDataSerialization.getBytes(true);\n    if(data.length > 144) {\n      throw 'DH_params: data is more than 144 bytes!';\n    }\n\n    const dataWithPadding = addPadding(data, 192, false, true, false);\n    const dataPadReversed = dataWithPadding.slice().reverse();\n\n    const getKeyAesEncrypted = async() => {\n      for(;;) {\n        const tempKey = randomize(new Uint8Array(32));\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256', tempKey.concat(dataWithPadding)));\n        if(dataWithHash.length !== 224) {\n          throw 'DH_params: dataWithHash !== 224 bytes!';\n        }\n    \n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256', aesEncrypted));\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\n\n        const keyAesEncryptedBigInt = bigIntFromBytes(keyAesEncrypted);\n        const publicKeyModulusBigInt = bigInt(auth.publicKey.modulus, 16);\n\n        if(keyAesEncryptedBigInt.compare(publicKeyModulusBigInt) === -1) {\n          return keyAesEncrypted;\n        }\n      }\n    };\n    \n    const keyAesEncrypted = await getKeyAesEncrypted();\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\n\n    const req_DH_params: req_DH_params = {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      p: auth.p,\n      q: auth.q,\n      public_key_fingerprint: auth.publicKey.fingerprint,\n      encrypted_data: encryptedData\n    };\n    \n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('req_DH_params', req_DH_params);\n    \n    const requestBytes = request.getBytes(true);\n    \n    if(DEBUG) {\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\n    }\n    \n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\n    } catch(error) {\n      this.log.error('Send req_DH_params FAIL!', error);\n      throw error;\n    }\n    \n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\n    \n    if(DEBUG) {\n      this.log('Sent req_DH_params, response:', response);\n    }\n    \n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\n    }\n    \n    if(response._ === 'server_DH_params_fail') {\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce)).slice(-16);\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\n      }\n      \n      throw new Error('[MT] server_DH_params_fail');\n    }\n    \n    // fill auth object\n    try {\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\n    } catch(e) {\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\n      throw e;\n    }\n    \n    //console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\n    \n    return this.sendSetClientDhParams(auth);\n  }\n  \n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\n    auth.localTime = Date.now();\n    \n    // ! can't concat Array with Uint8Array!\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.serverNonce)))\n    .concat((await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\n    \n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(12)\n    .concat(await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\n    \n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\n    \n    const hash = answerWithHash.slice(0, 20);\n    const answerWithPadding = answerWithHash.slice(20);\n\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\n    const response = deserializer.fetchObject('Server_DH_inner_data');\n    \n    if(response._ !== 'server_DH_inner_data') {\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\n    }\n    \n    if(DEBUG) {\n      this.log('Done decrypting answer');\n    }\n    auth.g = response.g;\n    auth.dhPrime = response.dh_prime;\n    auth.gA = response.g_a;\n    auth.serverTime = response.server_time;\n    auth.retry = 0;\n    \n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\n    \n    const offset = deserializer.getOffset();\n    \n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1', answerWithPadding.slice(0, offset)))) {\n      throw new Error('[MT] server_DH_inner_data SHA1 mismatch');\n    }\n    \n    this.timeManager.applyServerTime(auth.serverTime, auth.localTime);\n  }\n  \n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\n    if(DEBUG) {\n      this.log('Verifying DH params', g, dhPrime, gA);\n    }\n\n    const dhPrimeHex = bytesToHex(dhPrime);\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\n    }\n\n    if(DEBUG) {\n      this.log('dhPrime cmp OK');\n    }\n    \n    const gABigInt = bigIntFromBytes(gA);\n    const dhPrimeBigInt = bigInt(dhPrimeHex, 16);\n\n    if(gABigInt.compare(bigInt.one) <= 0) {\n      throw new Error('[MT] DH params are not verified: gA <= 1');\n    }\n\n    if(gABigInt.compare(dhPrimeBigInt.subtract(bigInt.one)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\n    }\n\n    if(DEBUG) {\n      this.log('1 < gA < dhPrime-1 OK');\n    }\n    \n    const twoPow = bigInt(2).pow(2048 - 64);\n\n    if(gABigInt.compare(twoPow) < 0) {\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\n    }\n    if(gABigInt.compare(dhPrimeBigInt.subtract(twoPow)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\n    }\n\n    if(DEBUG) {\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\n    }\n    \n    return true;\n  }\n  \n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    const gBytes = bytesFromHex(auth.g.toString(16));\n    \n    auth.b = randomize(new Uint8Array(256));\n    //MTProto.secureRandom.nextBytes(auth.b);\n    \n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\n    try {\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\n    } catch(error) {\n      throw error;\n    }\n    \n    const data = new TLSerialization({mtproto: true});\n    data.storeObject({\n      _: 'client_DH_inner_data',\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      retry_id: [0, auth.retry++],\n      g_b: gB\n    }, 'Client_DH_Inner_Data');\n    \n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1', data.getBuffer())).concat(data.getBytes(true));\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\n    \n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('set_client_DH_params', {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      encrypted_data: encryptedData\n    });\n    \n    if(DEBUG) {\n      this.log('Send set_client_DH_params');\n    }\n    \n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\n    } catch(err) {\n      throw err;\n    }\n    \n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\n    \n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\n    }\n    \n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\n    }\n    \n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\n    }\n    \n    // let authKey: Uint8Array;\n    try {\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\n    } catch(err) {\n      throw authKey;\n    }\n    \n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1', authKey),\n    authKeyAux = authKeyHash.slice(0, 8),\n    authKeyId = authKeyHash.slice(-8);\n    \n    if(DEBUG) {\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\n    }\n    switch(response._) {\n      case 'dh_gen_ok': {\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([1], authKeyAux))).slice(-16);\n        \n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\n          throw new Error('new_nonce_hash1 mismatch');\n        }\n        \n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\n        if(DEBUG) {\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\n        }\n        \n        auth.authKeyId = authKeyId;\n        auth.authKey = authKey;\n        auth.serverSalt = serverSalt;\n        \n        return auth;\n      }\n      \n      case 'dh_gen_retry': {\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([2], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\n        }\n        \n        return this.sendSetClientDhParams(auth);\n      }\n      \n      case 'dh_gen_fail': {\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([3], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\n        }\n        \n        throw new Error('[MT] Set_client_DH_params_answer fail');\n      }\n    }\n  }\n\n                      \n  private getTransportType() {\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\n      this.transportType = websocket ? 'websocket' : 'https';\n      this.log('will use transport:', this.transportType);\n    });\n  }\n            \n  \n  public auth(dcId: DcId) {\n    let promise = this.cached[dcId];\n    if(promise) {\n      return promise;\n    }\n\n    promise = new Promise(async(resolve, reject) => {\n                          \n      await this.getTransportType();\n                \n\n      let error: ApiError;\n      let _try = 1;\n      while(_try++ <= 3) {\n        try {\n          const auth: AuthOptions = {\n            dcId, \n            nonce: randomize(new Uint8Array(16))\n          };\n          \n          const promise = this.sendReqPQ(auth);\n          resolve(await promise);\n          return;\n        } catch(err) {\n          error = err;\n        }\n      }\n\n      reject(error);\n    });\n\n    return this.cached[dcId] = promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport sessionStorage from '../sessionStorage';\nimport { nextRandomUint } from '../../helpers/random';\nimport { WorkerTaskVoidTemplate } from '../../types';\nimport longFromInts from '../../helpers/long/longFromInts';\nimport { AppManager } from '../appManagers/manager';\n\n/*\nlet lol: any = {};\nfor(var i = 0; i < 100; i++) {\n    timeManager.generateId();\n}\n*/\n\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\n  type: 'applyServerTimeOffset',\n  payload: TimeManager['timeOffset']\n};\n\nexport class TimeManager extends AppManager {\n  private lastMessageId: [number, number];\n  private timeOffset: number;\n\n  /* private midnightNoOffset: number;\n  private midnightOffseted: Date;\n\n  private midnightOffset: number; */\n\n  /* private timeParams: {\n    midnightOffset: number,\n    serverTimeOffset: number\n  }; */\n\n  protected after() {\n    this.lastMessageId = [0, 0];\n    this.timeOffset = 0;\n\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.timeOffset = to;\n      }\n    });\n\n\n\n    // * migrated from ServerTimeManager\n    /* const timestampNow = tsNow(true);\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\n    this.midnightOffseted = new Date();\n    this.midnightOffseted.setHours(0, 0, 0, 0);\n    \n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\n\n    /* this.timeParams = {\n      midnightOffset: this.midnightOffset,\n      serverTimeOffset: this.serverTimeOffset\n    }; */\n  }\n\n  public getServerTimeOffset() {\n    return this.timeOffset;\n  }\n\n  public generateId(): string {\n    const timeTicks = Date.now(),\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\n      timeMSec = timeTicks % 1000,\n      random = nextRandomUint(16);\n\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\n    if(this.lastMessageId[0] > messageId[0] ||\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\n    }\n\n    this.lastMessageId = messageId;\n\n    const ret = longFromInts(messageId[0], messageId[1]);\n\n    // if(lol[ret]) {\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\n    // }\n    // lol[ret] = true;\n\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\n\n    return ret\n  }\n\n  public applyServerTime(serverTime: number, localTime?: number) {\n    localTime = (localTime || Date.now()) / 1000 | 0;\n    const newTimeOffset = serverTime - localTime;\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\n    this.lastMessageId = [0, 0];\n\n    if(this.timeOffset !== newTimeOffset) {\n      sessionStorage.set({\n        server_time_offset: newTimeOffset\n      });\n\n      this.timeOffset = newTimeOffset;\n    }\n    \n    //console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\n\n    return changed;\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport callbackify from \"../../helpers/callbackify\";\r\nimport deferredPromise, { CancellablePromise } from \"../../helpers/cancellablePromise\";\r\nimport cryptoMessagePort from \"../crypto/cryptoMessagePort\";\r\nimport MTProtoMessagePort from \"../mtproto/mtprotoMessagePort\";\r\nimport appStateManager from \"./appStateManager\";\r\nimport { AppStoragesManager } from \"./appStoragesManager\";\r\nimport createManagers from \"./createManagers\";\r\n\r\ntype Managers = Awaited<ReturnType<typeof createManagers>>;\r\n\r\nexport class AppManagersManager {\r\n  private managers: Managers | Promise<Managers>;\r\n  private cryptoPortAttached: boolean;\r\n  private cryptoPortPromise: CancellablePromise<void>;\r\n\r\n  constructor() {\r\n    this.cryptoPortPromise = deferredPromise();\r\n    this.cryptoPortPromise.then(() => {\r\n      this.cryptoPortPromise = undefined;\r\n    });\r\n  }\r\n\r\n  public start() {\r\n    const port = MTProtoMessagePort.getInstance<false>();\r\n\r\n    port.addEventListener('manager', ({name, method, args}) => {\r\n      return callbackify(this.getManagers(), (managers) => {\r\n        // @ts-ignore\r\n        const manager = managers[name];\r\n        return manager[method].apply(manager, args);\r\n      });\r\n    });\r\n\r\n    port.addEventListener('cryptoPort', (payload, source, event) => {\r\n      if(this.cryptoPortAttached) {\r\n        return;\r\n      }\r\n      \r\n      this.cryptoPortAttached = true;\r\n      const port = event.ports[0];\r\n      cryptoMessagePort.attachPort(port);\r\n      this.cryptoPortPromise.resolve();\r\n    });\r\n  }\r\n\r\n  public async createManagers() {\r\n    const appStoragesManager = new AppStoragesManager();\r\n    \r\n    await Promise.all([\r\n      // new Promise(() => {}),\r\n      appStoragesManager.loadStorages(),\r\n      this.cryptoPortPromise\r\n    ]);\r\n\r\n    const managers = await createManagers(appStoragesManager, appStateManager.userId);\r\n    return this.managers = managers;\r\n  }\r\n\r\n  public getManagers() {\r\n    return this.managers ??= this.createManagers();\r\n  }\r\n}\r\n\r\nconst appManagersManager = new AppManagersManager();\r\nexport default appManagersManager;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { PasswordManager } from \"../mtproto/passwordManager\";\nimport { ReferenceDatabase } from \"../mtproto/referenceDatabase\";\nimport DialogsStorage from \"../storages/dialogs\";\nimport FiltersStorage from \"../storages/filters\";\nimport { ApiUpdatesManager } from \"./apiUpdatesManager\";\nimport { AppAvatarsManager } from \"./appAvatarsManager\";\nimport { AppCallsManager } from \"./appCallsManager\";\nimport { AppChatsManager } from \"./appChatsManager\";\nimport { AppDocsManager } from \"./appDocsManager\";\nimport { AppDraftsManager } from \"./appDraftsManager\";\nimport { AppEmojiManager } from \"./appEmojiManager\";\nimport { AppGroupCallsManager } from \"./appGroupCallsManager\";\nimport { AppInlineBotsManager } from \"./appInlineBotsManager\";\nimport { AppMessagesIdsManager } from \"./appMessagesIdsManager\";\nimport { AppMessagesManager } from \"./appMessagesManager\";\nimport { AppNotificationsManager } from \"./appNotificationsManager\";\nimport { AppPeersManager } from \"./appPeersManager\";\nimport { AppPhotosManager } from \"./appPhotosManager\";\nimport { AppPollsManager } from \"./appPollsManager\";\nimport { AppPrivacyManager } from \"./appPrivacyManager\";\nimport { AppProfileManager } from \"./appProfileManager\";\nimport { AppReactionsManager } from \"./appReactionsManager\";\nimport { AppStickersManager } from \"./appStickersManager\";\nimport { AppUsersManager } from \"./appUsersManager\";\nimport { AppWebPagesManager } from \"./appWebPagesManager\";\nimport { ApiFileManager } from \"../mtproto/apiFileManager\";\nimport { ApiManager } from \"../mtproto/apiManager\";\nimport ctx from \"../../environment/ctx\";\nimport PeersStorage from \"../storages/peers\";\nimport ThumbsStorage from \"../storages/thumbs\";\nimport { NetworkerFactory } from \"../mtproto/networkerFactory\";\nimport { RootScope } from \"../rootScope\";\nimport { Authorizer } from \"../mtproto/authorizer\";\nimport { DcConfigurator } from \"../mtproto/dcConfigurator\";\nimport { TimeManager } from \"../mtproto/timeManager\";\nimport { AppStoragesManager } from \"./appStoragesManager\";\nimport cryptoMessagePort from \"../crypto/cryptoMessagePort\";\nimport appStateManager from \"./appStateManager\";\nimport filterUnique from \"../../helpers/array/filterUnique\";\n\nexport default function createManagers(appStoragesManager: AppStoragesManager, userId: UserId) {\n  const managers = {\n    appPeersManager: new AppPeersManager,\n    appChatsManager: new AppChatsManager,\n    appDocsManager: new AppDocsManager,\n    appPhotosManager: new AppPhotosManager,\n    appPollsManager: new AppPollsManager,\n    appUsersManager: new AppUsersManager,\n    appWebPagesManager: new AppWebPagesManager,\n    appDraftsManager: new AppDraftsManager,\n    appProfileManager: new AppProfileManager,\n    appNotificationsManager: new AppNotificationsManager,\n    apiUpdatesManager: new ApiUpdatesManager,\n    appAvatarsManager: new AppAvatarsManager,\n    appGroupCallsManager: new AppGroupCallsManager,\n    appCallsManager: new AppCallsManager,\n    appReactionsManager: new AppReactionsManager,\n    appMessagesManager: new AppMessagesManager,\n    appMessagesIdsManager: new AppMessagesIdsManager,\n    appPrivacyManager: new AppPrivacyManager,\n    appInlineBotsManager: new AppInlineBotsManager,\n    appStickersManager: new AppStickersManager,\n    referenceDatabase: new ReferenceDatabase,\n    appEmojiManager: new AppEmojiManager,\n    filtersStorage: new FiltersStorage,\n    dialogsStorage: new DialogsStorage,\n    apiManager: new ApiManager,\n    cryptoWorker: cryptoMessagePort,\n    passwordManager: new PasswordManager,\n    apiFileManager: new ApiFileManager,\n    peersStorage: new PeersStorage,\n    thumbsStorage: new ThumbsStorage,\n    networkerFactory: new NetworkerFactory,\n    rootScope: new RootScope,\n    authorizer: new Authorizer,\n    dcConfigurator: new DcConfigurator,\n    timeManager: new TimeManager,\n    appStoragesManager: appStoragesManager,\n    appStateManager: appStateManager\n  };\n\n  type T = typeof managers;\n\n  for(const name in managers) {\n    const manager = managers[name as keyof T];\n    if(!manager) {\n      continue;\n    }\n    \n    if((manager as AppMessagesManager).setManagers) {\n      (manager as AppMessagesManager).setManagers(managers as any);\n      delete (manager as AppMessagesManager).setManagers;\n    }\n\n    // @ts-ignore\n    ctx[name] = manager;\n  }\n\n  const promises: Array<Promise<(() => void) | void> | void>[] = [];\n  let names = Object.keys(managers) as (keyof T)[];\n  names.unshift('appUsersManager', 'appChatsManager', 'appNotificationsManager', 'appMessagesManager', 'dialogsStorage');\n  names = filterUnique(names);\n  for(const name of names) {\n    const manager = managers[name];\n    if((manager as any)?.after) {\n      // console.log('injecting after', name);\n      const result = (manager as any).after();\n      promises.push(result);\n\n      // if(result instanceof Promise) {\n      //   result.then(() => {\n      //     console.log('injected after', name);\n      //   });\n      // }\n    }\n  }\n\n  if(userId) {\n    managers.apiManager.setUserAuth(userId);\n  }\n\n  return Promise.all(promises).then(() => managers);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// just to include\nimport '../polyfill';\nimport '../../helpers/peerIdPolyfill';\n\nimport cryptoWorker from \"../crypto/cryptoMessagePort\";\nimport { setEnvironment } from '../../environment/utils';\nimport appStateManager from '../appManagers/appStateManager';\nimport transportController from './transports/controller';\nimport MTProtoMessagePort from './mtprotoMessagePort';\nimport RESET_STORAGES_PROMISE from '../appManagers/utils/storages/resetStoragesPromise';\nimport appManagersManager from '../appManagers/appManagersManager';\nimport listenMessagePort from '../../helpers/listenMessagePort';\nimport { logger } from '../logger';\nimport { State } from '../../config/state';\nimport toggleStorages from '../../helpers/toggleStorages';\nimport appTabsManager from '../appManagers/appTabsManager';\n\nlet _isServiceWorkerOnline = true;\nexport function isServiceWorkerOnline() {\n  return _isServiceWorkerOnline;\n}\n\nconst log = logger('MTPROTO');\n// let haveState = false;\n\nconst port = new MTProtoMessagePort<false>();\nport.addMultipleEventsListeners({\n  environment: (environment) => {\n    setEnvironment(environment);\n    \n    transportController.waitForWebSocket();\n  },\n\n  crypto: ({method, args}) => {\n    return cryptoWorker.invokeCrypto(method as any, ...args as any);\n  },\n\n  state: ({state, resetStorages, pushedKeys, newVersion, oldVersion, userId}) => {\n    // if(haveState) {\n    //   return;\n    // }\n\n    log('got state', state, pushedKeys);\n\n    appStateManager.userId = userId;\n    appStateManager.newVersion = newVersion;\n    appStateManager.oldVersion = oldVersion;\n    \n    (Object.keys(state) as any as (keyof State)[]).forEach((key) => {\n      appStateManager.pushToState(key, state[key], true, !pushedKeys.includes(key));\n    });\n\n    RESET_STORAGES_PROMISE.resolve(resetStorages);\n    // haveState = true;\n  },\n\n  toggleStorages: ({enabled, clearWrite}) => {\n    return toggleStorages(enabled, clearWrite);\n  },\n\n  event: (payload, source) => {\n    log('will redirect event', payload, source);\n    port.invokeExceptSource('event', payload, source);\n  },\n\n  serviceWorkerOnline: (online) => {\n    _isServiceWorkerOnline = online;\n  },\n\n  createObjectURL: (blob) => {\n    return URL.createObjectURL(blob);\n  },\n\n  // socketProxy: (task) => {\n  //   const socketTask = task.payload;\n  //   const id = socketTask.id;\n    \n  //   const socketProxied = socketsProxied.get(id);\n  //   if(socketTask.type === 'message') {\n  //     socketProxied.dispatchEvent('message', socketTask.payload);\n  //   } else if(socketTask.type === 'open') {\n  //     socketProxied.dispatchEvent('open');\n  //   } else if(socketTask.type === 'close') {\n  //     socketProxied.dispatchEvent('close');\n  //     socketsProxied.delete(id);\n  //   }\n  // },\n});\n\nlog('MTProto start');\n\nappManagersManager.start();\nappManagersManager.getManagers();\nappTabsManager.start();\n\nlistenMessagePort(port, (source) => {\n  appTabsManager.addTab(source);\n}, (source) => {\n  appTabsManager.deleteTab(source);\n});\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport ctx from \"../environment/ctx\";\r\nimport SuperMessagePort from \"../lib/mtproto/superMessagePort\";\r\n\r\nexport default function listenMessagePort(\r\n  messagePort: SuperMessagePort<any, any, any>, \r\n  onConnect?: (source: MessageEventSource) => void,\r\n  onDisconnect?: (source: MessageEventSource) => void\r\n) {\r\n  const attachPort = (s: any) => {\r\n    messagePort.attachPort(s);\r\n    onConnect && onConnect(s);\r\n  };\r\n\r\n  onDisconnect && messagePort.setOnPortDisconnect(onDisconnect);\r\n\r\n  if(typeof(SharedWorkerGlobalScope) !== 'undefined') {\r\n    (ctx as any as SharedWorkerGlobalScope).addEventListener('connect', (e) => attachPort(e.source));\r\n  } else {\r\n    attachPort(ctx);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n\r\n/**\r\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\r\n */\r\nexport type UserAuth = {dcID: number | string, date: number, id: PeerId};\r\n\r\nexport const NULL_PEER_ID: PeerId = 0;\r\nexport const REPLIES_PEER_ID: PeerId = 1271266957;\r\nexport const REPLIES_HIDDEN_CHANNEL_ID: ChatId = 777;\r\nexport const SERVICE_PEER_ID: PeerId = 777000;\r\nexport const MUTE_UNTIL = 0x7FFFFFFF;\r\nexport const BOT_START_PARAM = '';\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MessageEntity } from \"../../layer\";\n\nconst CAN_COMBINE_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityBold',\n  'messageEntityItalic',\n  'messageEntityCode',\n  'messageEntityPre',\n  'messageEntityUnderline',\n  'messageEntityStrike',\n  'messageEntityBlockquote',\n  'messageEntitySpoiler'\n]);\nexport default function combineSameEntities(entities: MessageEntity[]) {\n  //entities = entities.slice();\n  for(let i = 0; i < entities.length; ++i) {\n    const entity = entities[i];\n\n    let nextEntityIdx = -1;\n    do {\n      nextEntityIdx = entities.findIndex((e, _i) => {\n        return CAN_COMBINE_ENTITIES.has(e._) && _i !== i && e._ === entity._ && (e.offset - entity.length) === entity.offset;\n      });\n\n      if(nextEntityIdx !== -1) {\n        const nextEntity = entities[nextEntityIdx];\n        entity.length += nextEntity.length;\n        entities.splice(nextEntityIdx, 1);\n      }\n    } while(nextEntityIdx !== -1);\n  }\n  //return entities;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { PASS_CONFLICTING_ENTITIES } from \".\";\nimport { MessageEntity } from \"../../layer\";\n\nconst SINGLE_ENTITIES: Set<MessageEntity['_']> = new Set(['messageEntityPre', 'messageEntityCode']);\n\nexport default function findConflictingEntity(currentEntities: MessageEntity[], newEntity: MessageEntity) {\n  let singleEnd = -1;\n  return currentEntities.find((currentEntity) => {\n    if(SINGLE_ENTITIES.has(currentEntity._)) {\n      singleEnd = currentEntity.offset + currentEntity.length;\n    }\n\n    if(newEntity.offset < singleEnd && !PASS_CONFLICTING_ENTITIES.has(newEntity._)) {\n      return true;\n    }\n    \n    const isConflictingTypes = newEntity._ === currentEntity._ || \n    (!PASS_CONFLICTING_ENTITIES.has(newEntity._) && !PASS_CONFLICTING_ENTITIES.has(currentEntity._));\n    \n    if(!isConflictingTypes) {\n      return false;\n    }\n\n    const isConflictingOffset = newEntity.offset >= currentEntity.offset && \n      (newEntity.length + newEntity.offset) <= (currentEntity.length + currentEntity.offset);\n\n    return isConflictingOffset;\n  });\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport emojiRegExp from '../../vendor/emoji/regex';\nimport { MessageEntity } from '../../layer';\n\nconst EmojiHelper = {\n  emojiMap: (code: string) => { return code; },\n  shortcuts: [] as any,\n  emojis: [] as any\n};\n\nexport const ALPHA_CHARS_REG_EXP = 'a-z' +\n  '\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u00ff' + // Latin-1\n  '\\\\u0100-\\\\u024f' + // Latin Extended A and B\n  '\\\\u0253\\\\u0254\\\\u0256\\\\u0257\\\\u0259\\\\u025b\\\\u0263\\\\u0268\\\\u026f\\\\u0272\\\\u0289\\\\u028b' + // IPA Extensions\n  '\\\\u02bb' + // Hawaiian\n  '\\\\u0300-\\\\u036f' + // Combining diacritics\n  '\\\\u1e00-\\\\u1eff' + // Latin Extended Additional (mostly for Vietnamese)\n  '\\\\u0400-\\\\u04ff\\\\u0500-\\\\u0527' + // Cyrillic\n  '\\\\u2de0-\\\\u2dff\\\\ua640-\\\\ua69f' + // Cyrillic Extended A/B\n  '\\\\u0591-\\\\u05bf\\\\u05c1-\\\\u05c2\\\\u05c4-\\\\u05c5\\\\u05c7' +\n  '\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f4' + // Hebrew\n  '\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41' +\n  '\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4f' + // Hebrew Pres. Forms\n  '\\\\u0610-\\\\u061a\\\\u0620-\\\\u065f\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc' +\n  '\\\\u06de-\\\\u06e8\\\\u06ea-\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff' + // Arabic\n  '\\\\u0750-\\\\u077f\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u08e4-\\\\u08fe' + // Arabic Supplement and Extended A\n  '\\\\ufb50-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb' + // Pres. Forms A\n  '\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc' + // Pres. Forms B\n  '\\\\u200c' + // Zero-Width Non-Joiner\n  '\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e' + // Thai\n  '\\\\u1100-\\\\u11ff\\\\u3130-\\\\u3185\\\\uA960-\\\\uA97F\\\\uAC00-\\\\uD7AF\\\\uD7B0-\\\\uD7FF' + // Hangul (Korean)\n  '\\\\u3003\\\\u3005\\\\u303b' + // Kanji/Han iteration marks\n  '\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a' + // full width Alphabet\n  '\\\\uff66-\\\\uff9f' + // half width Katakana\n  '\\\\uffa1-\\\\uffdc'; // half width Hangul (Korean)\nexport const ALPHA_NUMERIC_REG_EXP = '0-9\\_' + ALPHA_CHARS_REG_EXP;\nexport const DOMAIN_ADD_CHARS = '\\u00b7';\n// Based on Regular Expression for URL validation by Diego Perini\nexport const URL_ALPHANUMERIC_REG_EXP_PART = '[' + ALPHA_CHARS_REG_EXP + '0-9]';\nexport const URL_PROTOCOL_REG_EXP_PART = '((?:https?|ftp)://|mailto:)?';\nexport const URL_REG_EXP = URL_PROTOCOL_REG_EXP_PART +\n  // user:pass authentication\n  '(?:' + URL_ALPHANUMERIC_REG_EXP_PART + '{1,64}(?::' + URL_ALPHANUMERIC_REG_EXP_PART + '{0,64})?@)?' +\n  '(?:' +\n  // sindresorhus/ip-regexp\n  '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}' +\n  '|' +\n  // host name\n  URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}' +\n  // domain name\n  '(?:\\\\.' + URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}){0,10}' +\n  // TLD identifier\n  '(?:\\\\.(xn--[0-9a-z]{2,16}|[' + ALPHA_CHARS_REG_EXP + ']{2,24}))' +\n  ')' +\n  // port number\n  '(?::\\\\d{2,5})?' +\n  // resource path\n  '(?:/(?:\\\\S{0,255}[^\\\\s.;,(\\\\[\\\\]{}<>\"\\'])?)?';\nexport const URL_PROTOCOL_REG_EXP = new RegExp('^' + URL_PROTOCOL_REG_EXP_PART.slice(0, -1), 'i');\nexport const URL_ANY_PROTOCOL_REG_EXP = /^((?:[^\\/]+?):\\/\\/|mailto:)/;\nexport const USERNAME_REG_EXP = '[a-zA-Z\\\\d_]{5,32}';\nexport const BOT_COMMAND_REG_EXP = '\\\\/([a-zA-Z\\\\d_]{1,32})(?:@(' + USERNAME_REG_EXP + '))?(\\\\b|$)';\nexport const FULL_REG_EXP = new RegExp('(^| )(@)(' + USERNAME_REG_EXP + ')|(' + URL_REG_EXP + ')|(\\\\n)|(' + emojiRegExp + ')|(^|[\\\\s\\\\(\\\\]])(#[' + ALPHA_NUMERIC_REG_EXP + ']{2,64})|(^|\\\\s)' + BOT_COMMAND_REG_EXP, 'i');\nexport const EMAIL_REG_EXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//const markdownTestRegExp = /[`_*@~]/;\nexport const MARKDOWN_REG_EXP = /(^|\\s|\\n)(````?)([\\s\\S]+?)(````?)([\\s\\n\\.,:?!;]|$)|(^|\\s|\\x01)(`|~~|\\*\\*|__|_-_|\\|\\|)([^\\n]+?)\\7([\\x01\\s\\.,:?!;]|$)|@(\\d+)\\s*\\((.+?)\\)|(\\[(.+?)\\]\\((.+?)\\))/m;\nexport const SITE_HASHTAGS: {[siteName: string]: string} = {\n  Telegram: 'tg://search_hashtag?hashtag={1}',\n  Twitter: 'https://twitter.com/hashtag/{1}',\n  Instagram: 'https://instagram.com/explore/tags/{1}/',\n  'Google Plus': 'https://plus.google.com/explore/{1}'\n};\n\n// export const SITE_MENTIONS: {[siteName in 'Telegram' | 'Twitter' | 'Instagram' | 'GitHub']: string} = {\n//   Telegram: '#{1}',\n//   Twitter: 'https://twitter.com/{1}',\n//   Instagram: 'https://instagram.com/{1}/',\n//   GitHub: 'https://github.com/{1}'\n// };\n\nexport const MARKDOWN_ENTITIES: {[markdown: string]: MessageEntity['_']} = {\n  '`': 'messageEntityCode',\n  '``': 'messageEntityPre',\n  '**': 'messageEntityBold',\n  '__': 'messageEntityItalic',\n  '~~': 'messageEntityStrike',\n  '_-_': 'messageEntityUnderline',\n  '||': 'messageEntitySpoiler'\n};\n\nexport const PASS_CONFLICTING_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityEmoji',\n  'messageEntityLinebreak',\n  'messageEntityCaret'\n]);\nfor(let i in MARKDOWN_ENTITIES) {\n  PASS_CONFLICTING_ENTITIES.add(MARKDOWN_ENTITIES[i]);\n}\n\nexport const PHONE_NUMBER_REG_EXP = /^\\+\\d+$/;\n\n/* export function parseEmojis(text: string) {\n  return text.replace(/:([a-z0-9\\-\\+\\*_]+?):/gi, function (all, shortcut) {\n    var emojiCode = EmojiHelper.shortcuts[shortcut]\n    if (emojiCode !== undefined) {\n      return EmojiHelper.emojis[emojiCode][0]\n    }\n    return all\n  })\n} */\n\n\n\n/* export function replaceUrlEncodings(urlWithEncoded: string) {\n  return urlWithEncoded.replace(/(%[A-Z\\d]{2})+/g, (str) => {\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  });\n} */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { MessageEntity } from \"../../layer\";\nimport findConflictingEntity from \"./findConflictingEntity\";\nimport sortEntities from \"./sortEntities\";\n\nexport default function mergeEntities(currentEntities: MessageEntity[], newEntities: MessageEntity[]) {\n  const filtered = newEntities.filter((e) => {\n    return !findConflictingEntity(currentEntities, e);\n  });\n\n  currentEntities.push(...filtered);\n  sortEntities(currentEntities);\n  // currentEntities.sort((a, b) => a.offset - b.offset);\n  // currentEntities.sort((a, b) => (a.offset - b.offset) || (a._ === 'messageEntityCaret' && -1));\n\n  // * fix splitted emoji. messageEntityTextUrl can split the emoji if starts before its end (e.g. on fe0f)\n  // * have to fix even if emoji supported since it's being wrapped in span\n  // if(!IS_EMOJI_SUPPORTED) {\n    for(let i = 0; i < currentEntities.length; ++i) {\n      const entity = currentEntities[i];\n      if(entity._ === 'messageEntityEmoji') {\n        const nextEntity = currentEntities[i + 1];\n        if(nextEntity /* && nextEntity._ !== 'messageEntityCaret' */ && nextEntity.offset < (entity.offset + entity.length)) {\n          entity.length = nextEntity.offset - entity.offset;\n        }\n      }\n    }\n  // }\n\n  return currentEntities;\n}\n","import { MessageEntity } from \"../../layer\";\n\nexport default function sortEntities(entities: MessageEntity[]) {\n  entities.sort((a, b) => {\n    return (a.offset - b.offset) || (b.length - a.length);\n  });\n}\n","// https://github.com/twitter/twemoji-parser/blob/master/src/lib/regex.js\r\n\r\nexport function encodeEmoji(emojiText: string) {\r\n  const codepoints = toCodePoints(removeVS16s(emojiText)).join('-');\r\n  return codepoints;\r\n}\r\n\r\nconst vs16RegExp = /\\uFE0F/g;\r\n// avoid using a string literal like '\\u200D' here because minifiers expand it inline\r\nconst zeroWidthJoiner = String.fromCharCode(0x200d);\r\n\r\nconst removeVS16s = (rawEmoji: string) => (rawEmoji.indexOf(zeroWidthJoiner) < 0 ? rawEmoji.replace(vs16RegExp, '') : rawEmoji);\r\n\r\nexport function toCodePoints(unicodeSurrogates: string): Array<string> {\r\n  const points = [];\r\n  let char = 0;\r\n  let previous = 0;\r\n  let i = 0;\r\n  while(i < unicodeSurrogates.length) {\r\n    char = unicodeSurrogates.charCodeAt(i++);\r\n    if(previous) {\r\n      points.push((0x10000 + ((previous - 0xd800) << 10) + (char - 0xdc00)).toString(16));\r\n      previous = 0;\r\n    } else if (char > 0xd800 && char <= 0xdbff) {\r\n      previous = char;\r\n    } else {\r\n      points.push(char.toString(16));\r\n    }\r\n  }\r\n\r\n  if(points.length && points[0].length === 2) {\r\n    points[0] = '00' + points[0];\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nexport function getEmojiToneIndex(input: string) {\r\n  let match = input.match(/[\\uDFFB-\\uDFFF]/);\r\n  return match ? 5 - (57343 - match[0].charCodeAt(0)) : 0;\r\n}\r\n\r\nexport function getCountryEmoji(iso2: string) {\r\n  return String.fromCharCode(55356, 56741 + iso2.charCodeAt(0), 55356, 56741 + iso2.charCodeAt(1));\r\n}\r\n\r\nexport function emojiFromCodePoints(codePoints: string) {\r\n  return codePoints.split('-').reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [699,211,216,960,27,434], () => (__webpack_require__(5463)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 960) return \"960.434344bbd05c7b46aa58.bundle.js\";\n\tif (chunkId === 434) return \"434.e77ae18fd94d3f48c1d1.bundle.js\";\n\t// return url for filenames based on template\n\treturn \"\" + ({\"211\":\"npm.big-integer\",\"699\":\"npm.pako\"}[chunkId] || chunkId) + \".\" + {\"8\":\"b85a4a4cfac9f20a57d1\",\"27\":\"6324a72a5645ff360cb2\",\"104\":\"6304864ef5c73aa266a7\",\"211\":\"a7ea0f3283af2967a6ae\",\"216\":\"636e319292954b940f69\",\"301\":\"e911be13ec60ec880b59\",\"642\":\"6753c255ceed29cc464c\",\"699\":\"f16d6f756c34f3914132\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t678: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = this[\"webpackChunktweb\"] = this[\"webpackChunktweb\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","oldGetScript","oldLoadScript","queryMap","countMap","next","EmojiVersions","Emoji","version","Object","assign","USER_AGENT","navigator","userAgent","IS_SAFARI","search","toLowerCase","indexOf","test","vendor","platform","maxTouchPoints","match","IS_FIREFOX","badCharsRe","trimRe","C2L","cleanSearchText","text","latinize","processSearchText","clearBadChars","ignoreCase","options","hasTag","includeTag","charAt","originalText","replace","clearBadCharsAndTrim","ch","latinizeCh","latinizeString","fixCyrillic","FILENAME_JOINER","getFileNameByLocation","location","ext","length","str","_","id","thumb_size","filter","Boolean","join","photo_id","pFlags","big","stickerset","short_name","emoticon","thumb_version","volume_id","local_id","url","console","error","getFileURL","type","encodeURIComponent","JSON","stringify","IDB","constructor","db","this","name","storageIsAvailable","log","openDatabase","INSTANCES","push","isAvailable","createNew","openDbPromise","createIndexes","os","store","indexNames","Array","from","indexName","deleteIndex","indexes","index","contains","createIndex","keyPath","objectParameters","request","indexedDB","open","Promise","reject","message","finished","setTimeout","onerror","resolve","onsuccess","event","result","calledNew","onclose","e","onabort","transaction","target","close","onversionchange","onupgradeneeded","warn","oldVersion","newVersion","stores","forEach","objectStoreNames","objectStore","createObjectStore","static","find","instance","preserve","storage","IDBStorage","storeName","idb","create","delete","entryName","isArray","concat","getObjectStore","map","clear","save","value","idx","put","get","mode","callback","perf","performance","now","then","onError","clearTimeout","timeout","onComplete","results","requests","r","waitForTransactionComplete","oncomplete","callbackResult","left","onRequestFinished","i","getAll","environment","getEnvironment","setEnvironment","env","RootScope","super","myId","connectionStatus","premium","addEventListener","toPeerId","status","dispatchEvent","args","invokeVoid","settings","getConnectionStatus","dispatchEventSingle","state","stateStorage","getState","setByKey","key","object","splitted","split","o","getDeepProperty","slice","pop","setDeepProperty","first","pushToState","direct","onlyLocal","setKeyValueToStorage","set","networkStats","sent","received","awaitingChunks","Map","addSent","dcId","addReceived","awaitingLength","awaiting","waitForChunk","catch","noop","finally","indexOfAndSplice","HTTP","logSuffix","pending","debug","logTypes","Log","logger","connected","_send","body","fetch","method","response","arrayBuffer","buffer","TextDecoder","decode","Uint8Array","setConnected","byteLength","err","destroyed","destroy","send","networker","promise","releasePending","releasing","splice","pause","Socket","handleOpen","handleError","handleClose","removeListeners","handleMessage","data","ws","connect","removeEventListener","undefined","WebSocket","binaryType","randomize","arr","crypto","Error","getRandomValues","Obfuscation","_process","operation","cryptoMessagePort","init","codec","idPromise","release","initPayload","val","val2","reversedPayload","reverse","encKey","encIv","decKey","decIv","process","obfuscateTag","encrypted","encode","payload","tag","encodePacket","len","header","readPacket","bytesToHex","bytes","toString","TcpObfuscated","Connection","retryTimeout","abridged","obfuscation","autoReconnect","onOpen","connection","setConnectionStatus","cleanupSent","resend","onMessage","parseResponse","processMessage","messageId","sessionId","shift","onClose","needTimeout","retryAt","time","Date","diff","lastCloseTime","isNaN","reconnectTimeout","ctx","reconnect","bodySent","forceReconnect","setAutoReconnect","once","enable","encodeBody","toEncode","encoded","releasingPending","TEST_SUFFIX","DcConfigurator","sslSubdomains","dcOptions","host","port","chosenServers","transportSocket","connectionType","suffix","path","chosenServer","oooohLetMeLive","transportHTTP","dcOption","chooseServer","transportType","reuse","hasOwnProperty","client","download","upload","servers","transports","transport","obj","MTTransportController","opened","waitForWebSocket","pingTransports","dcConfigurator","https","websocket","httpPromise","websocketPromise","socket","isFulfilled","isRejected","isHttpAvailable","isWebSocketAvailable","all","pinging","setTransportValue","setTransportOpened","setTransportClosed","AppManager","setManagers","managers","loadStorages","storages","recordPromise","storagesKeys","keys","storagesPromises","storagesResults","resetStorages","size","loadStoragesInner","AppStoragesManager","names","createStorages","loadStorage","PasswordManager","apiManager","invokeApi","updateSettings","currentHashPromise","newHashPromise","params","password","new_settings","hint","email","currentPassword","cryptoWorker","invokeCrypto","newAlgo","new_algo","salt1","newPassword","hashes","new_password_hash","check","inputCheckPassword","auth","setUser","user","confirmPasswordEmail","code","resendPasswordEmail","cancelPasswordEmail","ReferenceDatabase","contexts","links","saveContext","reference","context","getContexts","Set","_context","deepEqual","add","getReferenceByLink","getContext","values","deleteContext","refreshReference","c","appMessagesManager","wrapSingleMessage","peerId","refreshEmojiesSoundsPromise","appStickersManager","getAnimatedEmojiSounds","hex","newHex","newContext","safeReplaceObject","wasObject","newObject","getPeerIdsFromMessage","peerIds","fromId","viaBotId","fwdFromId","media","contactUserId","user_id","recentVoters","recent_voters","userId","recentReactions","recent_reactions","reaction","getPeerId","peer_id","action","userIds","users","inviter_id","chatIds","channel_id","chat_id","chatId","recentRepliers","recent_repliers","reply","defineNotNumerableProperties","props","writable","configurable","out","defineProperties","setDialogIndex","dialog","indexKey","GLOBAL_FOLDER_ID","DialogsStorage","folders","pinnedOrders","allDialogsLoaded","setDialogsLoaded","savePinnedOrders","dialogsOffsetDate","dialogsNum","dialogsIndex","cachedResults","query","count","dialogs","folderId","onUpdateFolderPeers","update","folder_peers","folderPeer","folder_id","peer","dropDialog","pinned","handleDialogUnpinning","generateIndexForDialog","pushDialog","scheduleHandleNewDialogs","onUpdateDialogPinned","getDialogOnly","onUpdatePinnedDialogs","handleOrder","order","newPinned","getFolderDialogs","dialogsResult","applyDialogs","d","after","rootScope","appUsersManager","getSelf","peerText","appPeersManager","getPeerSearchText","indexObject","onFilterUpdate","getCachedDialogs","processDialogForFilter","filterId","processDialogForFilters","getDialogIndexKeyByFilterId","prepareDialogUnreadCountModifying","chat","appChatsManager","getChat","dropDialogOnDeletion","apiUpdatesManager","addMultipleEventsListeners","updateFolderPeers","updateDialogPinned","updatePinnedDialogs","appStateManager","appStoragesManager","getCache","setDialogsFromState","bind","appDraftsManager","addMissedDialogs","top_message","getServerMessageId","topMessage","saveMessages","saveDialog","getMessageByPeer","reloadConversation","isDialogsLoaded","loaded","resetPinnedOrder","getPinnedOrders","getOffsetDate","offsetDate","Math","min","getFolder","folder","unreadMessagesCount","unreadPeerIds","unreadUnmutedPeerIds","skipMigrated","migratedTo","getNextDialog","currentPeerId","findIndex","getDialogIndexKey","filtersStorage","getFilter","orderIndex","isPeerUnmuted","appNotificationsManager","isPeerLocalMuted","getFolderUnreadCount","unreadUnmutedCount","unreadCount","setDialogIndexInFilter","testDialogForFilter","pinnedIndex","pinnedPeerIds","generateDialogIndex","generateDialogPinnedDateByIndex","pinned_peers","getDialogIndex","getDialog","skipped","isObject","date","isPinned","tsNow","timeManager","getServerTimeOffset","filters","getFilters","wasIndex","wasDialog","wasDialogIndex","newDialogIndex","prepareFolderUnreadCountModifyingByDialog","insertInDescendSortedArray","callbacks","toggle","wasUnreadCount","getDialogUnreadCount","wasUnmuted","newUnreadCount","newUnmuted","addMessagesCount","modifyFolderUnreadCount","toggleDialog","toggleUnmuted","max","dispatchUnreadTimeout","_folder","justReturn","topDate","generateDialogPinnedDate","channelId","isChannel","toChatId","channel","draft","foundIndex","setDialogToState","pts","historyStorage","getHistoryStorage","messagesStorage","getHistoryMessagesStorage","history","incomingMessage","mid","getMessageFromStorage","is_outgoing","peersStorage","requestPeersForKey","isAnyChat","newPts","getChannelState","requestPeer","ignoreOffsetDate","saveGlobalOffset","pos","getDialogOffsetDate","savedGlobalOffsetDate","savedOffsetDate","clearDialogFromState","foundDialog","wasPinned","keepLocal","releasePeer","dropDialogWithEvent","dropped","forEachReverse","saveApiUsers","saveApiChats","chats","messages","updatedDialogs","topPendingMessage","pendingTopMsgs","maxId","updates","newUpdatesAfterReloadToHandle","saveUpdate","wasDialogBefore","generateMessageId","wasTopMessage","generateTempMessageId","from_id","getOutputPeer","deleted","isOutgoing","migrated_to","deactivated","migratedToPeer","migratedFromTo","migratedToFrom","read_inbox_max_id","read_outbox_max_id","saveDraft","isOut","unread","unread_count","isEnd","insertSlice","setEnd","mergeReplyKeyboard","unshift","readMaxId","readOutboxMaxId","savePeerSettings","notify_settings","addChannelState","releaseUnreadCount","dialogsStorage","getDialogs","offsetIndex","limit","promises","fillContactsResult","fillContacts","cached","reloadMissingDialogsPromise","reloadMissingPeerIds","realFolderId","curDialogStorage","has","sort","d1","d2","offset","loadedAll","isEnoughDialogs","isTopEnd","getTopMessages","convertment","FiltersStorage","reloadedPeerIds","clearFilters","onUpdateDialogFilter","saveDialogFilter","onUpdateDialogFilterOrder","setOrderIndex","updateDialogFilter","updateDialogFilters","oldFilters","copy","getDialogFilters","_filterId","updateDialogFilterOrder","excludePeerIds","includes","includePeerIds","exclude_archived","exclude_read","isDialogUnread","exclude_muted","unread_mentions_count","broadcasts","isBroadcast","groups","isAnyGroup","toUserId","isBot","bots","non_contacts","isContact","contacts","testDialogForFilterId","toggleDialogPin","getConfig","pinned_infolder_count_max","getInputPeerById","createDialogFilter","prepend","remove","flags","getOutputDialogFilter","bool","f","a","b","filterIncludedPinnedPeers","include_peers","peers","reloadDialogs","inputPeer","isAlreadyReloaded","reloadPromises","missingPeerIds","overwrite","invokeApiSingle","getSuggestedDialogsFilters","assumeType","to","oldFilter","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","getOwnPropertyDescriptor","defineProperty","ApiUpdatesManager","updatesState","pendingPtsUpdates","pendingSeqUpdates","syncPending","syncLoading","channelStates","attached","processUpdateMessage","updateMessage","processOpts","seq","seqStart","seq_start","forceGetDifference","processUpdate","toId","fwd_from","reply_to","entities","pts_count","override","_constructor","setProxy","self","Proxy","saveUpdatesState","us","popPendingSeqUpdate","nextSeq","pendingUpdatesData","seqAwaiting","ptsAwaiting","popPendingPtsUpdate","curState","curPts","goodPts","goodIndex","getDifference","processLocalUpdate","wasSyncing","pts_total_limit","qts","differenceResult","other_updates","new_messages","apiMessage","nextState","intermediate_state","onDifferenceTooLong","justAName","getChannelDifference","channelState","getChannelInput","lastPtsUpdateTime","fwdHeader","reason","hasUser","post","hasChat","isUser","popPts","popSeq","attach","langCode","noErrorBox","stateResult","setUpdatesProcessor","strs","en","ru","getChangelog","lang","res","ok","langStr","parseMarkdown","inbox_date","languages","filterUnique","language","AppAvatarsManager","savedAvatarURLs","removeFromAvatarsCache","isAvatarCached","saved","loadAvatar","photo","peerPhotoFileLocation","downloadOptions","dc_id","limitPart","apiFileManager","blob","URL","createObjectURL","AppCallsManager","calls","IS_CALL_SUPPORTED","updatePhoneCall","saveCall","phone_call","updatePhoneCallSignalingData","callId","phone_call_id","computeKey","g_b","p","call","isDiscarded","oldCall","getCall","getCallInput","access_hash","savePhonePhoneCall","phonePhoneCall","generateDh","random_length","dhConfig","requestCall","protocol","g_a_hash","video","getUserInput","random_id","discardCall","duration","connection_id","platforms","ignore","getRestrictionReason","reasons","isRestricted","AppChatsManager","isPeerNeeded","onChatUpdated","updateChannelParticipant","clearCache","updateChatDefaultBannedRights","default_banned_rights","getFromCache","apiChats","saveApiChat","oldChat","participants_count","changedPhoto","changedTitle","title","getChatTyped","hasRights","rights","isThread","editChatDefaultBannedRights","banned_rights","until_date","isMegagroup","megagroup","isInChat","good","getInputPeer","getChannelInputPeer","getChatInputPeer","allowMin","getChatPhoto","getChatString","createChannel","inviteToChannel","input","usersInputs","u","createChat","leaveChannel","joinChannel","addChatUser","fwdLimit","fwd_limit","deleteChatUser","leaveChat","leave","deleteChannel","deleteChat","migrateChat","updateUsername","username","editPhoto","inputFile","inputChatPhoto","file","editTitle","editAbout","about","editBanned","participant","getParticipantPeerId","timestamp","actor_id","prev_participant","new_participant","kicked_by","clearChannelParticipantBannedRights","kickFromChannel","view_messages","kickFromChat","resolveChannel","messagesChats","togglePreHistoryHidden","enabled","toggleSignatures","toggleNoForwards","setChatAvailableReactions","reactions","available_reactions","restrictionReasons","restriction_reason","restricted","getSendAs","invokeApiSingleProcess","processResult","sendAsPeers","importChatInvite","hash","checkUsername","getSponsoredMessage","invokeApiCacheable","cacheSeconds","sponsoredMessages","sponsoredMessage","viewSponsoredMessage","randomId","checkChatInvite","chatInvite","I18n","pluralRules","cacheLangPackPromise","updateAmPm","timeFormat","dateTimeFormat","getDateTimeFormat","hour","minute","hour12","setHours","amText","format","amPmCache","am","pmText","pm","loadLocalLangPack","defaultCode","lastRequestedLangCode","langSign","countries","strings","formatLocalStrings","default","saveLangPack","from_version","lang_code","local","loadLangPack","requestedServerLanguage","lang_pack","polyfillPromise","pushTo","v","langPack","appVersion","applyLangPack","Intl","PluralRules","string","countriesList","country","langPackKey","default_name","lastAppliedLangCode","cachedDateTimeFormats","document","querySelectorAll","element","weakMap","superFormatter","indexHolder","lastIndex","p1","p2","p3","p4","createElement","append","lastIndexOf","matchUrlProtocol","wrappedUrl","wrapUrl","href","onclick","setAttribute","textContent","arg","pushNextArgument","plain","select","item","Node","getCacheLangPack","setTimeFormat","haveToUpdate","IntlDateElement","getStrings","getLangPack","langPack1","langPack2","localLangPack1","localLangPack2","l","_Intl","window","WeakMap","IntlElementBase","classList","property","IntlElement","safeAssign","formatted","dataset","compareAndUpdate","json","DateTimeFormat","hours","getHours","getMinutes","capitalizeFirstLetter","i18n","i18n_","_i18n","months","days","getWeekNumber","UTC","getFullYear","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","getTime","today","year","day","month","weekday","minYear","yearPattern","RegExp","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","createForMonthYear","dates","selectedYear","currentYear","setFullYear","minDate","setMonth","maxDate","formatterMonthYear","createForDayMonth","validDateForMonth","formatterDayMonth","formatterYearMax","formatWeekLong","getDay","q","safeReplaceArrayInObject","trim","dayOfWeek","setDate","getDayOfWeek","distance","setTime","matches","exec","g1","g2","k","g3","parseInt","k1","EXTENSION_MIME_TYPE_MAP","mov","gif","pdf","uploadWallPaperTempId","AppDocsManager","onServiceWorkerFail","docs","doc","supportsStreaming","thumbsStorage","deleteCacheContext","stickerCachedThumbs","uploadingWallPapers","online","saveDoc","oldDoc","file_reference","referenceDatabase","attributes","attribute","file_name","wrapPlainText","voice","mime_type","w","h","round_message","alt","stickerEmojiRaw","stickerSetInput","thumbs","IS_WEBP_SUPPORTED","sticker","IS_WEBM_SUPPORTED","animated","mappedMimeType","joiner","monthAsNumber","noSeconds","getSeconds","leadingZero","noTime","getFullDate","isServiceWorkerOnline","getCacheContext","setCacheContextURL","thumb","getDocumentDownloadOptions","getDocumentURL","getDoc","docId","downloadDoc","queueId","onlyCache","downloadMedia","getLottieCachedThumb","toneIndex","saveLottiePreview","width","height","saveWebPConvertedStrippedThumb","stickerThumbConverted","getWallPapers","invokeApiHashable","accountWallpapers","wallPapers","wallpapers","wallPaper","prepareWallPaperUpload","cacheContext","wallpaper","slug","uploadWallPaper","fileName","downloaded","getGifs","gifs","requestDocPart","requestFilePart","getDocumentInput","AppDraftsManager","drafts","getAllDraftPromise","updateDraftMessage","threadId","notify","getKey","getDraft","getAllDrafts","apiDraft","processApiDraft","force","draftsAreEqual","draft1","draft2","reply_to_msg_id","no_webpage","isEmptyDraft","syncDraft","localDraft","saveOnServer","serverDraft","draftObj","getInputEntities","saveLocalDraft","clearAllDrafts","combined","clearDraft","emptyDraft","setDraft","EMOJI_LANG_PACK","keywords","AppEmojiManager","keywordLangPacks","indexedLangPacks","getKeywordsPromises","getEmojiKeywords","storageKey","pack","validateInitObject","keywordsDifference","packKeywords","keyword","emoticons","getBothEmojiKeywords","recent","getRecentEmojis","indexEmojis","searchEmojis","emojis","reduce","acc","POPULAR_EMOJI","getRecentEmojisPromise","recentEmoji","pushRecentEmoji","emoji","fixEmoji","AppGroupCallsManager","groupCalls","participants","nextOffsets","updateGroupCall","saveGroupCall","updateGroupCallParticipants","groupCallId","saveApiParticipants","groupCall","getCachedParticipants","prepareToSavingNextOffset","nextOffsetsMap","nextOffset","setNextOffset","newNextOffset","saveApiParticipant","skipCounterUpdating","oldParticipant","hasLeft","muted","can_self_unmute","getGroupCall","modified","just_joined","apiParticipants","editParticipant","getGroupCallInput","getInputPeerSelf","volume","raise_hand","raiseHand","video_paused","videoPaused","video_stopped","videoStopped","presentation_paused","presentationPaused","getGroupCallFull","participants_next_offset","shouldUpdate","createGroupCall","scheduleDate","schedule_date","getGroupCallParticipants","ids","sources","groupCallParticipants","next_offset","hangUp","discard","groupCallInput","source","join_as","joinGroupCall","isMuted","joinVideo","leaveGroupCallPresentation","getPhotoInput","getPhotoMediaInput","ttl_seconds","getMediaInput","AppInlineBotsManager","inlineResults","setHash","getGeoInput","geo","lat","long","accuracy_radius","getInlineResults","botId","bot","geo_point","stopTime","botResults","queryId","query_id","appDocsManager","appPhotosManager","savePhoto","generateQId","pushPopularBot","getTopPeers","topPeers","botPeerId","topPeer","rating","switchToPM","fromPeerId","startParam","startBot","checkSwitchReturn","getUser","bot_inline_placeholder","peerData","switchInlineQuery","callbackButtonClick","button","msg_id","sendInlineResult","queryAndResultIds","inlineResult","queryID","resultID","resultId","send_message","reply_markup","replyMarkup","sendText","inputMedia","caption","sendMessage","geoPoint","address","provider","venue_id","venue_type","phone_number","first_name","last_name","vcard","content","progress","percent","total","sendOther","AppMessagesIdsManager","tempNum","num","telegramMeWebManager","disabled","hostname","setAuthorized","canRedirect","sessionStorage","curValue","ts","tgme_sync","script","onload","src","appendChild","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","partLength","appTabsManager","tabs","start","getTabs","tab","addTab","deleteTab","processAfter","cb","AppMessagesManager","pendingByRandomId","pendingByMessageId","pendingAfterMsgs","tempFinalizeCallbacks","sendSmthLazyLoadQueue","needSingleMessages","fetchSingleMessagesPromise","maxSeenId","newDialogsToHandle","notificationsHandlePromise","notificationsToHandle","reloadConversationsPeers","groupedTempId","typings","unreadMentions","goToNextMentionPromises","batchUpdates","middleware","clean","uploadFilePromises","messagesStorageByPeerId","groupedMessagesStorage","scheduledMessagesStorage","historiesStorage","threadsStorage","searchesStorage","pinnedMessages","threadsServiceMessagesIdsStorage","threadsToReplies","handleNewDialogs","newMaxSeenId","incrementMaxSeenId","handleNotifications","_peerId","notifyPeerToHandle","getNotifyPeerSettings","peerTypeNotifySettings","mentioned","notifyAboutMessage","fwdCount","onUpdateMessageId","pendingData","tempId","finalizePendingMessageCallbacks","onUpdateNewMessage","getMessagePeer","isLocalThreadUpdate","createMessageStorage","threadKey","getThreadKey","ignoreExisting","checkPendingMessage","updateMessageRepliesIfNeeded","findSlice","firstSlice","forceUserOnline","top_msg_id","handleNewMessage","inboxUnread","modifyCachedMentions","setDialogTopMessage","notifyPeer","onUpdateMessageReactions","recentReaction","previousReactions","previousRecentReactions","show_previews","peerReaction","pushBatchUpdate","batchUpdateReactions","setDialogToStateIfMessageIsTop","onUpdateDialogUnreadMark","unread_mark","onUpdateEditMessage","oldMessage","newMessage","handleEditedMessage","isTopMessage","clear_history","newReactions","grouped_id","onUpdateReadHistory","max_id","read_max_id","getObjectKeysAndSort","stillUnreadCount","still_unread_count","newUnreadMentionsCount","foundAffected","repliesKey","replyTo","reply_to_top_id","setCount","getReadMaxIdIfUnread","threadKeyPart","onUpdateReadMessagesContents","mids","findPeerIdByMids","media_unread","fixDialogUnreadMentionsIfNoMessage","onUpdateChannelAvailableMessages","availableMinId","available_min_id","onUpdateDeleteMessages","threadKeys","historyUpdated","handleDeletedMessages","threadsStorages","msgs","affected","onUpdateChannel","needDialog","onUpdateChannelReload","onUpdateChannelMessageViews","views","batchUpdateViews","onUpdateServiceNotification","popup","verified","phone","onUpdatePinnedMessages","missingMessages","werePinned","hiddenPinnedMessages","onUpdateNotifySettings","onUpdateNewScheduledMessage","isScheduled","onUpdateDeleteScheduledMessages","batch","toDispatch","getMessagesFromMap","previousResults","changedResults","reactionCount","previousReactionCount","_reactionCount","chosen","updateMessageID","updateNewDiscussionMessage","updateNewMessage","updateNewChannelMessage","updateDialogUnreadMark","updateEditMessage","updateEditChannelMessage","updateMessageReactions","updateReadChannelDiscussionInbox","updateReadChannelDiscussionOutbox","updateReadHistoryInbox","updateReadHistoryOutbox","updateReadChannelInbox","updateReadChannelOutbox","updateChannelReadMessagesContents","updateReadMessagesContents","updateChannelAvailableMessages","updateDeleteMessages","updateDeleteChannelMessages","updateChannel","updateChannelReload","updateChannelMessageViews","updateServiceNotification","updatePinnedMessages","updatePinnedChannelMessages","updateNotifySettings","updateNewScheduledMessage","updateDeleteScheduledMessages","filterFunc","getScheduledMessagesStorage","webpage","appWebPagesManager","getCachedWebPage","drop","poll","appPollsManager","pollToMessages","batchUpdatesDebounced","debounce","details","maxSeenMsgId","sendEntites","entity","invokeAfterMessageIsSent","callbackName","finalize","editMessage","is_scheduled","newMedia","noWebPage","handled","replyToMsgId","MAX_LENGTH","message_length_max","webPage","getPeerMigratedTo","generateOutgoingMessage","toggleError","on","sentRequestOptions","afterMessageId","sendAs","sendAsPeerId","apiPromise","invokeApiAfter","clear_draft","send_as","silent","wrapMessageEntities","beforeMessageSending","sequential","sendFile","attachType","apiFileName","fileType","File","isDocument","Blob","isPhoto","IMAGE_MIME_TYPES_SUPPORTED","actionName","isVoiceMessage","waveform","isMedia","photoSize","sizes","objectURL","VIDEO_MIME_TYPES_SUPPORTED","videoAttribute","isRoundMessage","supports_streaming","noSound","thumbCacheContext","sentDeferred","uploadingFileName","getFileNameForUpload","uploaded","uploadPromise","load","thumbUploadPromise","cancelPendingMessage","setTyping","addNotifyListener","percents","floor","done","notifyAll","force_file","isGroupedItem","background","ret","sendAlbum","files","sendFileDetails","groupId","invoke","multiMedia","multi_media","messageMedia","inputSingleMedia","inputs","sendContact","contactPeerId","getContactMediaInput","pollId","savePoll","total_voters","getPoll","getPhoto","postAuthor","getPeer","signatures","generateFromId","post_author","generateFlags","generateReplyHeader","via_bot_id","replies","generateReplies","replyToTopId","channelFull","appProfileManager","getCachedFullChat","linked_chat_id","comments","replies_pts","isAnonymousSending","generateForwardHeader","originalMessage","isUserHidden","from_name","userFull","getCachedFullUser","private_forward_name","channel_post","saved_from_msg_id","saved_from_peer","generateFakeAvatarMessage","Number","MAX_SAFE_INTEGER","getUploadPromise","uploadFileName","admin_rights","anonymous","fillConversations","getConversations","chatHistoryStorage","offset_date","offset_id","offset_peer","offsetPeerId","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","folderDialogs","dialogsLength","slicedDialogs","forwardMessages","config","overflowMids","forwarded_count_max","dropCaptions","dropAuthor","newMids","newMessages","replyToMid","replyToMessageIdx","newReplyToMid","group","from_peer","to_peer","with_my_score","withMyScore","drop_author","drop_media_captions","generateEmptyMessage","getMessagesStorageByKey","s","getMessagesStorage","getMessageById","getDialogByPeerId","cantForwardDeleteMids","cantForward","cantDelete","canForward","canDeleteMessage","inputDialogPeer","getInputDialogPeerById","reloadConversationsPromise","inputDialogPeers","fullfillLeft","doFlushHistory","just_clear","revoke","affectedHistory","flushHistory","justClear","getHistory","historyResult","m","ss","hidePinnedMessages","getPinnedMessage","getSearch","inputFilter","getPinnedMessagesCount","getPinnedMessagesMaxId","updatePinnedMessage","unpin","pm_oneside","unpinAllMessages","unpinAll","getAlbumText","getGroupsFirstMessage","minMid","getMidsByAlbum","groupedId","getMessagesByAlbum","getMidsByMessage","filterMessages","verify","appMessagesIdsManager","saveMessage","isMessage","reply_to_mid","overwriting","msgId","savedFromPeerId","savedFromMid","savedFrom","mediaContext","unsupported","originalDoc","messageKey","getMessageKeyForPendingWebPage","saveWebPage","totalEntities","migrateFrom","migrateTo","video_sizes","appGroupCallsManager","migrateChecks","getFirstMessageToEdit","goodMessage","myPeerId","canEditMessage","apiEntities","myEntities","parseEntities","mergeEntities","reportMessages","start_param","editPeerFolders","appConfig","getAppConfig","dialogs_folder_pinned_limit_premium","dialogs_folder_pinned_limit_default","dialogs_pinned_limit_premium","dialogs_pinned_limit_default","getDialogPeer","markDialogUnread","read","fromChat","canMessageBeEdited","kind","goodMedias","edit_time_limit","getReplyKeyboard","messageReplyMarkup","lastReplyMarkup","selective","maxOutId","single_use","hidden","getSearchStorage","getSearchCounters","canCache","func","filterMessagesByInputFilterFromStorage","_storage","filterMessagesByInputFilter","nextRate","backLimit","offset_id_offset","next_rate","foundMsgs","min_date","max_date","add_offset","min_id","offsetId","offsetMessage","offset_rate","searchResult","foundCount","subscribeRepliesThread","getDiscussionMessage","generateThreadServiceStartMessage","maxMessageId","serviceStartMessage","is_single","getThreadServiceMessageId","getMessageWithReplies","newDialogsHandlePromise","deleteMessages","localMessageIds","creator","delete_messages","affectedMessages","readHistory","triedToReadMaxId","readPromise","getPeerString","readAllHistory","slicedArray","fixUnreadMentionsCountIfNeeded","goToNextMention","loadNextPromise","loadNextMentions","last","getUnreadMentions","mergeHistoryResult","minId","messagesMessages","readMessages","msgIds","getHistoryStorageTransferable","historySerialized","toJSON","getNotifyPeerTypeSettings","getNotifySettings","getInputNotifyPeerById","isMessageIsTopMessage","threadMessage","broadcastEventName","pendingMessage","finalizePendingMessage","mutePeer","muteUntil","mute_until","togglePeerMute","mute","canSendToPeer","canSendToUser","finalMessage","tempMessage","newPhoto","newDoc","newPhotoSize","oldCacheContext","getPhotoDownloadOptions","thumbSize","polls","handleReleasingMessage","getMessageReactionsListAndReadParticipants","skipReadParticipants","skipReactionsList","emptyMessageReactionsList","canViewMessageReadParticipants","getMessageReadParticipants","appReactionsManager","getMessageReactionsList","messageReactionsList","readParticipantsPeerIds","filteredReadParticipants","some","readPeerId","reactionsCount","readParticipants","chat_read_mark_size_threshold","chat_read_mark_expire_period","incrementMessageViews","increment","chatPeerIds","idleStartTime","getScheduledMessageByPeer","getScheduledMessages","sendScheduledMessages","deleteScheduledMessages","getMessageWithCommentReplies","isFetchIntervalNeeded","getNewHistory","unsetEnd","isBottomEnd","getEnds","offsetIdOffset","haveSlice","sliceMe","fulfilled","fillHistoryStorage","constructSlice","isHistoryResultEnd","topWasMeantToLoad","wasMaxId","requestHistory","newMaxId","deleteSlice","oldestMessage","foundSlice","_historyResult","fetchSingleMessages","requestPromises","getMessagesResult","fetchMessageReplyTo","replyToPeerId","reply_to_peer_id","typing","smth","deleteWebPageFromPending","updatePollToMessage","groupedStorage","albums","dispatchAlbumEdit","deletedMids","noforwards","noForwards","getElementCallback","newMap","peerIdStr","saveDefaultSendAs","default_send_as","convertInputKeyToKey","inputKey","AppNotificationsManager","peerSettings","notifyUsers","notifyChats","notifyBroadcasts","checkMuteUntil","checkMuteUntilTimeout","closestMuteUntil","peerNotifySettings","checkMuteUntilThrottled","throttle","notifySettings","getNotifyPeerTypePromise","getContactSignUpNotification","notifyContactsSignUp","setContactSignUpNotification","getPeerMuted","getPeerLocalSettings","respectType","n","typeNotifySettings","AppPeersManager","canPinMessage","getPeerPhoto","getUserPhoto","getUserString","getPeerUsername","getRestrictionReasonText","ignorePeerId","getUserInputPeer","getUserSearchText","getDialogType","getDeleteButtonText","AppPhotosManager","photos","oldPhoto","getUserPhotos","inputUser","photosResult","photoIds","photoId","AppPollsManager","updateMessagePoll","poll_id","saveResults","chosenIndexes","answer","getInputMediaPoll","correctAnswers","solution","solutionEntities","correct_answers","solution_entities","sendVote","optionIds","answers","option","getResults","getVotes","votesList","stopPoll","closed","newPoll","AppPrivacyManager","privacy","updatePrivacy","rules","setPrivacy","privacyRules","inputRule","rule","getPrivacy","privacyKey","AppProfileManager","usersFull","chatsFull","onUpdateUserTyping","typingsInPeer","t","cancelAction","getChatFull","onUpdatePeerBlocked","blocked","updateChatParticipants","chatFull","updateChatParticipantAdd","_participants","updateChatParticipantDelete","updateUserTyping","updateChatUserTyping","updateChannelUserTyping","updatePeerBlocked","fullChat","updated","call_active","hasChatPhoto","chat_photo","refreshFullPeer","invalidateChannelParticipants","getProfile","usersUserFull","full_user","profile_photo","getProfileByPeerId","getCachedProfileByPeerId","getFullPhoto","profile","getChannelFull","full_chat","getChatInviteLink","exported_invite","link","exportedInvite","getChannelParticipants","broadcast","getChannelParticipant","channelParticipant","fullChannel","processError","getMentions","processUserIds","ratingMap","cP","updateProfile","saveApiUser","uploadProfilePhoto","updateResult","strippedThumb","stripped_thumb","previous","deletePhotos","deletedList","verifyParticipantForOnlineCount","reduceParticipantsForOnlineCount","getOnlines","chatInfo","channelParticipants","onlines","getPeerTypings","callbackifyAll","SAVE_DOC_KEYS","REFERENCE_CONTEXT","AppReactionsManager","availableReactions","getAvailableReactions","sendReactionPromises","lastSendingTimes","availableReaction","around_animation","static_icon","appear_animation","center_icon","messagesAvailableReactions","getActiveAvailableReactions","callbackify","inactive","getAvailableReactionsForPeer","activeAvailableReactions","unshiftQuickReaction","getQuickReaction","quickReaction","filteredChatAvailableReactions","unshiftQuickReactionInner","findAndSplice","getAvailableReactionsByMessage","isReactionActive","reactions_default","getReactionCached","getReaction","getMessagesReactions","setDefaultReaction","sendReaction","lastSendingTimeKey","chosenReactionIdx","chosenReaction","can_see_list","reactionCountIdx","userReaction","promiseKey","editMessageUpdateIdx","editMessageUpdate","EMOJI_SET_LOCAL_ID","EMOJI_ANIMATIONS_SET_LOCAL_ID","LOCAL_IDS_SET","AppStickersManager","getStickerSetPromises","getStickersByEmoticonsPromises","sounds","getAnimatedEmojiStickerSet","getGreetingStickersPromise","getGreetingStickersTimeout","getGreetingSticker","updateNewStickerSet","stickerSet","saveStickerSet","justPreload","getStickersByEmoticon","greetingStickers","random","saveStickers","getStickerSet","cachedSet","documents","refreshTime","useCache","getStickerSetInput","saveById","animations","getAnimatedEmojiSoundsPromise","emojies_sounds","sound","bytesStr","atob","file_reference_base64","charCodeAt","this_dc","getRecentStickers","stickers","cleanEmoji","getAnimatedEmojiSticker","isAnimation","packs","getAnimatedEmojiSoundDocument","preloadAnimatedEmojiSticker","preloadEmojiPromise","preloadAnimatedEmojiStickerAnimation","animation","newSet","setToCache","needSave","installed_date","getStickerSetThumbDownloadOptions","thumb_dc_id","isAnimated","mimeType","getFeaturedStickers","sets","covered","videos","toggleStickerSet","archived","searchStickerSets","excludeFeatured","exclude_featured","foundSaved","cache","cover","getAllStickers","allStickers","preloadStickerSets","includeOurStickers","messagesStickers","installedSets","recentStickers","foundStickers","cachedStickersAnimated","cachedStickersStatic","iteratePacks","pushRecentSticker","docEmoticon","_doc","cleanUsername","AppUsersManager","usernames","getTopPeersPromises","contactsIndex","createSearchIndex","contactsFillPromise","contactsList","updatedContactsList","updateUsersStatuses","timestampNow","updateUserStatus","setInterval","expires","was_online","setUserToStateIfNeeded","updateUserPhoto","updateUserName","setUserNameToCache","contactsListCachedTime","contact","mutual_contact","pushContact","recentSearch","onContactsModified","fromServer","pushRecentSearch","clearRecentSearch","resolveUsername","resolvedPeer","processResolvedPeer","resolvePhone","popContact","getContacts","includeSaved","sortBy","_contactsList","userId1","userId2","sortName1","sortName","sortName2","localeCompare","status1","getUserStatusForSort","myUserId","testSelfSearch","getContactsPeerIds","toggleBlock","block","apiUsers","oldUser","oldSearchUsername","searchUsername","fullName","wasContact","newContact","onContactUpdated","isUserOnlineVisible","isRegularUser","support","isNonContactUser","eventTimestamp","importContact","importContacts","phones","inputContacts","j","client_id","importedContactsResult","imported","importedContact","topPeersCache","cachedTime","categories","getBlocked","contactsBlocked","getLocated","self_expires","searchContacts","pathname","my_results","curIsContact","setUserStatus","offline","updateMyOnlineStatus","addContact","showPhone","add_phone_privacy_exception","deleteContacts","photoTypeSet","AppWebPagesManager","webpages","pendingWebPages","updateWebPage","apiWebPage","oldWebPage","isUpdated","siteName","site_name","shortTitle","author","description","pendingSet","getWebPage","ApiFileManager","cacheStorage","downloadPromises","uploadPromises","downloadPulls","downloadActives","refreshReferencePromises","uncompressTGS","uncompressTGV","svgIndex","__","fixFirefoxSvg","TextEncoder","convertWebp","convertOpus","downloadRequest","activeDelta","downloadPull","downloadCheck","downloadLimit","networkPromise","race","setQueueId","getFileStorage","cancelDownload","canceled","cancel","requestWebFilePart","checkCancel","fileDownload","getDelta","checkedReference","getLimitPart","inputFileLocation","isDownloading","getDownload","getUpload","fileManager","IS_OPUS_SUPPORTED","cachedPromise","fileStorage","cacheFileWriter","resolved","errorHandler","_error","truncate","getFile","getFileWriter","fileWriter","writeFileDeferred","writeFilePromise","processDownloaded","delayed","superpuper","isFinal","write","getParts","processedResult","replaceParts","realSize","Infinity","getDownloadMediaDetails","downloadMediaURL","downloadMediaVoid","fileSize","isBigFile","doneParts","partSize","totalParts","fileId","_part","resultInputFile","parts","md5_checksum","it","reader","FileReader","readBlobAs","file_id","file_part","file_total_parts","fileUpload","generator","ApiManagerMethods","apiPromisesSingleProcess","apiPromisesSingle","apiPromisesCacheable","afterMessageIdTemp","setUserAuth","prepareTempMessageId","queryJSON","cacheKey","oldPromise","getAppConfigPromise","ignore_restriction_reasons","ApiManager","cachedNetworkers","cachedExportPromise","gettingNetworkers","baseDcId","afterMessageTempIds","changeTransportType","getTransportType","iterateNetworkers","connections","dcs","array","oldTransportType","oldObject","oldGetKey","newGetKey","info","changeNetworkerTransport","getBaseDcId","setBaseDcId","userAuth","dcID","user_auth","wasDcId","getNetworker","setOnDrainIfNeeded","dc","logOut","loggingOut","storageKeys","storageResult","logoutPromises","ignoreErrors","toggleStorages","generateNetworkerGetKey","networkers","maxNetworkers","found","isOnline","ak","authKeyHex","serverSaltHex","authKey","bytesFromHex","authKeyId","serverSalt","networkerFactory","authorizer","newTransportType","removeTransport","stack","getNetworkerVoid","oldTransport","changeTransport","onDrain","isFileNetworker","canRelease","removeNetworker","setDrainTimeout","updatesProcessor","startTime","interval","cachedNetworker","isStopped","clearInterval","performRequest","wrapApiCall","exportResolve","exportReject","exportedAuth","newDcId","unsetConnectionInited","rawError","waitTime","floodMaxTimeout","attachPromise","originalError","PeersStorage","neededPeers","singlePeerMap","ThumbsStorage","thumbsCache","thumbFullSize","intToUint","longFromInts","high","low","shiftLeft","boolFalse","predicate","boolTrue","vector","gzipPacked","TLSerialization","mtproto","startMaxLength","createBuffer","ArrayBuffer","intView","Int32Array","byteView","getArray","resultBuffer","resultInt32","subarray","getBuffer","getBytes","typed","resultArray","getOffset","checkLength","needBytes","previousBuffer","previousArray","writeInt","field","storeInt","storeBool","storeLongP","iHigh","iLow","storeLong","sLong","storeIntBytes","quotient","remainder","divmod","toJSNumber","storeDouble","Float64Array","storeString","sUTF8","unescape","storeBytes","bits","storeRawBytes","storeMethod","methodName","methodData","methods","flagsOffsets","param","condType","fieldBit","storeObject","paramName","substr","itemType","schema","isBare","constructorData","TLDeserialization","readInt","fetchInt","fetchDouble","doubleView","fetchLong","longDec","isSafeInteger","fetchBool","fetchObject","fetchString","String","fromCharCode","decodeURIComponent","escape","fetchBytes","fetchIntBytes","fetchRawBytes","fetchVector","fallback","checkType","constructorCmp","uncompressed","constructorsIndex","schemaFallback","int1","int2","overrideKey","isCond","formatJSONValue","jsonValue","objectValues","objectValue","setOffset","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","bufferConcats","bigIntFromBytes","base","delays","disconnectDelayMin","disconnectDelayMax","pingInterval","pingMaxTime","connectionTimeout","RESEND_OPTIONS","noSchedule","notContentRelated","invokeAfterMsgConstructor","MTPNetworker","lastServerMessages","sentMessages","pendingMessages","pendingAcks","pendingResendReq","nextReq","checkConnectionPeriod","lastResponseTime","activeRequests","sendPingDelayDisconnect","pingDelayDisconnectDeferred","lastPingTime","disconnectDelay","round","timeoutTime","pingId","lastPingDelayDisconnectId","wrapMtpCall","ping_id","disconnect_delay","rejectTimeout","elapsedTime","checkLongPoll","isClean","longPollPending","sleepAfter","sendLongPoll","checkConnection","clearCheckConnectionTimeout","serializer","pingMessage","generateId","seq_no","generateSeqNo","sendEncryptedRequest","toggleOffline","checkConnectionTimeout","authKeyUint8","convertToUint8Array","isFileUpload","isFileDownload","updateSession","seqNo","prevSessionId","updateSentMessage","sentMessageId","sentMessage","container","inner","innerSentMessageId","innerSentMessage","pushMessage","wrapMtpMessage","connectionInited","invokeWithLayer","initConnection","resultType","isAPI","nextReqTimeout","longPollInterval","clearPingDelayDisconnect","forceReconnectTimeout","sendingLongPoll","max_delay","wait_after","max_wait","noResponse","longPoll","delay","checkConnectionRetryAt","scheduleRequest","handleSentEncryptedRequestHTTP","noResponseMsgs","sqrt","pushResend","shouldResolve","onDrainTimeout","willChange","onConnectionStatusChange","innerMsgId","acked","getMsgKey","dataWithPadding","x","msgKeyLargePlain","msgKeyLarge","getAesKeyIv","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","akStopped","performScheduledRequest","ackMsgIds","msg_ids","pendingResendReqLength","outMessage","messagesByteLen","hasApiCall","hasHttpWait","lengthOverflow","compare","bigInt","messageByteLength","generateContainerMessage","messageWithBody","innerMessages","getEncryptedMessage","keyIv","getDecryptedMessage","encryptedData","getEncryptedOutput","dataBuffer","paddingLength","encryptedResult","requestData","baseError","responseBuffer","deserializer","bytesCmp","calcMsgKey","totalLength","messageBodyLength","messageBody","mt_message","seqno","mt_rpc_result","req_msg_id","applyServerSalt","newServerSalt","toArray","ackMessage","reqResend","notEmpty","processMessageAck","error_message","error_code","msg","applyServerTime","serverTime","shiftRight","innerMessage","new_server_salt","bad_msg_id","changedTimeOffset","badMessage","first_msg_id","server_salt","answer_msg_id","lastResendReq","lastResend","pendingResend","reqMsgId","badMsgId","NetworkerFactory","startAll","stoppedNetworkers","stopAll","setLanguage","testPublicKeysHex","modulus","exponent","publisKeysHex","publicKeysParsed","prepared","preparePromise","prepare","keyParsed","RSAPublicKey","fingerprintBytes","fingerprints","fingerprintHex","fill","foundKey","fingerprint","bytesXor","bytes1","bytes2","Authorizer","sendPlainRequest","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","sendReqPQ","nonce","rsaKeysManager","serverNonce","server_nonce","pq","server_public_key_fingerprints","publicKey","pAndQ","sendReqDhParams","newNonce","p_q_inner_data_dc","new_nonce","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","getKeyAesEncrypted","req_DH_params","public_key_fingerprint","encrypted_data","requestBytes","newNonceHash","new_nonce_hash","decryptServerDhDataAnswer","encrypted_answer","sendSetClientDhParams","encryptedAnswer","localTime","tmpAesKey","tmpAesIv","answerWithHash","answerWithPadding","g","dhPrime","dh_prime","gA","g_a","server_time","retry","verifyDhParams","dhPrimeHex","gABigInt","dhPrimeBigInt","subtract","twoPow","pow","gBytes","gB","retry_id","authKeyHash","authKeyAux","newNonceHash1","new_nonce_hash1","newNonceHash2","new_nonce_hash2","newNonceHash3","new_nonce_hash3","getTransportTypePromise","_try","TimeManager","lastMessageId","timeOffset","timeTicks","newTimeOffset","changed","abs","server_time_offset","appManagersManager","cryptoPortPromise","getManagers","manager","apply","cryptoPortAttached","ports","createManagers","appAvatarsManager","appCallsManager","appPrivacyManager","appInlineBotsManager","appEmojiManager","passwordManager","_isServiceWorkerOnline","pushedKeys","clearWrite","invokeExceptSource","serviceWorkerOnline","messagePort","onConnect","onDisconnect","attachPort","setOnPortDisconnect","listenMessagePort","NULL_PEER_ID","REPLIES_PEER_ID","REPLIES_HIDDEN_CHANNEL_ID","SERVICE_PEER_ID","MUTE_UNTIL","CAN_COMBINE_ENTITIES","combineSameEntities","nextEntityIdx","_i","nextEntity","SINGLE_ENTITIES","findConflictingEntity","currentEntities","newEntity","singleEnd","currentEntity","ALPHA_CHARS_REG_EXP","URL_ALPHANUMERIC_REG_EXP_PART","URL_PROTOCOL_REG_EXP_PART","URL_REG_EXP","URL_ANY_PROTOCOL_REG_EXP","FULL_REG_EXP","EMAIL_REG_EXP","MARKDOWN_REG_EXP","MARKDOWN_ENTITIES","PASS_CONFLICTING_ENTITIES","PHONE_NUMBER_REG_EXP","newEntities","filtered","sortEntities","encodeEmoji","emojiText","unicodeSurrogates","points","char","toCodePoints","removeVS16s","vs16RegExp","zeroWidthJoiner","rawEmoji","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","every","getter","__esModule","definition","enumerable","chunkId","miniCssF","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","scriptUrl","importScripts","currentScript","scripts","getElementsByTagName","retries","realSrc","cacheBust","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","runtime"],"sourceRoot":""}